[{"content":"请勿在DNS MX记录中直接使用IP地址\r我想强调邮件服务器DNS记录中一个常见的错误配置。\n当域名配置接收邮件时，通常需要设置指向邮件服务器主机名的MX类型DNS记录。值得注意的是，根据RFC 1035规范，MX记录必须包含域名而不能直接指向IP地址。但某些邮件服务器仍会错误配置IP地址。多数邮件服务器对此类配置错误较为宽容仍能投递邮件，导致问题难以被发现。\n我使用的邮件服务器（Courier）对此限制较严格，因此时常因此无法发送邮件。虽然发生频率不高，但确实存在。若您的邮件服务器存在此类配置，可能会错过部分合法邮件。\n希望通过本文提高认知并推动修复。具体建议如下：\n邮件/DNS服务器管理员：请严格使用域名配置MX记录 IT服务提供商：应将此检查纳入定期审计清单（附Python检测脚本） 检测工具开发者：建议增加MX记录IP地址检测功能。目前仅Hardenize和IntoDNS等少数服务会警告此类问题。 我对Alexa Top 100万网站进行了快速扫描，约0.06%存在此问题（如果您认识相关责任人，请分享本文）。后续可能通过postmaster别名联系这些域名管理者。\n（图片来源：nohat.cc / CC0协议）\n技术讨论精选\r评论#1 - Erwin Hoffmann\r配置错误实际源于DNS负责人而非邮件服务器 仅IPv4地址可能被误用（语法与域名相似） DNS软件应增加输入验证机制 完整MX配置需包含： 域名 权重值 对应A/AAAA记录 现代互联网还需配置： 反向DNS SPF记录 TLSA记录 评论#2 - Spongebob\r使用IP地址将导致无法配置DKIM/DMARC（MX名称需匹配SSL证书）\n作者回复：此问题实际与MTA-STS相关（需验证主机名证书）\n","date":"2025-07-30T21:00:38+08:00","permalink":"http://localhost:1313/p/%E8%AF%B7%E5%8B%BF%E5%9C%A8dns-mx%E8%AE%B0%E5%BD%95%E4%B8%AD%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8ip%E5%9C%B0%E5%9D%80-%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/","title":"请勿在DNS MX记录中直接使用IP地址 - 邮件服务器配置指南"},{"content":"Sinter：macOS全新用户态安全执行框架\r简单、开源且基于Swift\rSinter是我们用Swift编写的开源macOS端点安全执行代理（支持10.15及以上系统）。它完全基于用户态构建，利用新的EndpointSecurity API接收macOS内核发出的安全事件回调。通过简单规则即可控制事件允许/拒绝，无需传统杀毒软件的全盘扫描或特征检测。\n纯用户态安全代理的探索\r实现端点安全解决方案需要实时拦截和授权OS级事件。过去这意味着使用内核态回调API或直接挂钩内核代码。苹果在2019年末宣布将弃用所有第三方内核扩展，引入EndpointSecurity API作为替代方案。\nEndpointSecurity API解析\r该API实现了macOS内核的实时回调机制，支持NOTIFY（通知）和AUTH（授权）两种事件类型。它取代了原有的Kauth KPI等内核态方案，成为macOS 11 Big Sur后唯一合法的实时监控接口。\nSinter开发中的关键技术挑战\r实时决策不影响系统性能\n采用异步处理架构，通过es_copy_message解耦消息处理，建立双优先级队列（常规程序和大程序分离），确保系统响应能力。\n防范TOCTOU竞态条件\n针对\u0026quot;检查时-使用时\u0026quot;时间差攻击，实现文件事件监控机制。当检测到执行文件被篡改时立即清除缓存（已向苹果提交改进建议FB8352031）。\n应用包代码签名验证\nmacOS可执行文件存在于应用包（.app）中，需验证整个包的签名。Sinter创新性地实现双缓存机制：EndpointSecurity原生缓存+自定义应用包验证缓存。\n系统扩展安装优势\n作为System Extension部署可获得系统级保护（包括SIP扩展防护），防止root用户卸载。未来版本将迁移到此模式。\n证书签名与公证流程\n建立自动化CMake工作流处理苹果严格的代码签名、公证和权限申请（EndpointSecurity权限需6周人工审核）。\n未来展望\rSinter将持续增强规则引擎灵活性，整合文件完整性监控、内存注入防护（通过mmap事件分析）及NetworkExtension网络流量控制。我们欢迎社区通过GitHub或Empire Hacking Slack频道参与贡献。\n随着内核扩展的弃用，苹果为端点防护建立了统一用户态API标准，这将提升系统稳定性并减少攻击面，而Swift语言的选择确保了长期兼容性优势。\n","date":"0001-01-01T00:00:00Z","permalink":"http://localhost:1313/p/sintermacos%E5%85%A8%E6%96%B0%E7%94%A8%E6%88%B7%E6%80%81%E5%AE%89%E5%85%A8%E6%89%A7%E8%A1%8C%E6%A1%86%E6%9E%B6%E8%A7%A3%E6%9E%90/","title":"Sinter：macOS全新用户态安全执行框架解析"}]