<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>代码现代化 on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/%E4%BB%A3%E7%A0%81%E7%8E%B0%E4%BB%A3%E5%8C%96/</link>
        <description>Recent content in 代码现代化 on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Tue, 05 Aug 2025 03:35:36 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E4%BB%A3%E7%A0%81%E7%8E%B0%E4%BB%A3%E5%8C%96/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>使用Konveyor和Kantra进行静态代码分析教程（第一部分）</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8konveyor%E5%92%8Ckantra%E8%BF%9B%E8%A1%8C%E9%9D%99%E6%80%81%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90%E6%95%99%E7%A8%8B%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</link>
        <pubDate>Tue, 05 Aug 2025 03:35:36 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8konveyor%E5%92%8Ckantra%E8%BF%9B%E8%A1%8C%E9%9D%99%E6%80%81%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90%E6%95%99%E7%A8%8B%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</guid>
        <description>&lt;h1 id=&#34;static-code-analysis-tutorial-with-konveyor-and-kantra-part---1&#34;&gt;Static Code analysis tutorial with Konveyor and Kantra part - 1
&lt;/h1&gt;&lt;p&gt;Konveyor Kantra CLI 是一个命令行工具，用于分析和转换应用程序源代码以支持现代化和迁移。它通过静态代码分析检测问题，还能提取元数据、生成部署资产（如Kubernetes清单），并通过容器或原生方式运行。该工具支持Java、Go、.NET和Node.js等多语言，并能与CI/CD管道集成。Kantra是Konveyor AI（Kai）等基于LLM的自动化应用现代化工作流的基础。&lt;/p&gt;
&lt;p&gt;Kantra预置了2400+条Java领域规则，涵盖标准用例如JDK版本迁移、Spring框架升级、JBoss到Quarkus迁移等。本系列博客将逐步探索这些功能。要使用Kantra运行自定义规则，需要通过其命令行界面（Kantra CLI）进行操作——这类似于驾驶汽车需要方向盘和踏板来控制方向与速度。&lt;/p&gt;
&lt;p&gt;虽然Kantra也集成在VSCode的Konveyor扩展中，但本文将重点介绍CLI版本。Kantra CLI是终端运行的核心工具，主要功能包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动项目代码分析&lt;/li&gt;
&lt;li&gt;指定分析规则&lt;/li&gt;
&lt;li&gt;生成分析结果报告&lt;/li&gt;
&lt;li&gt;测试自定义规则有效性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简言之，CLI是与Kantra分析引擎交互的桥梁。&lt;/p&gt;
&lt;h2 id=&#34;安装步骤&#34;&gt;安装步骤
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e4%b8%8b%e8%bd%bd%e9%93%be%e6%8e%a5&#34; &gt;下载Kantra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;解压归档文件&lt;/li&gt;
&lt;li&gt;重命名CLI并移至PATH路径（示例：&lt;code&gt;mv darwin-kantra $HOME/bin/kantra&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;将解压文件夹所有文件移至.kantra目录：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; kantra.darwin.arm64/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv * &lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;/.kantra
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo xattr -dr com.apple.quarantine kantra
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;实战分析示例&#34;&gt;实战分析示例
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kantra analyze --input&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;tests/data/ssti-test-project --output&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;output --overwrite --target openjdk17 --rules rules
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;命令参数解析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--input&lt;/code&gt;: 指定待分析代码路径&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--output&lt;/code&gt;: 分析报告输出目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--overwrite&lt;/code&gt;: 覆盖已有输出文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--target&lt;/code&gt;: 指定目标环境（如openjdk17）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--rules&lt;/code&gt;: 规则目录路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;执行后生成的HTML报告会清晰标注违规代码位置，点击可查看具体问题代码行。&lt;/p&gt;
&lt;h2 id=&#34;规则测试&#34;&gt;规则测试
&lt;/h2&gt;&lt;p&gt;开发自定义规则时，可用内置测试框架验证：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ssti/tests
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kantra &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该命令会执行当前目录下的所有规则测试用例。&lt;/p&gt;
&lt;h2 id=&#34;工作原理&#34;&gt;工作原理
&lt;/h2&gt;&lt;p&gt;当执行&lt;code&gt;kantra analyze&lt;/code&gt;命令时：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CLI解析命令参数&lt;/li&gt;
&lt;li&gt;从&lt;code&gt;--rules&lt;/code&gt;加载规则集&lt;/li&gt;
&lt;li&gt;分析引擎扫描&lt;code&gt;--input&lt;/code&gt;指定的代码&lt;/li&gt;
&lt;li&gt;应用规则逻辑识别问题模式&lt;/li&gt;
&lt;li&gt;生成事件记录并输出报告&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;流程示意图：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;用户 → Kantra CLI → 分析引擎
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      (传递规则和输入)  (应用规则分析代码)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      ← 生成报告 ←
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;Kantra CLI是代码现代化改造的核心工具，通过掌握基础分析命令和测试方法，开发者可以高效开展项目迁移工作。下篇博客将深入讲解规则集（Ruleset）的组织结构及自定义规则开发。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
