<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>动态分析 on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/%E5%8A%A8%E6%80%81%E5%88%86%E6%9E%90/</link>
        <description>Recent content in 动态分析 on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Sat, 09 Aug 2025 17:13:14 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E5%8A%A8%E6%80%81%E5%88%86%E6%9E%90/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Manticore：面向人类的符号执行工具 - 技术解析与应用案例</title>
        <link>http://localhost:1313/p/manticore%E9%9D%A2%E5%90%91%E4%BA%BA%E7%B1%BB%E7%9A%84%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E5%B7%A5%E5%85%B7-%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B/</link>
        <pubDate>Sat, 09 Aug 2025 17:13:14 +0800</pubDate>
        
        <guid>http://localhost:1313/p/manticore%E9%9D%A2%E5%90%91%E4%BA%BA%E7%B1%BB%E7%9A%84%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E5%B7%A5%E5%85%B7-%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B/</guid>
        <description>&lt;h3 id=&#34;双接口设计--多样应用场景&#34;&gt;双接口设计 · 多样应用场景
&lt;/h3&gt;&lt;p&gt;Manticore提供两种使用方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;命令行工具&lt;/strong&gt;：快速生成程序测试用例（样本输入），每个用例对应独特执行结果（如正常退出或崩溃）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Python API&lt;/strong&gt;：支持定制化分析与应用优化，可解决以下问题：
&lt;ul&gt;
&lt;li&gt;执行到X点时变量Y是否可能为特定值？&lt;/li&gt;
&lt;li&gt;程序能否在运行时到达某段代码？&lt;/li&gt;
&lt;li&gt;如何构造触发特定代码执行的输入？&lt;/li&gt;
&lt;li&gt;用户输入是否被用作libc函数参数？&lt;/li&gt;
&lt;li&gt;函数执行次数统计&lt;/li&gt;
&lt;li&gt;给定输入下的指令执行计数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;API核心功能还包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;丢弃无关执行状态&lt;/li&gt;
&lt;li&gt;在任意执行点运行自定义分析函数&lt;/li&gt;
&lt;li&gt;具体化符号内存&lt;/li&gt;
&lt;li&gt;内省和修改模拟机器状态&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;早期应用实例&#34;&gt;早期应用实例
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DARPA网络大挑战&lt;/strong&gt;：作为符号执行漏洞挖掘基础组件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CTF实战案例&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;Eric Hennenfent：通过二进制插桩/符号执行双解法完成逆向挑战&lt;/li&gt;
&lt;li&gt;Yan与Mark：用污点符号值追踪用户输入影响范围&lt;/li&gt;
&lt;li&gt;Josselin Feist：纯API实现漏洞利用（定位崩溃点+符号执行构造约束）&lt;/li&gt;
&lt;li&gt;Cory Duplantis：解决Google CTF 2016逆向题（演示CTF解题标准化流程）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;快速入门指南&#34;&gt;快速入门指南
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;环境准备（Ubuntu 16.04）&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 安装系统依赖&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get update &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get install z3 python-pip -y
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python -m pip install -U pip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 安装Manticore&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/trailofbits/manticore.git &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; manticore
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo pip install --no-binary capstone .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;基础使用演示&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;命令行发现测试用例：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; examples/linux
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;manticore basic
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat mcore_*/*1.stdin &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; ./basic
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;API统计指令数：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;../&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;script&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count_instructions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;../&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;linux&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;helloworld&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;（正文完）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>驯服文件解析风险的两款新工具：PolyFile与PolyTracker</title>
        <link>http://localhost:1313/p/%E9%A9%AF%E6%9C%8D%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E9%A3%8E%E9%99%A9%E7%9A%84%E4%B8%A4%E6%AC%BE%E6%96%B0%E5%B7%A5%E5%85%B7polyfile%E4%B8%8Epolytracker/</link>
        <pubDate>Sat, 09 Aug 2025 16:56:48 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%A9%AF%E6%9C%8D%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E9%A3%8E%E9%99%A9%E7%9A%84%E4%B8%A4%E6%AC%BE%E6%96%B0%E5%B7%A5%E5%85%B7polyfile%E4%B8%8Epolytracker/</guid>
        <description>&lt;h3 id=&#34;驯服文件解析风险的两款新工具&#34;&gt;驯服文件解析风险的两款新工具
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Evan Sultanik | 2019年11月1日&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;解析文件格式是困难的——即使规范明确定义时也是如此。当规范存在歧义时，会导致解析器和解释器出现意外行为，进而引发安全漏洞。在DARPA SafeDocs项目支持下，我们开发了两款工具来解决这一根本问题：&lt;/p&gt;
&lt;h4 id=&#34;解析为何困难&#34;&gt;解析为何困难？
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多语言文件（Polyglots）&lt;/strong&gt;：单个文件可被不同解释器有效解析（如既是PDF又是ZIP）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;精神分裂文件（Schizophrenic）&lt;/strong&gt;：不同解析器对同一文件产生不同解释（如Adobe与Foxit解析同一PDF显示不同内容）&lt;/li&gt;
&lt;li&gt;复杂设计决策（如嵌入式图灵完备语言、流解码器任意链接等）加剧了攻击面&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;工具创新&#34;&gt;工具创新
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PolyFile&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持10,000+文件格式的层次化语义标注&lt;/li&gt;
&lt;li&gt;生成交互式HTML分析报告（示例：简历文件同时是PDF/NES游戏/ZIP/git仓库）&lt;/li&gt;
&lt;li&gt;开源地址：https://github.com/trailofbits/polyfile&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PolyTracker&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于LLVM的高效污点跟踪框架&lt;/li&gt;
&lt;li&gt;改进数据结构使内存需求从指数级降至线性级&lt;/li&gt;
&lt;li&gt;支持闭源代码分析（通过McSema等二进制提升技术）&lt;/li&gt;
&lt;li&gt;开源地址：https://github.com/trailofbits/polytracker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;技术突破&#34;&gt;技术突破
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据流消毒器（DFSan）优化&lt;/strong&gt;：突破原16位污点标签限制，实现稀疏联合数据结构&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态分析&lt;/strong&gt;：通过构建解析器函数与输入字节偏移的映射关系，逆向推导解析逻辑&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;容器化部署&lt;/strong&gt;：提供预构建Docker镜像简化使用流程&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;应用场景&#34;&gt;应用场景
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;识别规范与实现间的&amp;quot;不安全&amp;quot;差异&lt;/li&gt;
&lt;li&gt;检测解析器中的隐蔽通道&lt;/li&gt;
&lt;li&gt;辅助模糊测试与差分测试&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>首届智能合约分析国际研讨会(WoSCA 2020)重磅来袭</title>
        <link>http://localhost:1313/p/%E9%A6%96%E5%B1%8A%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%88%86%E6%9E%90%E5%9B%BD%E9%99%85%E7%A0%94%E8%AE%A8%E4%BC%9Awosca-2020%E9%87%8D%E7%A3%85%E6%9D%A5%E8%A2%AD/</link>
        <pubDate>Fri, 08 Aug 2025 08:04:30 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%A6%96%E5%B1%8A%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%88%86%E6%9E%90%E5%9B%BD%E9%99%85%E7%A0%94%E8%AE%A8%E4%BC%9Awosca-2020%E9%87%8D%E7%A3%85%E6%9D%A5%E8%A2%AD/</guid>
        <description>&lt;p&gt;在Trail of Bits，我们不仅从事安全审计工作：还不断突破漏洞检测工具的研究边界，定期在学术会议上展示成果，并评审其他研究人员的优秀论文（参见我们近期对Real World Crypto和Financial Crypto的综述）。&lt;/p&gt;
&lt;p&gt;秉承这一理念，我们与北亚利桑那大学共同筹办首届智能合约分析国际研讨会(WoSCA 2020)。本次研讨会将与ISSTA 2020同期举行，汇聚全球研究者探讨智能合约的静态与动态分析方法，包括但不限于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于分析的漏洞发现（如启发式静态分析、模糊测试）&lt;/li&gt;
&lt;li&gt;可靠分析（如模型检测、时序逻辑）&lt;/li&gt;
&lt;li&gt;代码优化（如代码精简、Gas成本估算）&lt;/li&gt;
&lt;li&gt;代码理解（如反编译、逆向工程）&lt;/li&gt;
&lt;li&gt;代码监控（如调试、故障检测）&lt;/li&gt;
&lt;li&gt;中间表示（如设计、规范）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;WoSCA 2020积极倡导开放可复现的研究，特别欢迎关于改进现有工具或提出新工具的论文投稿！&lt;/p&gt;
&lt;p&gt;论文提交（最长8页）截止日期延长至2020年6月26日（AoE时区）。另请注意：我们仍在接收&amp;quot;10k Crytic研究奖金&amp;quot;的申请，该奖项专门奖励基于我们区块链工具开发的学术论文。&lt;/p&gt;
&lt;p&gt;（社交媒体分享图标：Twitter/LinkedIn/GitHub/Mastodon/Hacker News）&lt;/p&gt;
&lt;p&gt;© 2025 Trail of Bits.
采用Hugo和Mainroad主题生成。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>测试手册新增Burp Suite专业版章节 - 提升Web应用安全测试效率</title>
        <link>http://localhost:1313/p/%E6%B5%8B%E8%AF%95%E6%89%8B%E5%86%8C%E6%96%B0%E5%A2%9Eburp-suite%E4%B8%93%E4%B8%9A%E7%89%88%E7%AB%A0%E8%8A%82-%E6%8F%90%E5%8D%87web%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E6%95%88%E7%8E%87/</link>
        <pubDate>Wed, 06 Aug 2025 20:51:52 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B5%8B%E8%AF%95%E6%89%8B%E5%86%8C%E6%96%B0%E5%A2%9Eburp-suite%E4%B8%93%E4%B8%9A%E7%89%88%E7%AB%A0%E8%8A%82-%E6%8F%90%E5%8D%87web%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E6%95%88%E7%8E%87/</guid>
        <description>&lt;h3 id=&#34;burp-suite专业版动态分析的价值&#34;&gt;Burp Suite专业版动态分析的价值
&lt;/h3&gt;&lt;p&gt;基于我们的安全审计经验，Burp Suite Professional的动态分析能够发现目标组件迷宫中隐藏的漏洞。仅通过源代码审查时，竞态条件等不可预测的安全问题往往难以捕捉。&lt;/p&gt;
&lt;h3 id=&#34;降低工具使用门槛&#34;&gt;降低工具使用门槛
&lt;/h3&gt;&lt;p&gt;虽然Burp是全面的Web应用安全测试工具，但其丰富功能可能构成使用障碍。Trail of Bits在测试手册中新增的Burp Suite指南章节，旨在破解这种复杂性，提供清晰简洁的操作路径以获得快速实效。&lt;/p&gt;
&lt;h3 id=&#34;核心功能解析&#34;&gt;核心功能解析
&lt;/h3&gt;&lt;p&gt;新章节首先探讨Burp的关键应用场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应对前端代码混淆的测试挑战&lt;/li&gt;
&lt;li&gt;复杂基础设施组件的安全分析&lt;/li&gt;
&lt;li&gt;不同部署环境的差异处理&lt;/li&gt;
&lt;li&gt;客户端数据交互问题的检测&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实战配置指南&#34;&gt;实战配置指南
&lt;/h3&gt;&lt;p&gt;提供逐步配置教程，帮助用户：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;快速建立针对特定应用的测试环境&lt;/li&gt;
&lt;li&gt;最大限度减少配置错误&lt;/li&gt;
&lt;li&gt;确保潜在漏洞不被遗漏&lt;/li&gt;
&lt;li&gt;使用关键扩展增强测试流程（如漏洞扫描效率提升300%）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;高阶技巧揭秘&#34;&gt;高阶技巧揭秘
&lt;/h3&gt;&lt;p&gt;章节最后包含专业技巧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高级测试实践方法&lt;/li&gt;
&lt;li&gt;隐藏功能深度挖掘&lt;/li&gt;
&lt;li&gt;自动化测试流程优化&lt;/li&gt;
&lt;li&gt;审计报告生成技巧&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;真实世界经验沉淀&#34;&gt;真实世界经验沉淀
&lt;/h3&gt;&lt;p&gt;测试手册系列凝结了我们丰富的实战经验，提供的不仅是文档复述，更是Trail of Bits团队经过验证的安全审计策略。通过本章节，我们希望帮助读者真正释放Burp Suite保护Web应用的潜力。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://trailofbits.com/testing-handbook/burp-suite&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;立即阅读完整章节&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://twitter.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Twitter分享&lt;/a&gt; | &lt;a class=&#34;link&#34; href=&#34;https://linkedin.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LinkedIn分享&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Manticore 0.3.0发布：符号执行引擎的重大升级</title>
        <link>http://localhost:1313/p/manticore-0.3.0%E5%8F%91%E5%B8%83%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E%E7%9A%84%E9%87%8D%E5%A4%A7%E5%8D%87%E7%BA%A7/</link>
        <pubDate>Mon, 04 Aug 2025 03:03:11 +0800</pubDate>
        
        <guid>http://localhost:1313/p/manticore-0.3.0%E5%8F%91%E5%B8%83%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E%E7%9A%84%E9%87%8D%E5%A4%A7%E5%8D%87%E7%BA%A7/</guid>
        <description>&lt;h1 id=&#34;执行器重构&#34;&gt;执行器重构
&lt;/h1&gt;&lt;p&gt;Felipe Manzano完成了Manticore状态机的重大重构，现在采用多进程模块（multiprocessing），为未来实现分布式符号执行奠定了基础。该重构引入了少量API变更：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;必须显式调用&lt;code&gt;finalize&lt;/code&gt;方法才能导出测试用例&lt;/li&gt;
&lt;li&gt;&lt;code&gt;will_start_run&lt;/code&gt;回调更名为&lt;code&gt;will_run&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;需通过&lt;code&gt;Z3Solver.instance()&lt;/code&gt;显式访问求解器单例&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;unicorn预加载&#34;&gt;Unicorn预加载
&lt;/h1&gt;&lt;p&gt;为解决Python原生指令模拟速度瓶颈，新增Unicorn模拟器插件。该插件基于QEMU的JIT引擎，可将不重要初始化代码的执行速度提升高达50倍。&lt;/p&gt;
&lt;h1 id=&#34;aarch64支持&#34;&gt;AArch64支持
&lt;/h1&gt;&lt;p&gt;Nikita Karetnikov为静态编译的AArch64 Linux二进制文件添加了支持。虽然当前实现包含调试组件导致性能略低，但该架构可覆盖从嵌入式开发板到服务器集群的广泛ARMv8平台。&lt;/p&gt;
&lt;h1 id=&#34;系统调用审计&#34;&gt;系统调用审计
&lt;/h1&gt;&lt;p&gt;本次更新包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新增12个系统调用实现&lt;/li&gt;
&lt;li&gt;为未实现调用添加&amp;quot;存根&amp;quot;机制，避免直接抛出异常&lt;/li&gt;
&lt;li&gt;遇到未实现调用时会显示&amp;quot;Unimplemented system call&amp;quot;警告&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;符号化evm测试&#34;&gt;符号化EVM测试
&lt;/h1&gt;&lt;p&gt;通过持续集成管道自动运行以太坊Frontier版本VM测试，确保每个指令的符号化实现正确性，维护智能合约分析的可靠性。&lt;/p&gt;
&lt;h1 id=&#34;代码格式化&#34;&gt;代码格式化
&lt;/h1&gt;&lt;p&gt;项目现已采用black自动格式化工具，要求开发者提交代码前执行&lt;code&gt;black -t py36 -l 100 .&lt;/code&gt;以保证代码风格统一。&lt;/p&gt;
&lt;h1 id=&#34;后续计划&#34;&gt;后续计划
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;改进文档和示例仓库&lt;/li&gt;
&lt;li&gt;开展可用性研究&lt;/li&gt;
&lt;li&gt;集成crytic-compile以简化智能合约分析&lt;/li&gt;
&lt;li&gt;支持EVM Constantinople升级&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/trailofbits/manticore&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub下载&lt;/a&gt; | &lt;a class=&#34;link&#34; href=&#34;https://pypi.org/project/manticore/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PyPI安装&lt;/a&gt; | &lt;a class=&#34;link&#34; href=&#34;https://hub.docker.com/r/trailofbits/manticore&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker镜像&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
