<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>云计算 on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/</link>
        <description>Recent content in 云计算 on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Sun, 03 Aug 2025 08:00:39 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>我在re:Invent大会上的技术诉求：从跨AZ带宽定价到CHERI实例</title>
        <link>http://localhost:1313/p/%E6%88%91%E5%9C%A8reinvent%E5%A4%A7%E4%BC%9A%E4%B8%8A%E7%9A%84%E6%8A%80%E6%9C%AF%E8%AF%89%E6%B1%82%E4%BB%8E%E8%B7%A8az%E5%B8%A6%E5%AE%BD%E5%AE%9A%E4%BB%B7%E5%88%B0cheri%E5%AE%9E%E4%BE%8B/</link>
        <pubDate>Sun, 03 Aug 2025 08:00:39 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%88%91%E5%9C%A8reinvent%E5%A4%A7%E4%BC%9A%E4%B8%8A%E7%9A%84%E6%8A%80%E6%9C%AF%E8%AF%89%E6%B1%82%E4%BB%8E%E8%B7%A8az%E5%B8%A6%E5%AE%BD%E5%AE%9A%E4%BB%B7%E5%88%B0cheri%E5%AE%9E%E4%BE%8B/</guid>
        <description>&lt;p&gt;作为AWS Hero，我获得了免费参加AWS re:Invent大会的机会。虽然我很少对多数演讲感兴趣——往年我参加过一些&amp;quot;高级&amp;quot;讲座，但内容都未超出已发布的文档范围——但我发现这是与亚马逊员工交流的绝佳机会。&lt;/p&gt;
&lt;p&gt;今年我有一长串诉求清单，考虑到可能引起亚马逊员工（甚至非亚马逊人士）的兴趣，我决定在此公开分享：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;增加re:Invent大会上的亚马逊开源开发者数量&lt;/strong&gt;&lt;br&gt;
我期待周三与Valkey开发者会面，但对Firecracker开发者无人参会感到失望。亚马逊有不派工程师参会除非他们演讲的政策（我希望能改变这一政策），但对开源开发者而言，参会结识潜在贡献者至关重要。如果你的开源团队不参加会议，无论代码采用什么许可证，都不算真正在做开源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;降低跨可用区(AZ)带宽定价&lt;/strong&gt;&lt;br&gt;
我甚至不太在意成本本身，但人们对跨AZ带宽的担忧导致他们设计出糟糕的系统架构。亚马逊&amp;quot;良好架构框架&amp;quot;中的一条准则是将工作负载部署到多个位置，并明确指出使用单一可用区是个问题——但对跨AZ带宽的担忧（即使最终证明是多余的）阻碍了人们遵循这一准则。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;机架级EBS存储&lt;/strong&gt;&lt;br&gt;
当前&amp;quot;SSD&amp;quot;EBS卷的I/O延迟表明它们与访问的EC2实例相距甚远。而某些EC2实例类型直接附加SSD，I/O性能显著提升——但耐久性低（实例终止数据即丢失）且缺乏弹性。将EBS存储部署在与EC2节点相同的机架上，可提供介于两者之间的解决方案，实现比跨数据中心更低的延迟，同时保持卷大小的灵活性。用户需接受&amp;quot;在此实例同机架创建卷&amp;quot;可能返回&amp;quot;该机架磁盘已满&amp;quot;的情况，但至少在实例启动时可以寻找有足够本地磁盘的机架。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;支持CHERI的安全实例&lt;/strong&gt;&lt;br&gt;
这是我长期以来的愿望清单项目。CHERI在安全性方面具有巨大优势，哪家云厂商率先实现将遥遥领先竞争对手。我知道亚马逊（和其他云厂商）拥有用于研究的Morello开发板。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Marketplace支持&amp;quot;待发布&amp;quot;版本&lt;/strong&gt;&lt;br&gt;
当我在AWS Marketplace添加新的FreeBSD版本时，需经过审批流程并复制到所有EC2区域，然后Marketplace更新产品列表并发送新版本邮件通知。这常导致亚马逊发送新FreeBSD版本邮件比我官方发布公告还早几天。我希望能够预先告知Marketplace即将发布的FreeBSD版本，让他们准备就绪但暂不更新网站或发送邮件，直到我准备好官方公告（通常会给镜像和云服务几天同步时间）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此外，我还向Zoom提出改进建议：当从FreeBSD笔记本电脑加入会议时，Zoom网站应能通过用户代理字符串识别没有客户端，直接提供在浏览器中开会的选项，而不是反复尝试打开客户端。Zoom团队立即理解问题，甚至考虑将Linux客户端移植到FreeBSD。&lt;/p&gt;
&lt;p&gt;关于透明度说明：除了提供免费参会和差旅，亚马逊还赞助我的FreeBSD工作。他们资助的内容约一半是EC2相关，另一半是FreeBSD发布工程。没有他们的支持，许多重要功能将无法出现在FreeBSD 14.2-RELEASE中。感谢亚马逊。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>错误但快速的云基础设施配置方式 - 安全风险警示</title>
        <link>http://localhost:1313/p/%E9%94%99%E8%AF%AF%E4%BD%86%E5%BF%AB%E9%80%9F%E7%9A%84%E4%BA%91%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F-%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9%E8%AD%A6%E7%A4%BA/</link>
        <pubDate>Sat, 02 Aug 2025 05:27:39 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%94%99%E8%AF%AF%E4%BD%86%E5%BF%AB%E9%80%9F%E7%9A%84%E4%BA%91%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F-%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9%E8%AD%A6%E7%A4%BA/</guid>
        <description>&lt;p&gt;今天我们将以&amp;quot;Max Power&amp;quot;方式配置云基础设施：将自动化与未经检查的AI输出相结合。不幸的是，这种方法产生的云基础设施代码虽然能用，但具有可怕的安全特性。&lt;/p&gt;
&lt;p&gt;简而言之，像Claude和ChatGPT这样的AI工具会轻易提供极其糟糕的云基础设施配置代码，比如使用常见硬编码密码的代码。这些工具还会&amp;quot;热心&amp;quot;地建议你使用&amp;quot;随机&amp;quot;密码，但由于LLM生成输出的本质，这些密码根本谈不上随机。即使你试图聪明地要求这些工具提供密码生成代码，这些代码也充满严重的安全漏洞。&lt;/p&gt;
&lt;p&gt;显然，不要盲目信任AI工具的输出。云服务提供商应该努力识别本文中提到的不良模式（和硬编码凭证），并在基础设施层进行拦截（就像他们在GitHub提交API密钥时做的那样）。LLM供应商应该考虑让生成存在明显安全问题的云基础设施代码变得不那么容易。&lt;/p&gt;
&lt;h3 id=&#34;创建一个windows-vm&#34;&gt;创建一个Windows VM
&lt;/h3&gt;&lt;p&gt;假设你是云开发新手。你想在Microsoft Azure上用Terraform创建一个Windows VM，并通过RDP连接到机器。（我们使用Azure作为示例只是因为这是我需要使用的提供商，但基本问题适用于所有云提供商）。&lt;/p&gt;
&lt;p&gt;让我们问问ChatGPT 4o和Claude应该怎么做。&lt;/p&gt;
&lt;p&gt;以下是ChatGPT的回答：
[示例对话内容&amp;hellip;]&lt;/p&gt;
&lt;p&gt;Claude至少提醒你更改admin_password。这些都是硬编码凭证，使用它们很糟糕。是的，Claude要求你更改它们，但有多少人真的会这么做？应该相当容易设计正确的提示并提取出ChatGPT或Claude会输出的所有（技术上，几乎所有）凭证。&lt;/p&gt;
&lt;h3 id=&#34;要求更好的凭证&#34;&gt;要求更好的凭证
&lt;/h3&gt;&lt;p&gt;我们都知道硬编码凭证不好。如果我们要求一些更好的呢？&lt;/p&gt;
&lt;p&gt;我们从ChatGPT开始：
[示例对话内容显示生成的&amp;quot;随机&amp;quot;密码实际上并不随机&amp;hellip;]&lt;/p&gt;
&lt;p&gt;接下来试试Claude。起初它给出了正确的答案。但当被稍微不同地询问时，Claude很快就放弃了。&lt;/p&gt;
&lt;h3 id=&#34;关于密码生成&#34;&gt;关于密码生成
&lt;/h3&gt;&lt;p&gt;也许我们可以要求这些工具编写生成密码的代码。事实上，我需要完成的部分任务涉及创建多个Azure AD账户，这似乎是个合乎逻辑的方法。看看我们的AI工具在自动生成账户凭证方面表现如何。&lt;/p&gt;
&lt;p&gt;以下是ChatGPT的解决方案：
[展示有安全缺陷的Python随机模块代码&amp;hellip;]&lt;/p&gt;
&lt;p&gt;Claude的解决方案：
[同样展示不安全的伪随机生成代码&amp;hellip;]&lt;/p&gt;
&lt;p&gt;这两个解决方案都非常具有欺骗性，因为它们看起来正确但实际上错得离谱。它们会生成&amp;quot;看起来&amp;quot;随机的密码，但存在缺陷：Python的random模块不是安全的随机数据源。它是一个用当前系统时间作为种子的伪随机生成器。很容易就能生成这个脚本在过去一年或更长时间内可能生成的所有密码。它提供的密码不应该用于任何用途，也许除了临时测试。正确的做法是使用Python的secrets模块。&lt;/p&gt;
&lt;h3 id=&#34;可以采取的措施&#34;&gt;可以采取的措施
&lt;/h3&gt;&lt;p&gt;毫无疑问，这个兔子洞很深。这里的回应只是我在几天内尝试自动化Terraform工作流程时遇到的。可悲的是，最不可能理解硬编码凭证和弱随机值影响的人，也最有可能直接复制粘贴AI工具的原始输出。&lt;/p&gt;
&lt;p&gt;云提供商应该假设人们已经在复制粘贴ChatGPT和Claude的输出，并应该努力拦截常见的硬编码凭证和其他不良基础设施模式。&lt;/p&gt;
&lt;p&gt;LLM供应商应该让用户更难意外地伤害自己。不应该是完全不可能出现这种行为，但绝对不应该是默认行为。&lt;/p&gt;
&lt;p&gt;一如既往，云基础设施很复杂；如果你真的想增强安全性，考虑让我们进行基础设施威胁模型评估，这将识别弱点和潜在攻击路径，并提出解决方法。在你庞大的自动化基础设施部署中，潜伏着比硬编码凭证和弱随机性更多的问题。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>JetBrains升级Junie编码助手、Gemini API新增嵌入模型等技术动态</title>
        <link>http://localhost:1313/p/jetbrains%E5%8D%87%E7%BA%A7junie%E7%BC%96%E7%A0%81%E5%8A%A9%E6%89%8Bgemini-api%E6%96%B0%E5%A2%9E%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B%E7%AD%89%E6%8A%80%E6%9C%AF%E5%8A%A8%E6%80%81/</link>
        <pubDate>Fri, 01 Aug 2025 22:40:34 +0800</pubDate>
        
        <guid>http://localhost:1313/p/jetbrains%E5%8D%87%E7%BA%A7junie%E7%BC%96%E7%A0%81%E5%8A%A9%E6%89%8Bgemini-api%E6%96%B0%E5%A2%9E%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B%E7%AD%89%E6%8A%80%E6%9C%AF%E5%8A%A8%E6%80%81/</guid>
        <description>&lt;h3 id=&#34;jetbrains宣布更新其编码助手junie&#34;&gt;JetBrains宣布更新其编码助手Junie
&lt;/h3&gt;&lt;p&gt;Junie现已完全集成到GitHub中，支持异步开发功能，包括：同时委派多个任务、无需打开IDE即可快速修复问题、直接在GitHub中进行团队协作，以及无缝切换IDE和GitHub。GitHub版Junie目前处于早期访问计划，仅支持JVM和PHP。&lt;br&gt;
JetBrains还新增了对MCP的支持，使Junie能连接外部数据源。其他新特性包括任务完成速度提升30%，以及支持macOS和Linux的远程开发。&lt;/p&gt;
&lt;h3 id=&#34;gemini-api推出首个嵌入模型&#34;&gt;Gemini API推出首个嵌入模型
&lt;/h3&gt;&lt;p&gt;这类模型可为单词、短语、句子和代码生成嵌入向量，提供比关键词搜索更精准的上下文感知结果。&amp;ldquo;它们能高效地从知识库中检索相关信息（以嵌入向量表示），并作为附加上下文输入语言模型，引导生成更明智和准确的响应。&amp;ldquo;Gemini文档说明。&lt;br&gt;
该嵌入模型支持100多种语言和2048个输入token长度，将通过免费和付费双层级开放，方便开发者免费实验后按需扩展。&lt;/p&gt;
&lt;h3 id=&#34;amazon为sagemaker新增功能&#34;&gt;Amazon为SageMaker新增功能
&lt;/h3&gt;&lt;p&gt;用户现可直接从SageMaker Unified Studio启动Amazon QuickSight，利用项目数据构建仪表板并分享至Amazon SageMaker Catalog供组织内成员发现。&lt;br&gt;
新增支持Amazon S3通用存储桶（便于查找和协作数据）及S3 Access Grants（实现细粒度访问控制）。用户还可将AWS Glue Data Catalog数据集导入SageMaker目录。&lt;br&gt;
&amp;ldquo;这些新功能在统一治理框架下覆盖完整数据生命周期：自动接入湖仓中的结构化数据、无缝编目Amazon S3的非结构化内容、通过QuickSight简化可视化流程。&amp;ldquo;AWS在博客中写道。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        
    </channel>
</rss>
