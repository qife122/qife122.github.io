<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>云计算 on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/</link>
        <description>Recent content in 云计算 on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Tue, 05 Aug 2025 19:43:27 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Pandas与Snowpark Pandas API数据处理框架深度解析</title>
        <link>http://localhost:1313/p/pandas%E4%B8%8Esnowpark-pandas-api%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Tue, 05 Aug 2025 19:43:27 +0800</pubDate>
        
        <guid>http://localhost:1313/p/pandas%E4%B8%8Esnowpark-pandas-api%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;pandas与snowpark-pandas-api数据处理框架分析&#34;&gt;Pandas与Snowpark Pandas API数据处理框架分析
&lt;/h1&gt;&lt;p&gt;本文阐述了如何将现有Pandas工作流迁移至Snowpark Pandas API的过程，采用近乎&amp;quot;直接迁移&amp;quot;的方式满足不断增长的数据需求。&lt;/p&gt;
&lt;h2 id=&#34;技术背景&#34;&gt;技术背景
&lt;/h2&gt;&lt;p&gt;Pandas一直是数据操作和分析的首选库。随着数据量增长，传统Pandas面临内存限制和性能瓶颈。Snowpark Pandas API作为Snowflake Snowpark框架的扩展，允许开发者直接在Snowflake平台上运行Pandas代码，具有以下核心优势：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;语法兼容性&lt;/strong&gt;：保持与原生Pandas相同的API设计&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分布式计算&lt;/strong&gt;：利用Snowflake的计算引擎实现横向扩展&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全架构&lt;/strong&gt;：数据始终驻留在Snowflake安全环境内&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无附加设施&lt;/strong&gt;：直接使用现有Snowflake基础设施&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术实现流程&#34;&gt;技术实现流程
&lt;/h2&gt;&lt;h3 id=&#34;1-环境配置&#34;&gt;1. 环境配置
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install snowflake-snowpark-python&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;modin&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;em&gt;要求Python 3.9+，Modin 0.28.1+和Pandas 2.2.1+&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-初始化snowpark会话&#34;&gt;2. 初始化Snowpark会话
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;snowflake.snowpark.session&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Session&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;session&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Session&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;configs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;account&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;your_account&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;your_user&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;your_password&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;role&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;your_role&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;database&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;your_database&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;schema&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;your_schema&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;warehouse&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;your_warehouse&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;3-数据加载与操作&#34;&gt;3. 数据加载与操作
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;modin.pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;snowflake.snowpark.modin.plugin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_snowflake&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;your_table&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;filtered_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;column_name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;4-数据回写&#34;&gt;4. 数据回写
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_snowflake&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;your_table&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;overwrite&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;架构设计&#34;&gt;架构设计
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;客户端库&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modin提供类Pandas API&lt;/li&gt;
&lt;li&gt;Snowpark插件实现与Snowflake集成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;执行引擎&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;操作被转换为SQL查询&lt;/li&gt;
&lt;li&gt;利用Snowflake分布式计算能力&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;性能对比&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1000万行数据读取：Snowpark Pandas仅需4.58秒&lt;/li&gt;
&lt;li&gt;传统to_pandas()方法需要65秒&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;注意事项
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;数据类型可能存在Snowflake特有的表示差异&lt;/li&gt;
&lt;li&gt;本地化操作(如to_pandas())会丧失分布式优势&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;应用场景&#34;&gt;应用场景
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;大规模数据探索分析&lt;/li&gt;
&lt;li&gt;云端数据工程流水线&lt;/li&gt;
&lt;li&gt;分布式数据清洗转换&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;Snowpark Pandas API通过将Pandas语法与Snowflake计算引擎结合，为Python开发者提供了处理海量数据的新范式。测试显示其性能较传统方法提升显著，是构建云原生数据应用的高效工具。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>FinOps X 2025：IT成本管理向AI与云计算的演进</title>
        <link>http://localhost:1313/p/finops-x-2025it%E6%88%90%E6%9C%AC%E7%AE%A1%E7%90%86%E5%90%91ai%E4%B8%8E%E4%BA%91%E8%AE%A1%E7%AE%97%E7%9A%84%E6%BC%94%E8%BF%9B/</link>
        <pubDate>Tue, 05 Aug 2025 12:02:13 +0800</pubDate>
        
        <guid>http://localhost:1313/p/finops-x-2025it%E6%88%90%E6%9C%AC%E7%AE%A1%E7%90%86%E5%90%91ai%E4%B8%8E%E4%BA%91%E8%AE%A1%E7%AE%97%E7%9A%84%E6%BC%94%E8%BF%9B/</guid>
        <description>&lt;h3 id=&#34;finops-x-2025it成本管理的进化&#34;&gt;FinOps X 2025：IT成本管理的进化
&lt;/h3&gt;&lt;p&gt;FinOps X 2025大会向IT领导者传递了明确信息：FinOps已从可选项转变为现代技术运营管理的核心能力。随着技术支出占比持续攀升，擅长管理成本并评估其业务价值的企业将获得竞争优势。&lt;/p&gt;
&lt;h4 id=&#34;云成本管理的自然扩展&#34;&gt;云成本管理的自然扩展
&lt;/h4&gt;&lt;p&gt;本届大会聚焦FinOps从传统公有云向AI、SaaS和IT资产管理（ITAM）等可变IT支出领域的扩展。FinOps基金会将这一趋势称为&amp;quot;Cloud+&amp;quot;，并引入&amp;quot;Scopes&amp;quot;概念——即FinOps实践者需管理的技术支出范畴。&lt;/p&gt;
&lt;h4 id=&#34;与itam的整合&#34;&gt;与ITAM的整合
&lt;/h4&gt;&lt;p&gt;FinOps基金会与ITAM论坛宣布战略合作，将云财务管理与软件合规性相结合。通过整合FinOps的成本数据与ITAM的软件许可管理，企业能更理性地规划SaaS支出。此外，FinOps基金会发布&lt;strong&gt;FOCUS 1.2规范&lt;/strong&gt;，首次将SaaS、PaaS和云账单纳入统一架构，减少重复计费风险。&lt;/p&gt;
&lt;h4 id=&#34;ai成本管理的挑战与解决方案&#34;&gt;AI成本管理的挑战与解决方案
&lt;/h4&gt;&lt;p&gt;AI支出的爆炸性增长成为大会焦点。Workday的Taiwo Ojetayo指出，AI工作负载的波动性、难以预测的算力成本及快速迭代的技术模型，使成本核算异常复杂。为此，FinOps基金会推出&lt;strong&gt;FinOps for AI认证课程&lt;/strong&gt;，帮助从业者优化AI支出。&lt;/p&gt;
&lt;h4 id=&#34;ai赋能finops实践&#34;&gt;AI赋能FinOps实践
&lt;/h4&gt;&lt;p&gt;Oracle和Google等厂商发布了AI驱动的成本异常检测工具。Google宣称已向客户发送超100万次支出异常警报；Oracle则推出每小时碳排放报告以支持绿色运营。Google的Gemini Cloud Assist还能通过AI生成资源利用率报告和浪费分析图。&lt;/p&gt;
&lt;h4 id=&#34;未来展望&#34;&gt;未来展望
&lt;/h4&gt;&lt;p&gt;FinOps X 2025证明，这一学科正发展为涵盖更广泛技术支出的管理框架。与ITAM的融合、AI成本管理方法的成熟以及AI工具的应用，标志着FinOps进入新阶段。拥抱&amp;quot;Cloud+&amp;ldquo;和&amp;quot;Scopes&amp;quot;概念的企业，将更好地驾驭包括AI在内的复杂技术支出生态。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>消失的操作系统：数据中心OS的技术演进与挑战</title>
        <link>http://localhost:1313/p/%E6%B6%88%E5%A4%B1%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83os%E7%9A%84%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B%E4%B8%8E%E6%8C%91%E6%88%98/</link>
        <pubDate>Mon, 04 Aug 2025 10:40:26 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%B6%88%E5%A4%B1%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83os%E7%9A%84%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B%E4%B8%8E%E6%8C%91%E6%88%98/</guid>
        <description>&lt;h1 id=&#34;消失的操作系统&#34;&gt;消失的操作系统
&lt;/h1&gt;&lt;h2 id=&#34;前言&#34;&gt;前言
&lt;/h2&gt;&lt;p&gt;2011年我加入谷歌时，曾引用朋友的一句玩笑：&amp;ldquo;世界上大约有一台半计算机，谷歌拥有其中一台。&amp;ldquo;自2011年以来世界已发生巨变，现在全球可能有五六台这样的&amp;quot;计算机&amp;rdquo;。在下文中，当我说&amp;quot;计算机&amp;quot;时，指的是由大量独立机器连接组成的、能像单台计算机一样运作的超大规模集群。&lt;/p&gt;
&lt;h2 id=&#34;正文&#34;&gt;正文
&lt;/h2&gt;&lt;p&gt;现代微服务部署的技术生态令人困惑——变化迅速，大量表面相似的项目声称能实现类似功能。即使对我这样深耕技术领域的人而言，不同项目的精确用途也不总是清晰的。&lt;/p&gt;
&lt;p&gt;我多次提及&amp;quot;数据中心操作系统&amp;quot;的概念（至少&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a51&#34; &gt;这里&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a52&#34; &gt;这里&lt;/a&gt;），自2015年从谷歌休假以来一直在思考这个问题。最近与一群性能工程师（他们处于开发与运维的交汇点）的交流促使我写下这些思考。这是第一篇相关文章，后续可能还有更多（特别是关于其安全模型的内容）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;警告&lt;/strong&gt;：本文纯属个人观点，包含大量未经科学验证的主张。我经常犯错。&lt;/p&gt;
&lt;p&gt;我的核心观点是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;计算机发展初期，经过数十年才出现真正的&amp;quot;操作系统&amp;rdquo;。在真正OS出现前，存在许多&amp;quot;原型OS&amp;quot;——需要单独管理拼凑的工具集合。当时全球计算机数量稀少，使用计算机需在大型研究机构工作。这些机器运行着为该计算机专门拼凑的独特OS。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大约从2007年开始，我们正经历第二个类似时期：&amp;ldquo;单台计算机&amp;quot;模式被&amp;quot;仓库级计算机&amp;quot;取代。最初只有少数财力雄厚的组织能拥有这样的计算机，但云计算使得没有数十亿美元建设完整数据中心的公司也能使用&amp;quot;大量小型独立计算机&amp;rdquo;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;超大规模企业（谷歌、Facebook，也包括腾讯等）内部正在构建&amp;quot;原型数据中心OS&amp;quot;；亚马逊正在将其部分系统外部化；大量构成数据中心OS的独立组件已作为开源项目存在。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;但目前尚不存在一个普通公司可以直接安装的完整数据中心OS&lt;/strong&gt;。存在一个&amp;quot;消失的OS&amp;quot;——安装在大量计算机集合上的软件，将这些计算机集合转变为&amp;quot;一台计算机&amp;quot;。&lt;/p&gt;
&lt;h2 id=&#34;数据中心os的组成&#34;&gt;数据中心OS的组成
&lt;/h2&gt;&lt;p&gt;观察现代技术栈会发现一个惊人的趋同现象——不在于人们实际运行的软件，而在于需要实现的&amp;quot;角色&amp;quot;。每个角色通常都有多种不同的实现方案。每个大规模分布式基础设施都包含以下组件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;集群级文件系统&lt;/strong&gt;：谷歌内部使用GFS/Colossus，外部可能是GlusterFS等。许多公司最终使用S3，因为现有方案不够理想。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;水平可扩展键值存储&lt;/strong&gt;：谷歌内部用BigTable，外部可能是Cassandra、Scylla，甚至ElasticSearch（勉强算）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分布式一致性键值存储&lt;/strong&gt;：谷歌内部用Chubby，外部用etcd。大多数应用不直接使用，主要用于集群管理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;发布/订阅消息队列系统&lt;/strong&gt;：如PubSub、Kafka、AWS的SQS或RabbitMQ。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;任务调度/容器编排系统&lt;/strong&gt;：根据可用资源、待运行任务和约束条件，解决受限的装箱优化问题以确保资源合理利用。如Borg，某种程度上也包括Kubernetes。可能与MapReduce风格的批量工作负载基础设施集成以利用闲置CPU周期。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;缺失的工具与挑战&#34;&gt;缺失的工具与挑战
&lt;/h2&gt;&lt;p&gt;思考&amp;quot;单机OS上有哪些组件应该在数据中心OS中存在&amp;quot;非常有价值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;人们通过Prometheus和各种数据收集代理构建了近似&amp;quot;进程管理器&amp;quot;的工具&lt;/li&gt;
&lt;li&gt;分布式追踪（公认的必需品）实质上是数据中心版的strace&lt;/li&gt;
&lt;li&gt;&amp;ldquo;数据中心版的syslog是什么&amp;quot;同样是个有趣问题&lt;/li&gt;
&lt;li&gt;大量可观测性工程实质是将单机自省能力移植到&amp;quot;计算机&amp;quot;上&lt;/li&gt;
&lt;li&gt;人们谈论的&amp;quot;服务网格&amp;quot;是否只是数据中心版的portmapper？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有一些功能我们完全不知道如何构建对应方案。比如&amp;quot;计算机&amp;quot;的&amp;quot;调试器&amp;quot;应该是什么样子？显然，在单主机上单步执行不是解决现代分布式系统问题的正确方式——你的服务可能与数十台其他主机交互，这些主机可能同时崩溃（或逐渐停止等），重新启动和单步执行极其困难。&lt;/p&gt;
&lt;p&gt;除了需要为&amp;quot;计算机&amp;quot;重建的众多监控、开发和调试工具外，还有许多更基础的问题没有满意答案。&lt;strong&gt;安全领域尤其未知&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么是这台&amp;quot;计算机&amp;quot;的&amp;quot;特权进程&amp;rdquo;？&lt;/li&gt;
&lt;li&gt;权限和信任边界是什么？&lt;/li&gt;
&lt;li&gt;用户管理如何工作？&lt;/li&gt;
&lt;li&gt;跨服务认证和凭据委派如何实现？&lt;/li&gt;
&lt;li&gt;如何避免将James Forshaw在其幻灯片中描述的所有单机权限提升漏洞重新引入我们的新OS和各种服务？&lt;/li&gt;
&lt;li&gt;是否有办法确保Linux内核的/mm单个漏洞不会导致整个安全模型崩溃？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语
&lt;/h2&gt;&lt;p&gt;简而言之，我认为正在浮现的数据中心OS是计算机科学几十年来最激动人心的发展。有时我希望自己更擅长说服亿万富翁投资几亿美元解决有趣问题——因为如果有我想致力于解决的问题，那就是开发一个FOSS数据中心OS——&amp;ldquo;在N台机器上安装这个，你就拥有了&amp;rsquo;一台计算机&amp;rsquo;&amp;quot;。如果思考&amp;quot;这个特定组件在&amp;rsquo;计算机&amp;rsquo;中实现什么功能？这个项目的单机等价物是什么？&amp;quot;，许多技术景观会更容易理解。&lt;/p&gt;
&lt;p&gt;本文可能会有后续，因为关于这个话题我还有更多不成熟的想法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据中心OS的安全模型&lt;/li&gt;
&lt;li&gt;Kubernetes：你想成为调度器还是OS？只能选一个&lt;/li&gt;
&lt;li&gt;如何获得bash脚本的强大功能，但针对2万台机器的集群？&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Ampere 2024开发者峰会视频回顾：云原生处理器与架构迁移实战</title>
        <link>http://localhost:1313/p/ampere-2024%E5%BC%80%E5%8F%91%E8%80%85%E5%B3%B0%E4%BC%9A%E8%A7%86%E9%A2%91%E5%9B%9E%E9%A1%BE%E4%BA%91%E5%8E%9F%E7%94%9F%E5%A4%84%E7%90%86%E5%99%A8%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%BF%81%E7%A7%BB%E5%AE%9E%E6%88%98/</link>
        <pubDate>Mon, 04 Aug 2025 07:46:53 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ampere-2024%E5%BC%80%E5%8F%91%E8%80%85%E5%B3%B0%E4%BC%9A%E8%A7%86%E9%A2%91%E5%9B%9E%E9%A1%BE%E4%BA%91%E5%8E%9F%E7%94%9F%E5%A4%84%E7%90%86%E5%99%A8%E4%B8%8E%E6%9E%B6%E6%9E%84%E8%BF%81%E7%A7%BB%E5%AE%9E%E6%88%98/</guid>
        <description>&lt;h3 id=&#34;峰会概览&#34;&gt;峰会概览
&lt;/h3&gt;&lt;p&gt;Uber云基础设施工程师Vikrant Soman的发言道出峰会主旨：&amp;ldquo;Ampere CPU的主机性能足以提供与现有方案相当或更高的吞吐量，请勿轻信基准测试，务必运行自身工作负载进行总成本分析。&amp;ldquo;这场于2024年9月26日举办的半日虚拟峰会，聚集了全球开发者共同探讨云架构迁移与Ampere®云原生处理器如何重塑计算未来。&lt;/p&gt;
&lt;h3 id=&#34;核心技术议程&#34;&gt;核心技术议程
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;混合架构构建的挑战与机遇&lt;/strong&gt;&lt;br&gt;
Ampere公司Pete Baker的主题演讲揭示了使用Ampere平台迁移时优化工具与方法的关键见解。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;云原生处理器的三重优势&lt;/strong&gt;&lt;br&gt;
首席技术推广官Sean Varley联合Fermyon的Kate Goldenring与ScyllaDB CEO Dor Laor，论证了Ampere高核心密度处理器对Kubernetes及分布式数据库等现代应用的适配性：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;蔡司公司通过转向WebAssembly并增加Ampere Arm节点，在保持性能同时实现60%成本削减&amp;rdquo; —— Kate Goldenring&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;最佳工作负载匹配实践&lt;/strong&gt;&lt;br&gt;
Ampere客户工程副总裁Naren Nayak与Uber/Oracle专家共同解析AI、无状态云负载等场景的性能增益：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Arm生态已与x86指令集并肩发展&amp;rdquo; —— Vikrant Soman&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AI推理成本优化方案&lt;/strong&gt;&lt;br&gt;
Oracle产品经理Amar Gowda与Wallaroo.AI团队展示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;在OCI A1机器上部署量化模型，推理速度达x.86方案两倍&amp;rdquo; —— Steve Notley&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;混合架构迁移实战&lt;/strong&gt;&lt;br&gt;
Uber工程师Andreas Winther Lykke分享：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;3000个服务在数周内完成架构迁移与问题修复&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;可持续计算价值&#34;&gt;可持续计算价值
&lt;/h3&gt;&lt;p&gt;Ampere云原生处理器以可预测的高性能、弹性扩展和能效设计，实现开发效率、成本节约与环保的三重收益。&lt;/p&gt;
&lt;h3 id=&#34;开发者资源&#34;&gt;开发者资源
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;与Ampere销售团队洽谈合作&lt;/li&gt;
&lt;li&gt;通过开发者计划申请系统试用&lt;/li&gt;
&lt;li&gt;订阅开发者通讯&lt;/li&gt;
&lt;li&gt;加入技术社区讨论&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Docker Offload：AI工作负载的最佳特性之一</title>
        <link>http://localhost:1313/p/docker-offloadai%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E7%9A%84%E6%9C%80%E4%BD%B3%E7%89%B9%E6%80%A7%E4%B9%8B%E4%B8%80/</link>
        <pubDate>Mon, 04 Aug 2025 06:03:43 +0800</pubDate>
        
        <guid>http://localhost:1313/p/docker-offloadai%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E7%9A%84%E6%9C%80%E4%BD%B3%E7%89%B9%E6%80%A7%E4%B9%8B%E4%B8%80/</guid>
        <description>&lt;h1 id=&#34;docker-offloadai工作负载的最佳特性之一&#34;&gt;Docker Offload：AI工作负载的最佳特性之一
&lt;/h1&gt;&lt;p&gt;Docker Offload 是一项全托管服务，允许用户在云基础设施上执行Docker构建和运行容器，同时保持本地开发体验。&lt;/p&gt;
&lt;h2 id=&#34;什么是docker-offload&#34;&gt;什么是Docker Offload？
&lt;/h2&gt;&lt;p&gt;如果你曾因本地机器缺乏GPU或计算资源而无法运行AI模型或数据处理管道，Docker Offload正是为此设计的解决方案。它通过安全SSH隧道将本地Docker命令转发至云端的Docker守护进程，所有容器构建和工作负载均在云端执行，而用户仍使用熟悉的本地命令。&lt;/p&gt;
&lt;h2 id=&#34;为什么使用docker-offload&#34;&gt;为什么使用Docker Offload？
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;资源扩展&lt;/strong&gt;：运行计算密集型容器，突破本地硬件限制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;云构建加速&lt;/strong&gt;：将重型构建任务卸载到云端。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无缝开发体验&lt;/strong&gt;：保留本地开发流程，无需手动配置云环境。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;即时GPU支持&lt;/strong&gt;：直接访问云端GPU资源（如NVIDIA L4）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;受限环境适配&lt;/strong&gt;：在虚拟桌面（VDI）等受限环境中高效开发。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;快速入门指南&#34;&gt;快速入门指南
&lt;/h2&gt;&lt;h3 id=&#34;前提条件&#34;&gt;前提条件
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Docker Desktop 4.43.0或更高版本。&lt;/li&gt;
&lt;li&gt;已注册Docker Offload Beta访问权限（&lt;a class=&#34;link&#34; href=&#34;https://www.docker.com/products/docker-offload/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;申请链接&lt;/a&gt;）。&lt;/li&gt;
&lt;li&gt;无限制性代理或防火墙阻挡Docker Cloud流量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;启用docker-offload&#34;&gt;启用Docker Offload
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;通过Docker Desktop&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在界面顶部切换“Docker Offload”按钮。&lt;/li&gt;
&lt;li&gt;Docker Desktop颜色变为紫色，并显示云图标，表示已连接至云端环境。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;通过终端&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;offload&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;start
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;按提示选择账户和是否需要GPU支持。完成后，终端会显示“New Docker context created: docker-cloud”。&lt;/p&gt;
&lt;h3 id=&#34;运行容器与构建示例&#34;&gt;运行容器与构建示例
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;状态检查&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;offload&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;构建容器&lt;/strong&gt;（以&lt;a class=&#34;link&#34; href=&#34;https://github.com/sunnynagavo/docker-offload-demo.git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ajeet Raina的示例库&lt;/a&gt;为例）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;github&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sunnynagavo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;docker-offload&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-demo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd docker-offload&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-demo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;build&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-t&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;docker-offload&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-demo&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;日志将显示构建在云端执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;启动GPU容器&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;run&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-rm&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-gpus&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;all&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;3000&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;docker-offload&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-demo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;访问&lt;code&gt;http://localhost:3000&lt;/code&gt;可查看应用，页面会显示使用的GPU型号（如NVIDIA L4）和资源统计。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;停止docker-offload&#34;&gt;停止Docker Offload
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;通过Docker Desktop&lt;/strong&gt;：切换顶部按钮。&lt;br&gt;
&lt;strong&gt;通过终端&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;offload&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stop&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;停止后，所有云端资源将被清理，后续命令恢复本地执行。&lt;/p&gt;
&lt;h2 id=&#34;定价与限制&#34;&gt;定价与限制
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Docker目前提供300分钟免费GPU时长，后续按$0.015/GPU分钟计费。&lt;/li&gt;
&lt;li&gt;详细计费规则参考&lt;a class=&#34;link&#34; href=&#34;https://docs.docker.com/offload/usage/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文档&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;Docker Offload弥合了本地开发便捷性与云端算力之间的鸿沟，尤其适合AI、大数据等高性能场景。开发者无需变更工作流即可获得云端资源，堪称“本地机器的超级计算机大脑”。立即申请Beta体验：&lt;a class=&#34;link&#34; href=&#34;https://docs.docker.com/offload/quickstart/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker Offload快速入门&lt;/a&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>我在re:Invent大会上的技术诉求：从跨AZ带宽定价到CHERI实例</title>
        <link>http://localhost:1313/p/%E6%88%91%E5%9C%A8reinvent%E5%A4%A7%E4%BC%9A%E4%B8%8A%E7%9A%84%E6%8A%80%E6%9C%AF%E8%AF%89%E6%B1%82%E4%BB%8E%E8%B7%A8az%E5%B8%A6%E5%AE%BD%E5%AE%9A%E4%BB%B7%E5%88%B0cheri%E5%AE%9E%E4%BE%8B/</link>
        <pubDate>Sun, 03 Aug 2025 08:00:39 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%88%91%E5%9C%A8reinvent%E5%A4%A7%E4%BC%9A%E4%B8%8A%E7%9A%84%E6%8A%80%E6%9C%AF%E8%AF%89%E6%B1%82%E4%BB%8E%E8%B7%A8az%E5%B8%A6%E5%AE%BD%E5%AE%9A%E4%BB%B7%E5%88%B0cheri%E5%AE%9E%E4%BE%8B/</guid>
        <description>&lt;p&gt;作为AWS Hero，我获得了免费参加AWS re:Invent大会的机会。虽然我很少对多数演讲感兴趣——往年我参加过一些&amp;quot;高级&amp;quot;讲座，但内容都未超出已发布的文档范围——但我发现这是与亚马逊员工交流的绝佳机会。&lt;/p&gt;
&lt;p&gt;今年我有一长串诉求清单，考虑到可能引起亚马逊员工（甚至非亚马逊人士）的兴趣，我决定在此公开分享：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;增加re:Invent大会上的亚马逊开源开发者数量&lt;/strong&gt;&lt;br&gt;
我期待周三与Valkey开发者会面，但对Firecracker开发者无人参会感到失望。亚马逊有不派工程师参会除非他们演讲的政策（我希望能改变这一政策），但对开源开发者而言，参会结识潜在贡献者至关重要。如果你的开源团队不参加会议，无论代码采用什么许可证，都不算真正在做开源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;降低跨可用区(AZ)带宽定价&lt;/strong&gt;&lt;br&gt;
我甚至不太在意成本本身，但人们对跨AZ带宽的担忧导致他们设计出糟糕的系统架构。亚马逊&amp;quot;良好架构框架&amp;quot;中的一条准则是将工作负载部署到多个位置，并明确指出使用单一可用区是个问题——但对跨AZ带宽的担忧（即使最终证明是多余的）阻碍了人们遵循这一准则。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;机架级EBS存储&lt;/strong&gt;&lt;br&gt;
当前&amp;quot;SSD&amp;quot;EBS卷的I/O延迟表明它们与访问的EC2实例相距甚远。而某些EC2实例类型直接附加SSD，I/O性能显著提升——但耐久性低（实例终止数据即丢失）且缺乏弹性。将EBS存储部署在与EC2节点相同的机架上，可提供介于两者之间的解决方案，实现比跨数据中心更低的延迟，同时保持卷大小的灵活性。用户需接受&amp;quot;在此实例同机架创建卷&amp;quot;可能返回&amp;quot;该机架磁盘已满&amp;quot;的情况，但至少在实例启动时可以寻找有足够本地磁盘的机架。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;支持CHERI的安全实例&lt;/strong&gt;&lt;br&gt;
这是我长期以来的愿望清单项目。CHERI在安全性方面具有巨大优势，哪家云厂商率先实现将遥遥领先竞争对手。我知道亚马逊（和其他云厂商）拥有用于研究的Morello开发板。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Marketplace支持&amp;quot;待发布&amp;quot;版本&lt;/strong&gt;&lt;br&gt;
当我在AWS Marketplace添加新的FreeBSD版本时，需经过审批流程并复制到所有EC2区域，然后Marketplace更新产品列表并发送新版本邮件通知。这常导致亚马逊发送新FreeBSD版本邮件比我官方发布公告还早几天。我希望能够预先告知Marketplace即将发布的FreeBSD版本，让他们准备就绪但暂不更新网站或发送邮件，直到我准备好官方公告（通常会给镜像和云服务几天同步时间）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此外，我还向Zoom提出改进建议：当从FreeBSD笔记本电脑加入会议时，Zoom网站应能通过用户代理字符串识别没有客户端，直接提供在浏览器中开会的选项，而不是反复尝试打开客户端。Zoom团队立即理解问题，甚至考虑将Linux客户端移植到FreeBSD。&lt;/p&gt;
&lt;p&gt;关于透明度说明：除了提供免费参会和差旅，亚马逊还赞助我的FreeBSD工作。他们资助的内容约一半是EC2相关，另一半是FreeBSD发布工程。没有他们的支持，许多重要功能将无法出现在FreeBSD 14.2-RELEASE中。感谢亚马逊。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>错误但快速的云基础设施配置方式 - 安全风险警示</title>
        <link>http://localhost:1313/p/%E9%94%99%E8%AF%AF%E4%BD%86%E5%BF%AB%E9%80%9F%E7%9A%84%E4%BA%91%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F-%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9%E8%AD%A6%E7%A4%BA/</link>
        <pubDate>Sat, 02 Aug 2025 05:27:39 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%94%99%E8%AF%AF%E4%BD%86%E5%BF%AB%E9%80%9F%E7%9A%84%E4%BA%91%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F-%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9%E8%AD%A6%E7%A4%BA/</guid>
        <description>&lt;p&gt;今天我们将以&amp;quot;Max Power&amp;quot;方式配置云基础设施：将自动化与未经检查的AI输出相结合。不幸的是，这种方法产生的云基础设施代码虽然能用，但具有可怕的安全特性。&lt;/p&gt;
&lt;p&gt;简而言之，像Claude和ChatGPT这样的AI工具会轻易提供极其糟糕的云基础设施配置代码，比如使用常见硬编码密码的代码。这些工具还会&amp;quot;热心&amp;quot;地建议你使用&amp;quot;随机&amp;quot;密码，但由于LLM生成输出的本质，这些密码根本谈不上随机。即使你试图聪明地要求这些工具提供密码生成代码，这些代码也充满严重的安全漏洞。&lt;/p&gt;
&lt;p&gt;显然，不要盲目信任AI工具的输出。云服务提供商应该努力识别本文中提到的不良模式（和硬编码凭证），并在基础设施层进行拦截（就像他们在GitHub提交API密钥时做的那样）。LLM供应商应该考虑让生成存在明显安全问题的云基础设施代码变得不那么容易。&lt;/p&gt;
&lt;h3 id=&#34;创建一个windows-vm&#34;&gt;创建一个Windows VM
&lt;/h3&gt;&lt;p&gt;假设你是云开发新手。你想在Microsoft Azure上用Terraform创建一个Windows VM，并通过RDP连接到机器。（我们使用Azure作为示例只是因为这是我需要使用的提供商，但基本问题适用于所有云提供商）。&lt;/p&gt;
&lt;p&gt;让我们问问ChatGPT 4o和Claude应该怎么做。&lt;/p&gt;
&lt;p&gt;以下是ChatGPT的回答：
[示例对话内容&amp;hellip;]&lt;/p&gt;
&lt;p&gt;Claude至少提醒你更改admin_password。这些都是硬编码凭证，使用它们很糟糕。是的，Claude要求你更改它们，但有多少人真的会这么做？应该相当容易设计正确的提示并提取出ChatGPT或Claude会输出的所有（技术上，几乎所有）凭证。&lt;/p&gt;
&lt;h3 id=&#34;要求更好的凭证&#34;&gt;要求更好的凭证
&lt;/h3&gt;&lt;p&gt;我们都知道硬编码凭证不好。如果我们要求一些更好的呢？&lt;/p&gt;
&lt;p&gt;我们从ChatGPT开始：
[示例对话内容显示生成的&amp;quot;随机&amp;quot;密码实际上并不随机&amp;hellip;]&lt;/p&gt;
&lt;p&gt;接下来试试Claude。起初它给出了正确的答案。但当被稍微不同地询问时，Claude很快就放弃了。&lt;/p&gt;
&lt;h3 id=&#34;关于密码生成&#34;&gt;关于密码生成
&lt;/h3&gt;&lt;p&gt;也许我们可以要求这些工具编写生成密码的代码。事实上，我需要完成的部分任务涉及创建多个Azure AD账户，这似乎是个合乎逻辑的方法。看看我们的AI工具在自动生成账户凭证方面表现如何。&lt;/p&gt;
&lt;p&gt;以下是ChatGPT的解决方案：
[展示有安全缺陷的Python随机模块代码&amp;hellip;]&lt;/p&gt;
&lt;p&gt;Claude的解决方案：
[同样展示不安全的伪随机生成代码&amp;hellip;]&lt;/p&gt;
&lt;p&gt;这两个解决方案都非常具有欺骗性，因为它们看起来正确但实际上错得离谱。它们会生成&amp;quot;看起来&amp;quot;随机的密码，但存在缺陷：Python的random模块不是安全的随机数据源。它是一个用当前系统时间作为种子的伪随机生成器。很容易就能生成这个脚本在过去一年或更长时间内可能生成的所有密码。它提供的密码不应该用于任何用途，也许除了临时测试。正确的做法是使用Python的secrets模块。&lt;/p&gt;
&lt;h3 id=&#34;可以采取的措施&#34;&gt;可以采取的措施
&lt;/h3&gt;&lt;p&gt;毫无疑问，这个兔子洞很深。这里的回应只是我在几天内尝试自动化Terraform工作流程时遇到的。可悲的是，最不可能理解硬编码凭证和弱随机值影响的人，也最有可能直接复制粘贴AI工具的原始输出。&lt;/p&gt;
&lt;p&gt;云提供商应该假设人们已经在复制粘贴ChatGPT和Claude的输出，并应该努力拦截常见的硬编码凭证和其他不良基础设施模式。&lt;/p&gt;
&lt;p&gt;LLM供应商应该让用户更难意外地伤害自己。不应该是完全不可能出现这种行为，但绝对不应该是默认行为。&lt;/p&gt;
&lt;p&gt;一如既往，云基础设施很复杂；如果你真的想增强安全性，考虑让我们进行基础设施威胁模型评估，这将识别弱点和潜在攻击路径，并提出解决方法。在你庞大的自动化基础设施部署中，潜伏着比硬编码凭证和弱随机性更多的问题。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>JetBrains升级Junie编码助手、Gemini API新增嵌入模型等技术动态</title>
        <link>http://localhost:1313/p/jetbrains%E5%8D%87%E7%BA%A7junie%E7%BC%96%E7%A0%81%E5%8A%A9%E6%89%8Bgemini-api%E6%96%B0%E5%A2%9E%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B%E7%AD%89%E6%8A%80%E6%9C%AF%E5%8A%A8%E6%80%81/</link>
        <pubDate>Fri, 01 Aug 2025 22:40:34 +0800</pubDate>
        
        <guid>http://localhost:1313/p/jetbrains%E5%8D%87%E7%BA%A7junie%E7%BC%96%E7%A0%81%E5%8A%A9%E6%89%8Bgemini-api%E6%96%B0%E5%A2%9E%E5%B5%8C%E5%85%A5%E6%A8%A1%E5%9E%8B%E7%AD%89%E6%8A%80%E6%9C%AF%E5%8A%A8%E6%80%81/</guid>
        <description>&lt;h3 id=&#34;jetbrains宣布更新其编码助手junie&#34;&gt;JetBrains宣布更新其编码助手Junie
&lt;/h3&gt;&lt;p&gt;Junie现已完全集成到GitHub中，支持异步开发功能，包括：同时委派多个任务、无需打开IDE即可快速修复问题、直接在GitHub中进行团队协作，以及无缝切换IDE和GitHub。GitHub版Junie目前处于早期访问计划，仅支持JVM和PHP。&lt;br&gt;
JetBrains还新增了对MCP的支持，使Junie能连接外部数据源。其他新特性包括任务完成速度提升30%，以及支持macOS和Linux的远程开发。&lt;/p&gt;
&lt;h3 id=&#34;gemini-api推出首个嵌入模型&#34;&gt;Gemini API推出首个嵌入模型
&lt;/h3&gt;&lt;p&gt;这类模型可为单词、短语、句子和代码生成嵌入向量，提供比关键词搜索更精准的上下文感知结果。&amp;ldquo;它们能高效地从知识库中检索相关信息（以嵌入向量表示），并作为附加上下文输入语言模型，引导生成更明智和准确的响应。&amp;ldquo;Gemini文档说明。&lt;br&gt;
该嵌入模型支持100多种语言和2048个输入token长度，将通过免费和付费双层级开放，方便开发者免费实验后按需扩展。&lt;/p&gt;
&lt;h3 id=&#34;amazon为sagemaker新增功能&#34;&gt;Amazon为SageMaker新增功能
&lt;/h3&gt;&lt;p&gt;用户现可直接从SageMaker Unified Studio启动Amazon QuickSight，利用项目数据构建仪表板并分享至Amazon SageMaker Catalog供组织内成员发现。&lt;br&gt;
新增支持Amazon S3通用存储桶（便于查找和协作数据）及S3 Access Grants（实现细粒度访问控制）。用户还可将AWS Glue Data Catalog数据集导入SageMaker目录。&lt;br&gt;
&amp;ldquo;这些新功能在统一治理框架下覆盖完整数据生命周期：自动接入湖仓中的结构化数据、无缝编目Amazon S3的非结构化内容、通过QuickSight简化可视化流程。&amp;ldquo;AWS在博客中写道。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        
    </channel>
</rss>
