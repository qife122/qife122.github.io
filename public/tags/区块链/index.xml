<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>区块链 on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/</link>
        <description>Recent content in 区块链 on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Thu, 07 Aug 2025 22:55:53 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>即刻保护，延时揭秘：可扩展的时间锁谜题解决方案</title>
        <link>http://localhost:1313/p/%E5%8D%B3%E5%88%BB%E4%BF%9D%E6%8A%A4%E5%BB%B6%E6%97%B6%E6%8F%AD%E7%A7%98%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E6%97%B6%E9%97%B4%E9%94%81%E8%B0%9C%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
        <pubDate>Thu, 07 Aug 2025 22:55:53 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%8D%B3%E5%88%BB%E4%BF%9D%E6%8A%A4%E5%BB%B6%E6%97%B6%E6%8F%AD%E7%A7%98%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E6%97%B6%E9%97%B4%E9%94%81%E8%B0%9C%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
        <description>&lt;h3 id=&#34;时间锁谜题的核心价值&#34;&gt;时间锁谜题的核心价值
&lt;/h3&gt;&lt;p&gt;时间锁谜题（TLP）允许今日加密的信息在指定时间后自动解密，其应用场景涵盖：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;延时加密货币支付&lt;/li&gt;
&lt;li&gt;密封投标拍卖&lt;/li&gt;
&lt;li&gt;基于时间的访问控制&lt;/li&gt;
&lt;li&gt;零知识证明系统&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;现有方案的局限性&#34;&gt;现有方案的局限性
&lt;/h3&gt;&lt;p&gt;传统TLP存在两大瓶颈：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;算力假设不现实&lt;/strong&gt;：要求服务器在固定时间窗口内完成所有并行谜题计算（例如同时处理24小时和40小时谜题需64小时算力）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;扩展性缺陷&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;链式TLP（C-TLP）仅支持单一客户端固定间隔的谜题链&lt;/li&gt;
&lt;li&gt;可批处理TLP要求所有消息必须同时解密&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;突破性解决方案ed-tlp协议&#34;&gt;突破性解决方案：ED-TLP协议
&lt;/h3&gt;&lt;p&gt;我们提出的高效委托时间锁谜题协议实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;安全任务委托&lt;/strong&gt;：允许客户端/服务器将计算外包给第三方（即使不可信）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态时间间隔&lt;/strong&gt;：支持不同客户端的异构时间要求（如24小时+16小时=40小时总延迟）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实时验证&lt;/strong&gt;：轻量级解决方案验证机制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智能合约支付&lt;/strong&gt;：通过区块链确保计算者按时正确交付后获得报酬&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[&lt;img src=&#34;http://localhost:1313/&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;工作流程对比&#34;
	
	
&gt;](Fig.1: 协议对比演示)&lt;/p&gt;
&lt;h3 id=&#34;实际应用场景&#34;&gt;实际应用场景
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;高风险信息保护&lt;/strong&gt;：记者/举报人可预设信息在遭遇不测后自动公开&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;远程教育&lt;/strong&gt;：学生提前下载加密试卷，考试开始时自动解密&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定时金融交易&lt;/strong&gt;：避免金融机构提前获知交易细节&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;性能突破&#34;&gt;性能突破
&lt;/h3&gt;&lt;p&gt;万级谜题测试显示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端计算量减少99%&lt;/li&gt;
&lt;li&gt;服务器计算负载降低100%&lt;/li&gt;
&lt;li&gt;单谜题智能合约成本仅0.2美分&lt;/li&gt;
&lt;li&gt;开源实现已发布&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这项研究使时间依赖型密码学真正具备大规模应用可行性，为金融、教育、人权保护等领域提供新的安全范式。我们期待与密码学、区块链领域研究者展开深度合作。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>在Empire Hacking上探讨以太坊安全 - 来自Trail of Bits的见解</title>
        <link>http://localhost:1313/p/%E5%9C%A8empire-hacking%E4%B8%8A%E6%8E%A2%E8%AE%A8%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%AE%89%E5%85%A8-%E6%9D%A5%E8%87%AAtrail-of-bits%E7%9A%84%E8%A7%81%E8%A7%A3/</link>
        <pubDate>Thu, 07 Aug 2025 22:19:05 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%9C%A8empire-hacking%E4%B8%8A%E6%8E%A2%E8%AE%A8%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%AE%89%E5%85%A8-%E6%9D%A5%E8%87%AAtrail-of-bits%E7%9A%84%E8%A7%81%E8%A7%A3/</guid>
        <description>&lt;h1 id=&#34;在empire-hacking上探讨以太坊安全&#34;&gt;在Empire Hacking上探讨以太坊安全
&lt;/h1&gt;&lt;p&gt;如果你正在使用区块链技术构建实际应用并关注安全问题，这个聚会不容错过。12月12日，我们将举办一期完全专注于以太坊安全的Empire Hacking特别活动。&lt;/p&gt;
&lt;h2 id=&#34;为什么要参加&#34;&gt;为什么要参加？
&lt;/h2&gt;&lt;p&gt;四位区块链安全专家将分享如何编写安全的智能合约，以及如何攻击它们。其中两位演讲者来自我们的团队。&lt;/p&gt;
&lt;p&gt;我们已成为行业最受信任的审计服务、工具和最佳实践提供商之一，涉及智能合约及其相关技术的安全防护。我们成功保障了代币发行、去中心化应用乃至整个区块链平台的安全。与往届Empire Hacking活动一样，我们期待与开发社区分享前沿技术。&lt;/p&gt;
&lt;h2 id=&#34;演讲嘉宾阵容&#34;&gt;演讲嘉宾阵容
&lt;/h2&gt;&lt;p&gt;Trail of Bits的Sophia D&amp;rsquo;Antoine将讨论近期CTF比赛中Solidity和以太坊面临的挑战，以及利用这些漏洞所需的工具。&lt;/p&gt;
&lt;p&gt;Consensys Diligence的John Maurelian将分享他在Devcon3上了解到的以太坊安全最新进展。&lt;/p&gt;
&lt;p&gt;Mark Mossberg将展示Trail of Bits如何通过符号执行引擎Manticore发现EVM字节码中的漏洞。&lt;/p&gt;
&lt;p&gt;Paul Makowski将介绍他即将推出的安全导向型以太坊代币PolySwarm，该项目利用区块链技术解决威胁情报行业的缺陷。&lt;/p&gt;
&lt;p&gt;企业以太坊联盟的Amber Baldet和Brian Schroeder将探讨Quorum区块链中应用的威胁建模、机密交易和零知识证明技术。&lt;/p&gt;
&lt;h2 id=&#34;活动时间与地点&#34;&gt;活动时间与地点
&lt;/h2&gt;&lt;p&gt;活动将于12月12日下午6点举行，地点在纽约时报大厦的DataDog办公室。需提前报名。照例将提供轻食和啤酒。&lt;/p&gt;
&lt;p&gt;了解更多Empire Hacking信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问官网&lt;/li&gt;
&lt;li&gt;Meetup报名&lt;/li&gt;
&lt;li&gt;加入Slack社区&lt;/li&gt;
&lt;li&gt;关注Twitter账号@EmpireHacking&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>以太坊智能合约可复用属性库 - 提升安全测试效率的168个预置属性</title>
        <link>http://localhost:1313/p/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%8F%AF%E5%A4%8D%E7%94%A8%E5%B1%9E%E6%80%A7%E5%BA%93-%E6%8F%90%E5%8D%87%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E6%95%88%E7%8E%87%E7%9A%84168%E4%B8%AA%E9%A2%84%E7%BD%AE%E5%B1%9E%E6%80%A7/</link>
        <pubDate>Thu, 07 Aug 2025 20:30:43 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%8F%AF%E5%A4%8D%E7%94%A8%E5%B1%9E%E6%80%A7%E5%BA%93-%E6%8F%90%E5%8D%87%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E6%95%88%E7%8E%87%E7%9A%84168%E4%B8%AA%E9%A2%84%E7%BD%AE%E5%B1%9E%E6%80%A7/</guid>
        <description>&lt;h3 id=&#34;可复用的以太坊合约属性库&#34;&gt;可复用的以太坊合约属性库
&lt;/h3&gt;&lt;p&gt;随着智能合约安全技术发展，基于属性的模糊测试（property-based fuzzing）已成为开发者和安全工程师的核心技术。该技术依赖代码属性（通常称为不变量）的创建，这些属性描述代码的预期行为。为帮助社区定义属性，我们发布了包含168个预置属性的集合，可直接用于我们的智能合约模糊测试工具Echidna或通过单元测试调用。这些属性涵盖：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见ERC代币接口的合规性检查&lt;/li&gt;
&lt;li&gt;通用可测试安全属性&lt;/li&gt;
&lt;li&gt;定点数学运算测试属性&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实战研讨会安排&#34;&gt;实战研讨会安排
&lt;/h3&gt;&lt;p&gt;为帮助掌握这些工具，我们将举办两场直播：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;3月7日&lt;/strong&gt;：ERC20属性详解、Echidna作弊码使用（讲师：Guillermo Larregay）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3月14日&lt;/strong&gt;：ERC4626属性解析与高效模糊测试技巧（讲师：Benjamin Samuels）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;为什么需要这些属性&#34;&gt;为什么需要这些属性？
&lt;/h3&gt;&lt;p&gt;该资源库及配套研讨会将展示模糊测试如何提供远超常规单元测试的安全保障。这些属性可轻松集成到使用常见标准或流行库的项目中，当前版本包含对以下标准的测试：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ERC20&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标准接口函数属性&lt;/li&gt;
&lt;li&gt;基础逻辑属性（如：用户余额不应大于代币总量）&lt;/li&gt;
&lt;li&gt;可销毁/可铸造/可暂停等扩展功能属性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ERC4626&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;合规性舍入方向验证&lt;/li&gt;
&lt;li&gt;禁止异常回退的函数属性&lt;/li&gt;
&lt;li&gt;差分测试属性（如deposit()需符合previewDeposit()预期）&lt;/li&gt;
&lt;li&gt;非标准安全属性（如份额通胀攻击检查）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ABDKMath64x64数学库&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;交换律/结合律/分配律等数学属性&lt;/li&gt;
&lt;li&gt;差分测试（如2^(-x)应与1/2^x等价）&lt;/li&gt;
&lt;li&gt;输入范围异常检测属性&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实战案例发现abdkmath64x64库漏洞&#34;&gt;实战案例：发现ABDKMath64x64库漏洞
&lt;/h3&gt;&lt;h3 id=&#34;快速开始指南&#34;&gt;快速开始指南
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;安装Echidna测试工具&lt;/li&gt;
&lt;li&gt;集成属性库：
&lt;ul&gt;
&lt;li&gt;Hardhat项目：&lt;code&gt;npm install https://github.com/crytic/properties.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Foundry项目：&lt;code&gt;forge install crytic/properties&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;创建测试合约（示例代码见原文）&lt;/li&gt;
&lt;li&gt;配置Echidna参数文件&lt;/li&gt;
&lt;li&gt;运行测试：&lt;code&gt;echidna-test . --contract CryticERC20ExternalHarness --config tests/echidna-external.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;未来规划&#34;&gt;未来规划
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;扩展对PRBMath等数学库的测试支持&lt;/li&gt;
&lt;li&gt;增加更多ERC标准测试&lt;/li&gt;
&lt;li&gt;开发AMM/流动性池等非标合约的测试集&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>跨交易所加密货币套利机器人：自动化交易的技术实现</title>
        <link>http://localhost:1313/p/%E8%B7%A8%E4%BA%A4%E6%98%93%E6%89%80%E5%8A%A0%E5%AF%86%E8%B4%A7%E5%B8%81%E5%A5%97%E5%88%A9%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%87%AA%E5%8A%A8%E5%8C%96%E4%BA%A4%E6%98%93%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0/</link>
        <pubDate>Tue, 05 Aug 2025 11:07:43 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%B7%A8%E4%BA%A4%E6%98%93%E6%89%80%E5%8A%A0%E5%AF%86%E8%B4%A7%E5%B8%81%E5%A5%97%E5%88%A9%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%87%AA%E5%8A%A8%E5%8C%96%E4%BA%A4%E6%98%93%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0/</guid>
        <description>&lt;h1 id=&#34;跨交易所加密货币套利机器人自动化交易的技术实现&#34;&gt;跨交易所加密货币套利机器人：自动化交易的技术实现
&lt;/h1&gt;&lt;h2 id=&#34;加密货币套利的概念与价值&#34;&gt;加密货币套利的概念与价值
&lt;/h2&gt;&lt;p&gt;加密货币套利是通过利用不同交易所间同一资产的价格差异获利的交易技术。与长期投资不同，套利交易依赖精确数学计算，通过快速买卖实现低风险盈利。例如当以太坊在Exchange A报价1800美元，在Exchange B报价1850美元时，套利者通过跨平台瞬时交易可锁定50美元价差收益。&lt;/p&gt;
&lt;h2 id=&#34;主流套利策略类型&#34;&gt;主流套利策略类型
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;单交易所简单套利&lt;/strong&gt;&lt;br&gt;
在单一交易所内利用交易对价差（如ETH/USDT与BTC/ETH）进行套利，无需跨平台转账但机会有限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;跨交易所套利（最有效策略）&lt;/strong&gt;&lt;br&gt;
通过自动化机器人实时监测多个交易所（如Binance、Coinbase、Kraken），在价差出现时自动完成跨平台买卖操作。关键技术包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WebSocket实时数据流&lt;/li&gt;
&lt;li&gt;多交易所API集成&lt;/li&gt;
&lt;li&gt;网络延迟优化（毫秒级响应）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;三角套利（高阶策略）&lt;/strong&gt;&lt;br&gt;
在单交易所内进行三种货币的循环交易（如BTC→ETH→USDT→BTC），依赖高频交易算法和精确的汇率计算。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;套利机器人技术架构&#34;&gt;套利机器人技术架构
&lt;/h2&gt;&lt;h3 id=&#34;核心工作流程&#34;&gt;核心工作流程
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;价格监控模块&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实时扫描多交易所订单簿和交易历史&lt;/li&gt;
&lt;li&gt;采用WebSocket协议保持低延迟连接&lt;/li&gt;
&lt;li&gt;动态计算有效价差（需扣除手续费、gas费等）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;交易执行引擎&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原子化交易指令（防止部分成交）&lt;/li&gt;
&lt;li&gt;智能路由选择（最优交易所组合）&lt;/li&gt;
&lt;li&gt;风控子系统（止损/滑点控制）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;资金管理组件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多交易所余额同步&lt;/li&gt;
&lt;li&gt;自动充提币优化&lt;/li&gt;
&lt;li&gt;冷热钱包隔离策略&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;从零开发指南&#34;&gt;从零开发指南
&lt;/h2&gt;&lt;h3 id=&#34;技术选型阶段&#34;&gt;技术选型阶段
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;方案类型&lt;/th&gt;
          &lt;th&gt;优势&lt;/th&gt;
          &lt;th&gt;劣势&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;SaaS平台&lt;/td&gt;
          &lt;td&gt;快速部署&lt;/td&gt;
          &lt;td&gt;策略受限&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;定制开发&lt;/td&gt;
          &lt;td&gt;算法自主&lt;/td&gt;
          &lt;td&gt;研发成本高&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;关键开发环节&#34;&gt;关键开发环节
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;交易所API集成&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实现REST/WebSocket双通道&lt;/li&gt;
&lt;li&gt;处理速率限制（如Binance API 1200次/分钟）&lt;/li&gt;
&lt;li&gt;签名认证与密钥安全管理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;套利算法设计&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;calculate_arbitrage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;op1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;op2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# op1: 交易所A的买单深度&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# op2: 交易所B的卖单深度&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;effective_price&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;op1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;op2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;effective_price&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;effective_price&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;threshold&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;回测系统搭建&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用历史tick数据（包含盘口深度）&lt;/li&gt;
&lt;li&gt;模拟网络延迟（典型值50-200ms）&lt;/li&gt;
&lt;li&gt;蒙特卡洛压力测试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术挑战与解决方案&#34;&gt;技术挑战与解决方案
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;挑战领域&lt;/th&gt;
          &lt;th&gt;具体问题&lt;/th&gt;
          &lt;th&gt;应对方案&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;低延迟要求&lt;/td&gt;
          &lt;td&gt;跨洲际交易所延迟&lt;/td&gt;
          &lt;td&gt;使用AWS Global Accelerator&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;资金安全&lt;/td&gt;
          &lt;td&gt;API密钥泄露风险&lt;/td&gt;
          &lt;td&gt;HSM硬件加密模块&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;异常处理&lt;/td&gt;
          &lt;td&gt;部分成交场景&lt;/td&gt;
          &lt;td&gt;事务补偿机制&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;专业开发建议&#34;&gt;专业开发建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基础设施优化&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;交易所同区域部署服务器（如东京机房对接BitFlyer）&lt;/li&gt;
&lt;li&gt;使用FPGA加速价格计算&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;合规性设计&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;交易行为分析（防洗钱）&lt;/li&gt;
&lt;li&gt;可审计日志系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;持续优化机制&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;机器学习动态调整阈值&lt;/li&gt;
&lt;li&gt;自适应滑点控制算法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Codex与GPT-4在智能合约审计上仍无法超越人类——Trail of Bits实验报告</title>
        <link>http://localhost:1313/p/codex%E4%B8%8Egpt-4%E5%9C%A8%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%A1%E8%AE%A1%E4%B8%8A%E4%BB%8D%E6%97%A0%E6%B3%95%E8%B6%85%E8%B6%8A%E4%BA%BA%E7%B1%BBtrail-of-bits%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/</link>
        <pubDate>Mon, 04 Aug 2025 23:09:09 +0800</pubDate>
        
        <guid>http://localhost:1313/p/codex%E4%B8%8Egpt-4%E5%9C%A8%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%A1%E8%AE%A1%E4%B8%8A%E4%BB%8D%E6%97%A0%E6%B3%95%E8%B6%85%E8%B6%8A%E4%BA%BA%E7%B1%BBtrail-of-bits%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/</guid>
        <description>&lt;h3 id=&#34;核心发现&#34;&gt;核心发现
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;概念理解缺陷&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模型无法有效推理合约所有权、重入攻击、费用分配等高级概念&lt;/li&gt;
&lt;li&gt;即使能自然语言描述重入攻击，Codex仍无法将其转化为实际分析能力&lt;/li&gt;
&lt;li&gt;GPT-4对Solidity的分析能力虽有提升，但仍存在跨函数重入检测等关键缺陷&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;工具链缺失&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缺乏处理不确定性的类型系统和开发库&lt;/li&gt;
&lt;li&gt;提示工程调试工具严重不足（如缺乏提示质量评估体系）&lt;/li&gt;
&lt;li&gt;现有生态中微软Infer.NET是少数支持概率编程的框架&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;技术局限性&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;小规模测试成功率为6/7（所有权检测），但扩展到300+行代码时出现15个误报&lt;/li&gt;
&lt;li&gt;对条件语句（==, &amp;lt;, &amp;gt;）的推理能力薄弱，易受变量命名干扰&lt;/li&gt;
&lt;li&gt;整数溢出检测在11个小样本中成功10例，但在5个真实合约中产生6个误报&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;定制化框架设计&#34;&gt;定制化框架设计
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 示例：所有权检测提示链配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;questions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;can-change&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;query&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;能否通过调用`{{ contract.name }}`合约函数修改`{{ contract | owner_variable }}`变量？逐步思考后回答&amp;#39;是&amp;#39;/&amp;#39;否&amp;#39;/&amp;#39;未知&amp;#39;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;is_decision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;questions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;who-can-call&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;runtime_condition&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;questions[&amp;#39;can-change&amp;#39;].is_affirmative()&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;query&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;所有权推理步骤：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;1) 详细分析函数代码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;2) 逐步论证调用权限&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;性能对比数据&#34;&gt;性能对比数据
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;检测工具&lt;/th&gt;
          &lt;th&gt;重入攻击真阳性&lt;/th&gt;
          &lt;th&gt;重入攻击假阳性&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Slither&lt;/td&gt;
          &lt;td&gt;85%&lt;/td&gt;
          &lt;td&gt;15%&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Toucan&lt;/td&gt;
          &lt;td&gt;62%&lt;/td&gt;
          &lt;td&gt;38%&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;未来展望&#34;&gt;未来展望
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GPT-4大上下文窗口&lt;/strong&gt;可能改善复杂任务处理能力&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LangChain等开源工具&lt;/strong&gt;正在填补LLM集成工具链空白&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;概率编程语言&lt;/strong&gt;的发展将关键性提升不确定性处理能力&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;实验表明：当Codex分析无现有工具的语言时，其&amp;quot;不完美但存在&amp;quot;的分析价值可能远超空白状态，但Solidity领域已有成熟静态分析工具作为更高基准。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;完整技术细节及测试案例参见&lt;a class=&#34;link&#34; href=&#34;https://blog.trailofbits.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Trail of Bits官方报告&lt;/a&gt;。团队将持续探索LLM在自动生成审计文档等辅助场景的应用。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>在Empire Hacking上探讨以太坊安全——Trail of Bits博客</title>
        <link>http://localhost:1313/p/%E5%9C%A8empire-hacking%E4%B8%8A%E6%8E%A2%E8%AE%A8%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%AE%89%E5%85%A8trail-of-bits%E5%8D%9A%E5%AE%A2/</link>
        <pubDate>Mon, 04 Aug 2025 18:05:16 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%9C%A8empire-hacking%E4%B8%8A%E6%8E%A2%E8%AE%A8%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%AE%89%E5%85%A8trail-of-bits%E5%8D%9A%E5%AE%A2/</guid>
        <description>&lt;h1 id=&#34;在empire-hacking上探讨以太坊安全&#34;&gt;在Empire Hacking上探讨以太坊安全
&lt;/h1&gt;&lt;p&gt;如果你正在使用区块链技术构建实际应用并担心安全问题，这次聚会不容错过。加入我们12月12日的Empire Hacking特别活动，全程聚焦以太坊安全。&lt;/p&gt;
&lt;h2 id=&#34;为什么要参加&#34;&gt;为什么要参加？
&lt;/h2&gt;&lt;p&gt;四位区块链安全专家将分享如何编写安全的智能合约，以及如何攻击它们。其中两位演讲者来自我们的团队。&lt;/p&gt;
&lt;p&gt;我们已成为行业最受信任的审计、工具和最佳实践提供商之一，服务涵盖智能合约及其相关技术。我们保障过代币发行、去中心化应用乃至整个区块链平台的安全。与往届Empire Hacking活动一样，我们期待与开发社区分享前沿技术。&lt;/p&gt;
&lt;h2 id=&#34;演讲嘉宾&#34;&gt;演讲嘉宾
&lt;/h2&gt;&lt;p&gt;Trail of Bits的Sophia D&amp;rsquo;Antoine将讨论近期CTF比赛中Solidity和以太坊的挑战，以及利用这些漏洞所需的工具。&lt;/p&gt;
&lt;p&gt;Consensys Diligence的John Maurelian将分享Devcon3会议上关于以太坊安全最新进展的亮点。&lt;/p&gt;
&lt;p&gt;Mark Mossberg将展示Trail of Bits如何用符号执行引擎Manticore发现EVM字节码中的漏洞。&lt;/p&gt;
&lt;p&gt;Paul Makowski将介绍他即将推出的安全导向型以太坊代币PolySwarm，该代币利用区块链技术解决威胁情报行业的缺陷。&lt;/p&gt;
&lt;p&gt;企业以太坊联盟的Amber Baldet和Brian Schroeder将探讨Quorum区块链中应用的威胁建模、保密交易和零知识证明技术。&lt;/p&gt;
&lt;h2 id=&#34;时间地点&#34;&gt;时间地点
&lt;/h2&gt;&lt;p&gt;活动将于12月12日下午6点举行，地点在纽约时报大厦的DataDog办公室。需提前报名。照例提供简餐和啤酒。&lt;/p&gt;
&lt;p&gt;了解更多Empire Hacking信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问官网&lt;/li&gt;
&lt;li&gt;Meetup报名&lt;/li&gt;
&lt;li&gt;加入Slack社区&lt;/li&gt;
&lt;li&gt;关注Twitter @EmpireHacking&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>使用符号执行与区块链尸检——Trail of Bits在Devcon IV的技术实践</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E4%B8%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E5%B0%B8%E6%A3%80trail-of-bits%E5%9C%A8devcon-iv%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</link>
        <pubDate>Mon, 04 Aug 2025 11:55:58 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E4%B8%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E5%B0%B8%E6%A3%80trail-of-bits%E5%9C%A8devcon-iv%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</guid>
        <description>&lt;h3 id=&#34;使用manticore和符号执行发现智能合约漏洞&#34;&gt;使用Manticore和符号执行发现智能合约漏洞
&lt;/h3&gt;&lt;p&gt;在该工作坊中，Josselin Feist演示了如何运用开源符号执行引擎Manticore。该工具不仅能即时发现代码缺陷，还可验证代码正确性。120名参与者通过实践掌握了形式化验证方法，这些技术能确保智能合约严格遵循设计规范。&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;获取工作坊幻灯片与练习材料&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;区块链尸检&#34;&gt;区块链尸检
&lt;/h3&gt;&lt;p&gt;Jay Little通过闪电演讲展示了其团队对3万份自毁合约的复原与分析技术。针对以太坊主网200万合约中极少有价值合约被销毁的现象，Jay开发了新型工具链：重新处理区块链账本数据、重建带状态的合约，并利用调用轨迹和启发式方法分析可疑交易。&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;查看可疑自毁交易的筛选技术&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安全现状专家讨论&#34;&gt;安全现状专家讨论
&lt;/h3&gt;&lt;p&gt;Kevin Seagraves主持的专题讨论聚焦以太坊安全态势：过去一年的重大安全变化、智能合约与传统系统安全差异、漏洞赏金机制效用评估等核心议题。&lt;/p&gt;
&lt;h3 id=&#34;安全审计深度培训&#34;&gt;安全审计深度培训
&lt;/h3&gt;&lt;p&gt;JP在为期全天的培训中分享了Trail of Bits的安全评审方法论，强调审计不仅应输出漏洞列表，更需提供项目整体风险评估、架构与开发生命周期指导等完整解决方案。该培训将于12月11日在纽约再次举办。&lt;/p&gt;
&lt;h3 id=&#34;devcon特别彩蛋&#34;&gt;Devcon特别彩蛋
&lt;/h3&gt;&lt;p&gt;Evan Sultanik未参会期间开发了以太坊客户端模糊测试工具Etheno。该工具可自动检测各以太坊客户端间的行为差异，仅用2分钟便复现了10月Ropsten测试网出现的共识漏洞。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;© 2025 Trail of Bits&lt;br&gt;
采用Hugo与Mainroad主题生成&lt;/p&gt;
</description>
        </item>
        <item>
        <title>智能合约验证变得更简单 - Manticore验证工具详解</title>
        <link>http://localhost:1313/p/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E9%AA%8C%E8%AF%81%E5%8F%98%E5%BE%97%E6%9B%B4%E7%AE%80%E5%8D%95-manticore%E9%AA%8C%E8%AF%81%E5%B7%A5%E5%85%B7%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Sun, 03 Aug 2025 17:56:39 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E9%AA%8C%E8%AF%81%E5%8F%98%E5%BE%97%E6%9B%B4%E7%AE%80%E5%8D%95-manticore%E9%AA%8C%E8%AF%81%E5%B7%A5%E5%85%B7%E8%AF%A6%E8%A7%A3/</guid>
        <description>&lt;h1 id=&#34;智能合约验证变得更简单&#34;&gt;智能合约验证变得更简单
&lt;/h1&gt;&lt;p&gt;智能合约开发者现在可以使用他们编写代码的语言（Solidity）来表达安全属性，我们的新工具manticore-verifier会自动验证这些不变量。更棒的是，Echidna和Manticore现在共享相同的属性测试规范格式。&lt;/p&gt;
&lt;p&gt;这意味着开发者只需编写一次属性测试，就可以同时进行模糊测试和符号执行验证！manticore-verifier从根本上降低了符号化测试任意属性所需的初始投入和成本。&lt;/p&gt;
&lt;h2 id=&#34;工作原理&#34;&gt;工作原理
&lt;/h2&gt;&lt;p&gt;智能合约的行为及其潜在漏洞往往具有独特性，并高度依赖于未明示的合约不变量。让我们测试一个简单合约：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Ownership&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;owner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Owner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;owner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;modifier&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;isOwner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;owner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Pausable&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ownership&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is_paused&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;modifier&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ifNotPaused&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is_paused&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;paused&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isOwner&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;is_paused&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;resume&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isOwner&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;is_paused&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Token&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Pausable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;transfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ifNotPaused&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该合约维护资产负债表并允许简单交易。用户可以发送代币给其他用户，但代币总量必须保持不变——即合约启动后不能再创建新代币。因此在这个不变量下，有效属性可以表述为：&amp;ldquo;如果只有10,000个代币，那么没有用户可以拥有超过这个数量。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;我们可以将这个属性表示为Solidity方法：&amp;ldquo;crytic_test_balance&amp;rdquo;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;token.sol&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;TestToken&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Token&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 属性定义
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;crytic_test_balance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;returns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;balances&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;模拟世界&#34;&gt;模拟世界
&lt;/h2&gt;&lt;p&gt;ManticoreEVM编译合约并在完全模拟的符号化区块链中创建合约。同时创建不同的普通账户来模拟真实场景：部署者账户用于部署合约，其他账户用于探索合约并尝试破坏属性，最后可能使用不同账户来测试属性。&lt;/p&gt;
&lt;p&gt;ManticoreEVM检测高级源代码中存在的属性类型方法，并在每次符号交易组合后检查它们。如果方法返回false，则普通属性被视为失败。&lt;/p&gt;
&lt;h2 id=&#34;探索循环&#34;&gt;探索循环
&lt;/h2&gt;&lt;p&gt;部署者账户最初通过CREATE交易创建目标合约。然后manticore-verifier模拟来自合约测试者的所有可能的交错交易，直到（例如）找不到更多覆盖率。每次符号交易后，都会以属性检查账户的名义检查属性，如果发现任何问题，就会生成可复现的漏洞利用跟踪报告。像crytic_test_balance()这样的普通属性预期返回true；任何其他结果都会被报告为问题。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;manticore-verifier dapp.sol --contract TestToken
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;命令行工具&#34;&gt;命令行工具
&lt;/h2&gt;&lt;p&gt;探索的多个方面、停止条件和使用的用户账户都可以通过命令行参数修改。运行$manticore-verifier &amp;ndash;help查看完整列表。以下是运行示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$manticore&lt;/span&gt;-verifier dapp.sol --contract TestToken
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Owner account: 0x28e9eb58c2f5be87161a261f412a115eb85946d9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Contract account: 0x9384027ebe35100de8ef216cb401573502017f7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Sender_0 account: 0xad5e556d9699e9e35b3190d76f75c9bf9997533b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# PSender account: 0xad5e556d9699e9e35b3190d76f75c9bf9997533b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Found 1 properties: crytic_test_balance&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Exploration will stop when some of the following happens:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# * 3 human transaction sent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# * Code coverage is greater than 100% measured on target contract&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# * No more coverage was gained in the last transaction&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# * At least 1 different properties where found to be breakable. (1 for fail fast)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# * 240 seconds pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Starting exploration...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Transaction 0. States: 1, RT Coverage: 0.0%, Failing properties: 0/1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Transaction 1. States: 2, RT Coverage: 60.66%, Failing properties: 0/1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Found 1/1 failing properties. Stopping exploration.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;60.66% EVM code covered 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+---------------------+------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;    Property Named   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;   Status   &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+---------------------+------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; crytic_test_balance &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; failed &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+---------------------+------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Checkout testcases here:./mcore_kkgtybqb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;发现的漏洞&#34;&gt;发现的漏洞
&lt;/h2&gt;&lt;p&gt;在我们的示例中，manticore-verifier找到了破坏指定属性的方法。当尝试转移极其大量的代币时，内部整数表示超出限制，使得发送者的储蓄可以异常增加，即凭空创造代币。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;transfer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;115792089237316195422001709574841237640532965826898585773776019699400460720238&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;STOP&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;结论互操作性101&#34;&gt;结论：互操作性=101%
&lt;/h2&gt;&lt;p&gt;manticore-verifier降低了符号化测试任意属性的初始成本。它还使我们的符号执行器能够更紧密地与Solidity、Echidna和slither-prop协同工作。&lt;/p&gt;
&lt;p&gt;相同的方法论也可以与我们的以太坊模糊测试器Echidna一起使用。因此，您可以编写一次属性，然后通过符号执行和模糊测试来验证它们，无需额外工作。&lt;/p&gt;
&lt;p&gt;manticore-verifier可以检查自动生成的ERC20属性。此外，我们的静态分析器slither-prop详细记录了ERC20合约应该做什么，并可以自动生成manticore-verifier可以检查的ERC20属性。&lt;/p&gt;
&lt;p&gt;所以，准备好您的合约，添加属性方法，然后随心所欲地用manticore-verifier进行测试吧。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Trail of Bits 2022开源贡献亮点回顾：从Rust优化到区块链安全</title>
        <link>http://localhost:1313/p/trail-of-bits-2022%E5%BC%80%E6%BA%90%E8%B4%A1%E7%8C%AE%E4%BA%AE%E7%82%B9%E5%9B%9E%E9%A1%BE%E4%BB%8Erust%E4%BC%98%E5%8C%96%E5%88%B0%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8/</link>
        <pubDate>Sun, 03 Aug 2025 16:50:16 +0800</pubDate>
        
        <guid>http://localhost:1313/p/trail-of-bits-2022%E5%BC%80%E6%BA%90%E8%B4%A1%E7%8C%AE%E4%BA%AE%E7%82%B9%E5%9B%9E%E9%A1%BE%E4%BB%8Erust%E4%BC%98%E5%8C%96%E5%88%B0%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8/</guid>
        <description>&lt;h3 id=&#34;开源协作的技术价值&#34;&gt;开源协作的技术价值
&lt;/h3&gt;&lt;p&gt;去年此时，我们曾汇报2021年向非Trail of Bits仓库提交的190+个合并PR。2022年，这一数字突破400！这种持续投入源于我们对生态互惠的深刻理解：虽然我们为自己的工具感到自豪，但同样受益于社区维护的项目。当遇到工具不符合预期时，我们选择修复它；当功能存在缺口时，我们主动完善它。&lt;/p&gt;
&lt;h3 id=&#34;关键技术贡献精选&#34;&gt;关键技术贡献精选
&lt;/h3&gt;&lt;h4 id=&#34;rust工具链增强&#34;&gt;Rust工具链增强
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Clippy&lt;/strong&gt;：新增&lt;code&gt;crate_in_macro_def&lt;/code&gt;和&lt;code&gt;unnecessary_find_map&lt;/code&gt; lint规则，优化了包括&lt;code&gt;empty_line_after_outer_attribute&lt;/code&gt;、&lt;code&gt;expect_used/unwrap_used&lt;/code&gt;等在内的12项现有lint检查逻辑，显著提升Rust代码质量分析能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;区块链基础设施&#34;&gt;区块链基础设施
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HEVM&lt;/strong&gt;：改进了以太坊虚拟机的符号执行引擎，包括SMT求解器使用简化、性能优化、内存泄漏修复及测试套件增强。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Solana&lt;/strong&gt;：为rbpf添加了JIT编译器对Windows平台的完整支持（#359），扩展了智能合约运行环境兼容性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;网络协议栈重构&#34;&gt;网络协议栈重构
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Envoy&lt;/strong&gt;：设计实现了统一头部验证组件(UHV)，将HTTP/1和HTTP/2的请求响应头验证逻辑集中化，通过RFC合规性审计修复了多处安全边界问题，为防御新型头部注入攻击提供标准化入口点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;密码学工程改进&#34;&gt;密码学工程改进
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;pyca/cryptography&lt;/strong&gt;：增强证书透明度支持，新增&lt;code&gt;load_pem_x509_certificates&lt;/code&gt;等5个关键API，改进Python加密原语可用性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;go-cose&lt;/strong&gt;：完成了全面的安全审计报告上传（#94），为COSE标准实现提供安全保障。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;系统安全加固&#34;&gt;系统安全加固
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;osquery&lt;/strong&gt;：修复了BPF事件处理、YARA内存泄漏等23项安全问题，新增Windows安全启动信息采集功能（#7692），并完成OpenSSL从1.1.1l到1.1.1q的迭代更新。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;质量构建方法论&#34;&gt;质量构建方法论
&lt;/h3&gt;&lt;p&gt;这些高质量软件的实现不仅依赖PR合并，更需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;精准的需求规划&lt;/li&gt;
&lt;li&gt;生态位理解&lt;/li&gt;
&lt;li&gt;相关项目的深度认知&lt;/li&gt;
&lt;li&gt;在软件供应链中的角色定位&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们向所有维护者致敬——无论是可见的代码贡献，还是无数不可见的幕后工作。&lt;/p&gt;
&lt;p&gt;（完整PR列表包含400+项技术改进，涉及AFLplusplus模糊测试框架、Z3定理证明器、CPython解释器等关键项目）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>踩到DeFi乐高积木：yVault漏洞分析与修复</title>
        <link>http://localhost:1313/p/%E8%B8%A9%E5%88%B0defi%E4%B9%90%E9%AB%98%E7%A7%AF%E6%9C%A8yvault%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E4%BF%AE%E5%A4%8D/</link>
        <pubDate>Sun, 03 Aug 2025 07:27:45 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%B8%A9%E5%88%B0defi%E4%B9%90%E9%AB%98%E7%A7%AF%E6%9C%A8yvault%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E4%BF%AE%E5%A4%8D/</guid>
        <description>&lt;h1 id=&#34;意外踩到defi乐高积木---trail-of-bits博客&#34;&gt;意外踩到DeFi乐高积木 - Trail of Bits博客
&lt;/h1&gt;&lt;p&gt;yVault的初始版本包含了一个可被攻击者操纵的yUSDC价格计算逻辑，可能导致资金池资产被耗尽。幸运的是，开发者Andre反应迅速，禁用了问题代码，保住了当时约40万美元的资金。这个漏洞凸显了DeFi领域因组合性带来的复杂性风险。&lt;/p&gt;
&lt;h2 id=&#34;什么是yvault&#34;&gt;什么是yVault？
&lt;/h2&gt;&lt;p&gt;2020年7月25日，yEarn推出了名为yVault的新服务：用户可将代币存入金库，金库会将这些代币提供给能最大化利息的DeFi协议。初始版本支持USDC并与USDC/MUSD Balancer池集成。金库持有的任何USDC都将作为流动性提供给Balancer池，并获得BPT代币作为回报。&lt;/p&gt;
&lt;p&gt;用户存入USDC可获得yUSDC，反之销毁yUSDC可提取USDC。这两种操作依赖于动态计算的汇率，定义为合约持有的BPT价值与yUSDC总供应量的比率。由于交易者支付费用时BPT价值上升，每个yUSDC代币的价值会随时间缓慢增长。&lt;/p&gt;
&lt;p&gt;yVault发布一小时内，用户已存入约40万USDC，这促使我立即查看了其代码。&lt;/p&gt;
&lt;h2 id=&#34;漏洞是什么&#34;&gt;漏洞是什么？
&lt;/h2&gt;&lt;p&gt;由于初始版本与Balancer集成，我们需要了解Balancer的工作原理。Balancer通过激励理性市场参与者来消除流动性提供者手动重新平衡投资组合的需求。如果代币价格上涨，资金池将失去平衡。&lt;/p&gt;
&lt;p&gt;图1展示了基于Balancer池状态和发送代币数量计算接收代币数量的公式。我们以MUSD/USDC 50/50池为例，交换费率为0.05%。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/**********************************************************************************************
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// calcOutGivenIn                                                          //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// aO = tokenAmountOut                                                     //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// bO = tokenBalanceOut                                                    //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// bI = tokenBalanceIn              /      /            bI             \    (wI / wO) \      //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// aI = tokenAmountIn    aO = bO * |  1 - | --------------------------  | ^            |     //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// wI = tokenWeightIn               \      \ ( bI + ( aI * ( 1 - sF )) /              /      //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// wO = tokenWeightOut                                                    //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;// sF = swapFee                                                           //
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;**********************************************************************************************/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;假设资金池当前失衡，包含1,100,000 USDC和900,000 MUSD。如果理性市场参与者支付90,000 MUSD，他们将获得99,954 USDC，盈利9,954 USDC。而当资金池平衡时(1,000,000 USDC和1,000,000 MUSD)，非理性市场参与者支付100,000 USDC将仅获得90,867 MUSD，亏损9,133 MUSD。&lt;/p&gt;
&lt;p&gt;将这两笔交易配对会产生有趣的现象。用户先进行&amp;quot;坏交易&amp;quot;(100,000 USDC→90,867 MUSD，亏损9,133 USD)，再进行&amp;quot;好交易&amp;quot;(90,867 MUSD→99,908 USDC，盈利9,041 USD)，净亏损仅92 USD。在此过程中，BPT估值会出现瞬间峰值，这正是漏洞的关键所在。&lt;/p&gt;
&lt;p&gt;将此过程应用于yVault：在&amp;quot;坏交易&amp;quot;前，金库持有价值X美元的BPT；&amp;ldquo;好交易&amp;quot;后，BPT价值略增至X+Δ。但在两笔交易之间，BPT价值会短暂激增。由于yUSDC价值与BPT直接相关，如果在&amp;quot;坏交易&amp;quot;前买入yUSDC并在&amp;quot;好交易&amp;quot;前卖出，就能瞬时获利。重复此操作可耗尽金库。&lt;/p&gt;
&lt;h2 id=&#34;如何修复&#34;&gt;如何修复？
&lt;/h2&gt;&lt;p&gt;准确计算BPT真实价值并防止攻击者从滑点中获利是个难题。开发者Andre部署了新策略，简单地将USDC转换为MUSD并存入mStable储蓄账户。&lt;/p&gt;
&lt;h2 id=&#34;未来建议&#34;&gt;未来建议
&lt;/h2&gt;&lt;p&gt;DeFi组合性很复杂，容易意外暴露新协议于风险中。集成多个代币时，任一代币都可能危及整个平台安全；集成多个平台时，协议可能遭受复杂交互影响。&lt;/p&gt;
&lt;p&gt;安全工具可帮助预防大多数简单代码漏洞：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Crytic使用高级版Slither自动检测多达90种漏洞类型&lt;/li&gt;
&lt;li&gt;Echidna通过模糊测试断言特定属性&lt;/li&gt;
&lt;li&gt;Manticore可对代码进行符号分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，工具不是安全的万能药。研究表明即使技术显著改进，近50%的问题仍难以通过工具检测。对于复杂代码库和DeFi项目，建议安排安全评估或参加我们的以太坊安全办公时间。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>以太坊智能合约的可复用属性测试指南</title>
        <link>http://localhost:1313/p/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E7%9A%84%E5%8F%AF%E5%A4%8D%E7%94%A8%E5%B1%9E%E6%80%A7%E6%B5%8B%E8%AF%95%E6%8C%87%E5%8D%97/</link>
        <pubDate>Sat, 02 Aug 2025 21:15:46 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E7%9A%84%E5%8F%AF%E5%A4%8D%E7%94%A8%E5%B1%9E%E6%80%A7%E6%B5%8B%E8%AF%95%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h3 id=&#34;可复用的以太坊合约属性测试&#34;&gt;可复用的以太坊合约属性测试
&lt;/h3&gt;&lt;p&gt;随着智能合约安全技术的演进，基于属性的模糊测试已成为开发者和安全工程师的核心技术。该技术依赖代码属性（通常称为不变量）的创建，这些属性描述了代码的预期行为。为帮助社区定义属性，我们发布了168个预构建属性集，可用于指导我们的智能合约模糊测试工具Echidna，或直接通过单元测试使用。覆盖范围包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见ERC代币接口合规性&lt;/li&gt;
&lt;li&gt;通用可测试安全属性&lt;/li&gt;
&lt;li&gt;定点数学运算测试属性&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;实战直播安排&#34;&gt;实战直播安排
&lt;/h4&gt;&lt;p&gt;为帮助掌握这些工具，我们将举办两场直播：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;3月7日&lt;/strong&gt;：ERC20属性、示例用法和Echidna作弊码（Guillermo Larregay主讲）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;3月14日&lt;/strong&gt;：ERC4626属性、示例用法及高效模糊测试技巧（Benjamin Samuels主讲）&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;为什么需要使用&#34;&gt;为什么需要使用？
&lt;/h3&gt;&lt;p&gt;该资源库及配套研讨会将展示模糊测试如何提供比单元测试更高级别的安全保障。这些属性集可轻松集成到使用知名标准或常用库的项目中，当前包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ABDKMath64x64库&lt;/strong&gt;测试&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ERC-20代币标准&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ERC-4626代币化金库标准&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;核心测试内容&#34;&gt;核心测试内容
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;ERC20&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标准接口函数属性&lt;/li&gt;
&lt;li&gt;基础合理性属性（如：用户余额不应超过代币供应量）&lt;/li&gt;
&lt;li&gt;可销毁、可铸造、可暂停等扩展功能属性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ERC4626&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;符合规范的舍入方向验证&lt;/li&gt;
&lt;li&gt;禁止回退函数的属性&lt;/li&gt;
&lt;li&gt;差分测试属性（如deposit()必须与previewDeposit()预测功能匹配）&lt;/li&gt;
&lt;li&gt;非规范安全属性（份额通胀攻击、代币授权检查等）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ABDKMath64x64&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;交换律、结合律、分配律和恒等属性&lt;/li&gt;
&lt;li&gt;差分测试属性（如2^(-x) == 1/2^(x)）&lt;/li&gt;
&lt;li&gt;输入范围回退验证&lt;/li&gt;
&lt;li&gt;区间属性（如min(x,y) &amp;lt;= avg(x,y) &amp;lt;= max(x,y)）&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;快速开始指南&#34;&gt;快速开始指南
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;安装Echidna&lt;/li&gt;
&lt;li&gt;导入属性库：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hardhat项目&lt;/strong&gt;：&lt;code&gt;npm install https://github.com/crytic/properties.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Foundry项目&lt;/strong&gt;：&lt;code&gt;forge install crytic/properties&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;按文档创建测试合约&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;erc20测试合约示例&#34;&gt;ERC20测试合约示例
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;pragma solidity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;./YetAnotherCashEquivalentToken.sol&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ICryticTokenMock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;@crytic/properties/contracts/ERC20/external/util/ITokenMock.sol&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;CryticERC20ExternalHarness&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CryticERC20ExternalBasicProperties&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;token&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ICryticTokenMock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CryticTokenMock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;echidna配置文件&#34;&gt;Echidna配置文件
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;corpusDir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;tests/erc20/echidna-corpus&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;testMode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;assertion&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;testLimit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;sender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0x10000&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0x20000&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0x30000&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;运行命令：&lt;code&gt;echidna-test . --contract CryticERC20ExternalHarness --config echidna.yaml&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;未来计划&#34;&gt;未来计划
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;扩展数学库测试（如PRBMath）&lt;/li&gt;
&lt;li&gt;增加更多ERC标准测试&lt;/li&gt;
&lt;li&gt;构建AMM/流动性池等通用合约测试集&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;本文档所有技术内容均基于Trail of Bits官方发布材料，无AI虚构内容。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>RSKJ服务器拒绝服务漏洞分析与修复</title>
        <link>http://localhost:1313/p/rskj%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8B%92%E7%BB%9D%E6%9C%8D%E5%8A%A1%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E4%BF%AE%E5%A4%8D/</link>
        <pubDate>Sat, 02 Aug 2025 20:25:35 +0800</pubDate>
        
        <guid>http://localhost:1313/p/rskj%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8B%92%E7%BB%9D%E6%9C%8D%E5%8A%A1%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E4%BF%AE%E5%A4%8D/</guid>
        <description>&lt;h1 id=&#34;rskj服务器拒绝服务漏洞报告&#34;&gt;RSKJ服务器拒绝服务漏洞报告
&lt;/h1&gt;&lt;h2 id=&#34;漏洞摘要&#34;&gt;漏洞摘要
&lt;/h2&gt;&lt;p&gt;攻击者通过发送特制的UDPv6数据包可导致RSKJ服务器停止处理网络流量，最终引发内存耗尽崩溃。&lt;/p&gt;
&lt;h2 id=&#34;复现步骤&#34;&gt;复现步骤
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;下载受影响版本：https://github.com/rsksmart/rskj/releases/download/FINGERROOT-5.0.0/rskj-core-5.0.0-FINGERROOT-all.jar&lt;/li&gt;
&lt;li&gt;服务端运行：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;classpath&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rskj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FINGERROOT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;jar&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Drpc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;providers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;web&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;cors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Drpc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;providers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;web&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;ws&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;co&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;rsk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Start&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;该命令会开放UDPv6端口5050&lt;/li&gt;
&lt;li&gt;客户端安装Python3及pysha3库，使用PoC脚本攻击服务端&lt;/li&gt;
&lt;li&gt;服务器将永久处理单个UDP数据包，拒绝其他节点请求，数分钟后应用崩溃&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;根本原因&#34;&gt;根本原因
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;bytesToLength&lt;/code&gt;函数返回-5导致length变为0：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// RLP.java第432行&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytesToLength返回&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 第440行&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;该返回值被合法接受&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 第403-405行&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;position变量无法更新&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;影响&#34;&gt;影响
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;UDPv6端口5050停止处理入站流量&lt;/li&gt;
&lt;li&gt;最终导致内存耗尽崩溃&lt;/li&gt;
&lt;li&gt;由于&lt;code&gt;decode2&lt;/code&gt;函数的广泛使用，可能影响其他服务入口点&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;修复方案&#34;&gt;修复方案
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;限制&lt;code&gt;bytesToLength&lt;/code&gt;仅返回非负值&lt;/li&gt;
&lt;li&gt;添加长度校验（建议）：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;BYTES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;修复提交&#34;&gt;修复提交
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/rsksmart/rskj/commit/6965fa60f743d911ee106b542cec80a1417266b1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/rsksmart/rskj/commit/6965fa60f743d911ee106b542cec80a1417266b1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞奖励&#34;&gt;漏洞奖励
&lt;/h2&gt;&lt;p&gt;$5,000&lt;/p&gt;
</description>
        </item>
        <item>
        <title>密码学专家解答10大关键技术问题 - 深入解析密码学原理与应用</title>
        <link>http://localhost:1313/p/%E5%AF%86%E7%A0%81%E5%AD%A6%E4%B8%93%E5%AE%B6%E8%A7%A3%E7%AD%9410%E5%A4%A7%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF%E9%97%AE%E9%A2%98-%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/</link>
        <pubDate>Sat, 02 Aug 2025 13:46:58 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%AF%86%E7%A0%81%E5%AD%A6%E4%B8%93%E5%AE%B6%E8%A7%A3%E7%AD%9410%E5%A4%A7%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF%E9%97%AE%E9%A2%98-%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8E%9F%E7%90%86%E4%B8%8E%E5%BA%94%E7%94%A8/</guid>
        <description>&lt;h2 id=&#34;密码学专家解答10大关键技术问题&#34;&gt;密码学专家解答10大关键技术问题
&lt;/h2&gt;&lt;p&gt;密码学是电子设备和互联网的基础组成部分，它保护着信用卡、手机、网页浏览（希望您正在使用TLS！）甚至绝密军事数据的安全。在区块链领域，密码学同样至关重要，以太坊等区块链依赖哈希、Merkle树和ECDSA签名等原语来运行。配对密码学、全同态加密和零知识证明等创新技术也已进入区块链领域。&lt;/p&gt;
&lt;h3 id=&#34;1-snarks最常用的承诺方案有哪些&#34;&gt;1. SNARKs最常用的承诺方案有哪些？
&lt;/h3&gt;&lt;p&gt;多项式承诺方案是一种协议，证明者承诺某个多项式并生成证明表明该承诺有效。该协议包含三个主要算法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Commit&lt;/li&gt;
&lt;li&gt;Open&lt;/li&gt;
&lt;li&gt;Verify&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在提交阶段，证明者发送其承诺——即他们在给定点对多项式f的评估值（即满足f(x)=a的值a）。该承诺应具有绑定性质，意味着一旦证明者承诺了某个多项式，他们就不能&amp;quot;改变主意&amp;quot;并为另一个多项式生成有效证明。它还可能具有隐藏性质，即在密码学上难以提取满足f(x)=a的值x。&lt;/p&gt;
&lt;p&gt;最常见的生产环境中使用的承诺方案包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;KZG(Kate-Zaverucha-Goldberg)，例如用于EIP 4844中的danksharding&lt;/li&gt;
&lt;li&gt;FRI(快速Reed-Solomon交互式Oracle接近性证明)，用于STARKs&lt;/li&gt;
&lt;li&gt;像Pedersen承诺这样的承诺方案，用于Bulletproofs等证明系统(被Monero和Zcash使用)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-哈希构造mdsponge有何区别&#34;&gt;2. 哈希构造(MD、Sponge)有何区别？
&lt;/h3&gt;&lt;p&gt;大多数人所熟悉的哈希函数，如MD5和SHA1，都是Merkle-Damgard构造。而我们熟知且喜爱的keccak256函数则是海绵构造。&lt;/p&gt;
&lt;p&gt;在Merkle-Damgard构造中，任意长度的消息被解析为特定大小的块。关键部分是压缩函数应用于每个块，使用前一个块作为下一个压缩函数的密钥(对于第一个块，我们使用IV或初始化向量代替)。&lt;/p&gt;
&lt;p&gt;相比之下，海绵构造不使用压缩函数。海绵构造的核心包括两个阶段：一个&amp;quot;吸收&amp;quot;阶段，其中消息的部分与初始状态进行异或运算，同时对它应用置换函数；然后是一个&amp;quot;挤压&amp;quot;阶段，其中输出的部分被提取并作为哈希输出。&lt;/p&gt;
&lt;h3 id=&#34;3-椭圆曲线密码学ecc的理论攻击有哪些&#34;&gt;3. 椭圆曲线密码学(ECC)的理论攻击有哪些？
&lt;/h3&gt;&lt;p&gt;ECC通常被视为密码学中复杂且有些神秘的部分，容易受到各种技术攻击。两个值得注意的理论攻击是Weil下降和MOV攻击。&lt;/p&gt;
&lt;p&gt;Weil下降攻击：这种方法涉及使用代数几何中的概念，特别是称为Weil下降的技术。其思想是将离散对数问题从其原始形式的椭圆曲线(复杂的代数结构)转换为更简单的代数结构(如超椭圆曲线)上的类似问题。&lt;/p&gt;
&lt;p&gt;MOV攻击：该攻击使用称为Weil配对的数学函数将椭圆曲线离散对数问题(ECDLP)转换为有限域中的离散对数问题，这是一个不同的数学设置。&lt;/p&gt;
&lt;h3 id=&#34;4-后量子密码系统如基于格和基于同源的密码学概述&#34;&gt;4. 后量子密码系统(如基于格和基于同源的密码学)概述
&lt;/h3&gt;&lt;p&gt;基于格的密码学使用格(显然)，它是基向量的整数线性组合。关于格有许多难题，如最短向量问题(给定基，找到格中最短的向量)和最接近向量问题(给定格和格外的点p，找到格中最接近p的点)。&lt;/p&gt;
&lt;p&gt;另一方面，基于同源的密码学涉及使用同源(显然)，这是椭圆曲线之间的同态。我们可以使用这些同源创建标准椭圆曲线Diffie-Hellman密钥交换的后量子版本。&lt;/p&gt;
&lt;h3 id=&#34;5-fiat-shamir启发式方法有哪些注意事项&#34;&gt;5. Fiat-Shamir启发式方法有哪些注意事项？
&lt;/h3&gt;&lt;p&gt;Fiat-Shamir用于将交互式Oracle证明系统转换为非交互式证明系统。这允许证明者证明计算的结果，而不需要验证者在线。这是通过获取公共输入的哈希并将该哈希解释为随机输入来实现的。&lt;/p&gt;
&lt;p&gt;需要注意的几个与安全相关的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;哈希必须包含所有公共输入&lt;/li&gt;
&lt;li&gt;即使使用强Fiat-Shamir变换，也可能出现更微妙的理论问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-plonk交互式oracle证明系统的最新进展&#34;&gt;6. PLONK交互式Oracle证明系统的最新进展
&lt;/h3&gt;&lt;p&gt;交互式Oracle证明是SNARKs中的主要信息理论组件，它允许证明者生成证明，以高概率发现伪造证明的方式&amp;quot;说服&amp;quot;验证者的&amp;quot;知识&amp;quot;。&lt;/p&gt;
&lt;p&gt;PLONK证明系统的变体包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Turboplonk：支持两个以上输入的自定义门&lt;/li&gt;
&lt;li&gt;UltraPLONK：支持查找表&lt;/li&gt;
&lt;li&gt;Hyperplonk：消除了对数论变换(NTT)的需求&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7-构建zkevm的各种设计决策type-123等&#34;&gt;7. 构建zkEVM的各种设计决策(Type 1/2/3等)
&lt;/h3&gt;&lt;p&gt;不同类型的zkEVM可以根据它们与以太坊的&amp;quot;完全兼容性&amp;quot;来考虑，Type 1最等效，Type 4最不等效。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Type 1 zkEVMs在各方面等同于以太坊的执行和共识层&lt;/li&gt;
&lt;li&gt;Type 2 zkEVMs旨在实现EVM等效&lt;/li&gt;
&lt;li&gt;Type 3 zkEVMs通过使用更少的等效性实现更快的证明时间&lt;/li&gt;
&lt;li&gt;Type 4 zkEVMs旨在将Solidity和Vyper等语言编译为ZK友好格式以生成证明&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8-zkevms的进一步改进&#34;&gt;8. zkEVMs的进一步改进
&lt;/h3&gt;&lt;p&gt;虽然从理论上讲，构建zkEVM和创建高效证明的主要挑战可以通过plonkish算术化、查找和增量可验证组合(IVC)的组合来解决，但在我们真正实现ZK证明所承诺的大规模可扩展性之前，仍存在许多工程挑战。&lt;/p&gt;
&lt;p&gt;可能的进一步优化包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用更小的字段&lt;/li&gt;
&lt;li&gt;硬件改进和并行化&lt;/li&gt;
&lt;li&gt;理论改进&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;9-shamir的秘密共享方案及其常见错误&#34;&gt;9. Shamir的秘密共享方案及其常见错误
&lt;/h3&gt;&lt;p&gt;Shamir的秘密共享(SSS)是一种在各方之间分割一组秘密的方法，使得一组参与者可以合作恢复秘密，但任何数量少于阈值的参与者都无法了解任何信息。&lt;/p&gt;
&lt;p&gt;需要注意的几个可能使SSS或Feldman的可验证秘密共享完全不安全的&amp;quot;陷阱&amp;quot;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;向参与者共享0点会无意中泄露秘密&lt;/li&gt;
&lt;li&gt;确保共享之间的差异不为0或模等价&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;10-递归证明的折叠方案如何工作&#34;&gt;10. 递归证明的折叠方案如何工作？
&lt;/h3&gt;&lt;p&gt;折叠方案是增量可验证计算问题的一种解决方案。折叠方案起源于Nova，并引入了一个新想法：验证者不会在每次调用F时验证SNARK，而是将当前实例&amp;quot;折叠&amp;quot;到累加器中。&lt;/p&gt;
&lt;p&gt;对折叠方案的几项更新和改进已经完成。例如，Sangria方案将折叠推广到Plonkish算术化，而不仅仅是R1CS。HyperNova将Nova推广到可定制约束系统(CCS)，这是一个更通用的约束系统，可以表达Plonkish和AIR算术化。&lt;/p&gt;
&lt;h2 id=&#34;迈向更好的密码学安全&#34;&gt;迈向更好的密码学安全
&lt;/h2&gt;&lt;p&gt;密码学不断发展，理论与实现之间的差距越来越小。更多有趣的密码学协议和新颖的实现正在各处涌现，包括多方计算、增量可验证组合、全同态加密以及介于两者之间的一切。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Circomspect工具正式集成至Sindri CLI——零知识证明电路开发迎来安全增强</title>
        <link>http://localhost:1313/p/circomspect%E5%B7%A5%E5%85%B7%E6%AD%A3%E5%BC%8F%E9%9B%86%E6%88%90%E8%87%B3sindri-cli%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%94%B5%E8%B7%AF%E5%BC%80%E5%8F%91%E8%BF%8E%E6%9D%A5%E5%AE%89%E5%85%A8%E5%A2%9E%E5%BC%BA/</link>
        <pubDate>Sat, 02 Aug 2025 12:58:09 +0800</pubDate>
        
        <guid>http://localhost:1313/p/circomspect%E5%B7%A5%E5%85%B7%E6%AD%A3%E5%BC%8F%E9%9B%86%E6%88%90%E8%87%B3sindri-cli%E9%9B%B6%E7%9F%A5%E8%AF%86%E8%AF%81%E6%98%8E%E7%94%B5%E8%B7%AF%E5%BC%80%E5%8F%91%E8%BF%8E%E6%9D%A5%E5%AE%89%E5%85%A8%E5%A2%9E%E5%BC%BA/</guid>
        <description>&lt;p&gt;我们的静态分析工具Circomspect现已正式集成至Sindri命令行界面（CLI）！Circomspect专为帮助开发者更安全地构建Circom电路而设计，特别是在该新型编程框架工具支持有限的情况下。此次集成标志着Circomspect向更广泛使用迈出重要一步，从而为编写Circom电路的开发者提供更好支持。&lt;/p&gt;
&lt;p&gt;开发零知识证明电路是项艰巨任务。即使忽略技术复杂性，在Circom等平台上运行非基础电路也需要极高的计算资源：基础测试可能耗时数分钟（或更久），这将大幅延长开发周期。Sindri通过让用户访问能显著加速电路执行的专用硬件来缓解该问题。其简洁的API和CLI工具使开发者无需自行管理基础设施即可将电路与专用硬件集成。&lt;/p&gt;
&lt;p&gt;Sindri Labs首席执行官Stasia Carson对此表示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;我们持续聚焦于让Sindri CLI对电路开发者更具普适价值，无论其是否使用Sindri服务。关键在于通过优化Docker容器实现无安装工具分发，并为静态分析、代码检查、编译和验证等工具提供统一的跨框架接口。Circomspect是开发安全Circom电路的关键工具，坦白说它可能是所有框架中最佳的安全工具，因此我们视其为最重要的集成之一。&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;此次集成对Circomspect具有里程碑意义。随着用户群体扩大，我们计划扩展更多分析功能，相关进展将在年内陆续公布。请持续关注我们的博客，获取关于Circomspect和零知识证明电路开发的最新动态！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>亿次空耗：以太坊ABI解析器中的零大小类型DoS漏洞分析</title>
        <link>http://localhost:1313/p/%E4%BA%BF%E6%AC%A1%E7%A9%BA%E8%80%97%E4%BB%A5%E5%A4%AA%E5%9D%8Aabi%E8%A7%A3%E6%9E%90%E5%99%A8%E4%B8%AD%E7%9A%84%E9%9B%B6%E5%A4%A7%E5%B0%8F%E7%B1%BB%E5%9E%8Bdos%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 09:56:18 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BA%BF%E6%AC%A1%E7%A9%BA%E8%80%97%E4%BB%A5%E5%A4%AA%E5%9D%8Aabi%E8%A7%A3%E6%9E%90%E5%99%A8%E4%B8%AD%E7%9A%84%E9%9B%B6%E5%A4%A7%E5%B0%8F%E7%B1%BB%E5%9E%8Bdos%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;亿次空耗---the-trail-of-bits博客&#34;&gt;亿次空耗 - The Trail of Bits博客
&lt;/h1&gt;&lt;p&gt;在以太坊强大的区块链技术背后，隐藏着一个开发者们较少提及的挑战：编写健壮的以太坊ABI（应用二进制接口）解析器的复杂性。以太坊ABI对区块链基础设施至关重要，它实现了智能合约与外部应用间的无缝交互。数据类型的复杂性和编解码的精确需求使得ABI解析充满挑战。规范或实现中的模糊性可能导致危及用户的漏洞。&lt;/p&gt;
&lt;p&gt;本文将深入剖析一个新型漏洞，该漏洞针对这些解析器，令人联想到曾肆虐XML领域的&amp;quot;十亿大笑&amp;quot;攻击。我们发现以太坊ABI规范部分条款表述松散，导致多个实现存在可利用漏洞，包括eth_abi(Python)、ethabi(Rust)、alloy-rs和ethereumjs-abi等库，可能引发拒绝服务(DoS)攻击。截至发文时，仅Python库已完成修复。&lt;/p&gt;
&lt;h2 id=&#34;什么是以太坊abi&#34;&gt;什么是以太坊ABI？
&lt;/h2&gt;&lt;p&gt;当链上合约交互或链下组件与合约通信时，以太坊使用ABI编码来处理请求和响应。这种编码方式不自我描述，编解码器需要提供定义数据类型的模式。与C语言中平台相关的ABI不同，以太坊规范了应用间二进制数据的传递方式。虽然规范尚未正式化，但清晰展现了数据交换机制。&lt;/p&gt;
&lt;p&gt;当前规范存在于Solidity文档中，其类型定义影响了Solidity和Vyper等智能合约语言。&lt;/p&gt;
&lt;h2 id=&#34;漏洞原理&#34;&gt;漏洞原理
&lt;/h2&gt;&lt;p&gt;零大小类型(ZST)指在磁盘存储中占零（或极小）字节，但加载到内存后需要显著更多空间的数据类型。以太坊ABI允许ZST存在，攻击者可利用其特性，通过极小量的磁盘或网络数据诱发巨大的内存分配。&lt;/p&gt;
&lt;p&gt;考虑以下场景：当解析器遇到ZST数组时会发生什么？它会尝试解析数组声明包含的所有ZST元素。由于每个元素占零字节，定义超大型ZST数组轻而易举。&lt;/p&gt;
&lt;p&gt;示例显示：20字节的磁盘数据可反序列化为包含数字2、1、3的数组；而仅8字节的数据却能反序列化为2³²个ZST元素（如空元组或空数组）。如果每个ZST在解析后仍占零字节内存，这不成问题。但实践中，每个元素通常需要少量非零内存，导致整体数组需要巨大内存分配，形成DoS攻击。&lt;/p&gt;
&lt;h2 id=&#34;概念验证&#34;&gt;概念验证
&lt;/h2&gt;&lt;p&gt;我们通过以下十六进制数据载荷演示多个库中的漏洞：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0000000000000000000000000000000000000000000000000000000000000020
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00000000000000000000000000000000000000000000000000000000FFFFFFFF
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该载荷包含两个32字节块，描述序列化的ZST数组。第一块定义数组元素偏移量，第二块定义数组长度。我们使用&lt;code&gt;()[ ]&lt;/code&gt;和&lt;code&gt;uint32[0][]&lt;/code&gt;两种ABI模式进行解码测试。&lt;/p&gt;
&lt;h3 id=&#34;eth_abi-python&#34;&gt;eth_abi (Python)
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;eth_abi&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bytearray&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fromhex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;()[]&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;4.2.0版本前的官方库会先挂起，最终因内存不足终止。&lt;/p&gt;
&lt;h3 id=&#34;ethabi-rust&#34;&gt;ethabi (Rust)
&lt;/h3&gt;&lt;p&gt;v18.0.0版本可通过CLI直接触发漏洞：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cargo run -- decode params -t &lt;span class=&#34;s2&#34;&gt;&amp;#34;uint32[0][]&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$payload&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;ethers-rs-rust&#34;&gt;ethers-rs (Rust)
&lt;/h3&gt;&lt;p&gt;v2.0.10版本通过&lt;code&gt;Vec&amp;lt;[u32; 0]&amp;gt;&lt;/code&gt;类型隐式使用漏洞模式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ethers&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;abi&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;AbiEncode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Vec&lt;/span&gt;::&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;u32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;foundry-rust&#34;&gt;foundry (Rust)
&lt;/h3&gt;&lt;p&gt;该工具集基于ethers-rs，同样存在漏洞。可通过CLI或部署恶意合约触发：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ABC&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;fallback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;external&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;bytes&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;abi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xfffffffff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;assembly&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;mload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;alloy-rs&#34;&gt;alloy-rs
&lt;/h3&gt;&lt;p&gt;0.4.2版本的动态ABI解析同样存在挂起问题：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alloy_dyn_abi&lt;/span&gt;::&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DynSolType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DynSolValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_type&lt;/span&gt;: &lt;span class=&#34;nc&#34;&gt;DynSolType&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;()[]&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decoded&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;abi_decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt;::&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;$payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unwrap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;ethereumjs-abi&#34;&gt;ethereumjs-abi
&lt;/h3&gt;&lt;p&gt;0.6.8版本的JavaScript实现也受影响：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;abi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ethereumjs-abi&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$payload&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;abi.rawDecode([ &amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uint32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;漏洞发现与利用&#34;&gt;漏洞发现与利用
&lt;/h2&gt;&lt;p&gt;该漏洞的发现源于对borsh-rs库中类似问题的研究。最新版Solidity和Vyper已禁止ZST定义，因此难以在主网部署触发此漏洞的智能合约。但任何使用受影响库解析不可信ABI声明的应用（如Etherscan）都可能面临风险。&lt;/p&gt;
&lt;h2 id=&#34;协调披露&#34;&gt;协调披露
&lt;/h2&gt;&lt;p&gt;我们遵循以下时间线进行披露：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2023年6月30日：首次联系各库维护者&lt;/li&gt;
&lt;li&gt;2023年8月2日：为eth_abi创建GitHub安全公告&lt;/li&gt;
&lt;li&gt;2023年8月31日：eth_abi发布无公开说明的修复&lt;/li&gt;
&lt;li&gt;2023年12月29日：公开发布分析报告并创建GitHub问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建议开发者通过模糊测试强化解码器安全性，我们正将相关测试用例纳入OSS-fuzz持续检测体系。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
