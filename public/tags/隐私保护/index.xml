<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>隐私保护 on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4/</link>
        <description>Recent content in 隐私保护 on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Sat, 09 Aug 2025 13:29:01 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>电子邮件泄露个人IP地址的安全漏洞分析</title>
        <link>http://localhost:1313/p/%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E6%B3%84%E9%9C%B2%E4%B8%AA%E4%BA%BAip%E5%9C%B0%E5%9D%80%E7%9A%84%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 09 Aug 2025 13:29:01 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E6%B3%84%E9%9C%B2%E4%B8%AA%E4%BA%BAip%E5%9C%B0%E5%9D%80%E7%9A%84%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;漏洞背景&#34;&gt;漏洞背景
&lt;/h3&gt;&lt;p&gt;当发送电子邮件时，邮件会经过多个服务器（SMTP中继、垃圾邮件过滤器、日志和备份系统）。这些服务器可能存储或记录所有信息，包括邮件内容（如发件人IP地址）。即使邮件使用TLS传输加密，内容在每台处理服务器上仍会被解密。&lt;/p&gt;
&lt;h3 id=&#34;技术风险&#34;&gt;技术风险
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PII数据暴露&lt;/strong&gt;&lt;br&gt;
IP地址根据GDPR等法规可被归类为个人身份信息（PII），可能泄露：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户大致地理位置&lt;/li&gt;
&lt;li&gt;互联网服务提供商&lt;/li&gt;
&lt;li&gt;可能暴露设备名/组织的主机名&lt;/li&gt;
&lt;li&gt;与其他用户活动的关联性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;攻击者利用场景&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过IP进行网络侦察&lt;/li&gt;
&lt;li&gt;设备/ISP指纹识别&lt;/li&gt;
&lt;li&gt;端口扫描和服务发现&lt;/li&gt;
&lt;li&gt;结合其他数据泄漏进行OSINT聚合&lt;/li&gt;
&lt;li&gt;基于ISP/地理位置的定向攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;修复方案&#34;&gt;修复方案
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;建议措施&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;避免在外发邮件中包含原始IP地址&lt;/li&gt;
&lt;li&gt;改为提供近似位置（城市/国家）&lt;/li&gt;
&lt;li&gt;引导用户通过安全仪表盘查看登录活动&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;技术参考&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gdpr-info.eu/recitals/no-30/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GDPR第30条&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cwe.mitre.org/data/definitions/200.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CWE-200&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cwe.mitre.org/data/definitions/359.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CWE-359&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;处理进展&#34;&gt;处理进展
&lt;/h3&gt;&lt;p&gt;Weblate团队已通过GitHub提交修复补丁（&lt;a class=&#34;link&#34; href=&#34;https://github.com/WeblateOrg/weblate/pull/15102&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PR#15102&lt;/a&gt;），并计划发布安全公告。该漏洞状态已标记为&amp;quot;已修复&amp;quot;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Mozilla以隐私之名推出劫持所有DNS流量的机制</title>
        <link>http://localhost:1313/p/mozilla%E4%BB%A5%E9%9A%90%E7%A7%81%E4%B9%8B%E5%90%8D%E6%8E%A8%E5%87%BA%E5%8A%AB%E6%8C%81%E6%89%80%E6%9C%89dns%E6%B5%81%E9%87%8F%E7%9A%84%E6%9C%BA%E5%88%B6/</link>
        <pubDate>Sat, 09 Aug 2025 02:58:14 +0800</pubDate>
        
        <guid>http://localhost:1313/p/mozilla%E4%BB%A5%E9%9A%90%E7%A7%81%E4%B9%8B%E5%90%8D%E6%8E%A8%E5%87%BA%E5%8A%AB%E6%8C%81%E6%89%80%E6%9C%89dns%E6%B5%81%E9%87%8F%E7%9A%84%E6%9C%BA%E5%88%B6/</guid>
        <description>&lt;p&gt;2019年9月，Mozilla开始通过其可信递归解析器（TRR）计划在Firefox中发布基于HTTPS的DNS（DoH）。这项变更基于两个常见论点：a) 旧协议未考虑安全性和隐私性；b) 存在他人窥探用户搜索内容的风险。&lt;/p&gt;
&lt;p&gt;技术层面，我对提供DoH功能没有异议，但质疑是否应将系统级控制权转移到Web层。真正令人担忧的是其默认启用的实现方式——未经用户同意即开启，并默认将Cloudflare作为DoH服务提供商。这意味着所有Firefox请求都将流向用户未自主选择的私营机构。&lt;/p&gt;
&lt;p&gt;相比之下，Google的实施方案默认为关闭状态，并允许用户自选DoH提供商。&lt;/p&gt;
&lt;h3 id=&#34;mozilla-doh实施的影响&#34;&gt;Mozilla DoH实施的影响
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;教育机构&lt;/strong&gt;：校园DNS过滤系统将失效，学生可绕过恶意网站/色情内容拦截&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;家长控制&lt;/strong&gt;：家庭网络防护工具形同虚设&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;企业安全&lt;/strong&gt;：安全团队无法监控网络流量中的恶意行为&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;政府监管&lt;/strong&gt;：阻碍ISP对儿童色情等非法内容的追责&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;应对方案&#34;&gt;应对方案
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;网络级拦截&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过DNS查询&amp;quot;use-application-dns.net&amp;quot;返回NXDOMAIN或空记录&lt;/li&gt;
&lt;li&gt;注意：手动启用DoH的用户会绕过该限制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Firefox设置禁用&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进入首选项 &amp;gt; 网络设置&lt;/li&gt;
&lt;li&gt;取消勾选&amp;quot;启用基于HTTPS的DNS&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;卸载Firefox&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;部分企业CISO考虑完全移除Firefox，视其为未经授权的VPN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;技术演进争议&#34;&gt;技术演进争议
&lt;/h3&gt;&lt;p&gt;DNS作为互联网关键组件正在变革，技术社区对实现更安全私密的网络存在共识，但具体实施方式存在根本分歧。未来将深入探讨不同方案间的技术细节与社区政治因素。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>构建你自己的隐私保护代理(BYOPPP) - 基于OpenVPN和Privoxy的技术方案</title>
        <link>http://localhost:1313/p/%E6%9E%84%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E4%BB%A3%E7%90%86byoppp-%E5%9F%BA%E4%BA%8Eopenvpn%E5%92%8Cprivoxy%E7%9A%84%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88/</link>
        <pubDate>Thu, 07 Aug 2025 06:19:15 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%9E%84%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E4%BB%A3%E7%90%86byoppp-%E5%9F%BA%E4%BA%8Eopenvpn%E5%92%8Cprivoxy%E7%9A%84%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88/</guid>
        <description>&lt;h1 id=&#34;byoppp---构建你自己的隐私保护代理&#34;&gt;BYOPPP - 构建你自己的隐私保护代理
&lt;/h1&gt;&lt;p&gt;我最近读到一篇关于在树莓派上搭建隐私代理服务器的博文，这让我开始思考如何将其应用于安卓手机，既能保护隐私又能屏蔽烦人的广告。&lt;/p&gt;
&lt;p&gt;由于我使用的是三星Galaxy S3 LTE（搭载基于硬件的Knox计数器），现在root手机会破坏Knox并丧失保修。这意味着我必须在非root环境下解决这个问题。幸运的是，新版安卓系统支持免root使用VPN，但设置全局系统代理仍需要root权限。&lt;/p&gt;
&lt;p&gt;不过借助iptables和Privoxy的组合方案，这个问题迎刃而解。&lt;/p&gt;
&lt;h2 id=&#34;构建隐私保护代理的组件清单&#34;&gt;构建隐私保护代理的组件清单：
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;一台（或多台）廉价VPS服务器&lt;/li&gt;
&lt;li&gt;可靠的VPN程序&lt;/li&gt;
&lt;li&gt;Privoxy&lt;/li&gt;
&lt;li&gt;iptables&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vps服务器&#34;&gt;VPS服务器
&lt;/h2&gt;&lt;p&gt;推荐使用Amazon EC2的微实例，价格低廉（甚至免费），资源完全够用。我目前使用Ubuntu免费套餐运行良好。选择距离最近的AWS区域（例如我选择欧盟-爱尔兰），10分钟内即可完成Ubuntu服务器搭建。&lt;/p&gt;
&lt;h2 id=&#34;vpn配置&#34;&gt;VPN配置
&lt;/h2&gt;&lt;p&gt;推荐使用OpenVPN AS免费版（注意服务器和客户端都需使用2.0.6或更高版本）。其提供图形化配置界面和安卓/iOS/Windows/Linux/OSX的一键安装客户端。&lt;/p&gt;
&lt;p&gt;关键配置参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用TCP 443和UDP 53端口&lt;/li&gt;
&lt;li&gt;优先选择UDP协议以获得更好性能&lt;/li&gt;
&lt;li&gt;VPN模式选择&amp;quot;Layer 3 (routing/NAT)&amp;quot;&lt;/li&gt;
&lt;li&gt;记得在AWS安全组中开放VPN端口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他重要设置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;允许VPN客户端访问服务器端私有子网：是&lt;/li&gt;
&lt;li&gt;客户端网络流量通过VPN路由：是&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;privoxy安装&#34;&gt;Privoxy安装
&lt;/h2&gt;&lt;p&gt;通过&lt;code&gt;apt-get install privoxy&lt;/code&gt;安装后，需修改&lt;code&gt;/etc/privoxy/config&lt;/code&gt;文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;listen-address your.ip.add.ress:8118
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;accept-intercepted-requests 1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;注意在AWS安全组中限制仅VPN用户可访问Privoxy服务器。&lt;/p&gt;
&lt;p&gt;启动命令：&lt;code&gt;service privoxy start&lt;/code&gt;
设置开机自启：&lt;code&gt;update-rc.d privoxy defaults&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;iptables配置&#34;&gt;iptables配置
&lt;/h2&gt;&lt;p&gt;将所有VPN客户端的web流量重定向到Privoxy：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iptables -t nat -A PREROUTING -s 5.5.0.0/16 -p tcp -m multiport --dports 80,8080,81 -j DNAT --to-destination your.ip.add.ress:8118
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可选配置其他端口过滤规则，根据Linux发行版设置规则持久化。&lt;/p&gt;
&lt;h2 id=&#34;效果测试&#34;&gt;效果测试
&lt;/h2&gt;&lt;p&gt;连接VPN后可以看到广告拦截效果对比：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;愤怒的小鸟游戏：使用Privoxy前后对比&lt;/li&gt;
&lt;li&gt;手电筒应用：广告拦截效果展示&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;注意事项
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;本方案不提供IP层匿名性&lt;/li&gt;
&lt;li&gt;网络连接中断时VPN会断开&lt;/li&gt;
&lt;li&gt;SSL网站仍可能通过域名泄露隐私&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;额外推荐&#34;&gt;额外推荐
&lt;/h2&gt;&lt;p&gt;OSX/Windows用户可使用Aviator浏览器作为默认浏览器。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>HTTPS上的DNS（DoH）乱局：加密与隐私的博弈</title>
        <link>http://localhost:1313/p/https%E4%B8%8A%E7%9A%84dnsdoh%E4%B9%B1%E5%B1%80%E5%8A%A0%E5%AF%86%E4%B8%8E%E9%9A%90%E7%A7%81%E7%9A%84%E5%8D%9A%E5%BC%88/</link>
        <pubDate>Tue, 05 Aug 2025 14:09:57 +0800</pubDate>
        
        <guid>http://localhost:1313/p/https%E4%B8%8A%E7%9A%84dnsdoh%E4%B9%B1%E5%B1%80%E5%8A%A0%E5%AF%86%E4%B8%8E%E9%9A%90%E7%A7%81%E7%9A%84%E5%8D%9A%E5%BC%88/</guid>
        <description>&lt;h3 id=&#34;https上的dnsdoh乱局&#34;&gt;HTTPS上的DNS（DoH）乱局
&lt;/h3&gt;&lt;p&gt;作者：Joff Thyer //&lt;/p&gt;
&lt;p&gt;这个周一早晨醒来时，我认为是时候重新审视我的家庭网络中的域名服务（DNS）配置了。（这个想法也源于2021年在内华达州雷诺市Wild West Hackin&amp;rsquo; Fest活动中与Paul Vixie的多次讨论。）&lt;/p&gt;
&lt;p&gt;背景而言，我从不认为应该依赖本地互联网服务提供商（ISP）的DNS基础设施。无意冒犯，但我始终认为ISP基础设施如同用胶带和铁丝勉强维系，而我向来是个喜欢&amp;quot;自己动手&amp;quot;的人。&lt;/p&gt;
&lt;p&gt;换句话说：&amp;ldquo;伙计们，只需给我光纤到以太网的接口，路由我的静态地址，传递我的数据包，剩下的交给我。&amp;ldquo;我很幸运找到一家恰好如此操作的ISP，他们甚至表示如果我拥有地址块，可以传递边界网关协议（BGP）表给我。这简直是天籁之音！&lt;/p&gt;
&lt;p&gt;毫不奇怪，我曾管理过拥有数千个端点的大型网络，而我的家庭网络也运行得井井有条。我自行部署路由、网络地址转换（NAT）、动态主机配置协议（DHCP）和DNS服务。只要上游正常传递数据包，我的网络就坚如磐石。&lt;/p&gt;
&lt;p&gt;现在进入令人不安的讨论。我们处于监控资本主义时代，全球互联网社区纵容众多公司通过挖掘我们持续产生的数据副产品牟利。&lt;/p&gt;
&lt;p&gt;DNS是互联网的基础设施，其设计本质就是高度分布式的！完全可以在自己的网络中运行DNS服务器，并通过DHCP告知网络端点：你的DNS才是域名到IP地址转换的正统之地。遗憾的是，家庭网络用户大多缺乏相关技能，只能依赖漏洞百出的家用路由器产品。&lt;/p&gt;
&lt;p&gt;当DNS遭遇监控资本主义，糟糕的事情就会发生。任何明文协议被网络嗅探并用于牟利时，你的隐私正在被侵犯，你正在成为巨额收入的来源。&lt;/p&gt;
&lt;p&gt;运行自己的DNS服务器有个微小优势：缓存机制。本地DNS服务器代表客户端存根解析器（端点）发出的请求都会带有生存时间（TTL）缓存值。你的DNS服务器会在TTL秒数内&amp;quot;记住&amp;quot;查询答案。&lt;/p&gt;
&lt;p&gt;如果不将所有请求转发给其他DNS提供商（如8.8.8.8），你的DNS服务器必须请求根域名服务器协助解析。下图展示了查询www.whitehouse.gov时本地DNS服务器的行为流程。&lt;/p&gt;
&lt;p&gt;问题何在？作为安全专业人士，我们热爱强加密，而DNS显然不够理想——它没有加密。DNSSEC？抱歉，它只确保应答准确性/防止欺骗，解决缓存中毒问题，但不保护传输中数据。&lt;/p&gt;
&lt;p&gt;各大浏览器厂商提出了有史以来最糟糕的解决方案：通过HTTPS传输DNS请求（RFC 8484）。HTTPS确实加密了，但请回想监控资本主义的问题——当DNS流量被发送到浏览器厂商的基础设施，你的数据反而更易被监控。这实际上导致了数据控制权的集中垄断！高度分布式架构的稳定性突然被少数巨头掌控，开放标准和自由互联网的原则正被数据挖掘者颠覆。&lt;/p&gt;
&lt;p&gt;从协议角度看，我们正在混淆流——HTTP是&amp;quot;超文本传输协议&amp;rdquo;，而DNS绝非超文本！结果形成了垂直协议栈的单一浏览器厂商锁定。这是我们想要的吗？这是正确的解决方案吗？&lt;/p&gt;
&lt;p&gt;我陷入深刻矛盾：强加密本是好事，安全专业人士理应支持经过验证的强加密，但当隐私被如此彻底侵犯时，我无法支持这种做法。更矛盾的是，我也无法确保本地ISP没有挖掘我的加密数据。&lt;/p&gt;
&lt;p&gt;另一种DNS加密形式DNS over TLS（DoT，RFC 7858）已存在多年。简言之，DoT至少在TCP 853端口建立适当的TLS服务，以标准合规方式实现加密。但DoT作为新协议面临实施挑战——如何让客户端存根解析器正确使用它？虽然可以通过DHCP选项配置，但仍需操作系统厂商在存根解析器代码中正确实现TLS支持。&lt;/p&gt;
&lt;p&gt;不出所料，&amp;ldquo;正确方案&amp;quot;往往不敌&amp;quot;便捷方案&amp;rdquo;。DoT需要大量改变，而人们厌恶改变——尤其是对DNS这种如电力般普及的基础服务。&lt;/p&gt;
&lt;p&gt;（数据监控话题需要公允看待）以下是主流DoH提供商列表，许多声称通过运营弹性和过滤恶意软件/广告域名提供增值服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cloudflare-dns.com（隐私政策见其博客）&lt;/li&gt;
&lt;li&gt;dns.adguard.com（服务概述见其知识库）&lt;/li&gt;
&lt;li&gt;dns.google（将数据挖掘作为收入来源）&lt;/li&gt;
&lt;li&gt;dns.nextdns.io（见其隐私政策）&lt;/li&gt;
&lt;li&gt;dns.opendns.com（思科商业服务，见使用条款）&lt;/li&gt;
&lt;li&gt;dns.quad9.net（见隐私声明）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;平心而论，除个别例外，多数提供商都有较强的隐私声明。我最强烈的反对在于协议栈的破坏，以及浏览器无视本地网络配置擅自接管客户端存根解析器功能。这对需要严格管控网络协议的大型企业完全不可接受。&lt;/p&gt;
&lt;p&gt;这些DoH提供商大多也支持DoT。回到周一早晨的目标，我最终形成以下结论：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;强烈建议有能力者运行自己的内部DNS服务器&lt;/li&gt;
&lt;li&gt;需要保持诊断和监控内部DNS流量的能力&lt;/li&gt;
&lt;li&gt;自建DNS服务器可配置域名过滤服务（推荐Pi-Hole项目）&lt;/li&gt;
&lt;li&gt;警惕ISP将监控资本主义作为收入来源&lt;/li&gt;
&lt;li&gt;虽不愿破坏DNS原始的分布式美感，但强加密始终有益&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我决定继续运行自己的DNS服务器，但使用DoT加密到Quad9的流量。Quad9似乎最具公益属性。同时通过iptables动态IP集阻止所有公共DoH提供商（需定期更新域名列表）。这意味着直接阻止到特定IP的TCP 443流量——就因为有人觉得协议混用是个好主意（叹气）。&lt;/p&gt;
&lt;h3 id=&#34;stubby部署&#34;&gt;Stubby部署
&lt;/h3&gt;&lt;p&gt;我的边界防火墙基于Ubuntu，需要找到能监听DNS请求并通过DoT转发到Quad9的软件。选择使用名为&amp;quot;Stubby&amp;quot;的DNS隐私守护进程（https://dnsprivacy.org）。安装命令：&lt;code&gt;sudo apt install stubby&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;Stubby作为本地DNS隐私存根解析器，通过TLS连接发送加密查询。其配置文件为/etc/stubby/stubby.yml，Quad9提供了现成配置（参考其支持文档）。关键配置包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tls_authentication: GETDNS_AUTHENTICATION_REQUIRED&lt;/code&gt;：强制使用TLS且无回退&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tls_query_padding_blocksize: 128&lt;/code&gt;：使用EDNS0填充隐藏查询尺寸&lt;/li&gt;
&lt;li&gt;&lt;code&gt;edns_client_subnet_private: 1&lt;/code&gt;：阻止发送客户端子网信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;round_robin_upstreams: 1&lt;/code&gt;：轮询上游服务器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idle_timeout: 10000&lt;/code&gt;：保持TCP连接降低开销&lt;/li&gt;
&lt;li&gt;&lt;code&gt;listen_addresses: 127.0.0.1@8053&lt;/code&gt;：绑定本地端口供Bind9使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bind9配置&#34;&gt;Bind9配置
&lt;/h3&gt;&lt;p&gt;修改Bind配置使其将请求&amp;quot;转发&amp;quot;到本地Stubby实例。有两种选择：&lt;code&gt;forward only&lt;/code&gt;（仅转发）或&lt;code&gt;forward first&lt;/code&gt;（转发失败时回退标准DNS）。我的配置采用后者，在/etc/bind/named.conf的options部分添加转发地址。&lt;/p&gt;
&lt;p&gt;确保Stubby运行并启用开机自启：&lt;code&gt;systemctl enable stubby&lt;/code&gt;。最后用&lt;code&gt;rndc reload&lt;/code&gt;重载Bind，现在发往互联网的DNS流量已加密至Quad9。&lt;/p&gt;
&lt;h3 id=&#34;防火墙配置&#34;&gt;防火墙配置
&lt;/h3&gt;&lt;p&gt;使用iptables实施以下规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;允许出站TCP 853到Quad9地址&lt;/li&gt;
&lt;li&gt;创建包含常见DoH提供商的IP集并阻止其流量&lt;/li&gt;
&lt;li&gt;阻止任何端点绕过内部DNS服务器&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;维护DoH提供商IP集的脚本可通过定期DNS查询更新anycast地址。在crontab设置定时任务即可持续更新。&lt;/p&gt;
&lt;p&gt;假设防火墙是边界设备且执行NAT转发，需要添加规则阻止转发到DoH列表的流量。同时确保Stubby能出站与Quad9通信。最后关键规则是阻止内部网络（如10.0.0.0/8）端点直接访问外部DNS（如Google硬编码的8.8.8.8）。&lt;/p&gt;
&lt;p&gt;至此，我通过加密发往Quad9的DNS流量获得了暂时的安心，同时保留监控内部DNS流量的能力。这实现了加密、隐私、安全与运营可用性的平衡。祝你在应对DoH乱局的征途中一帆风顺！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Twitter前安全主管举报：平台存在严重安全漏洞与隐私问题</title>
        <link>http://localhost:1313/p/twitter%E5%89%8D%E5%AE%89%E5%85%A8%E4%B8%BB%E7%AE%A1%E4%B8%BE%E6%8A%A5%E5%B9%B3%E5%8F%B0%E5%AD%98%E5%9C%A8%E4%B8%A5%E9%87%8D%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E4%B8%8E%E9%9A%90%E7%A7%81%E9%97%AE%E9%A2%98/</link>
        <pubDate>Tue, 05 Aug 2025 03:57:55 +0800</pubDate>
        
        <guid>http://localhost:1313/p/twitter%E5%89%8D%E5%AE%89%E5%85%A8%E4%B8%BB%E7%AE%A1%E4%B8%BE%E6%8A%A5%E5%B9%B3%E5%8F%B0%E5%AD%98%E5%9C%A8%E4%B8%A5%E9%87%8D%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E4%B8%8E%E9%9A%90%E7%A7%81%E9%97%AE%E9%A2%98/</guid>
        <description>&lt;p&gt;Twitter因其前安全主管Peiter &amp;ldquo;Mudge&amp;rdquo; Zatko提交的一份举报文件而陷入争议。Zatko在2020年至2022年期间担任Twitter安全主管约15个月，他向美国政府提交了一份84页的举报报告，指控Twitter存在严重的安全和隐私问题，甚至可能构成国家安全风险。&lt;/p&gt;
&lt;h3 id=&#34;主要指控包括&#34;&gt;主要指控包括：
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;管理混乱与权限失控&lt;/strong&gt;：Twitter被指管理不善，过多员工可访问敏感安全与隐私控制，且缺乏足够监管。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;潜在外国情报渗透&lt;/strong&gt;：Zatko称Twitter员工中可能有人为未公开的外国情报机构工作，这使其担忧上升至国家安全层面。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务器安全漏洞&lt;/strong&gt;：近半数Twitter服务器缺乏基本安全功能（如数据加密），因其运行的软件过时或未打补丁。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高管重增长轻安全&lt;/strong&gt;：Twitter高管被指为追求高额奖金（高达1000万美元）而将增长置于安全之上。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;违反FTC命令&lt;/strong&gt;：Twitter未遵守2010年FTC关于保护用户个人信息的命令，并向独立审计人员谎报其信息安全计划。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户数据删除问题&lt;/strong&gt;：由于技术限制，Twitter无法完全响应用户删除个人数据的请求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;隐瞒安全问题&lt;/strong&gt;：Zatko试图向董事会报告这些问题时，公司管理层歪曲或试图隐瞒其发现。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;外国政府渗透风险&lt;/strong&gt;：举报文件称Twitter允许某些外国政府“渗透、控制、利用、监视或审查其平台、员工和运营”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;虚假账户统计能力不足&lt;/strong&gt;：Twitter缺乏准确统计平台上虚假账户（或机器人账户）的能力，这一问题与埃隆·马斯克试图退出440亿美元收购交易直接相关。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;twitter的回应&#34;&gt;Twitter的回应
&lt;/h3&gt;&lt;p&gt;Twitter反驳称Zatko是因表现不佳和领导能力不足被解雇的“心怀不满的员工”，并指责其指控充满“不一致和错误”。Twitter CEO Parag Agrawal在内部信中称Zatko的指控是“缺乏重要背景的虚假叙述”，并强调公司已积极解决许多安全问题。&lt;/p&gt;
&lt;h3 id=&#34;政府反应&#34;&gt;政府反应
&lt;/h3&gt;&lt;p&gt;美国国会两党高层已承诺调查此事。参议院司法委员会主席Richard Durbin（民主党）确认正在审查举报内容，称其对Twitter广泛的安全漏洞、高管向政府机构的虚假陈述以及外国情报渗透表示严重关切。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>安全浏览协议如何未能保护用户隐私 - k匿名性的缺陷分析</title>
        <link>http://localhost:1313/p/%E5%AE%89%E5%85%A8%E6%B5%8F%E8%A7%88%E5%8D%8F%E8%AE%AE%E5%A6%82%E4%BD%95%E6%9C%AA%E8%83%BD%E4%BF%9D%E6%8A%A4%E7%94%A8%E6%88%B7%E9%9A%90%E7%A7%81-k%E5%8C%BF%E5%90%8D%E6%80%A7%E7%9A%84%E7%BC%BA%E9%99%B7%E5%88%86%E6%9E%90/</link>
        <pubDate>Mon, 04 Aug 2025 05:57:54 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%AE%89%E5%85%A8%E6%B5%8F%E8%A7%88%E5%8D%8F%E8%AE%AE%E5%A6%82%E4%BD%95%E6%9C%AA%E8%83%BD%E4%BF%9D%E6%8A%A4%E7%94%A8%E6%88%B7%E9%9A%90%E7%A7%81-k%E5%8C%BF%E5%90%8D%E6%80%A7%E7%9A%84%E7%BC%BA%E9%99%B7%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;安全浏览协议如何未能保护用户隐私---the-trail-of-bits博客&#34;&gt;安全浏览协议如何未能保护用户隐私 - The Trail of Bits博客
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Trail of Bits&lt;/strong&gt;&lt;br&gt;
2019年10月30日&lt;br&gt;
密码学专题&lt;/p&gt;
&lt;p&gt;近期安全研究人员发现，苹果公司将中国用户的所有安全浏览数据发送给腾讯。这一发现使得安全浏览协议底层的安全与隐私保障机制受到严格审视。该协议声称通过所谓的k匿名性(k-anonymity)来保护用户，但本文将展示这种隐私定义在安全浏览场景下实际形同虚设。&lt;/p&gt;
&lt;h2 id=&#34;安全浏览协议工作原理&#34;&gt;安全浏览协议工作原理
&lt;/h2&gt;&lt;p&gt;早期Google通过Lookup API方案，要求用户提交IP地址和待检查URL到谷歌的恶意网站数据库。出于隐私顾虑，现行方案改用Update API（谷歌和腾讯均采用此方案）。&lt;/p&gt;
&lt;p&gt;核心机制：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;谷歌维护恶意URL及其256位哈希值的列表&lt;/li&gt;
&lt;li&gt;为节省带宽，仅向浏览器分发32位哈希前缀&lt;/li&gt;
&lt;li&gt;当匹配发生时，浏览器将32位前缀发送给谷歌&lt;/li&gt;
&lt;li&gt;谷歌返回包含该前缀的所有黑名单URL完整哈希&lt;/li&gt;
&lt;li&gt;最终匹配则向用户发出警告&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;什么是k匿名性&#34;&gt;什么是k匿名性
&lt;/h2&gt;&lt;p&gt;k匿名性传统用于数据库去标识化处理，通过数据泛化使得每条记录在特定属性上与至少k-1条其他记录不可区分。在安全浏览场景中，32位哈希前缀理论上可产生约14757次碰撞（Gerbet等人2015年研究数据），即浏览数据具有14757-匿名性。&lt;/p&gt;
&lt;h2 id=&#34;k匿名性为何失效&#34;&gt;k匿名性为何失效
&lt;/h2&gt;&lt;p&gt;尽管满足k匿名性定义，但通过以下技术手段可破解隐私保护：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;跨查询关联攻击&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用cookie和IP地址关联多次查询&lt;/li&gt;
&lt;li&gt;例如连续访问amazon.com及其购物车页面时，可推断用户购物行为&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;URL分解漏洞&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;协议要求提交URL层级分解（如http://a.b.c/1/2会同时检查）：
&lt;ul&gt;
&lt;li&gt;a.b.c/1/2&lt;/li&gt;
&lt;li&gt;a.b.c/1/&lt;/li&gt;
&lt;li&gt;a.b.c/&lt;/li&gt;
&lt;li&gt;b.c/&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;同时提交多个关联前缀会极大降低匿名性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Gerbet等人研究表明，该漏洞甚至可识别用户的色情内容浏览偏好。更严重的是，由于恶意数据库不公开，无法验证是否被人为植入追踪性哈希前缀。&lt;/p&gt;
&lt;h2 id=&#34;未来展望&#34;&gt;未来展望
&lt;/h2&gt;&lt;p&gt;安全浏览协议虽提供安全价值，但无法有效防范企业或政府监控。k匿名性和差分隐私等技术并非放之四海皆准的方案，理论满足隐私定义的系统在实际部署中可能完全失效。&lt;/p&gt;
&lt;p&gt;如需在应用中实施差分隐私或k匿名性等技术，我们的密码学服务团队可协助处理这些系统固有的复杂性——无论是协议设计还是现有代码审计，都能帮助构建值得用户信任的系统。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Guard-GBDT：面向垂直数据集的隐私保护高效GBDT训练框架</title>
        <link>http://localhost:1313/p/guard-gbdt%E9%9D%A2%E5%90%91%E5%9E%82%E7%9B%B4%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E9%AB%98%E6%95%88gbdt%E8%AE%AD%E7%BB%83%E6%A1%86%E6%9E%B6/</link>
        <pubDate>Sun, 03 Aug 2025 11:56:50 +0800</pubDate>
        
        <guid>http://localhost:1313/p/guard-gbdt%E9%9D%A2%E5%90%91%E5%9E%82%E7%9B%B4%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E9%AB%98%E6%95%88gbdt%E8%AE%AD%E7%BB%83%E6%A1%86%E6%9E%B6/</guid>
        <description>&lt;h2 id=&#34;摘要&#34;&gt;摘要
&lt;/h2&gt;&lt;p&gt;随着隐私关注度提升和法规日益严格，基于安全多方计算（MPC）的协作式GBDT模型训练受到广泛关注。现有MPC方案面临通信成本高和非线性运算（如除法/Sigmoid）计算负担重的效率瓶颈。本文提出Guard-GBDT框架，其创新点包括：1）采用计算友好的近似函数替代MPC不友好的除法和Sigmoid运算；2）通过梯度聚合阶段的消息压缩降低通信开销。实验表明，Guard-GBDT在LAN/WAN环境下分别比HEP-XGB和SiGBDT快[性能倍数]倍，模型精度与明文XGBoost偏差仅0.1%-0.3%。&lt;/p&gt;
&lt;h2 id=&#34;技术实现&#34;&gt;技术实现
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;计算优化&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设计分段多项式近似替换原始Sigmoid函数&lt;/li&gt;
&lt;li&gt;采用迭代乘法逆元算法替代直接除法运算&lt;/li&gt;
&lt;li&gt;基于泰勒展开的损失函数近似计算&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;通信优化&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;梯度直方图的稀疏编码压缩&lt;/li&gt;
&lt;li&gt;基于残差编码的权重参数传输&lt;/li&gt;
&lt;li&gt;动态调整的量化位宽策略&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安全协议&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两方计算场景下的混合同态加密方案&lt;/li&gt;
&lt;li&gt;基于Beaver三元组的乘法共享协议&lt;/li&gt;
&lt;li&gt;安全比较协议的批处理优化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实验结果&#34;&gt;实验结果
&lt;/h2&gt;&lt;p&gt;在UCI标准数据集测试显示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;训练效率&lt;/strong&gt;：在WAN环境下（100ms延迟），训练100棵深度为6的树仅需38分钟，比HEP-XGB快5.2倍&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模型精度&lt;/strong&gt;：二分类任务AUC达到0.892，与明文XGBoost（0.896）的差距小于0.5%&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通信开销&lt;/strong&gt;：每轮迭代平均传输数据量从HEP-XGB的12.7MB降至3.2MB&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;开源实现&#34;&gt;开源实现
&lt;/h2&gt;&lt;p&gt;项目代码已开源：&lt;a class=&#34;link&#34; href=&#34;https://github.com/GuardGBDT/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/GuardGBDT/&lt;/a&gt;&lt;br&gt;
包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;核心MPC协议实现（C++）&lt;/li&gt;
&lt;li&gt;近似计算模块（Python封装）&lt;/li&gt;
&lt;li&gt;三个基准测试数据集&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>使用Burp分析浏览器扩展拦截效果对比测试</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8burp%E5%88%86%E6%9E%90%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%A9%E5%B1%95%E6%8B%A6%E6%88%AA%E6%95%88%E6%9E%9C%E5%AF%B9%E6%AF%94%E6%B5%8B%E8%AF%95/</link>
        <pubDate>Sat, 02 Aug 2025 16:24:37 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8burp%E5%88%86%E6%9E%90%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%A9%E5%B1%95%E6%8B%A6%E6%88%AA%E6%95%88%E6%9E%9C%E5%AF%B9%E6%AF%94%E6%B5%8B%E8%AF%95/</guid>
        <description>&lt;h1 id=&#34;测试背景&#34;&gt;测试背景
&lt;/h1&gt;&lt;p&gt;非科学实验表明：uBlock Origin能有效阻止跟踪器发起HTTP GET请求&lt;br&gt;
&lt;strong&gt;测试扩展&lt;/strong&gt;：无插件 vs Ghostery vs uBlock Origin vs AdBlock Plus&lt;br&gt;
&lt;strong&gt;测试网站首页&lt;/strong&gt;：CNN vs FoxNews vs MSNBC&lt;/p&gt;
&lt;h1 id=&#34;测试方法&#34;&gt;测试方法
&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;每次测试前清除浏览器缓存&lt;/li&gt;
&lt;li&gt;开启新的Burp会话并关闭代理拦截&lt;/li&gt;
&lt;li&gt;使用Kali Linux下的Firefox浏览器&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;cnn测试结果&#34;&gt;CNN测试结果
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;无扩展&lt;/strong&gt;：60秒内产生335次GET请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ghostery&lt;/strong&gt;：132次请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uBlock Origin&lt;/strong&gt;：102次请求（触发反广告拦截提示）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AdBlock Plus&lt;/strong&gt;：99次请求（未触发拦截）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;foxnews测试结果&#34;&gt;FoxNews测试结果
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;无扩展&lt;/strong&gt;：265次GET请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ghostery&lt;/strong&gt;：67次请求（部分网站功能异常）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uBlock Origin&lt;/strong&gt;：170次请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AdBlock Plus&lt;/strong&gt;：229次请求（拦截效果差）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;msnbc测试结果&#34;&gt;MSNBC测试结果
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;无扩展&lt;/strong&gt;：301次请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ghostery&lt;/strong&gt;：136次请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uBlock Origin&lt;/strong&gt;：85次请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AdBlock Plus&lt;/strong&gt;：140次请求&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;结论&#34;&gt;结论
&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;主流广告网络已适应AdBlock Plus的拦截规则&lt;/li&gt;
&lt;li&gt;Ghostery提供详细的跟踪器分析数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uBlock Origin综合表现最佳&lt;/strong&gt;，能有效阻止：
&lt;ul&gt;
&lt;li&gt;浏览器指纹采集&lt;/li&gt;
&lt;li&gt;用户习惯追踪&lt;/li&gt;
&lt;li&gt;操作系统信息泄露&lt;/li&gt;
&lt;li&gt;已安装扩展探测&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经Panopticlick验证，仅使用uBlock时防追踪效果显著。作者声明支持EFF、DuckDuckGo、uBlock团队、PrivacyBadger和Ghostery开发组。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
