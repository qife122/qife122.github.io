<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>侧信道攻击 on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/%E4%BE%A7%E4%BF%A1%E9%81%93%E6%94%BB%E5%87%BB/</link>
        <description>Recent content in 侧信道攻击 on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Fri, 08 Aug 2025 02:29:09 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E4%BE%A7%E4%BF%A1%E9%81%93%E6%94%BB%E5%87%BB/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>AWS Nitro Enclaves安全攻防面深度解析</title>
        <link>http://localhost:1313/p/aws-nitro-enclaves%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2%E9%9D%A2%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Fri, 08 Aug 2025 02:29:09 +0800</pubDate>
        
        <guid>http://localhost:1313/p/aws-nitro-enclaves%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2%E9%9D%A2%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;aws-nitro-enclaves安全笔记攻击面分析&#34;&gt;AWS Nitro Enclaves安全笔记：攻击面分析
&lt;/h1&gt;&lt;h2 id=&#34;威胁模型概述&#34;&gt;威胁模型概述
&lt;/h2&gt;&lt;p&gt;首先建立基础威胁模型。Enclave可能遭受来自父级Amazon EC2实例的攻击——这是唯一能直接访问enclave的组件。在攻击场景中，我们应假设父实例的内核（包括其nitro_enclaves驱动）已被攻击者控制。来自实例的DoS攻击并非核心威胁，因为父实例随时可以关闭其enclaves。&lt;/p&gt;
&lt;p&gt;若EC2实例转发来自互联网的用户流量，则针对enclave的攻击可能涉及常规攻击向量（业务逻辑漏洞、内存破坏、加密问题等）。反之，用户可能遭受恶意EC2实例的伪装攻击。&lt;/p&gt;
&lt;p&gt;在信任域划分上，enclave应被视为单一信任域。虽然enclave运行标准Linux系统，理论上可利用其访问控制功能划分内部权限，但这会削弱强隔离和认证的价值。因此，任何enclave组件的沦陷都应视为整个enclave的沦陷。&lt;/p&gt;
&lt;p&gt;最后，hypervisor属于可信组件——我们必须假设其行为正确且无恶意。&lt;/p&gt;
&lt;h2 id=&#34;虚拟套接字vsock&#34;&gt;虚拟套接字(Vsock)
&lt;/h2&gt;&lt;p&gt;enclave的主要入口是本地虚拟套接字(vsock)，仅父EC2实例可使用。Vsock由hypervisor管理，通过&lt;code&gt;/dev/vsock&lt;/code&gt;设备节点提供给双方内核。&lt;/p&gt;
&lt;p&gt;Vsock通过上下文标识符(CID)和端口识别。每个enclave必须使用唯一CID，可监听多个端口。关键预定义CID包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VMADDR_CID_HYPERVISOR = 0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VMADDR_CID_LOCAL = 1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VMADDR_CID_HOST = 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VMADDR_CID_PARENT = 3&lt;/code&gt;（父EC2实例）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VMADDR_CID_ANY = 0xFFFFFFFF&lt;/code&gt;（监听所有CID）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;标准套接字问题是vsock的主要风险点。开发时需考虑：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;是否支持异步连接（多线程）？否则单用户可能长时间阻塞其他用户&lt;/li&gt;
&lt;li&gt;是否设置连接超时？否则单用户可能持续占用套接字&lt;/li&gt;
&lt;li&gt;多线程下状态同步是否正确实现？&lt;/li&gt;
&lt;li&gt;错误处理是否完善？特别是&lt;code&gt;recv&lt;/code&gt;调用：
&lt;ul&gt;
&lt;li&gt;遇到&lt;code&gt;EINTR&lt;/code&gt;错误应重试&lt;/li&gt;
&lt;li&gt;返回长度为0时应终止循环&lt;/li&gt;
&lt;li&gt;非阻塞套接字需更复杂处理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;另一类风险是CID混淆：当EC2实例运行多个enclave时，可能因竞争条件将数据发往错误enclave。不过由于用户-enclave通信应端到端认证，此类风险有限。&lt;/p&gt;
&lt;h2 id=&#34;随机熵源&#34;&gt;随机熵源
&lt;/h2&gt;&lt;p&gt;Enclave必须获取安全随机数。&amp;ldquo;安全&amp;quot;意味着攻击者无法知晓或控制所有熵源。Linux内核会混合多个熵源，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU提供的RDRAND/RDSEED指令&lt;/li&gt;
&lt;li&gt;平台硬件随机数生成器(RNG)&lt;/li&gt;
&lt;li&gt;AWS Nitro可信平台模块的专用硬件RNG(nsm-hwrng)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建议采取以下措施：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在enclave中显式检查&lt;code&gt;rng_current&lt;/code&gt;是否为nsm-hwrng&lt;/li&gt;
&lt;li&gt;通过AWS KMS的GenerateRandom方法补充外部熵源&lt;/li&gt;
&lt;li&gt;可禁用&lt;code&gt;random.trust_{bootloader,cpu}&lt;/code&gt;内核参数&lt;/li&gt;
&lt;li&gt;确保使用5.17.12以上内核版本&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;侧信道防护&#34;&gt;侧信道防护
&lt;/h2&gt;&lt;p&gt;应用级时序侧信道是enclave的重大威胁。enclave内应用必须确保处理机密数据时保持恒定时间。父EC2实例可使用近乎系统时钟精度的计时测量，不能依赖网络抖动缓解。&lt;/p&gt;
&lt;p&gt;错误消息也可能泄露enclave状态（如填充oracle攻击）。建议返回尽可能通用的错误信息，具体程度需平衡业务需求。&lt;/p&gt;
&lt;h3 id=&#34;cpu内存侧信道&#34;&gt;CPU内存侧信道
&lt;/h3&gt;&lt;p&gt;CPU共享内存（尤其是缓存行）可能成为侧信道。即使应用实现恒定时间处理，攻击者仍可能通过内存访问模式推测数据。&lt;/p&gt;
&lt;p&gt;AWS白皮书声称L3缓存不会同时共享，但最新研究表明公有云中此类攻击可行。若担忧L3缓存侧信道：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可在完整NUMA节点上运行enclave&lt;/li&gt;
&lt;li&gt;尝试使用Intel缓存分配技术(CAT)&lt;/li&gt;
&lt;li&gt;关键代码应实现与秘密无关的内存访问模式&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;内存管理&#34;&gt;内存管理
&lt;/h2&gt;&lt;p&gt;enclave内存从父EC2实例划分，由hypervisor负责隔离和清理。主要需防范DoS攻击——应用应限制外部用户数据存储量，避免单用户耗尽内存。&lt;/p&gt;
&lt;p&gt;可用&lt;code&gt;free&lt;/code&gt;命令查看可用内存，文件系统空间限制约为总内存的40-50%。需注意enclave无持久化存储，关闭后所有数据丢失，且AWS Nitro未提供数据密封机制。&lt;/p&gt;
&lt;h2 id=&#34;时间源安全&#34;&gt;时间源安全
&lt;/h2&gt;&lt;p&gt;攻击者控制时间源可能导致回滚/重放攻击（如接受过期TLS证书）。建议采取以下措施：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确保&lt;code&gt;current_clocksource&lt;/code&gt;设置为kvm-clock&lt;/li&gt;
&lt;li&gt;启用精确时间协议(PTP)提升时钟同步&lt;/li&gt;
&lt;li&gt;安全关键功能使用Unix时间（避免UTC时区问题）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;为何选择kvm-clock&#34;&gt;为何选择kvm-clock？
&lt;/h3&gt;&lt;p&gt;x86架构有多种时间源。enclave通常有两个可用源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;TSC机制&lt;/strong&gt;：基于时间戳计数器寄存器，存在虚拟化问题&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;kvm-clock&lt;/strong&gt;：半虚拟化时钟驱动协议，hypervisor提供基准时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TSC初始日期可能被随机设置为1999年，而kvm-clock通过hypervisor获取准确基准时间。注意用户态应用仍可能使用未调整的TSC读数。&lt;/p&gt;
&lt;h2 id=&#34;认证机制&#34;&gt;认证机制
&lt;/h2&gt;&lt;p&gt;密码学认证是终端用户的信任基础。除AWS文档建议外，开发者还应注意：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;强制最小nonce长度&lt;/li&gt;
&lt;li&gt;同时验证nonce和时间戳&lt;/li&gt;
&lt;li&gt;认证时间戳不可用于推断enclave时间&lt;/li&gt;
&lt;li&gt;尽量避免在public_key中使用RSA&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;nsm驱动&#34;&gt;NSM驱动
&lt;/h2&gt;&lt;p&gt;enclave应用通过&lt;code&gt;/dev/nsm&lt;/code&gt;节点使用NSM驱动，通过IOCTL系统调用通信。需注意：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;正确使用额外平台配置寄存器(PCR)&lt;/li&gt;
&lt;li&gt;检查PCR锁定状态&lt;/li&gt;
&lt;li&gt;正确处理CBOR编码&lt;/li&gt;
&lt;li&gt;避免直接使用nsm_get_random&lt;/li&gt;
&lt;li&gt;处理nsm_init的特殊错误返回值(-1)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;核心结论&#34;&gt;核心结论
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;将enclave视为单一信任域，实施端到端安全&lt;/li&gt;
&lt;li&gt;通过合理CPU分配和恒定时间处理缓解侧信道风险&lt;/li&gt;
&lt;li&gt;运行时验证熵源质量&lt;/li&gt;
&lt;li&gt;使用正确时间源&lt;/li&gt;
&lt;li&gt;实施健壮的认证实践&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如需深入评估Nitro Enclaves部署，Trail of Bits提供专业安全评估和加固方案。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>ECDSA安全漏洞深度解析：从非ce泄露到密钥恢复实战</title>
        <link>http://localhost:1313/p/ecdsa%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E4%BB%8E%E9%9D%9Ece%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E9%92%A5%E6%81%A2%E5%A4%8D%E5%AE%9E%E6%88%98/</link>
        <pubDate>Sat, 02 Aug 2025 08:12:19 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ecdsa%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E4%BB%8E%E9%9D%9Ece%E6%B3%84%E9%9C%B2%E5%88%B0%E5%AF%86%E9%92%A5%E6%81%A2%E5%A4%8D%E5%AE%9E%E6%88%98/</guid>
        <description>&lt;h2 id=&#34;dsa基础&#34;&gt;DSA基础
&lt;/h2&gt;&lt;p&gt;ECDSA是基于椭圆曲线数字签名算法(DSA)的变种。DSA包含三个核心算法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;密钥生成&lt;/strong&gt;：随机选择私钥x，计算公钥y = gˣ mod p&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;签名&lt;/strong&gt;：生成随机nonce k，计算r = (gᵏ mod p) mod q，s = k⁻¹(H(m) + xr) mod q&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;验证&lt;/strong&gt;：检查r = [(gᴴ⁽ᵐ⁾yʳ)ˢ⁻¹ mod p] mod q&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;ecdsa的致命弱点&#34;&gt;ECDSA的致命弱点
&lt;/h2&gt;&lt;h3 id=&#34;1-nonce重用攻击&#34;&gt;1. Nonce重用攻击
&lt;/h3&gt;&lt;p&gt;若两个签名使用相同nonce k：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s₁&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s₂&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m₁&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m₂&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ks&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;H&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;2-部分nonce泄露攻击&#34;&gt;2. 部分Nonce泄露攻击
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;仅需3比特泄露+100签名 → 攻破160-bit DSA&lt;/li&gt;
&lt;li&gt;仅5比特泄露+4000签名 → 攻破384-bit ECDSA&lt;/li&gt;
&lt;li&gt;LadderLeak攻击：仅0.2比特泄露即可恢复密钥&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-rng偏差攻击&#34;&gt;3. RNG偏差攻击
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;256-bit ECDSA中仅4比特偏差 → 完全破解&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实战攻击演示&#34;&gt;实战攻击演示
&lt;/h2&gt;&lt;h3 id=&#34;基础攻击已知128-bit-nonce前缀&#34;&gt;基础攻击（已知128-bit nonce前缀）
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;order&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;order&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r₁s₁&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r₂s₂&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;¹²⁸&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;order&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m₁s₁&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m₂s₂&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;¹²⁸&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;new_matrix&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;olll&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reduction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;yubikey漏洞利用80-bit固定前缀&#34;&gt;YubiKey漏洞利用（80-bit固定前缀）
&lt;/h3&gt;&lt;p&gt;构建6签名矩阵：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rᵢsᵢ&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rₙsₙ&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;row2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mᵢsᵢ&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mₙsₙ&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rₙs₁&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r₁sₙ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;⁻¹&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sₙm₁&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s₁mₙ&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s₁sₙ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k₁&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kₙ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;防护方案&#34;&gt;防护方案
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;替代方案&lt;/strong&gt;：优先使用EdDSA（如Ed25519）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;恒定时间实现&lt;/strong&gt;：防止时序侧信道&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RFC 6979&lt;/strong&gt;：确定性nonce生成&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;盲签名技术&lt;/strong&gt;：隐藏时序信息&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;攻击签名数需求表&#34;&gt;攻击签名数需求表
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;固定比特数&lt;/th&gt;
          &lt;th&gt;所需签名数&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;128-bit&lt;/td&gt;
          &lt;td&gt;2&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;80-bit&lt;/td&gt;
          &lt;td&gt;5&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4-bit&lt;/td&gt;
          &lt;td&gt;20&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;警告：即使仅1比特泄露，观察足够签名后系统仍可能被完全攻破。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
