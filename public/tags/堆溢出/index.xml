<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>堆溢出 on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/%E5%A0%86%E6%BA%A2%E5%87%BA/</link>
        <description>Recent content in 堆溢出 on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Sat, 02 Aug 2025 12:47:21 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E5%A0%86%E6%BA%A2%E5%87%BA/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>灰盒自动漏洞利用生成：语言解释器堆溢出攻击研究</title>
        <link>http://localhost:1313/p/%E7%81%B0%E7%9B%92%E8%87%AA%E5%8A%A8%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E7%94%9F%E6%88%90%E8%AF%AD%E8%A8%80%E8%A7%A3%E9%87%8A%E5%99%A8%E5%A0%86%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E7%A0%94%E7%A9%B6/</link>
        <pubDate>Sat, 02 Aug 2025 12:47:21 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%81%B0%E7%9B%92%E8%87%AA%E5%8A%A8%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E7%94%9F%E6%88%90%E8%AF%AD%E8%A8%80%E8%A7%A3%E9%87%8A%E5%99%A8%E5%A0%86%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E7%A0%94%E7%A9%B6/</guid>
        <description>&lt;h1 id=&#34;博士论文语言解释器中堆溢出漏洞的灰盒自动利用生成&#34;&gt;博士论文：语言解释器中堆溢出漏洞的灰盒自动利用生成
&lt;/h1&gt;&lt;h2 id=&#34;核心创新&#34;&gt;核心创新
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;模块化利用链架构&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将传统单阶段利用生成拆分为堆布局控制、原语构建、ASLR绕过等可组合阶段&lt;/li&gt;
&lt;li&gt;采用类似模糊测试的灰盒方法解决各阶段子问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;模板驱动开发&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设计人类可读的模板语言连接各阶段解决方案&lt;/li&gt;
&lt;li&gt;支持&amp;quot;人在环路&amp;quot;开发模式，允许人工介入关键环节&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;惰性求解机制&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过假设验证模式（先模拟后求解）大幅降低计算开销&lt;/li&gt;
&lt;li&gt;例如：先假设特定堆布局可被利用，验证成功后再实际构造该布局&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术突破&#34;&gt;技术突破
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;全球首个针对PHP/Python解释器堆溢出的自动利用系统&lt;/li&gt;
&lt;li&gt;纯灰盒方案在堆布局操控任务上比符号执行快3个数量级&lt;/li&gt;
&lt;li&gt;实现包含信息泄露、堆风水、控制流劫持的完整利用链&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;应用价值&#34;&gt;应用价值
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;发现真实解释器漏洞中89%的堆溢出可自动化利用&lt;/li&gt;
&lt;li&gt;模板系统可扩展支持新漏洞类型（如UAF漏洞）&lt;/li&gt;
&lt;li&gt;为浏览器/内核等复杂目标的利用生成提供方法论基础&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;延伸阅读&#34;&gt;延伸阅读
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;《Gollum: 解释器堆溢出的模块化灰盒利用生成》（CCS 2019）&lt;/li&gt;
&lt;li&gt;《自动化堆布局操控技术》（USENIX Security 2018）&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;未来利用生成系统将是模糊测试技术与模板化组件的有机结合，符号执行仅用于关键精度要求场景。&amp;rdquo; —— 论文核心观点&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
