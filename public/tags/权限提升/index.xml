<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>权限提升 on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/</link>
        <description>Recent content in 权限提升 on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Sat, 02 Aug 2025 16:13:46 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>MS09-012补丁：修复&#34;令牌劫持&#34;漏洞的技术解析</title>
        <link>http://localhost:1313/p/ms09-012%E8%A1%A5%E4%B8%81%E4%BF%AE%E5%A4%8D%E4%BB%A4%E7%89%8C%E5%8A%AB%E6%8C%81%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Sat, 02 Aug 2025 16:13:46 +0800</pubDate>
        
        <guid>http://localhost:1313/p/ms09-012%E8%A1%A5%E4%B8%81%E4%BF%AE%E5%A4%8D%E4%BB%A4%E7%89%8C%E5%8A%AB%E6%8C%81%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
        <description>&lt;h1 id=&#34;ms09-012-修复令牌劫持漏洞&#34;&gt;MS09-012: 修复&amp;quot;令牌劫持&amp;quot;漏洞
&lt;/h1&gt;&lt;p&gt;今天早晨我们发布了MS09-012更新，用于修复公开披露的&amp;quot;令牌劫持&amp;quot;漏洞(&lt;a class=&#34;link&#34; href=&#34;http://www.argeniss.com/research/TokenKidnapping.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.argeniss.com/research/TokenKidnapping.pdf&lt;/a&gt;)。该漏洞允许从Network Service账户提权至Local System账户。通常情况下，恶意用户不会以Network Service身份运行，除非是像IIS这样的少数程序，可以在以Network Service运行的服务中执行任意代码。这使得攻击者能够攻破并控制Windows系统。&lt;/p&gt;
&lt;h2 id=&#34;我是否受影响&#34;&gt;我是否受影响？
&lt;/h2&gt;&lt;p&gt;此问题影响两种情况：在Network Service账户拥有的进程中执行不受信任的代码，或在具有SeImpersonatePrivilege的进程中执行代码。公开讨论的攻击方式是通过托管在IIS工作进程中的恶意Full Trust ASPX代码实现的。&lt;/p&gt;
&lt;h2 id=&#34;技术背景&#34;&gt;技术背景
&lt;/h2&gt;&lt;p&gt;修复此问题需要微软有史以来最庞大的工程努力之一。本次安全更新涉及：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows内核修改&lt;/li&gt;
&lt;li&gt;COM、DCOM和LSASS子系统&lt;/li&gt;
&lt;li&gt;WMI和MSDTC内置服务&lt;/li&gt;
&lt;li&gt;服务控制管理器(SCM)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们不得不将Vista和Server 2008中的服务令牌工作大量反向移植到XP和Server 2003。部分最资深的开发人员从Windows 7开发中抽调出来处理此问题。&lt;/p&gt;
&lt;h2 id=&#34;修复的四个cve漏洞&#34;&gt;修复的四个CVE漏洞
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CVE-2008-1436 (MSDTC)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题：MSDTC在创建RPC连接时请求过多权限&lt;/li&gt;
&lt;li&gt;修复：减少RPC连接时的权限请求&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CVE-2009-0079 (RPCSS)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题：Network Service账户下运行服务的权限问题&lt;/li&gt;
&lt;li&gt;修复：移植Vista的Service SID功能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CVE-2009-0080 (线程池)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题：线程创建时的权限验证不足&lt;/li&gt;
&lt;li&gt;修复：强化线程访问权限&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CVE-2009-0078 (WMI)&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题：WMI运行Network Service和Local Service提供程序时缺乏保护&lt;/li&gt;
&lt;li&gt;修复：采用基于Vista Service SID技术的WMI SID保护机制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;未来方向&#34;&gt;未来方向
&lt;/h2&gt;&lt;p&gt;Windows 7和Server 2008 R2将引入&amp;quot;托管服务账户&amp;quot;功能，提供更灵活的解决方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;允许服务运行为独立账户&lt;/li&gt;
&lt;li&gt;提供自动密码管理功能&lt;/li&gt;
&lt;li&gt;简化域SPN远程认证流程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;本文内容&amp;quot;按原样&amp;quot;提供，不提供任何担保，也不授予任何权利。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nick Finco, MSRC工程团队&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>以最复杂方式绕过UAC：Kerberos协议漏洞利用详解</title>
        <link>http://localhost:1313/p/%E4%BB%A5%E6%9C%80%E5%A4%8D%E6%9D%82%E6%96%B9%E5%BC%8F%E7%BB%95%E8%BF%87uackerberos%E5%8D%8F%E8%AE%AE%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Fri, 01 Aug 2025 23:30:05 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BB%A5%E6%9C%80%E5%A4%8D%E6%9D%82%E6%96%B9%E5%BC%8F%E7%BB%95%E8%BF%87uackerberos%E5%8D%8F%E8%AE%AE%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E8%AF%A6%E8%A7%A3/</guid>
        <description>&lt;h1 id=&#34;以最复杂方式绕过uac&#34;&gt;以最复杂方式绕过UAC
&lt;/h1&gt;&lt;p&gt;虽然我不常研究这个，但发现新的UAC绕过方法总是很有趣。在阅读Rubeus工具的功能时，我意识到可以滥用Kerberos协议绕过UAC——至少在域加入系统中可行。不清楚之前是否有人记录过这种方法，有篇帖子讨论过类似技术但需要从其他系统发起攻击，而本文将描述本地实现的方案。&lt;/p&gt;
&lt;h2 id=&#34;技术背景&#34;&gt;技术背景
&lt;/h2&gt;&lt;p&gt;系统默认会通过LSASS过滤网络身份验证令牌，移除本地管理员的权限。但存在关键例外：如果用户是域用户兼本地管理员，LSASS会允许网络认证使用完整管理员令牌。这在通过Kerberos进行本地认证时会产生问题——难道这不是简单的UAC绕过吗？&lt;/p&gt;
&lt;p&gt;实际上Kerberos有专门机制阻止这种攻击。去年我阅读了微软工程师Steve Syfuhs关于Kerberos如何防止本地UAC绕过的文章。简而言之：当用户请求服务票据时，LSASS会在TGS-REQ请求中嵌入本地安全信息，这些信息会被编码到生成的票据中。当该票据用于本地系统认证时，Kerberos会提取这些信息进行验证。&lt;/p&gt;
&lt;p&gt;通过分析Kerberos票据，我们发现两个关键字段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Authorization&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;KERB_AD_RESTRICTION_ENTRY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Flags&lt;/span&gt;           &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LimitedToken&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Integrity&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Level&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Medium&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Machine&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ID&lt;/span&gt;      &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;6640665F&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Authorization&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;KERB_LOCAL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Security&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;60CE03337E01000025FC763900000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;核心绕过机制&#34;&gt;核心绕过机制
&lt;/h2&gt;&lt;p&gt;LSASS通过&lt;code&gt;LsaISetSupplementalTokenInfo&lt;/code&gt;函数处理这些字段，主要检查包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;比较票据中的MachineID与LSASS内存中的值&lt;/li&gt;
&lt;li&gt;检查未公开的LSA网络令牌过滤标志&lt;/li&gt;
&lt;li&gt;验证用户SID是否属于本地账户域&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当满足以下任一条件时过滤将失效：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户SID不属于本地账户域&lt;/li&gt;
&lt;li&gt;LocalAccountTokenFilterPolicy策略非零&lt;/li&gt;
&lt;li&gt;系统是域控制器(NtProductLanManNt)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;两种具体利用方法&#34;&gt;两种具体利用方法
&lt;/h2&gt;&lt;h3 id=&#34;方法一票据重用攻击&#34;&gt;方法一：票据重用攻击
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;获取本地系统的服务票据并保存&lt;/li&gt;
&lt;li&gt;重启系统使LSASS重新初始化&lt;/li&gt;
&lt;li&gt;重新加载旧票据，此时MachineID不匹配导致过滤失效&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;klist&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RPC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$env:COMPUTERNAME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Rubeus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;exe&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$env:COMPUTERNAME&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nowrap&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 保存Base64票据后重启&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;PS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Rubeus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;exe&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ptt&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ticket&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BASE64&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TICKET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;方法二票据伪造攻击&#34;&gt;方法二：票据伪造攻击
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;利用Benjamin Delpy在kekeo中发现的非约束委派漏洞获取本地TGT&lt;/li&gt;
&lt;li&gt;向KDC请求新的本地服务票据，填充伪造的MachineID&lt;/li&gt;
&lt;li&gt;将伪造票据导入缓存实现UAC绕过&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;kerb-local的奥秘&#34;&gt;KERB-LOCAL的奥秘
&lt;/h2&gt;&lt;p&gt;这个字段设计用于凭证重用，但实际使用频率很低，因为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;仅当服务端使用Negotiate包时有效&lt;/li&gt;
&lt;li&gt;本地Negotiate认证默认会选择NTLM协议&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有趣的是，KERB-LOCAL中的值实际是LSASS堆中KERB_CREDENTIAL结构的地址和票据计数。虽然Kerberos会验证PAC中的SID匹配性，但这种实现方式可能存在安全隐患。&lt;/p&gt;
&lt;p&gt;[更新] 文末提供了修改Win32 SCM API以强制使用Kerberos本地认证的C++代码示例。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
