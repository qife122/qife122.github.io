<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Frida on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/frida/</link>
        <description>Recent content in Frida on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Fri, 08 Aug 2025 23:51:31 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/frida/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>从checkra1n到Frida：iOS 13应用渗透测试快速入门指南</title>
        <link>http://localhost:1313/p/%E4%BB%8Echeckra1n%E5%88%B0fridaios-13%E5%BA%94%E7%94%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</link>
        <pubDate>Fri, 08 Aug 2025 23:51:31 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E4%BB%8Echeckra1n%E5%88%B0fridaios-13%E5%BA%94%E7%94%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</guid>
        <description>&lt;h1 id=&#34;从checkra1n到fridaios-app渗透测试快速入门指南&#34;&gt;从checkra1n到Frida：iOS App渗透测试快速入门指南
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;2020年4月19日更新：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过Cydia安装OpenSSH (ramsexy)&lt;/li&gt;
&lt;li&gt;Checkra1n现已支持Linux (inhibitor181)&lt;/li&gt;
&lt;li&gt;使用USB Type-A线缆而非Type-C (c0rv4x)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2020年4月26日更新：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux专用说明 (inhibitor181)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2020年8月14日更新：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Burp TLS v1.3配置&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;动机&#34;&gt;动机
&lt;/h2&gt;&lt;p&gt;我希望能开展移动应用渗透测试。虽然Android平台相对容易上手，但iOS则困难得多。例如Android有Android Virtual Device等模拟器，而iOS只有Xcode的iOS模拟器——它仅模拟软件环境而非硬件。因此iOS应用测试需要真实设备。&lt;/p&gt;
&lt;p&gt;更麻烦的是，即使像绕过SSL证书固定这样的基础操作也很复杂。Portswigger的Burp Suite Mobile Assistant需要安装在已越狱设备上，且仅支持iOS 9及以下版本。&lt;/p&gt;
&lt;p&gt;长期以来，渗透测试指南都建议从eBay购买运行旧版iOS的iPhone。较新的方案如Yogendra Jaiswal的优秀指南基于Unc0ver越狱，仅支持iOS 11.0-12.4。如果你的设备不在这个范围内，那就无计可施。&lt;/p&gt;
&lt;p&gt;幸运的是，随着checkra1n越狱工具的发布，现在可以越狱运行最新iOS的A5-A11芯片设备（包括iPhone、iPad和iPod）。许多在越狱&amp;quot;寒冬&amp;quot;中沉寂的iOS测试工具正在更新适配，新工具也在不断涌现。&lt;/p&gt;
&lt;p&gt;因此我编写这个快速入门指南，整合各种工具的安装说明，帮助你在现代设备上搭建iOS应用测试环境。后续我将分享如何用这些工具发现iOS应用漏洞。&lt;/p&gt;
&lt;h2 id=&#34;快速开始&#34;&gt;快速开始
&lt;/h2&gt;&lt;h3 id=&#34;硬件准备&#34;&gt;硬件准备
&lt;/h3&gt;&lt;p&gt;首先需要A5-A11芯片的设备，推荐iPhone。我使用iPhone 8。得益于checkra1n，你无需担心iOS版本——目前它支持最新的iOS 13.3。除macOS外，checkra1n也支持Linux。&lt;/p&gt;
&lt;h3 id=&#34;越狱操作&#34;&gt;越狱操作
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;警告&lt;/strong&gt;：越狱会显著降低设备安全性。请不要在主设备上进行，且越狱设备应仅用于渗透测试。&lt;/p&gt;
&lt;p&gt;建议使用USB-A线缆进行越狱，USB-C可能导致问题。&lt;/p&gt;
&lt;p&gt;注意checkra1n是半绑定式越狱——每次重启后越狱状态会丢失，需要重新操作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;步骤&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;从https://checkra.in/下载最新版checkra1n&lt;/li&gt;
&lt;li&gt;将iPhone连接至macOS设备，通过Applications → 右键checkra1n → 打开&lt;/li&gt;
&lt;li&gt;解锁iPhone，点击checkra1n中的&amp;quot;Start&amp;quot;&lt;/li&gt;
&lt;li&gt;按提示完成后续步骤，必要时重启&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Linux用户&lt;/strong&gt;：请先按&lt;a class=&#34;link&#34; href=&#34;https://checkra.in/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;此指南&lt;/a&gt;安装checkra1n，再执行相同越狱步骤。&lt;/p&gt;
&lt;p&gt;恭喜！你现在拥有已越狱的iPhone。让我们继续配置。&lt;/p&gt;
&lt;h3 id=&#34;安装cydia&#34;&gt;安装Cydia
&lt;/h3&gt;&lt;p&gt;非常简单：在越狱后的iPhone上打开checkra1n应用，点击&amp;quot;Install&amp;quot;部分的&amp;quot;Cydia&amp;quot;按钮。&lt;/p&gt;
&lt;p&gt;现在你已安装Cydia，可以安装后续测试所需的各种包。&lt;/p&gt;
&lt;h3 id=&#34;配置iproxy&#34;&gt;配置iProxy
&lt;/h3&gt;&lt;p&gt;虽然可以通过Wi-Fi SSH连接iPhone，但USB连接更快速可靠。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;步骤&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在iPhone的Cydia商店安装OpenSSH包，安装后会自动重启Springboard&lt;/li&gt;
&lt;li&gt;在连接的macOS设备上执行：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install libusbmuxd  &lt;span class=&#34;c1&#34;&gt;# Linux使用apt-get install libusbmuxd*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iproxy &lt;span class=&#34;m&#34;&gt;2222&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;22&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;# Linux使用iproxy 2222 44&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;另开终端执行：&lt;code&gt;ssh root@localhost -p 2222&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;密码输入：&lt;code&gt;alpine&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在你已建立SSH会话。还可以使用FileZilla等SFTP客户端传输文件，设置协议为SFTP，主机localhost，端口2222。&lt;/p&gt;
&lt;h3 id=&#34;安装frida和objection&#34;&gt;安装Frida和Objection
&lt;/h3&gt;&lt;p&gt;现在安装两个重要的移动应用测试工具：Frida和Objection。这里只介绍安装，使用细节请参考&lt;a class=&#34;link&#34; href=&#34;https://www.frida.re/docs/ios/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Frida iOS指南&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;步骤&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;macOS执行：&lt;code&gt;pip3 install frida-tools&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;iPhone上打开Cydia → Sources → Edit → Add → 输入&lt;code&gt;https://build.frida.re&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;搜索安装Frida&lt;/li&gt;
&lt;li&gt;macOS执行：&lt;code&gt;pip3 install objection&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;测试集成：&lt;code&gt;objection --gadget &amp;quot;com.apple.AppStore&amp;quot; explore&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;代理流量与绕过证书固定&#34;&gt;代理流量与绕过证书固定
&lt;/h3&gt;&lt;p&gt;通过Burp Suite代理流量是标准操作，请遵循Yogendra Jaiswal文章中的步骤。Burp Suite 2020.4版本新增了禁用TLSv1.3的选项，有助于iOS信任自定义证书。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置步骤&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Burp Suite中：Proxy → Options → Proxy Listener → Add → 绑定端口1337 → 绑定地址选All interfaces → TLS Protocols → 取消勾选TLSv1.3 → OK&lt;/li&gt;
&lt;li&gt;iPhone设置：Wi-Fi → 信息 → 配置代理 → 手动 → 设置服务器和端口&lt;/li&gt;
&lt;li&gt;iPhone访问&lt;code&gt;http://burp&lt;/code&gt; → 下载CA证书 → 设置中安装&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于使用证书固定的应用，可以使用支持iOS 13的SSL Kill Switch 2工具。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装步骤&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确保Cydia已安装：wget、Debian Packager、Cydia Substrate、PreferenceLoader&lt;/li&gt;
&lt;li&gt;从&lt;a class=&#34;link&#34; href=&#34;https://github.com/nabla-c0d3/ssl-kill-switch2/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SSL Kill Switch 2发布页&lt;/a&gt;复制最新.deb链接&lt;/li&gt;
&lt;li&gt;SSH到iPhone执行：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget &amp;lt;下载链接&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dpkg -i &amp;lt;包名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;killall -HUP SpringBoard
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm &amp;lt;包名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;iPhone设置中启用SSL Kill Switch 2 → 禁用证书验证&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;绕过越狱检测&#34;&gt;绕过越狱检测
&lt;/h3&gt;&lt;p&gt;虽然越狱检测很麻烦，但有解决方案。在支持iOS 13的包中，Liberty Lite Cydia模块表现最稳定。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装步骤&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cydia中添加源：&lt;code&gt;https://ryleyangus.com/repo/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;搜索安装Liberty Lite&lt;/li&gt;
&lt;li&gt;设置中启用对应应用的越狱检测屏蔽&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果仍不生效，可以尝试其他模块。&lt;/p&gt;
&lt;h3 id=&#34;提取应用文件&#34;&gt;提取应用文件
&lt;/h3&gt;&lt;p&gt;与Android的apk不同，iOS应用以加密的ipa格式存储。通过iproxy和Frida，我们可以使用frida-ios-dump在运行时提取。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;操作步骤&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;macOS执行：
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/AloneMonkey/frida-ios-dump.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; frida-ios-dump
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo pip3 install -r requirements.txt --upgrade
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;另开终端运行&lt;code&gt;iproxy 2222 22&lt;/code&gt;（如果未运行）&lt;/li&gt;
&lt;li&gt;提取应用：&lt;code&gt;./dump.py &amp;lt;应用显示名或Bundle ID&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;建议创建符号链接方便使用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ln -s &amp;lt;绝对路径/dump.py&amp;gt; /usr/local/bin/dump-ipa
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;结语&#34;&gt;结语
&lt;/h2&gt;&lt;p&gt;通过本指南，你现在已具备iOS应用渗透测试的基础工具链，可以开始分析应用文件、挂钩类方法以及测试Web API。最重要的是，这一切都在现代iOS设备和版本上实现。&lt;/p&gt;
&lt;p&gt;希望本指南能帮助你搭建iOS测试环境。后续我将分享使用这些工具发现的漏洞案例，指出常见问题模式。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
