<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>漏洞缓解 on 办公AI智能小助手</title>
        <link>http://localhost:1313/tags/%E6%BC%8F%E6%B4%9E%E7%BC%93%E8%A7%A3/</link>
        <description>Recent content in 漏洞缓解 on 办公AI智能小助手</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>qife</copyright>
        <lastBuildDate>Sun, 03 Aug 2025 08:56:01 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E6%BC%8F%E6%B4%9E%E7%BC%93%E8%A7%A3/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>EMET 5.5 发布：增强Windows系统安全防护的新利器</title>
        <link>http://localhost:1313/p/emet-5.5-%E5%8F%91%E5%B8%83%E5%A2%9E%E5%BC%BAwindows%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E9%98%B2%E6%8A%A4%E7%9A%84%E6%96%B0%E5%88%A9%E5%99%A8/</link>
        <pubDate>Sun, 03 Aug 2025 08:56:01 +0800</pubDate>
        
        <guid>http://localhost:1313/p/emet-5.5-%E5%8F%91%E5%B8%83%E5%A2%9E%E5%BC%BAwindows%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E9%98%B2%E6%8A%A4%E7%9A%84%E6%96%B0%E5%88%A9%E5%99%A8/</guid>
        <description>&lt;h1 id=&#34;增强缓解体验工具包emet55版本现已发布&#34;&gt;增强缓解体验工具包(EMET)5.5版本现已发布
&lt;/h1&gt;&lt;p&gt;增强缓解体验工具包(EMET)通过预测、转移、终止、阻止或使攻击者常用的入侵技术失效，帮助企业和所有计算机用户防范可能破坏业务和日常生活的安全威胁。这种方式使EMET能在安全更新和反恶意软件正式应对前，就为计算机系统提供针对新型未知威胁的保护。&lt;/p&gt;
&lt;p&gt;今天我们很高兴宣布EMET 5.5的发布，包含以下新功能和更新：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows 10兼容性支持&lt;/li&gt;
&lt;li&gt;通过组策略改进多种缓解措施的配置&lt;/li&gt;
&lt;li&gt;优化缓解措施写入注册表的方式，便于利用现有工具通过组策略管理EMET&lt;/li&gt;
&lt;li&gt;EAF/EAF+伪缓解性能改进&lt;/li&gt;
&lt;li&gt;支持Windows 10中的不受信任字体缓解&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;windows-10中的缓解措施&#34;&gt;Windows 10中的缓解措施
&lt;/h2&gt;&lt;p&gt;EMET于2009年作为独立工具发布，通过提供管理内置Windows安全缓解措施的界面，并附加干扰常见恶意软件攻击向量的功能，帮助企业更好地保护Windows客户端。随着时间推移，我们对浏览器和核心操作系统的安全性做出了重大改进。在Windows 10中，我们实现了许多可能使EMET变得不必要的功能和缓解措施。EMET在保护旧版系统、遗留应用程序以及为尚未使用控制流防护(CFG)重新编译的第三方软件提供CFG保护方面最为有用。&lt;/p&gt;
&lt;p&gt;Windows 10中提供与EMET相当(或更好)缓解措施的功能包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;设备防护(Device Guard)&lt;/strong&gt;：结合企业级硬件和软件安全功能，将设备锁定为仅可运行受信任的应用程序。为内核模式下的所有软件提供基于硬件的零日防护。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;控制流防护(CFG)&lt;/strong&gt;：在编译新应用时分析每个间接调用指令可达的位置，并在运行时检查每个间接调用的目标是否为预期安全位置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用程序控制(AppLocker)&lt;/strong&gt;：Windows 7引入的应用程序控制功能，可防止组织中运行不需要和未知的应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;emet-55与edge浏览器&#34;&gt;EMET 5.5与Edge浏览器
&lt;/h2&gt;&lt;p&gt;鉴于Microsoft Edge采用的先进保护技术(包括行业领先的沙盒、编译器和内存管理技术)，EMET 5.5的缓解措施不适用于Edge。&lt;/p&gt;
&lt;p&gt;如需EMET 5.5的使用支持，请访问：https://support.microsoft.com/en-us/kb/2458544&lt;/p&gt;
</description>
        </item>
        <item>
        <title>谷歌工程师提出方案缓解JavaScript原型污染漏洞</title>
        <link>http://localhost:1313/p/%E8%B0%B7%E6%AD%8C%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%8F%90%E5%87%BA%E6%96%B9%E6%A1%88%E7%BC%93%E8%A7%A3javascript%E5%8E%9F%E5%9E%8B%E6%B1%A1%E6%9F%93%E6%BC%8F%E6%B4%9E/</link>
        <pubDate>Sat, 02 Aug 2025 12:20:23 +0800</pubDate>
        
        <guid>http://localhost:1313/p/%E8%B0%B7%E6%AD%8C%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%8F%90%E5%87%BA%E6%96%B9%E6%A1%88%E7%BC%93%E8%A7%A3javascript%E5%8E%9F%E5%9E%8B%E6%B1%A1%E6%9F%93%E6%BC%8F%E6%B4%9E/</guid>
        <description>&lt;h1 id=&#34;谷歌工程师提出方案缓解原型污染&#34;&gt;谷歌工程师提出方案缓解原型污染
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;John Leyden&lt;/strong&gt;&lt;br&gt;
2023年2月6日 15:57 UTC&lt;br&gt;
更新于2023年2月6日 17:02 UTC&lt;/p&gt;
&lt;p&gt;谷歌的软件工程师提出了一项提案，旨在遏制已成为Web安全公害的原型污染漏洞。原型污染是JavaScript语言缺陷，允许攻击者在运行时操纵他们无法控制或访问的对象。该问题源于对象（用于在运行时保存数据）与其原型（决定对象行为方式）之间缺乏明确界限。&lt;/p&gt;
&lt;p&gt;这项获得谷歌支持的提案已提交给技术工作组TC39审议，旨在创建JavaScript对象与原型之间的边界。其技术原理是&amp;quot;消除允许攻击者从对象跳转到原型的路径&amp;quot;。提案技术细节已发布在GitHub上。&lt;/p&gt;
&lt;h2 id=&#34;可选安全模式&#34;&gt;可选安全模式
&lt;/h2&gt;&lt;p&gt;正如GitHub帖子所述，该&amp;quot;提案试图通过引入可选安全模式来缓解原型污染，该模式使得无法使用字符串属性键访问原型，而要求必须通过方法（Object.getPrototypeOf）或提议的新符号属性键来访问&amp;quot;。&lt;/p&gt;
&lt;p&gt;提案合著者Santiago Diaz表示：&amp;ldquo;目标是打破已知的利用技术，同时尽可能与现有代码库兼容，以便这种缓解措施能在互联网上广泛采用。&amp;ldquo;TC39工作组已批准提案从阶段0进入阶段1，开始了五部分批准流程的下一阶段。&lt;/p&gt;
&lt;h2 id=&#34;符号解决方案&#34;&gt;符号解决方案
&lt;/h2&gt;&lt;p&gt;PortSwigger安全研究员Gareth Hayes对此提案表示兴趣：&amp;ldquo;这是通过让开发者能够移除__proto__等属性来防止原型污染的提案。他们建议使用符号使网站继续使用__proto__功能，这样网站不会崩溃，攻击者也无法提供这些符号，因为这需要JavaScript执行。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;谷歌提案并非首创。但根据谷歌博客文章，现有解决方案如Object.freeze、preventExtensions和seal存在&amp;quot;使其难以部署的缺点&amp;rdquo;。该提案有望提供更实用的解决方案。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
