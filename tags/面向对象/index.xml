<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面向对象 on 办公AI智能小助手</title>
    <link>https://qife122.github.io/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link>
    <description>Recent content in 面向对象 on 办公AI智能小助手</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>qife</copyright>
    <lastBuildDate>Sat, 02 Aug 2025 14:30:01 +0800</lastBuildDate>
    <atom:link href="https://qife122.github.io/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>深入解析抽象工厂模式：构建灵活可扩展的软件架构</title>
      <link>https://qife122.github.io/p/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E6%9E%84%E5%BB%BA%E7%81%B5%E6%B4%BB%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Sat, 02 Aug 2025 14:30:01 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E6%9E%84%E5%BB%BA%E7%81%B5%E6%B4%BB%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/</guid>
      <description>&lt;h1 id=&#34;abstract-factory-pattern&#34;&gt;Abstract Factory pattern&lt;/h1&gt;&#xA;&lt;p&gt;工厂模式一直是构建应用程序的关键模式，它简单、高效且直击要点。当开始学习面向设计的方法构建应用或API时，我总是推荐将工厂模式作为设计中的关键切入点。今天我要讨论的是抽象工厂模式。它并不是你称之为模式的&amp;quot;抽象&amp;quot;类或对象，而是工厂的工厂——这正是它被称为&amp;quot;抽象&amp;quot;的原因。&amp;ldquo;抽象&amp;quot;类的存在只是这个模式的另一个侧面。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
