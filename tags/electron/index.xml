<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Electron on 办公AI智能小助手</title>
    <link>https://qife122.github.io/tags/electron/</link>
    <description>Recent content in Electron on 办公AI智能小助手</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>qife</copyright>
    <lastBuildDate>Sun, 03 Aug 2025 10:18:30 +0800</lastBuildDate>
    <atom:link href="https://qife122.github.io/tags/electron/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Electron应用安全测试工具化指南</title>
      <link>https://qife122.github.io/p/electron%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E5%8C%96%E6%8C%87%E5%8D%97/</link>
      <pubDate>Sun, 03 Aug 2025 10:18:30 +0800</pubDate>
      <guid>https://qife122.github.io/p/electron%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E5%8C%96%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h1 id=&#34;electron应用安全测试工具化指南&#34;&gt;Electron应用安全测试工具化指南&lt;/h1&gt;&#xA;&lt;p&gt;随着Electron框架的流行，我们总结了以下技术手段用于对Electron应用进行工具化改造、行为修改和深度安全评估。&lt;/p&gt;&#xA;&lt;h2 id=&#34;electron进程架构&#34;&gt;Electron进程架构&lt;/h2&gt;&#xA;&lt;p&gt;Electron框架使用HTML、JavaScript和CSS开发跨平台桌面应用，其核心由Node.js和Chromium的libchromiumcontent模块组成。主进程运行package.json的主脚本，负责启动其他进程；渲染进程则用于显示网页内容。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Discord桌面应用远程代码执行漏洞分析</title>
      <link>https://qife122.github.io/p/discord%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 03 Aug 2025 03:25:44 +0800</pubDate>
      <guid>https://qife122.github.io/p/discord%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
      <description>&lt;h1 id=&#34;discord桌面应用rce漏洞分析&#34;&gt;Discord桌面应用RCE漏洞分析&lt;/h1&gt;&#xA;&lt;p&gt;几个月前，我在Discord桌面应用中发现了一个远程代码执行漏洞，并通过其漏洞赏金计划进行了报告。这个RCE漏洞的有趣之处在于它需要组合多个漏洞才能实现。本文将分享详细的技术细节。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
