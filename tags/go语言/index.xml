<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go语言 on 办公AI智能小助手</title>
    <link>https://qife122.github.io/tags/go%E8%AF%AD%E8%A8%80/</link>
    <description>Recent content in Go语言 on 办公AI智能小助手</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>qife</copyright>
    <lastBuildDate>Sun, 03 Aug 2025 21:41:56 +0800</lastBuildDate>
    <atom:link href="https://qife122.github.io/tags/go%E8%AF%AD%E8%A8%80/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go语言访问控制指南：Java开发者必读</title>
      <link>https://qife122.github.io/p/go%E8%AF%AD%E8%A8%80%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%8C%87%E5%8D%97java%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E8%AF%BB/</link>
      <pubDate>Sun, 03 Aug 2025 21:41:56 +0800</pubDate>
      <guid>https://qife122.github.io/p/go%E8%AF%AD%E8%A8%80%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%8C%87%E5%8D%97java%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E8%AF%BB/</guid>
      <description>&lt;h1 id=&#34;go语言访问控制指南java开发者必读&#34;&gt;Go语言访问控制指南：Java开发者必读&lt;/h1&gt;&#xA;&lt;p&gt;Go支持多种编程范式，包括面向对象编程。但如果你从Java转向Go，可能会感到些许&amp;hellip;呃&amp;hellip;不适应。最明显的差异之一是Go完全没有访问修饰符。你可能会疑惑：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go语言解析器中的意外安全陷阱</title>
      <link>https://qife122.github.io/p/go%E8%AF%AD%E8%A8%80%E8%A7%A3%E6%9E%90%E5%99%A8%E4%B8%AD%E7%9A%84%E6%84%8F%E5%A4%96%E5%AE%89%E5%85%A8%E9%99%B7%E9%98%B1/</link>
      <pubDate>Fri, 01 Aug 2025 22:04:53 +0800</pubDate>
      <guid>https://qife122.github.io/p/go%E8%AF%AD%E8%A8%80%E8%A7%A3%E6%9E%90%E5%99%A8%E4%B8%AD%E7%9A%84%E6%84%8F%E5%A4%96%E5%AE%89%E5%85%A8%E9%99%B7%E9%98%B1/</guid>
      <description>&lt;h1 id=&#34;go语言解析器中的意外安全陷阱&#34;&gt;Go语言解析器中的意外安全陷阱&lt;/h1&gt;&#xA;&lt;p&gt;在Go应用程序中，解析不可信数据会形成危险的攻击面。通过三个真实攻击场景，我们揭示了Go标准库解析器中的安全隐患：&lt;/p&gt;&#xA;&lt;h2 id=&#34;攻击场景1意外反序列化数据&#34;&gt;攻击场景1：意外(反)序列化数据&lt;/h2&gt;&#xA;&lt;p&gt;当开发者使用&lt;code&gt;json:&amp;quot;-&amp;quot;&lt;/code&gt;标记试图阻止字段被反序列化时，错误添加的逗号后缀会导致该字段仍可通过&lt;code&gt;&amp;quot;-&amp;quot;&lt;/code&gt;键被修改：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
