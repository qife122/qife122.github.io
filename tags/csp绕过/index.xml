<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSP绕过 on 办公AI智能小助手</title>
    <link>https://qife122.github.io/tags/csp%E7%BB%95%E8%BF%87/</link>
    <description>Recent content in CSP绕过 on 办公AI智能小助手</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>qife</copyright>
    <lastBuildDate>Wed, 06 Aug 2025 13:58:10 +0800</lastBuildDate>
    <atom:link href="https://qife122.github.io/tags/csp%E7%BB%95%E8%BF%87/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HackMD上的可蠕虫化XSS漏洞分析与利用</title>
      <link>https://qife122.github.io/p/hackmd%E4%B8%8A%E7%9A%84%E5%8F%AF%E8%A0%95%E8%99%AB%E5%8C%96xss%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%88%A9%E7%94%A8/</link>
      <pubDate>Wed, 06 Aug 2025 13:58:10 +0800</pubDate>
      <guid>https://qife122.github.io/p/hackmd%E4%B8%8A%E7%9A%84%E5%8F%AF%E8%A0%95%E8%99%AB%E5%8C%96xss%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%88%A9%E7%94%A8/</guid>
      <description>&lt;h1 id=&#34;hackmd上的可蠕虫化xss漏洞&#34;&gt;HackMD上的可蠕虫化XSS漏洞&lt;/h1&gt;&#xA;&lt;p&gt;在Web安全领域，我通常更偏爱服务器端漏洞而非客户端漏洞（当然能直接获取shell的客户端漏洞除外XD）。但这次发现的XSS漏洞确实有些特别，因此决定分享这个有趣的发现。&lt;/p&gt;</description>
    </item>
    <item>
      <title>HackMD中的可蠕虫化XSS漏洞分析</title>
      <link>https://qife122.github.io/p/hackmd%E4%B8%AD%E7%9A%84%E5%8F%AF%E8%A0%95%E8%99%AB%E5%8C%96xss%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 06 Aug 2025 04:18:37 +0800</pubDate>
      <guid>https://qife122.github.io/p/hackmd%E4%B8%AD%E7%9A%84%E5%8F%AF%E8%A0%95%E8%99%AB%E5%8C%96xss%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
      <description>&lt;h1 id=&#34;可蠕虫化的hackmd-xss漏洞&#34;&gt;可蠕虫化的HackMD XSS漏洞&lt;/h1&gt;&#xA;&lt;p&gt;在Web安全领域，我通常更偏爱服务器端漏洞而非客户端漏洞（当然能直接获取shell的客户端漏洞除外XD）。控制他人服务器对我来说更有趣！正因如此，我以往较少关注XSS和CSRF等客户端漏洞（翻看记录只有2018年Google CTF那篇）。但这次发现的漏洞相当有趣，本着教育（和炫耀？）的心态决定撰文分享。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
