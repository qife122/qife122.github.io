<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>二进制分析 on 办公AI智能小助手</title>
    <link>https://qife122.github.io/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%88%86%E6%9E%90/</link>
    <description>Recent content in 二进制分析 on 办公AI智能小助手</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>qife</copyright>
    <lastBuildDate>Fri, 08 Aug 2025 06:05:48 +0800</lastBuildDate>
    <atom:link href="https://qife122.github.io/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%88%86%E6%9E%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>我们在网络大挑战中的表现 - 自动化漏洞挖掘与修复技术解析</title>
      <link>https://qife122.github.io/p/%E6%88%91%E4%BB%AC%E5%9C%A8%E7%BD%91%E7%BB%9C%E5%A4%A7%E6%8C%91%E6%88%98%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%8E%B0-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E4%B8%8E%E4%BF%AE%E5%A4%8D%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Fri, 08 Aug 2025 06:05:48 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E6%88%91%E4%BB%AC%E5%9C%A8%E7%BD%91%E7%BB%9C%E5%A4%A7%E6%8C%91%E6%88%98%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%8E%B0-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E4%B8%8E%E4%BF%AE%E5%A4%8D%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
      <description>&lt;h1 id=&#34;我们在网络大挑战中的表现&#34;&gt;我们在网络大挑战中的表现&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;Artem Dinaburg&lt;/strong&gt;&lt;br&gt;&#xA;2015年7月15日&lt;/p&gt;&#xA;&lt;p&gt;网络大挑战资格赛于6月3日东部时间中午准时开始。那一刻，我们的网络推理系统(CRS)收到了131个专门构建的不安全程序。在随后的24小时内，我们的CRS成功识别了其中65个程序的漏洞，并重写了94个程序以消除代码中的缺陷。这无疑证明，将优秀软件审计师的工作自动化不仅是可能的，而且是可实现的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>自动化逆向工程培训正式发布 - Binary Ninja实战指南</title>
      <link>https://qife122.github.io/p/%E8%87%AA%E5%8A%A8%E5%8C%96%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E5%9F%B9%E8%AE%AD%E6%AD%A3%E5%BC%8F%E5%8F%91%E5%B8%83-binary-ninja%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97/</link>
      <pubDate>Fri, 08 Aug 2025 04:06:27 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E8%87%AA%E5%8A%A8%E5%8C%96%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E5%9F%B9%E8%AE%AD%E6%AD%A3%E5%BC%8F%E5%8F%91%E5%B8%83-binary-ninja%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h3 id=&#34;即将开课的培训&#34;&gt;即将开课的培训&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;2020年1月20-23日 - 纽约&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;我们多年来一直推崇Vector35开发的Binary Ninja工具，并运用它完成了多项突破性工作：&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用Binary Ninja API检测潜在释放后使用漏洞的技术解析</title>
      <link>https://qife122.github.io/p/%E4%BD%BF%E7%94%A8binary-ninja-api%E6%A3%80%E6%B5%8B%E6%BD%9C%E5%9C%A8%E9%87%8A%E6%94%BE%E5%90%8E%E4%BD%BF%E7%94%A8%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Wed, 06 Aug 2025 11:46:22 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E4%BD%BF%E7%94%A8binary-ninja-api%E6%A3%80%E6%B5%8B%E6%BD%9C%E5%9C%A8%E9%87%8A%E6%94%BE%E5%90%8E%E4%BD%BF%E7%94%A8%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90/</guid>
      <description>&lt;h2 id=&#34;释放后使用漏洞的静态检测挑战&#34;&gt;释放后使用漏洞的静态检测挑战&lt;/h2&gt;&#xA;&lt;p&gt;释放后使用(Use-after-Free)是一种内存破坏条件，程序在内存被释放后仍继续引用。静态检测这类漏洞具有挑战性。本文探索了利用Binary Ninja的中级中间语言(MLIL)建立数据流图的方法，通过追踪特定内存分配与其他内存区域的交互关系，进行跨函数分析以识别潜在漏洞。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用CodeReason进行原生程序语义分析 - 揭秘二进制逆向工程利器</title>
      <link>https://qife122.github.io/p/%E4%BD%BF%E7%94%A8codereason%E8%BF%9B%E8%A1%8C%E5%8E%9F%E7%94%9F%E7%A8%8B%E5%BA%8F%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90-%E6%8F%AD%E7%A7%98%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E5%88%A9%E5%99%A8/</link>
      <pubDate>Tue, 05 Aug 2025 03:08:37 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E4%BD%BF%E7%94%A8codereason%E8%BF%9B%E8%A1%8C%E5%8E%9F%E7%94%9F%E7%A8%8B%E5%BA%8F%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90-%E6%8F%AD%E7%A7%98%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E5%88%A9%E5%99%A8/</guid>
      <description>&lt;h1 id=&#34;原生程序的语义分析codereason技术解析&#34;&gt;原生程序的语义分析：CodeReason技术解析&lt;/h1&gt;&#xA;&lt;p&gt;你是否曾想对原生模式程序发起查询，询问哪些代码位置会向特定寄存器写入特定值？是否希望自动化解混淆字符串的操作？&lt;/p&gt;&#xA;&lt;h2 id=&#34;逆向工程的语义挑战&#34;&gt;逆向工程的语义挑战&lt;/h2&gt;&#xA;&lt;p&gt;逆向工程原生程序需要在低层次理解其语义，直到浮现出高层次功能图景。系统化理解原生程序的一个关键挑战在于：这种理解必须覆盖程序使用的每一条指令。分析工具需要明确知道哪些指令会对内存调用和寄存器产生何种影响。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Manticore 0.3.0发布：符号执行引擎的重大升级</title>
      <link>https://qife122.github.io/p/manticore-0.3.0%E5%8F%91%E5%B8%83%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E%E7%9A%84%E9%87%8D%E5%A4%A7%E5%8D%87%E7%BA%A7/</link>
      <pubDate>Mon, 04 Aug 2025 03:03:11 +0800</pubDate>
      <guid>https://qife122.github.io/p/manticore-0.3.0%E5%8F%91%E5%B8%83%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E5%BC%95%E6%93%8E%E7%9A%84%E9%87%8D%E5%A4%A7%E5%8D%87%E7%BA%A7/</guid>
      <description>&lt;h1 id=&#34;执行器重构&#34;&gt;执行器重构&lt;/h1&gt;&#xA;&lt;p&gt;Felipe Manzano完成了Manticore状态机的重大重构，现在采用多进程模块（multiprocessing），为未来实现分布式符号执行奠定了基础。该重构引入了少量API变更：&lt;/p&gt;</description>
    </item>
    <item>
      <title>我们在网络大挑战中的表现 - 自动化漏洞挖掘与修复的技术实践</title>
      <link>https://qife122.github.io/p/%E6%88%91%E4%BB%AC%E5%9C%A8%E7%BD%91%E7%BB%9C%E5%A4%A7%E6%8C%91%E6%88%98%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%8E%B0-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E4%B8%8E%E4%BF%AE%E5%A4%8D%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Sun, 03 Aug 2025 19:30:29 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E6%88%91%E4%BB%AC%E5%9C%A8%E7%BD%91%E7%BB%9C%E5%A4%A7%E6%8C%91%E6%88%98%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%8E%B0-%E8%87%AA%E5%8A%A8%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E4%B8%8E%E4%BF%AE%E5%A4%8D%E7%9A%84%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;h1 id=&#34;我们在网络大挑战中的表现&#34;&gt;我们在网络大挑战中的表现&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;Artem Dinaburg&lt;/strong&gt;&lt;br&gt;&#xA;2015年7月15日&lt;/p&gt;&#xA;&lt;p&gt;网络大挑战资格赛于6月3日东部时间中午准时开始。那一刻，我们的网络推理系统(CRS)收到了131个特制的不安全程序。在接下来的24小时里，我们的系统成功识别了其中65个程序的漏洞，并重写了94个程序以消除代码中的缺陷。这无疑证明，将优秀软件审计师的工作自动化不仅是可能的，而且是可以实现的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用Binary Ninja进行反向污点分析 - 追踪程序崩溃根源</title>
      <link>https://qife122.github.io/p/%E4%BD%BF%E7%94%A8binary-ninja%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%90%91%E6%B1%A1%E7%82%B9%E5%88%86%E6%9E%90-%E8%BF%BD%E8%B8%AA%E7%A8%8B%E5%BA%8F%E5%B4%A9%E6%BA%83%E6%A0%B9%E6%BA%90/</link>
      <pubDate>Sun, 03 Aug 2025 00:44:21 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E4%BD%BF%E7%94%A8binary-ninja%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%90%91%E6%B1%A1%E7%82%B9%E5%88%86%E6%9E%90-%E8%BF%BD%E8%B8%AA%E7%A8%8B%E5%BA%8F%E5%B4%A9%E6%BA%83%E6%A0%B9%E6%BA%90/</guid>
      <description>&lt;h1 id=&#34;反向污点分析原理&#34;&gt;反向污点分析原理&lt;/h1&gt;&#xA;&lt;p&gt;在Trail of Bits暑期实习期间，我开发了KRFAnalysis工具集，用于分析系统调用故障注入工具KRF产生的崩溃。KRF能有效引发程序崩溃，但难以确定具体是哪个故障系统调用导致了崩溃。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2017年度回顾：自动化漏洞挖掘、符号执行与区块链安全的技术突破</title>
      <link>https://qife122.github.io/p/2017%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%BE%E8%87%AA%E5%8A%A8%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E4%B8%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8%E7%9A%84%E6%8A%80%E6%9C%AF%E7%AA%81%E7%A0%B4/</link>
      <pubDate>Sat, 02 Aug 2025 03:22:11 +0800</pubDate>
      <guid>https://qife122.github.io/p/2017%E5%B9%B4%E5%BA%A6%E5%9B%9E%E9%A1%BE%E8%87%AA%E5%8A%A8%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E4%B8%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AE%89%E5%85%A8%E7%9A%84%E6%8A%80%E6%9C%AF%E7%AA%81%E7%A0%B4/</guid>
      <description>&lt;h1 id=&#34;2017年度回顾---trail-of-bits博客&#34;&gt;2017年度回顾 - Trail of Bits博客&lt;/h1&gt;&#xA;&lt;p&gt;2017年是技术突破的一年！我们在自动化漏洞发现、符号执行和二进制翻译等领域发布了创新研究，并改进了安全研究人员依赖的基础工具。我们在智能合约安全领域扩大影响力，成为顶尖的区块链安全公司。&lt;/p&gt;</description>
    </item>
    <item>
      <title>四月渗透季 - Trail of Bits博客聚焦二进制分析与漏洞研究</title>
      <link>https://qife122.github.io/p/%E5%9B%9B%E6%9C%88%E6%B8%97%E9%80%8F%E5%AD%A3-trail-of-bits%E5%8D%9A%E5%AE%A2%E8%81%9A%E7%84%A6%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%88%86%E6%9E%90%E4%B8%8E%E6%BC%8F%E6%B4%9E%E7%A0%94%E7%A9%B6/</link>
      <pubDate>Fri, 01 Aug 2025 21:58:00 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E5%9B%9B%E6%9C%88%E6%B8%97%E9%80%8F%E5%AD%A3-trail-of-bits%E5%8D%9A%E5%AE%A2%E8%81%9A%E7%84%A6%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%88%86%E6%9E%90%E4%B8%8E%E6%BC%8F%E6%B4%9E%E7%A0%94%E7%A9%B6/</guid>
      <description>&lt;h2 id=&#34;突破传统黑客极限&#34;&gt;突破传统黑客极限&lt;/h2&gt;&#xA;&lt;p&gt;穿上你的瓜亚贝拉衬衫，Infiltrate盛会即将开启。Trail of Bits自2015年起持续赞助并全员参与这一顶尖会议（今年多达18人！）。除了交换纪念品，我们更期待见证最新安全研究成果——包括我们自己的突破性贡献。&lt;/p&gt;</description>
    </item>
    <item>
      <title>McSema二进制转LLVM比特码工具重大升级</title>
      <link>https://qife122.github.io/p/mcsema%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%ACllvm%E6%AF%94%E7%89%B9%E7%A0%81%E5%B7%A5%E5%85%B7%E9%87%8D%E5%A4%A7%E5%8D%87%E7%BA%A7/</link>
      <pubDate>Fri, 01 Aug 2025 21:24:22 +0800</pubDate>
      <guid>https://qife122.github.io/p/mcsema%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%ACllvm%E6%AF%94%E7%89%B9%E7%A0%81%E5%B7%A5%E5%85%B7%E9%87%8D%E5%A4%A7%E5%8D%87%E7%BA%A7/</guid>
      <description>&lt;h1 id=&#34;mcsema二进制转llvm比特码工具重大升级&#34;&gt;McSema：二进制转LLVM比特码工具重大升级&lt;/h1&gt;&#xA;&lt;p&gt;我们的x86机器码转LLVM比特码工具McSema刚刚完成全面升级。上周举办的开发马拉松显著改善了McSema的易用性、文档质量和代码质量，现在使用McSema分析和逆向工程二进制文件比以往任何时候都更容易。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
