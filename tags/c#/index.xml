<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on 办公AI智能小助手</title>
    <link>https://qife122.github.io/tags/c%23/</link>
    <description>Recent content in C# on 办公AI智能小助手</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>qife</copyright>
    <lastBuildDate>Tue, 05 Aug 2025 22:12:27 +0800</lastBuildDate>
    <atom:link href="https://qife122.github.io/tags/c%23/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C#记录类型与集合的深度探讨：从自动生成代码到自定义相等性比较</title>
      <link>https://qife122.github.io/p/c%23%E8%AE%B0%E5%BD%95%E7%B1%BB%E5%9E%8B%E4%B8%8E%E9%9B%86%E5%90%88%E7%9A%84%E6%B7%B1%E5%BA%A6%E6%8E%A2%E8%AE%A8%E4%BB%8E%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E5%88%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%B8%E7%AD%89%E6%80%A7%E6%AF%94%E8%BE%83/</link>
      <pubDate>Tue, 05 Aug 2025 22:12:27 +0800</pubDate>
      <guid>https://qife122.github.io/p/c%23%E8%AE%B0%E5%BD%95%E7%B1%BB%E5%9E%8B%E4%B8%8E%E9%9B%86%E5%90%88%E7%9A%84%E6%B7%B1%E5%BA%A6%E6%8E%A2%E8%AE%A8%E4%BB%8E%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E5%88%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%B8%E7%AD%89%E6%80%A7%E6%AF%94%E8%BE%83/</guid>
      <description>&lt;h1 id=&#34;记录类型与集合&#34;&gt;记录类型与集合&lt;/h1&gt;&#xA;&lt;p&gt;本文某种程度上记录了我在选举站点中使用记录类型和集合时遇到的各种摩擦点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;记录类型回顾&#34;&gt;记录类型回顾&lt;/h2&gt;&#xA;&lt;p&gt;这可能是本系列中最具普适性的博客文章。尽管记录类型自C# 10就已存在，但我个人使用不多（虽然我期待这个功能已有十多年，不过那是另一回事）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用C#构建MCP服务器并在VS Code中运行AI代理</title>
      <link>https://qife122.github.io/p/%E4%BD%BF%E7%94%A8c%23%E6%9E%84%E5%BB%BAmcp%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E5%9C%A8vs-code%E4%B8%AD%E8%BF%90%E8%A1%8Cai%E4%BB%A3%E7%90%86/</link>
      <pubDate>Mon, 04 Aug 2025 00:53:25 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E4%BD%BF%E7%94%A8c%23%E6%9E%84%E5%BB%BAmcp%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E5%9C%A8vs-code%E4%B8%AD%E8%BF%90%E8%A1%8Cai%E4%BB%A3%E7%90%86/</guid>
      <description>&lt;h1 id=&#34;构建基于mcp协议的ai代理&#34;&gt;构建基于MCP协议的AI代理&lt;/h1&gt;&#xA;&lt;p&gt;大型语言模型（如GPT-4o、Claude或Gemini）在处理通用问题时表现优异，但往往难以应对特定领域查询（例如&amp;quot;仅显示戴尔设备信息&amp;quot;）。这是因为它们缺乏访问专有/内部数据的渠道。Model Context Protocol（MCP）通过提供上下文数据解决了这一痛点。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
