<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>访问控制 on 办公AI智能小助手</title>
    <link>https://qife122.github.io/tags/%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</link>
    <description>Recent content in 访问控制 on 办公AI智能小助手</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>qife</copyright>
    <lastBuildDate>Wed, 06 Aug 2025 11:12:50 +0800</lastBuildDate>
    <atom:link href="https://qife122.github.io/tags/%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>企业安全中的隐形威胁：流氓访问及其治理策略</title>
      <link>https://qife122.github.io/p/%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E4%B8%AD%E7%9A%84%E9%9A%90%E5%BD%A2%E5%A8%81%E8%83%81%E6%B5%81%E6%B0%93%E8%AE%BF%E9%97%AE%E5%8F%8A%E5%85%B6%E6%B2%BB%E7%90%86%E7%AD%96%E7%95%A5/</link>
      <pubDate>Wed, 06 Aug 2025 11:12:50 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E4%B8%AD%E7%9A%84%E9%9A%90%E5%BD%A2%E5%A8%81%E8%83%81%E6%B5%81%E6%B0%93%E8%AE%BF%E9%97%AE%E5%8F%8A%E5%85%B6%E6%B2%BB%E7%90%86%E7%AD%96%E7%95%A5/</guid>
      <description>&lt;h1 id=&#34;企业安全中的隐形威胁流氓访问&#34;&gt;企业安全中的隐形威胁：流氓访问&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;流氓访问&lt;/strong&gt;如同企业安全领域的暗物质：通常不可见且被忽视，但若放任不管则蕴含爆炸性风险。该术语指任何绕过正式审批渠道配置的访问权限，或在合法需求终止后仍保留的访问权限。与孤儿账户不同，流氓访问可能仍处于活跃状态甚至关联已知用户，但缺乏适当的所有权归属、合理性证明或追踪机制——这是脱离治理框架的访问行为。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go语言访问控制指南：Java开发者必读</title>
      <link>https://qife122.github.io/p/go%E8%AF%AD%E8%A8%80%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%8C%87%E5%8D%97java%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E8%AF%BB/</link>
      <pubDate>Sun, 03 Aug 2025 21:41:56 +0800</pubDate>
      <guid>https://qife122.github.io/p/go%E8%AF%AD%E8%A8%80%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%8C%87%E5%8D%97java%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E8%AF%BB/</guid>
      <description>&lt;h1 id=&#34;go语言访问控制指南java开发者必读&#34;&gt;Go语言访问控制指南：Java开发者必读&lt;/h1&gt;&#xA;&lt;p&gt;Go支持多种编程范式，包括面向对象编程。但如果你从Java转向Go，可能会感到些许&amp;hellip;呃&amp;hellip;不适应。最明显的差异之一是Go完全没有访问修饰符。你可能会疑惑：&lt;/p&gt;</description>
    </item>
    <item>
      <title>超越私钥风险：智能合约安全成熟度进阶指南</title>
      <link>https://qife122.github.io/p/%E8%B6%85%E8%B6%8A%E7%A7%81%E9%92%A5%E9%A3%8E%E9%99%A9%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8%E6%88%90%E7%86%9F%E5%BA%A6%E8%BF%9B%E9%98%B6%E6%8C%87%E5%8D%97/</link>
      <pubDate>Sat, 02 Aug 2025 20:14:41 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E8%B6%85%E8%B6%8A%E7%A7%81%E9%92%A5%E9%A3%8E%E9%99%A9%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8%E6%88%90%E7%86%9F%E5%BA%A6%E8%BF%9B%E9%98%B6%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h1 id=&#34;超越私钥风险智能合约安全成熟度进阶&#34;&gt;超越私钥风险：智能合约安全成熟度进阶&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;&amp;ldquo;找出所有漏洞！&amp;rdquo;&lt;/strong&gt;&lt;br&gt;&#xA;这是大多数协议在部署智能合约前的安全口号。团队投入巨资进行审计、竞赛、模糊测试和形式化验证，试图发现每个潜在漏洞。但去年加密货币被盗的最大原因并非智能合约漏洞——而是私钥泄露！&lt;/p&gt;</description>
    </item>
    <item>
      <title>ServiceNow管理员注意：立即修复访问控制列表漏洞</title>
      <link>https://qife122.github.io/p/servicenow%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E6%84%8F%E7%AB%8B%E5%8D%B3%E4%BF%AE%E5%A4%8D%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%88%97%E8%A1%A8%E6%BC%8F%E6%B4%9E/</link>
      <pubDate>Sat, 02 Aug 2025 05:44:03 +0800</pubDate>
      <guid>https://qife122.github.io/p/servicenow%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E6%84%8F%E7%AB%8B%E5%8D%B3%E4%BF%AE%E5%A4%8D%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%88%97%E8%A1%A8%E6%BC%8F%E6%B4%9E/</guid>
      <description>&lt;h1 id=&#34;warning-to-servicenow-admins-fix-your-access-control-lists-now&#34;&gt;Warning to ServiceNow admins: Fix your access control lists now&lt;/h1&gt;&#xA;&lt;p&gt;安全厂商警告称，ServiceNow管理用户访问控制列表(ACL)的方式存在漏洞，攻击者可轻松窃取敏感数据。研究人员敦促管理员立即检查自定义和标准数据配置表以加强安全防护。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
