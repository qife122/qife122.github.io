<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on 办公AI智能小助手</title>
    <link>https://qife122.github.io/tags/java/</link>
    <description>Recent content in Java on 办公AI智能小助手</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>qife</copyright>
    <lastBuildDate>Tue, 05 Aug 2025 15:43:32 +0800</lastBuildDate>
    <atom:link href="https://qife122.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java开发者大会与AI应用构建技术全览</title>
      <link>https://qife122.github.io/p/java%E5%BC%80%E5%8F%91%E8%80%85%E5%A4%A7%E4%BC%9A%E4%B8%8Eai%E5%BA%94%E7%94%A8%E6%9E%84%E5%BB%BA%E6%8A%80%E6%9C%AF%E5%85%A8%E8%A7%88/</link>
      <pubDate>Tue, 05 Aug 2025 15:43:32 +0800</pubDate>
      <guid>https://qife122.github.io/p/java%E5%BC%80%E5%8F%91%E8%80%85%E5%A4%A7%E4%BC%9A%E4%B8%8Eai%E5%BA%94%E7%94%A8%E6%9E%84%E5%BB%BA%E6%8A%80%E6%9C%AF%E5%85%A8%E8%A7%88/</guid>
      <description>&lt;h3 id=&#34;2025年技术会议&#34;&gt;2025年技术会议&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;会议名称&lt;/th&gt;&#xA;          &lt;th&gt;演讲主题&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;London Java Community&lt;/td&gt;&#xA;          &lt;td&gt;应用现代化导航 - 利用生成式AI&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;WeAreDevelopers&lt;/td&gt;&#xA;          &lt;td&gt;应用现代化导航 - 利用生成式AI&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Tech Journey&lt;/td&gt;&#xA;          &lt;td&gt;通过Quarkus在Red Hat OpenShift上解锁云原生Java性能与效率&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Red Hat Summit&lt;/td&gt;&#xA;          &lt;td&gt;大规模评估和优先处理应用程序以实现Red Hat OpenShift现代化&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Geecon&lt;/td&gt;&#xA;          &lt;td&gt;Java + LLMs：构建Java版LLM应用的实践指南&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Krakow Elastic Meetup&lt;/td&gt;&#xA;          &lt;td&gt;使用Podman和OpenShift AI构建部署ElasticsearchAI融合应用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Houston Java Users Group&lt;/td&gt;&#xA;          &lt;td&gt;用LangChain4j和Jakarta EE构建Java版LLM应用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Copenhagen Elastic Meetup&lt;/td&gt;&#xA;          &lt;td&gt;使用Podman和OpenShift AI构建部署ElasticsearchAI融合应用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;2024年技术会议&#34;&gt;2024年技术会议&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;会议名称&lt;/th&gt;&#xA;          &lt;th&gt;演讲主题&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Jug BD&lt;/td&gt;&#xA;          &lt;td&gt;Java开发者理解大语言模型&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;DevNation&lt;/td&gt;&#xA;          &lt;td&gt;利用Keycloak实现跨平台全面应用安全&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;WeAreDevelopers&lt;/td&gt;&#xA;          &lt;td&gt;利用生成式AI实现自动化代码转换的应用现代化&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;OpenShift Commons&lt;/td&gt;&#xA;          &lt;td&gt;Konveyor AI功能概览与演示&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;2023年技术会议&#34;&gt;2023年技术会议&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;会议名称&lt;/th&gt;&#xA;          &lt;th&gt;演讲主题&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;KubeCon&lt;/td&gt;&#xA;          &lt;td&gt;塑造未来技术：云原生、无服务器和多语言编程导航&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;YavaConf&lt;/td&gt;&#xA;          &lt;td&gt;用Java导航云原生和无服务器技术&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Devnation day&lt;/td&gt;&#xA;          &lt;td&gt;使用Red Hat Data Grid和Quarkus构建可扩展的现代微服务&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Go语言访问控制指南：Java开发者必读</title>
      <link>https://qife122.github.io/p/go%E8%AF%AD%E8%A8%80%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%8C%87%E5%8D%97java%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E8%AF%BB/</link>
      <pubDate>Sun, 03 Aug 2025 21:41:56 +0800</pubDate>
      <guid>https://qife122.github.io/p/go%E8%AF%AD%E8%A8%80%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E6%8C%87%E5%8D%97java%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E8%AF%BB/</guid>
      <description>&lt;h1 id=&#34;go语言访问控制指南java开发者必读&#34;&gt;Go语言访问控制指南：Java开发者必读&lt;/h1&gt;&#xA;&lt;p&gt;Go支持多种编程范式，包括面向对象编程。但如果你从Java转向Go，可能会感到些许&amp;hellip;呃&amp;hellip;不适应。最明显的差异之一是Go完全没有访问修饰符。你可能会疑惑：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Netflix如何用Java和微服务架构支撑2.7亿用户</title>
      <link>https://qife122.github.io/p/netflix%E5%A6%82%E4%BD%95%E7%94%A8java%E5%92%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E6%94%AF%E6%92%912.7%E4%BA%BF%E7%94%A8%E6%88%B7/</link>
      <pubDate>Sun, 03 Aug 2025 08:45:07 +0800</pubDate>
      <guid>https://qife122.github.io/p/netflix%E5%A6%82%E4%BD%95%E7%94%A8java%E5%92%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E6%94%AF%E6%92%912.7%E4%BA%BF%E7%94%A8%E6%88%B7/</guid>
      <description>&lt;h1 id=&#34;netflix如何用java和微服务支撑27亿用户&#34;&gt;Netflix如何用Java和微服务支撑2.7亿用户&lt;/h1&gt;&#xA;&lt;p&gt;当你在Netflix点击&amp;quot;播放&amp;quot;时，这个操作会触发跨越各大洲、数据中心和数千个微服务的复杂流程。Netflix不仅是流媒体平台，更是服务全球2.7亿用户的分布式工程奇迹。&lt;/p&gt;</description>
    </item>
    <item>
      <title>深入解析抽象工厂模式：构建灵活可扩展的软件架构</title>
      <link>https://qife122.github.io/p/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E6%9E%84%E5%BB%BA%E7%81%B5%E6%B4%BB%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Sat, 02 Aug 2025 14:30:01 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E6%9E%84%E5%BB%BA%E7%81%B5%E6%B4%BB%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84/</guid>
      <description>&lt;h1 id=&#34;abstract-factory-pattern&#34;&gt;Abstract Factory pattern&lt;/h1&gt;&#xA;&lt;p&gt;工厂模式一直是构建应用程序的关键模式，它简单、高效且直击要点。当开始学习面向设计的方法构建应用或API时，我总是推荐将工厂模式作为设计中的关键切入点。今天我要讨论的是抽象工厂模式。它并不是你称之为模式的&amp;quot;抽象&amp;quot;类或对象，而是工厂的工厂——这正是它被称为&amp;quot;抽象&amp;quot;的原因。&amp;ldquo;抽象&amp;quot;类的存在只是这个模式的另一个侧面。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
