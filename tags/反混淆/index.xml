<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>反混淆 on 办公AI智能小助手</title>
    <link>https://qife122.github.io/tags/%E5%8F%8D%E6%B7%B7%E6%B7%86/</link>
    <description>Recent content in 反混淆 on 办公AI智能小助手</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>qife</copyright>
    <lastBuildDate>Tue, 05 Aug 2025 03:08:37 +0800</lastBuildDate>
    <atom:link href="https://qife122.github.io/tags/%E5%8F%8D%E6%B7%B7%E6%B7%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用CodeReason进行原生程序语义分析 - 揭秘二进制逆向工程利器</title>
      <link>https://qife122.github.io/p/%E4%BD%BF%E7%94%A8codereason%E8%BF%9B%E8%A1%8C%E5%8E%9F%E7%94%9F%E7%A8%8B%E5%BA%8F%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90-%E6%8F%AD%E7%A7%98%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E5%88%A9%E5%99%A8/</link>
      <pubDate>Tue, 05 Aug 2025 03:08:37 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E4%BD%BF%E7%94%A8codereason%E8%BF%9B%E8%A1%8C%E5%8E%9F%E7%94%9F%E7%A8%8B%E5%BA%8F%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90-%E6%8F%AD%E7%A7%98%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E5%88%A9%E5%99%A8/</guid>
      <description>&lt;h1 id=&#34;原生程序的语义分析codereason技术解析&#34;&gt;原生程序的语义分析：CodeReason技术解析&lt;/h1&gt;&#xA;&lt;p&gt;你是否曾想对原生模式程序发起查询，询问哪些代码位置会向特定寄存器写入特定值？是否希望自动化解混淆字符串的操作？&lt;/p&gt;&#xA;&lt;h2 id=&#34;逆向工程的语义挑战&#34;&gt;逆向工程的语义挑战&lt;/h2&gt;&#xA;&lt;p&gt;逆向工程原生程序需要在低层次理解其语义，直到浮现出高层次功能图景。系统化理解原生程序的一个关键挑战在于：这种理解必须覆盖程序使用的每一条指令。分析工具需要明确知道哪些指令会对内存调用和寄存器产生何种影响。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
