<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>内存管理 on 办公AI智能小助手</title>
    <link>https://qife122.github.io/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</link>
    <description>Recent content in 内存管理 on 办公AI智能小助手</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>qife</copyright>
    <lastBuildDate>Thu, 07 Aug 2025 23:12:26 +0800</lastBuildDate>
    <atom:link href="https://qife122.github.io/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Intel EPT技术实现MMU虚拟化详解</title>
      <link>https://qife122.github.io/p/intel-ept%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0mmu%E8%99%9A%E6%8B%9F%E5%8C%96%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 07 Aug 2025 23:12:26 +0800</pubDate>
      <guid>https://qife122.github.io/p/intel-ept%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0mmu%E8%99%9A%E6%8B%9F%E5%8C%96%E8%AF%A6%E8%A7%A3/</guid>
      <description>&lt;h1 id=&#34;mmu-virtualization-via-intel-ept---index&#34;&gt;MMU Virtualization via Intel EPT - Index&lt;/h1&gt;&#xA;&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;&#xA;&lt;p&gt;在收到大量请求后，我决定完成这个关于使用Intel EPT实现MMU虚拟化的5部分系列文章。本系列既可用于自主hypervisor开发，也可与之前发布的CPU虚拟化系列配套使用。文章将频繁引用先前项目内容（因多数读者会同步跟进），但实现方案在所有Type-2型hypervisor项目中都较为相似。本系列仅适用于支持虚拟化技术特性的Intel处理器用户，目标是让读者掌握分页机制、扩展页表(EPT)、多种地址转换机制的技术细节，并学会在虚拟化项目中实际应用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arm64架构内存页大小配置指南：提升性能的关键技巧</title>
      <link>https://qife122.github.io/p/arm64%E6%9E%B6%E6%9E%84%E5%86%85%E5%AD%98%E9%A1%B5%E5%A4%A7%E5%B0%8F%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97%E6%8F%90%E5%8D%87%E6%80%A7%E8%83%BD%E7%9A%84%E5%85%B3%E9%94%AE%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Wed, 06 Aug 2025 22:20:09 +0800</pubDate>
      <guid>https://qife122.github.io/p/arm64%E6%9E%B6%E6%9E%84%E5%86%85%E5%AD%98%E9%A1%B5%E5%A4%A7%E5%B0%8F%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97%E6%8F%90%E5%8D%87%E6%80%A7%E8%83%BD%E7%9A%84%E5%85%B3%E9%94%AE%E6%8A%80%E5%B7%A7/</guid>
      <description>&lt;h1 id=&#34;理解arm64架构的内存页大小&#34;&gt;理解Arm64架构的内存页大小&lt;/h1&gt;&#xA;&lt;p&gt;Arm64架构与x86的主要区别之一，是可以在CPU的内存管理单元(MMU)中配置4K、16K或64K的内存页大小。本文总结了内存页大小的概念、在Linux系统上的配置方法，以及何时应该为应用程序使用不同的页大小。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux内核v4.17安全特性解析：从内存保护到系统调用加固</title>
      <link>https://qife122.github.io/p/linux%E5%86%85%E6%A0%B8v4.17%E5%AE%89%E5%85%A8%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E4%BB%8E%E5%86%85%E5%AD%98%E4%BF%9D%E6%8A%A4%E5%88%B0%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%8A%A0%E5%9B%BA/</link>
      <pubDate>Tue, 05 Aug 2025 01:15:44 +0800</pubDate>
      <guid>https://qife122.github.io/p/linux%E5%86%85%E6%A0%B8v4.17%E5%AE%89%E5%85%A8%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90%E4%BB%8E%E5%86%85%E5%AD%98%E4%BF%9D%E6%8A%A4%E5%88%B0%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%8A%A0%E5%9B%BA/</guid>
      <description>&lt;h3 id=&#34;linux内核v417的安全特性&#34;&gt;Linux内核v4.17的安全特性&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;先前版本&lt;/strong&gt;：v4.16&lt;br&gt;&#xA;Linux内核v4.17于上周发布，以下是我认为值得关注的安全改进：&lt;/p&gt;&#xA;&lt;h4 id=&#34;jailhouse管理程序&#34;&gt;Jailhouse管理程序&lt;/h4&gt;&#xA;&lt;p&gt;Jan Kiszka引入了Jailhouse管理程序支持，采用静态分区技术（即不进行资源超分配）。根&amp;quot;单元&amp;quot;通过缩减自身的CPU/内存等资源来创建新隔离区，并将资源移交给新隔离区。LWN在2014年对该管理程序有详细报道。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
