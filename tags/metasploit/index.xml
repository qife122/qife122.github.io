<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Metasploit on 办公AI智能小助手</title>
    <link>https://qife122.github.io/tags/metasploit/</link>
    <description>Recent content in Metasploit on 办公AI智能小助手</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>qife</copyright>
    <lastBuildDate>Thu, 07 Aug 2025 18:08:23 +0800</lastBuildDate>
    <atom:link href="https://qife122.github.io/tags/metasploit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>修改Metasploit x64模板实现反病毒规避技术</title>
      <link>https://qife122.github.io/p/%E4%BF%AE%E6%94%B9metasploit-x64%E6%A8%A1%E6%9D%BF%E5%AE%9E%E7%8E%B0%E5%8F%8D%E7%97%85%E6%AF%92%E8%A7%84%E9%81%BF%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Thu, 07 Aug 2025 18:08:23 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E4%BF%AE%E6%94%B9metasploit-x64%E6%A8%A1%E6%9D%BF%E5%AE%9E%E7%8E%B0%E5%8F%8D%E7%97%85%E6%AF%92%E8%A7%84%E9%81%BF%E6%8A%80%E6%9C%AF/</guid>
      <description>&lt;h1 id=&#34;修改metasploit-x64模板实现反病毒规避&#34;&gt;修改Metasploit x64模板实现反病毒规避&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;Joff Thyer&lt;/strong&gt;&lt;br&gt;&#xA;&lt;em&gt;免责声明：本文所述技术可能已过时，但仍可作为学习参考，并可能整合到现代工具中。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;在针对Windows桌面的渗透测试中，测试人员常使用Veil&amp;rsquo;s Powershell Empire等工具将shellcode直接注入内存。这种方法虽能避免磁盘写入和端点防护的检测，但有时我们需要使用实际恶意软件可执行文件进行更全面的测试。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OS命令注入实战：从挫折到获取Shell的完整历程</title>
      <link>https://qife122.github.io/p/os%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E5%AE%9E%E6%88%98%E4%BB%8E%E6%8C%AB%E6%8A%98%E5%88%B0%E8%8E%B7%E5%8F%96shell%E7%9A%84%E5%AE%8C%E6%95%B4%E5%8E%86%E7%A8%8B/</link>
      <pubDate>Wed, 06 Aug 2025 10:01:27 +0800</pubDate>
      <guid>https://qife122.github.io/p/os%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E5%AE%9E%E6%88%98%E4%BB%8E%E6%8C%AB%E6%8A%98%E5%88%B0%E8%8E%B7%E5%8F%96shell%E7%9A%84%E5%AE%8C%E6%95%B4%E5%8E%86%E7%A8%8B/</guid>
      <description>&lt;h1 id=&#34;os命令注入实战从挫折到获取shell的完整历程&#34;&gt;OS命令注入实战：从挫折到获取Shell的完整历程&lt;/h1&gt;&#xA;&lt;p&gt;Carrie Roberts //&lt;/p&gt;&#xA;&lt;p&gt;OS命令注入非常有趣。最近我在测试某个Web应用时发现了这个漏洞（感谢Burp Suite扫描器）。虽然预感到即将获得shell，但实际过程却比预期困难得多。以下是我的探索历程和技术收获。&lt;/p&gt;</description>
    </item>
    <item>
      <title>修改Metasploit x64模板实现反病毒规避技术</title>
      <link>https://qife122.github.io/p/%E4%BF%AE%E6%94%B9metasploit-x64%E6%A8%A1%E6%9D%BF%E5%AE%9E%E7%8E%B0%E5%8F%8D%E7%97%85%E6%AF%92%E8%A7%84%E9%81%BF%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Tue, 05 Aug 2025 23:18:51 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E4%BF%AE%E6%94%B9metasploit-x64%E6%A8%A1%E6%9D%BF%E5%AE%9E%E7%8E%B0%E5%8F%8D%E7%97%85%E6%AF%92%E8%A7%84%E9%81%BF%E6%8A%80%E6%9C%AF/</guid>
      <description>&lt;h1 id=&#34;修改metasploit-x64模板实现反病毒规避&#34;&gt;修改Metasploit x64模板实现反病毒规避&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;Joff Thyer&lt;/strong&gt;&lt;br&gt;&#xA;&lt;em&gt;注意：本文所述技术可能已过时，但仍可作为学习现代工具技术演进的参考案例。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;在针对Windows桌面的渗透测试中，测试人员常使用Veil&amp;rsquo;s Powershell Empire等工具将shellcode直接注入内存。这种技术能有效规避磁盘写入和端点防护软件的检测。但有时我们需要使用实际恶意软件可执行文件进行更全面的测试，以评估防御技术的检测阈值。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
