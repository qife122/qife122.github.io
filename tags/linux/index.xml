<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 办公AI智能小助手</title>
    <link>https://qife122.github.io/tags/linux/</link>
    <description>Recent content in Linux on 办公AI智能小助手</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>qife</copyright>
    <lastBuildDate>Sat, 09 Aug 2025 05:30:27 +0800</lastBuildDate>
    <atom:link href="https://qife122.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>安全通告：Zimbra Collaboration Suite远程代码执行漏洞(CVE-2024-45519)技术分析</title>
      <link>https://qife122.github.io/p/%E5%AE%89%E5%85%A8%E9%80%9A%E5%91%8Azimbra-collaboration-suite%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9Ecve-2024-45519%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</link>
      <pubDate>Sat, 09 Aug 2025 05:30:27 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E5%AE%89%E5%85%A8%E9%80%9A%E5%91%8Azimbra-collaboration-suite%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9Ecve-2024-45519%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90/</guid>
      <description>&lt;h3 id=&#34;摘要&#34;&gt;摘要&lt;/h3&gt;&#xA;&lt;p&gt;CVE-2024-45519是Zimbra协作套件postjournal服务中发现的关键安全漏洞。该漏洞目前尚未获得CVSS评分，但允许远程攻击者在受影响系统上执行任意代码，可能导致未授权访问、数据泄露和完全系统沦陷。&lt;/p&gt;</description>
    </item>
    <item>
      <title>WSL2完全指南：在Windows 10/11上运行Linux的终极教程</title>
      <link>https://qife122.github.io/p/wsl2%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97%E5%9C%A8windows-10/11%E4%B8%8A%E8%BF%90%E8%A1%8Clinux%E7%9A%84%E7%BB%88%E6%9E%81%E6%95%99%E7%A8%8B/</link>
      <pubDate>Thu, 07 Aug 2025 15:39:56 +0800</pubDate>
      <guid>https://qife122.github.io/p/wsl2%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97%E5%9C%A8windows-10/11%E4%B8%8A%E8%BF%90%E8%A1%8Clinux%E7%9A%84%E7%BB%88%E6%9E%81%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;h1 id=&#34;windows-subsystem-for-linux-2-wsl2windows-10--11完全教程&#34;&gt;Windows Subsystem for Linux 2 (WSL2)：Windows 10 &amp;amp; 11完全教程&lt;/h1&gt;&#xA;&lt;h2 id=&#34;关键要点&#34;&gt;关键要点&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;WSL2实现Linux环境与Windows的无缝集成，可同时使用Linux应用和Windows资源&lt;/li&gt;&#xA;&lt;li&gt;Windows 11的WSL2安装流程比Windows 10更简化&lt;/li&gt;&#xA;&lt;li&gt;支持直接在Windows中运行Linux GUI应用&lt;/li&gt;&#xA;&lt;li&gt;Docker在WSL2中运行效率更高，无需专用Hyper-V&lt;/li&gt;&#xA;&lt;li&gt;通过挂载和符号链接实现跨系统文件共享&lt;/li&gt;&#xA;&lt;li&gt;VS Code与WSL2集成提供强大的开发环境&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;为什么使用linux&#34;&gt;为什么使用Linux？&lt;/h2&gt;&#xA;&lt;p&gt;Web服务器普遍使用Linux环境运行：&lt;/p&gt;</description>
    </item>
    <item>
      <title>隐藏Bash历史记录的实用技巧</title>
      <link>https://qife122.github.io/p/%E9%9A%90%E8%97%8Fbash%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E7%9A%84%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Thu, 07 Aug 2025 02:24:56 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E9%9A%90%E8%97%8Fbash%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E7%9A%84%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
      <description>&lt;h1 id=&#34;隐藏bash历史记录&#34;&gt;隐藏Bash历史记录&lt;/h1&gt;&#xA;&lt;p&gt;你是否曾登录Linux服务器后，突然意识到Bash会记录所有执行过的命令？这种情况我偶尔会遇到，因此专门研究了隐藏这些&amp;quot;失误&amp;quot;的方法。以下是我的发现，如果你有其他建议欢迎联系我。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在Linux系统上运行原版Intercepter-NG网络嗅探工具</title>
      <link>https://qife122.github.io/p/%E5%9C%A8linux%E7%B3%BB%E7%BB%9F%E4%B8%8A%E8%BF%90%E8%A1%8C%E5%8E%9F%E7%89%88intercepter-ng%E7%BD%91%E7%BB%9C%E5%97%85%E6%8E%A2%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Tue, 05 Aug 2025 15:27:05 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E5%9C%A8linux%E7%B3%BB%E7%BB%9F%E4%B8%8A%E8%BF%90%E8%A1%8C%E5%8E%9F%E7%89%88intercepter-ng%E7%BD%91%E7%BB%9C%E5%97%85%E6%8E%A2%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;h1 id=&#34;在linux上运行原版intercepter&#34;&gt;在Linux上运行原版Intercepter&lt;/h1&gt;&#xA;&lt;h2 id=&#34;更新后的安装指南&#34;&gt;更新后的安装指南&lt;/h2&gt;&#xA;&lt;p&gt;[1] 下载Wine用的WinPcap封装库并安装libpcap-dev&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget http://sniff.su/wine_pcap_dlls.tar.gz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install libpcap-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;如果是i386版本的Kali系统，直接跳到步骤[3]。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;[2] 在Kali x64系统执行以下命令：&lt;/p&gt;</description>
    </item>
    <item>
      <title>TSC频率全局共享：提升性能分析与基准测试精度</title>
      <link>https://qife122.github.io/p/tsc%E9%A2%91%E7%8E%87%E5%85%A8%E5%B1%80%E5%85%B1%E4%BA%AB%E6%8F%90%E5%8D%87%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E4%B8%8E%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E7%B2%BE%E5%BA%A6/</link>
      <pubDate>Tue, 05 Aug 2025 13:41:11 +0800</pubDate>
      <guid>https://qife122.github.io/p/tsc%E9%A2%91%E7%8E%87%E5%85%A8%E5%B1%80%E5%85%B1%E4%BA%AB%E6%8F%90%E5%8D%87%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E4%B8%8E%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E7%B2%BE%E5%BA%A6/</guid>
      <description>&lt;h2 id=&#34;tsc频率全局共享提升性能分析与基准测试精度&#34;&gt;TSC频率全局共享：提升性能分析与基准测试精度&lt;/h2&gt;&#xA;&lt;p&gt;你是否曾尝试使用LLVM的X-Ray分析工具生成火焰图，却遇到诸如以下的错误提示：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;==65892==Unable to determine CPU frequency for TSC accounting.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;==65892==Unable to determine CPU frequency.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;或者更糟的情况：当你分析完应用的所有函数运行时间后，发现累计时间只有15分钟，而实际运行耗时20分钟——那消失的5分钟去哪了？&lt;/p&gt;</description>
    </item>
    <item>
      <title>通过OSTIF强化开源基础设施安全 - Trail of Bits技术实践</title>
      <link>https://qife122.github.io/p/%E9%80%9A%E8%BF%87ostif%E5%BC%BA%E5%8C%96%E5%BC%80%E6%BA%90%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E5%AE%89%E5%85%A8-trail-of-bits%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Mon, 04 Aug 2025 09:37:51 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E9%80%9A%E8%BF%87ostif%E5%BC%BA%E5%8C%96%E5%BC%80%E6%BA%90%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E5%AE%89%E5%85%A8-trail-of-bits%E6%8A%80%E6%9C%AF%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;h3 id=&#34;开源基础设施的安全挑战&#34;&gt;开源基础设施的安全挑战&lt;/h3&gt;&#xA;&lt;p&gt;开源技术改进基金（OSTIF）正致力于解决开源生态中一个常被忽视的问题：支撑当今互联网基础设施的关键软件项目，其开发、测试和维护仅依赖&amp;quot;数量惊人的少数贡献者&amp;quot;。正如OSTIF所指出的，&amp;ldquo;由于缺乏利润驱动，核心开源项目资金严重不足，导致关键互联网基础设施暴露在漏洞、文档缺失、性能低下甚至间谍活动的风险中&amp;rdquo;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>WSL2完全指南：Windows 10和11上的Linux开发环境配置</title>
      <link>https://qife122.github.io/p/wsl2%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97windows-10%E5%92%8C11%E4%B8%8A%E7%9A%84linux%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 04 Aug 2025 07:58:04 +0800</pubDate>
      <guid>https://qife122.github.io/p/wsl2%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97windows-10%E5%92%8C11%E4%B8%8A%E7%9A%84linux%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;h1 id=&#34;windows-subsystem-for-linux-2-wsl2-windows-10--11完全教程&#34;&gt;Windows Subsystem for Linux 2 (WSL2): Windows 10 &amp;amp; 11完全教程&lt;/h1&gt;&#xA;&lt;h2 id=&#34;核心要点&#34;&gt;核心要点&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;WSL2实现Windows与Linux环境无缝集成，支持同时使用Linux应用和Windows资源&lt;/li&gt;&#xA;&lt;li&gt;Windows 11的WSL2安装流程比Windows 10更简化，后者需手动启用虚拟机功能&lt;/li&gt;&#xA;&lt;li&gt;可直接在WSL2中运行Linux GUI应用，无需额外X服务器软件&lt;/li&gt;&#xA;&lt;li&gt;Docker在WSL2中运行效率更高，启动更快且无需专用Hyper-V&lt;/li&gt;&#xA;&lt;li&gt;通过挂载和符号链接实现Windows与Linux文件互访&lt;/li&gt;&#xA;&lt;li&gt;VS Code与WSL2深度集成，可直接访问Linux文件和终端&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;为什么使用linux&#34;&gt;为什么使用Linux？&lt;/h2&gt;&#xA;&lt;p&gt;Web服务器普遍采用Linux系统，它运行着包括：&lt;/p&gt;</description>
    </item>
    <item>
      <title>在Linux上运行原版Intercepter-NG网络嗅探工具</title>
      <link>https://qife122.github.io/p/%E5%9C%A8linux%E4%B8%8A%E8%BF%90%E8%A1%8C%E5%8E%9F%E7%89%88intercepter-ng%E7%BD%91%E7%BB%9C%E5%97%85%E6%8E%A2%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Sun, 03 Aug 2025 04:53:11 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E5%9C%A8linux%E4%B8%8A%E8%BF%90%E8%A1%8C%E5%8E%9F%E7%89%88intercepter-ng%E7%BD%91%E7%BB%9C%E5%97%85%E6%8E%A2%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;h1 id=&#34;在linux上运行原版intercepter-ng&#34;&gt;在Linux上运行原版Intercepter-NG&lt;/h1&gt;&#xA;&lt;h2 id=&#34;操作指南已更新&#34;&gt;操作指南（已更新！）&lt;/h2&gt;&#xA;&lt;p&gt;[1] 下载Wine用的WinPcap封装库及libpcap-dev&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget http://sniff.su/wine_pcap_dlls.tar.gz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install libpcap-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;如果是i386版Kali系统，直接跳转至步骤[3]。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;[2] Kali x64系统需执行以下命令：&lt;/p&gt;</description>
    </item>
    <item>
      <title>统计目录中Java代码行数的简便方法</title>
      <link>https://qife122.github.io/p/%E7%BB%9F%E8%AE%A1%E7%9B%AE%E5%BD%95%E4%B8%ADjava%E4%BB%A3%E7%A0%81%E8%A1%8C%E6%95%B0%E7%9A%84%E7%AE%80%E4%BE%BF%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 03 Aug 2025 04:19:32 +0800</pubDate>
      <guid>https://qife122.github.io/p/%E7%BB%9F%E8%AE%A1%E7%9B%AE%E5%BD%95%E4%B8%ADjava%E4%BB%A3%E7%A0%81%E8%A1%8C%E6%95%B0%E7%9A%84%E7%AE%80%E4%BE%BF%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;h1 id=&#34;统计目录中java代码行数&#34;&gt;统计目录中Java代码行数&lt;/h1&gt;&#xA;&lt;p&gt;我最近需要统计一个目录中所有Java代码文件的总行数（包括子目录）。通过组合Linux的&lt;code&gt;find&lt;/code&gt;和&lt;code&gt;wc&lt;/code&gt;命令，可以轻松实现这个需求：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;find . -type f -name &lt;span class=&#34;s1&#34;&gt;&amp;#39;*java&amp;#39;&lt;/span&gt; -print0 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; wc -l --files0-from&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;这个命令的工作原理是：&lt;/p&gt;</description>
    </item>
    <item>
      <title>PGP签名与Linux包管理的安全隐患解析</title>
      <link>https://qife122.github.io/p/pgp%E7%AD%BE%E5%90%8D%E4%B8%8Elinux%E5%8C%85%E7%AE%A1%E7%90%86%E7%9A%84%E5%AE%89%E5%85%A8%E9%9A%90%E6%82%A3%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sun, 03 Aug 2025 02:07:44 +0800</pubDate>
      <guid>https://qife122.github.io/p/pgp%E7%AD%BE%E5%90%8D%E4%B8%8Elinux%E5%8C%85%E7%AE%A1%E7%90%86%E7%9A%84%E5%AE%89%E5%85%A8%E9%9A%90%E6%82%A3%E8%A7%A3%E6%9E%90/</guid>
      <description>&lt;h3 id=&#34;pgp签名与linux包管理的安全隐患&#34;&gt;PGP签名与Linux包管理的安全隐患&lt;/h3&gt;&#xA;&lt;p&gt;在关于PGP生态系统的讨论中，我经常听到一种观点：尽管PGP存在问题，但它对Linux发行版的软件包签名至关重要。本文将重点讨论PGP在Linux包管理环境中暴露的几个系统性安全问题。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
